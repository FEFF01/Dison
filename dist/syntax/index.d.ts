import { Token, Node, Context } from '../interfaces';
import { MATCH_MARKS } from './head';
import Parser from '../parser';
import { EXPRESSION_TREE } from './expression';
declare function isExpression(node: Node): any;
declare function isDeclaration(node: Node): any;
declare function isStatement(node: Node): any;
declare function isStatementListItem(node: Node): any;
declare function isModuleItem(node: Node): any;
declare const SYNTAX_TREE: Record<string, any>;
declare function parse_next_statement(context: Context, start?: number): number;
declare function get_inner_group(token: Token): Token;
declare function extract_success(parser: Parser, nodes: Array<Node>): Node[];
declare function parse_and_extract(match_tree: Record<string, any>, context: Context, node: Node): any;
export { parse_next_statement, get_inner_group, extract_success, parse_and_extract, MATCH_MARKS, isExpression, isDeclaration, isStatement, isStatementListItem, isModuleItem, SYNTAX_TREE, EXPRESSION_TREE };
