{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/syntax/head.ts","webpack:///./js/syntax/index.ts","webpack:///./js/syntax/expression.ts","webpack:///./js/character.ts","webpack:///./js/tokenizer.ts","webpack:///./js/lexical/index.ts","webpack:///./js/lexical/head.ts","webpack:///./js/syntax/declaration.ts","webpack:///./js/parser.ts","webpack:///./js/syntax/pattern.ts","webpack:///./js/syntax/statement.ts","webpack:///./js/syntax/module_declaration.ts","webpack:///./js/test.ts","webpack:///./js/test/esprima.js","webpack:///(webpack)/buildin/module.js","webpack:///./js/test/test_data6.js","webpack:///(webpack)/buildin/harmony-module.js","webpack:///(webpack)/buildin/amd-options.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","OPERATOR_ID","operands","sub_operators","watch","watcher","this","_watcher","push","_factors","operand","Operator","Mark","parts","replace","split","length","slice","map","parents","factor","watchers","result","concat","attach","prev_item","root","keys","getNode","parent","child","setWrap","records","getDeepNodes","children","factors","getNextNodes","Array","apply","configurable","undefined","MATCHED_RECORD","_get_wrapper_function","_Option","Option","some","_Or","Or","_Series","Series","_NonCapturing","NonCapturing","_NonCollecting","NonCollecting","_Loop","Loop","_Mark","NODES","Grouping","node","grouping","range","loc","Directive","type","expression","directive","Script","body","sourceType","Module","_get_adapt","data","index","eval","createMatchTree","block_list","prevent_update","item","wrapper","collectors","handlers","overload","precedences","filters","validators","indexOf","filter","handler","validator","collector","precedence","_collector","nodes","operator","last_node","props","matched_record","console","warn","_Context","parser","tokens","state_stack","context","wrap","unwrap","store","restore_point","arguments","restore","point","pop","FutureReservedWord","StrictModeReservedWord","RestrictedWord","isFutureReservedWord","id","isStrictModeReservedWord","isRestrictedWord","_if_strict_throw_err","token","err","THROW_RESTRICT_WORDS_PATTERN","THROW_STRICT_RESERVED_WORDS_PATTERN","IDENTIFIER_OR_THROW_STRICT_RESERVED_WORDS_PATTERN","EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN","IDENTIFIER_OR_VALIDATE_STRICT_RESERVED_WORDS_PATTERN","validateIdentifier","EXPRESSION_OR_VALIDATE_STRICT_RESERVED_WORDS_PATTERN","validateAssignment","validateBinding","binding_set","validateLineTerminator","collected","right","_next","next_token","start","line","end","join_content","success","content","TYPE_ALIAS","ASSIGNMENT_PUNCTUATORS_PATTERN","AWAIT_LIST","MODULE_ITEM_PATTERN","STATEMANT_LIST_ITEM_PATTERN","RIGHT_SIDE_TOPLEVEL_ITEM_PATTERN","TOPLEVEL_ITEM_PATTERN","isAligned","left","EXPRESSION_TREE","EXPRESSION_ITEM_PATTERN","DECLARATION_ITEM_PATTERN","STATEMENT_ITEM_PATTERN","STATEMENT_LIST_ITEM_PATTERN","Expressions","descriptor","patterns","isStatementListItem","isExpression","isDeclaration","isStatement","isModuleItem","SYNTAX_TREE","extract_success","res","parse_next_statement","parseCustom","get_inner_group","parse_and_extract","match_tree","parseArrayPattern","parseObjectPattern","ARGUMENTS_PATTERN","parse_arguments","parseExpression","argument","octal","raw","quasis","expressions","_","__","elements","ARRAY_ELEMENTS_TREE","properties","OBJECT_PROPERTIES_TREE","parse_function_expression","async","generator","params","parseKeyword","body_context","parse_params","parseBlock","Number","superClass","METHOD_DEFINITIONS_TREE","tag","quasi","parseIdentifier","computed","meta","callee","first_token","second_token","prefix","createNode","test","delegate","expr","SequenceExpression","COMPUTED_PROPERTY_NAME_PATTERN","PRIMARY_EXPRESSION_TREE","PROPERTY_NAME_PATTERN","regex","MethodDefinitions","MethodDefinition","kind","_prev","static","_static","FunctionExpression","param_count","Arguments","Params","ArrayElements","ObjectProperties","method","shorthand","Patterns","PARAMS_TREE","ARGUMENTS_TREE","type_name","IdentifierStart","IdentifierPart","testCodePoint","regexp","input","charCodeAt","_bak","testUnicodeEscape","code","cp","hexValue","len","fromCodePoint","scanHex","ch","decimalValue","octalValue","binaryValue","isWhiteSpace","isLineTerminator","String","fromCharCode","inIdentifierStart","inIdentifierPart","isFollowingAnExpression","options","token_types","TOKEN_TYPES","token_hooks","save_comments","error_logs","tokenize","line_number","line_start","scan","getToken","column","match","prev_node","target","scanner","bound","error","nextIdentifier","str","TOKEN_TYPE_MAP","nextRegexp","prev_token","PRIOR_REGEXP_PUNCTUATORS_TREE","Punctuator","PUNCTUATORS_TREE","keyword_token","target_token","check","parent_token","Keyword","nextPunctuator","nextNumeric","number","flags","_get_token","Numeric","_get_error","message","NUMERIC_KEYWORD_MAP","nextToken","full_match","parent_token_bak","proxy_hook","Comments","Identifier","Boolean","RegularExpression","Template","TemplateElement","Null","reduce","octal_escape","_state","_attach","tokenizer","scope","octal_escape_tree","strbase_match_tree","_str","not_allow_octal_escape","_message","PUNCTUATORS","escape_scan","appendTemplateElement","tail","cooked","prev_line","prev_solumn","start_line","start_column","prev_column","search_scan","REGEXP_DESCRIPTOR","_end","class_marker","_error","pattern","createSearchTree","join","part","_scope","char","backslash_count","has_escape","EOF","matched_count","get_variable_declarator","init","VARIABLE_DECLARATOR_TREE","VariableDeclarators","Success","identifier","reinterpreat_expression_as_declaration","Declarations","___","declarations","cbfun","getLiteral","parse_value","RegExp","e","padding_token","args","parse","parseScript","parseModule","_parse","parseNode","environments","begin","hook","extreme","state","cursor","backflow_tape","finallize","longest","walk","splice","parseDirective","minimum","next","has_backflow","alias","explore","matched","matched_node","value_node","type_node","offset","prop","start_token","end_token","record","PETTERN_ELEMENTS_TREE","PATTERN_PROPERTIES_TREE","PatternElements","PatternProperties","ArrayPattern","is_binding","ObjectPattern","AssignmentPattern","Property","VariableDeclaration","Statements","label","keyword","iterator","iterator_tokens","FOR_ITERATOR_TREE","consequent","alternate","label_name","label_set","discriminant","cases","has_default","block","finalizer","param","ForIterator","ForStatement","update","declarator","STRING_LITERAL_PATTERN","ImportSpecifiers","ImportSpecifier","imported","local","IMPORT_SPECIFIERS_TREE","EXPORT_SPECIFIERS_TREE","ExportSpecifier","exported","ModuleDeclarations","specifiers","source","check_line_terminator","declaration","a","b","esprima","data0","window","innerHTML","test_data","time","log","timeEnd","weakEqual","Set","from","unshift","table","control","output","equal","deepEqual","factory","loaded","comment_handler_1","jsx_parser_1","parser_1","tokenizer_1","commentHandler","proxyDelegate","metadata","visit","parserDelegate","collectComment","comment","attachComment","CommentHandler","isModule","jsx","JSXParser","Parser","ast","comments","config","tolerant","errors","errorHandler","parsingOptions","Tokenizer","getNextToken","tolerate","syntax_1","Syntax","version","stack","leading","trailing","insertInnerComments","BlockStatement","innerComments","entry","findTrailingComments","trailingComments","last","firstComment","findLeadingComments","leadingComments","visitNode","Program","visitComment","AssignmentExpression","ArrayExpression","ArrowFunctionExpression","AwaitExpression","BinaryExpression","BreakStatement","CallExpression","CatchClause","ClassBody","ClassDeclaration","ClassExpression","ConditionalExpression","ContinueStatement","DoWhileStatement","DebuggerStatement","EmptyStatement","ExportAllDeclaration","ExportDefaultDeclaration","ExportNamedDeclaration","ExpressionStatement","ForOfStatement","ForInStatement","FunctionDeclaration","IfStatement","Import","ImportDeclaration","ImportDefaultSpecifier","ImportNamespaceSpecifier","Literal","LabeledStatement","LogicalExpression","MemberExpression","MetaProperty","NewExpression","ObjectExpression","RestElement","ReturnStatement","SpreadElement","Super","SwitchCase","SwitchStatement","TaggedTemplateExpression","TemplateLiteral","ThisExpression","ThrowStatement","TryStatement","UnaryExpression","UpdateExpression","VariableDeclarator","WhileStatement","WithStatement","YieldExpression","extendStatics","__extends","setPrototypeOf","__proto__","constructor","character_1","JSXNode","jsx_syntax_1","Node","token_1","xhtml_entities_1","getQualifiedElementName","elementName","qualifiedName","JSXSyntax","JSXIdentifier","JSXNamespacedName","namespace","JSXMemberExpression","TokenName","_super","parsePrimaryExpression","parseJSXRoot","startJSX","startMarker","lineNumber","lineStart","finishJSX","reenterJSX","expectJSX","createJSXNode","collectComments","createJSXChildNode","scanXHTMLEntity","quote","valid","terminated","numeric","hex","eof","Character","isDecimalDigit","isHexDigit","substr","parseInt","XHTMLEntities","lexJSX","n1","n2","isIdentifierStart","isIdentifierPart","lex","nextJSXToken","lastMarker","convertToken","nextJSXText","text","peekJSXToken","saveState","scanComments","restoreState","throwUnexpectedToken","matchJSX","parseJSXIdentifier","finalize","parseJSXElementName","name_1","parseJSXAttributeName","attributeName","name_2","parseJSXStringLiteralAttribute","getTokenRaw","parseJSXExpressionAttribute","tolerateError","parseAssignmentExpression","JSXExpressionContainer","parseJSXAttributeValue","parseJSXElement","parseJSXNameValueAttribute","JSXAttribute","parseJSXSpreadAttribute","JSXSpreadAttribute","parseJSXAttributes","attributes","attribute","parseJSXOpeningElement","selfClosing","JSXOpeningElement","parseJSXBoundaryElement","JSXClosingElement","parseJSXEmptyExpression","JSXEmptyExpression","parseJSXExpressionContainer","parseJSXChildren","JSXText","container","parseComplexJSXElement","el","element","opening","JSXElement","closing","open_1","isStartOfExpression","Regex","NonAsciiIdentifierStart","NonAsciiIdentifierPart","isOctalDigit","openingElement","closingElement","AsyncArrowFunctionExpression","AsyncFunctionDeclaration","AsyncFunctionExpression","logical","ComputedMemberExpression","each","isStatic","RegexLiteral","StaticMemberExpression","assert_1","error_handler_1","messages_1","scanner_1","ErrorHandler","Scanner","trackComment","operatorPrecedence","lookahead","hasLineTerminator","await","allowIn","allowStrictDirective","allowYield","firstCoverInitializedNameError","isAssignmentTarget","isBindingElement","inFunctionBody","inIteration","inSwitch","labelSet","strict","throwError","messageFormat","values","_i","msg","whole","idx","assert","createError","unexpectedTokenError","Messages","UnexpectedToken","UnexpectedEOS","UnexpectedIdentifier","UnexpectedNumber","UnexpectedString","UnexpectedTemplate","UnexpectedReserved","StrictReservedWord","lastMarkerLineStart","tolerateUnexpectedToken","multiLine","nextRegexToken","scanRegExp","startNode","lastLineStart","marker","expect","expectCommaSeparator","expectKeyword","matchKeyword","matchContextualKeyword","matchAssign","op","isolateCoverGrammar","parseFunction","previousIsBindingElement","previousIsAssignmentTarget","previousFirstCoverInitializedNameError","inheritCoverGrammar","consumeSemicolon","matchAsyncFunction","parseFunctionExpression","StrictOctalLiteral","parseTemplateLiteral","parseGroupExpression","parseArrayInitializer","parseObjectInitializer","parseIdentifierName","parseClassExpression","matchImportCall","parseImportCall","parseSpreadElement","arg","parsePropertyMethod","previousStrict","previousAllowStrictDirective","simple","parseFunctionSourceElements","firstRestricted","stricted","parsePropertyMethodFunction","previousAllowYield","parseFormalParameters","parsePropertyMethodAsyncFunction","previousAwait","parseObjectPropertyKey","isPropertyKey","parseObjectProperty","hasProto","isAsync","lookaheadPropertyKey","qualifiedPropertyName","parseGetterMethod","parseSetterMethod","parseGeneratorMethod","DuplicateProtoProperty","parseTemplateHead","head","parseTemplateElement","reinterpretExpressionAsPattern","startToken","parseRestElement","arrow","parseArguments","isIdentifierName","parseNewExpression","parseLeftHandSideExpression","parseAsyncArgument","parseAsyncArguments","parseLeftHandSideExpressionAllowCall","maybeAsync","previousAllowIn","asyncArrow","BadImportCallArity","parseSuper","parseUpdateExpression","parseUnaryExpression","StrictLHSPrefix","InvalidLHSInAssignment","StrictLHSPostfix","parseAwaitExpression","StrictDelete","parseExponentiationExpression","binaryPrecedence","parseBinaryExpression","prec","markers","parseConditionalExpression","checkPatternParam","validateParam","reinterpretAsCoverFormalsList","paramSet","StrictParamDupe","parseYieldExpression","list","StrictLHSAssignment","parseStatementListItem","statement","IllegalExportDeclaration","parseExportDeclaration","parseExpressionStatement","IllegalImportDeclaration","parseImportDeclaration","parseLexicalDeclaration","inFor","parseFunctionDeclaration","parseClassDeclaration","isLexicalDeclaration","parseStatement","parseLexicalBinding","parsePattern","StrictVarName","DeclarationMissingInitializer","parseBindingList","parseBindingRestElement","parsePatternWithDefault","parsePropertyPattern","keyToken","parseVariableIdentifier","parseRestProperty","DefaultRestProperty","PropertyAfterRestProperty","LetInLexicalBinding","parseVariableDeclaration","parseVariableDeclarationList","opt","parseVariableStatement","parseEmptyStatement","parseIfClause","StrictFunction","parseIfStatement","parseDoWhileStatement","previousInIteration","parseWhileStatement","parseForStatement","forIn","decl","ForInOfLoopInitializer","initStartToken","InvalidLHSInForIn","InvalidLHSInForLoop","initSeq","parseContinueStatement","UnknownLabel","IllegalContinue","parseBreakStatement","IllegalBreak","parseReturnStatement","IllegalReturn","parseWithStatement","StrictModeWith","parseSwitchCase","parseSwitchStatement","previousInSwitch","defaultFound","clause","MultipleDefaultsInSwitch","parseLabelledStatement","Redeclaration","GeneratorInLegacyContext","parseThrowStatement","NewlineAfterThrow","parseCatchClause","paramMap","DuplicateBinding","StrictCatchVariable","parseFinallyClause","parseTryStatement","NoCatchOrFinally","parseDebuggerStatement","parseDirectivePrologues","previousLabelSet","previousInFunctionBody","StrictParamName","writable","DefaultRestParameter","ParameterAfterRestParameter","parseFormalParameter","identifierIsOptional","isGenerator","StrictFunctionName","previousAllowAwait","formalParameters","IllegalLanguageModeDirective","BadGetterArity","BadSetterArity","BadSetterRestParameter","parseClassElement","hasConstructor","punctuator","ConstructorIsAsync","StaticPrototype","ConstructorSpecialMethod","DuplicateConstructor","parseClassElementList","parseClassBody","elementList","classBody","parseModuleSpecifier","InvalidModuleSpecifier","parseImportSpecifier","parseNamedImports","parseImportDefaultSpecifier","parseImportNamespaceSpecifier","NoAsAfterImportNamespace","src","MissingFromClause","parseExportSpecifier","exportDeclaration","isExportFromIdentifier","condition","Error","recordError","constructError","base","col","description","InvalidEscapedReservedWord","InvalidHexEscapeSequence","InvalidRegExp","TemplateOctalLiteral","UnexpectedTokenIllegal","UnterminatedRegExp","toLowerCase","curlyStack","skipSingleLineComment","skipMultiLineComment","isKeyword","codePointAt","second","scanHexEscape","scanUnicodeCodePointEscape","getIdentifier","getComplexIdentifier","octalToDecimal","scanIdentifier","scanPunctuator","scanHexLiteral","num","scanBinaryLiteral","scanOctalLiteral","isImplicitOctalLiteral","scanNumericLiteral","parseFloat","scanStringLiteral","unescapedChar","unescaped","octToDec","scanTemplate","rawOffset","testRegExp","_this","tmp","$0","$1","$2","codePoint","exception","scanRegExpBody","classMarker","scanRegExpFlags","quot","amp","apos","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","tilde","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","loz","spades","clubs","hearts","diams","lang","rang","Reader","curly","paren","beforeFunctionExpression","isRegexStart","previous","trackRange","trackLoc","buffer","reader","shift","define","webpackPolyfill","deprecate","paths","default","top","width","height","colspan","rowspan","row","capture","tagName","bottom","style","border","borderWidth","space","ncols","Math","min","innerWidth","__assign","assign","USE_CHECK","FILL_EACHMODEL","USE_OFFSET","USE_EACHOFFSET","model_map","model_list","max","_fill","FLAGS","append","set","setNCols","u","alloc","fill","clear","remove","move","getModel","format","round","trim","ceil","_pathTest","cover","calcWrap","_compress","sort","f","h","v","y","g","w","E","T","C","O","M","S","k","x","L","P","A","U","D","calcOffset","isFinite","isNaN","abs","lastIndexOf","MutexModel","InputListener","vessel","inputListener","_client_width","resize","clientWidth","_update","dragStart","getBoundingClientRect","clientX","clientY","target_box","_get_box","onPick","preventDefault","dragging","dragMove","_stay_timeout","clearTimeout","onMove","break","_e","_t","setTimeout","put","dragEnd","cellSize","onDrop","onStay","sqrt","activate","disable","add","client_width","Function","pow","atan2","atan","H","PI","N","cos","receive","addPoint","MutexBox","getOwnPropertySymbols","getOwnPropertyDescriptor","ReferenceError","Reflect","construct","sham","Proxy","Date","toString","getPrototypeOf","TypeError","rotate","pinch","dragMove2","click","_activated_listener","_registered_listener","keyDown","_parts","_reference","keyUp","keyPress","mouse_mask","pointX","pointY","_listener_status","_points","_identifiers","forEach","_listener_options","EVENT_CONFIG","addEventListener","removeEventListener","MOUSE_EVENT_ID","button","changedTouches","MOUSE_DOWN","MOUSE_MOVE","MOUSE_UP","TOUCH_START","TOUCH_MOVE","TOUCH_END","TOUCH_CANCEL","KEY_DOWN","KEY_UP","KEY_PRESS","CURSOR_EVENT_HANDLES","STATES","IS_DRAG","IS_ROTATE","IS_PINCH","PATTERN_MAP","getOwnPropertyDescriptors","defineProperties","_PRIVATE_METHODS","update_key_listener","match_keys","toLocaleLowerCase","isArray","done","get_keys","_LISTENER_PREPROCESSOR","_listeners","_parent","_key","_path","_mesh_value","_process_status","_process_values","kd_tasks","cursorDown","_max_points","_move","mx","my","dx","dy","_move2","sd","ra","cursorMove","eventDispenser","_leave","setListener","targetTouches","registPoint","cursorUp","registListener","updateListener","_is_mouse_event","document","createElement","className","appendChild","get_option","get_models","zIndex","btn_col_inc","onclick","btn_col_dec","btn_trim","btn_add","originalModule","__webpack_amd_options__"],"mappings":"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","file":"js/test.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n","\r\n\r\n\r\nimport {\r\n    NodeProp,\r\n    Mark as MarkInterfact,\r\n    Node, Watcher,\r\n    Matched, CONTEXT, Context, Token, SourceLocation,\r\n    MATCHED\r\n} from '../interfaces';\r\n\r\nimport Parser from '../parser'\r\nconst enum MATCH_MARKS {\r\n    BOUNDARY = \"\",\r\n    DEEPTH = \" DEEP\",\r\n    IDENTIFIER = \" ID\",\r\n    MATCH_END = \" END\",\r\n    TYPE_ONLY = \" TYPE\"\r\n    /*\r\n    FOLLOW = \" FOLLOW\",\r\n    NOT = \" NOT\",\r\n    OR = \" OR\",\r\n    AND = \" AND\",*/\r\n}\r\nlet OPERATOR_ID = 0;\r\nabstract class Operator {\r\n    private _factors: Array<[string | number, Array<string | number>] | Operator | Mark>;\r\n    private _watcher: Array<Watcher>;\r\n    public sub_operators = [];\r\n    public test: (token: Token, index?: number) => boolean;\r\n    constructor(public operands: Operands) { }\r\n    public watch(watcher: Watcher) {\r\n        if (this._watcher) {\r\n            this._watcher.push(watcher);\r\n        } else {\r\n            this._watcher = [watcher];\r\n        }\r\n        return this;\r\n    }\r\n    public get factors() {\r\n        if (!this._factors) {\r\n            this._factors = [];\r\n            for (const operand of this.operands) {\r\n                if (operand instanceof Operator || operand instanceof Mark) {\r\n                    this._factors.push(operand);\r\n                } else {\r\n                    let parts = typeof operand === \"string\" ?\r\n                        operand.replace(/^\\s+|\\s+$/g, \"\").split(/\\s+/) :\r\n                        [operand];\r\n                    this._factors.push(\r\n                        [\r\n                            parts[0],\r\n                            parts.length > 1\r\n                                ? parts.slice(1)\r\n                                : [MATCH_MARKS.TYPE_ONLY]\r\n                        ]);\r\n                }\r\n            }\r\n        }\r\n        return this._factors;\r\n    }\r\n    abstract attach(parents: IterationRecord, key: string | null, watchers?: Array<Watcher>): IterationRecord;\r\n    protected map(\r\n        parents: IterationRecord,\r\n        factor: [string | number, Array<string | number>] | Operator | Mark,\r\n        key: string | null,\r\n\r\n        watchers?: Array<Watcher>\r\n    ) {\r\n        let result: IterationRecord = [];\r\n        let _watcher = watchers\r\n            ? this._watcher ?\r\n                this._watcher.concat(watchers)\r\n                : watchers\r\n            : this._watcher;\r\n        if (factor instanceof Operator || factor instanceof Mark) {\r\n            return factor.attach(parents, key, _watcher);\r\n        } else {\r\n            for (const prev_item of parents) {\r\n                let [root, keys] = prev_item;\r\n                (keys = keys.slice()).push([key, _watcher]);\r\n                let parent = this.getNode(root, factor[0]);\r\n                for (const value of factor[1]) {\r\n                    result.push(\r\n                        [\r\n                            this.getNode(parent, value, root),\r\n                            keys,\r\n                            null/*[root, factor[0], value, prev_item]//Loop*/\r\n                        ]\r\n                    );\r\n                }\r\n            }\r\n\r\n        }\r\n        return result;\r\n    }\r\n    private getNode(parent: any, key: string | number, root?: any) {\r\n        let child = parent[key];\r\n        if (child) {\r\n            if (child[MATCH_MARKS.IDENTIFIER] !== OPERATOR_ID) {\r\n                parent[key] = child = { ...child };\r\n                child[MATCH_MARKS.IDENTIFIER] = OPERATOR_ID;\r\n            }\r\n            return child;\r\n        }\r\n\r\n        child = parent[key] = {\r\n            [MATCH_MARKS.IDENTIFIER]: OPERATOR_ID\r\n        };\r\n        root && (child[MATCH_MARKS.DEEPTH] = root[MATCH_MARKS.DEEPTH] + 1);\r\n        return child;\r\n    }\r\n    protected setWrap(records: IterationRecord) {//Loop\r\n        throw 'not used';\r\n        for (const record of records) {\r\n            let prev_item = record, curr_item = prev_item;\r\n            while ((curr_item = prev_item[2] && prev_item[2][3]) && curr_item[2]) {\r\n                prev_item = curr_item;\r\n            }\r\n            if (prev_item[2]) {\r\n                let linked = prev_item[2];\r\n                let node = this.getNode(record[0], linked[1]);\r\n                if (node[linked[2]] && node[linked[2]] !== prev_item[0]) {\r\n                    throw node[linked[2]];\r\n                }\r\n                node[linked[2]] = prev_item[0];\r\n            }\r\n        }\r\n        return records;\r\n    }\r\n    protected getDeepNodes(parents: IterationRecord, key: string | null, watchers?: Array<Watcher>) {\r\n        let children = parents, factors = this.factors;\r\n        for (const factor of factors) {\r\n            children = this.map(children, factor, key, watchers);\r\n        }\r\n        return children;\r\n    }\r\n    protected getNextNodes(parents: IterationRecord, key: string | null, watchers?: Array<Watcher>) {\r\n        let children = [], factors = this.factors;\r\n        for (const factor of factors) {\r\n            Array.prototype.push.apply(children, this.map(parents, factor, key, watchers));\r\n        }\r\n        return children;\r\n    }\r\n}\r\n\r\ntype Operand = string | number | Operator | Mark;\r\ntype Operands = Array<Operand>;\r\ntype IterationRecordItem = [\r\n    Record<string, any>,\r\n    Array<NodeProp>,\r\n    [Record<string, any>, string, string, IterationRecordItem] | null\r\n]\r\ntype IterationRecord = Array<IterationRecordItem>;\r\n\r\nclass Option extends Operator {\r\n    attach(parents: IterationRecord, key: string, watchers?: Array<Watcher>) {\r\n        let children = this.getNextNodes(parents, key, watchers).concat(parents);\r\n        return children;\r\n    }\r\n}\r\nclass Or extends Operator {\r\n    attach(parents: IterationRecord, key: string, watchers?: Array<Watcher>) {\r\n        return this.getNextNodes(parents, key, watchers);\r\n    }\r\n}\r\n\r\nclass Series extends Operator {\r\n    attach(parents: IterationRecord, key: string, watchers?: Array<Watcher>) {\r\n        return this.getDeepNodes(parents, key, watchers);\r\n    }\r\n}\r\n/*\r\nclass And extends Operator  {\r\n    attach(parents: IterationRecord, key: string) {\r\n        throw \"not used\";\r\n        return [];\r\n    }\r\n}\r\nclass Not extends Operator {\r\n    attach(parents: IterationRecord, key: string) {\r\n        throw \"not used\";\r\n        return [];\r\n        \r\n    }\r\n}*/\r\nclass NonCapturing extends Operator {\r\n    attach(parents: IterationRecord, key: string, watchers?: Array<Watcher>) {\r\n        return this.getNextNodes(parents, null, watchers);\r\n    }\r\n}\r\n\r\nclass NonCollecting extends Operator {\r\n    attach(parents: IterationRecord, key: string, watchers?: Array<Watcher>) {\r\n        return this.getNextNodes(parents, \"\", watchers);\r\n    }\r\n}\r\n\r\nclass Loop extends Operator {\r\n    //Loop 内部的 Option 可能会导致 Loop 取值混乱(当前用不到这种情况，不处理这种情况能减少消耗)\r\n    attach(parents: IterationRecord, key: string) {\r\n        throw 'not used';\r\n        //有点耗费性能，不是很必要用这个，已在parser核心部分去除Loop的支持\r\n        let baks = [];\r\n        for (const parent of parents) {\r\n            baks.push(parent[2]);\r\n            parent[2] = null;\r\n        }\r\n        let res = this.setWrap(this.getNextNodes(parents, key));\r\n        for (const index in parents) {\r\n            parents[index][2] = baks[index];\r\n        }\r\n        return res;\r\n    }\r\n}\r\n\r\nclass Mark implements MarkInterfact {\r\n    static MATCHED_RECORD: Matched;\r\n    public key: string;\r\n    public value: any;\r\n    constructor(value?: any) {\r\n        if (typeof value === \"function\") {\r\n            Object.defineProperty(this, \"value\", {\r\n                configurable: true,\r\n                enumerable: true,\r\n                get: value\r\n            });\r\n        } else {\r\n            this.value = value;\r\n        }\r\n    }\r\n    attach(parents: IterationRecord, key: string, watchers?: Array<Watcher>) {\r\n        let value = this.value;\r\n        if (key && value !== undefined) {\r\n            if (key === \"type\") {\r\n                Mark.MATCHED_RECORD[MATCHED.wrapper] = _get_wrapper_function(value);;\r\n            } else {\r\n                this.key = key;\r\n                for (const parent of parents) {\r\n                    parent[1] = parent[1].concat(this);\r\n                }\r\n            }\r\n        }\r\n        return parents;\r\n    }\r\n}\r\n\r\nfunction _Option(...some: Operands) {\r\n    return new Option(some);\r\n}\r\n/*\r\nfunction _Not(...some: Operands) {\r\n    return new Not(some);\r\n}\r\nfunction _And(...some: Operands) {\r\n    return new And(some);\r\n}*/\r\nfunction _Or(...some: Operands) {\r\n    return new Or(some);\r\n}\r\nfunction _Series(...some: Operands) {\r\n    return new Series(some);\r\n}\r\nfunction _NonCapturing(...some: Operands) {\r\n    return new NonCapturing(some);\r\n}\r\nfunction _NonCollecting(...some: Operands) {\r\n    return new NonCollecting(some);\r\n}\r\n\r\n\r\nfunction _Loop(...some: Operands) {\r\n    return new Loop(some);\r\n}\r\nfunction _Mark(some?: any) {\r\n    return new Mark(some);\r\n}\r\nlet NODES: Record<string, (...args: any) => void> = {\r\n    Grouping(node?: Record<string, any>, grouping?: Token) {\r\n        for (const key in node) {\r\n            this[key] = node[key];\r\n        }\r\n        if (grouping) {\r\n            this.range = grouping.range;\r\n            this.loc = grouping.loc;\r\n        }\r\n    },\r\n    Directive(\r\n        type: string,\r\n        expression: Node,\r\n        directive: string,\r\n        range: [number, number],\r\n        loc: SourceLocation\r\n    ) {\r\n        this.type = type;\r\n        this.expression = expression;\r\n        this.directive = directive;\r\n        this.range = range;\r\n        this.loc = loc;\r\n    },\r\n    Script(body: Array<Node>, range: [number, number], loc: SourceLocation) {\r\n        this.type = \"Program\";\r\n        this.sourceType = \"script\";\r\n        this.body = body;\r\n        this.range = range;\r\n        this.loc = loc;\r\n    },\r\n    Module(body: Array<Node>, range: [number, number], loc: SourceLocation) {\r\n        this.type = \"Program\";\r\n        this.sourceType = \"module\";\r\n        this.body = body;\r\n        this.range = range;\r\n        this.loc = loc;\r\n    }\r\n};\r\nfunction _get_adapt(data: any, index: number) {\r\n    return data instanceof Array ? index < data.length\r\n        ? data[index]\r\n        : data[data.length - 1] : data;\r\n}\r\nfunction _get_wrapper_function(type: string) {\r\n    return NODES[type]\r\n        || (\r\n            NODES[type]\r\n            = eval(`(function ${type}(){this.type=\"${type}\"})`)\r\n        );\r\n}\r\nfunction createMatchTree(\r\n    data: Record<string, any> | Array<Record<string, any>>,\r\n    root?: Record<string, any>,\r\n    block_list: Array<string> = [],\r\n    prevent_update = false\r\n) {\r\n    prevent_update || (OPERATOR_ID += 1);\r\n    root = root ? prevent_update ? root : { ...root } : { [MATCH_MARKS.DEEPTH]: -1 };\r\n\r\n    if (data instanceof Array) {\r\n        for (const item of data) {\r\n            root = createMatchTree(item, root, block_list, true);\r\n        }\r\n    } else {\r\n        for (const type in data) {\r\n            let wrapper = _get_wrapper_function(type);\r\n            for (let item of data[type] instanceof Array ? data[type] : [data[type]]) {\r\n                let {\r\n                    collector: collectors,\r\n                    handler: handlers,\r\n                    overload,\r\n                    precedence: precedences = 100,\r\n                    filter: filters,\r\n                    validator: validators\r\n                } = item;\r\n                if (!collectors || ~block_list.indexOf(type)) {\r\n                    continue;\r\n                }\r\n                typeof filters === \"string\" && (filters = data[filters].filter);\r\n                typeof handlers === \"string\" && (handlers = data[handlers].handler);\r\n                typeof validators === \"string\" && (validators = data[validators].validator);\r\n                collectors instanceof Array || (collectors = [collectors]);\r\n\r\n                for (let index = 0; index < collectors.length; index++) {\r\n                    let collector = collectors[index];\r\n\r\n                    let precedence: Matched[MATCHED.precedence] = _get_adapt(precedences, index);\r\n                    let handler: Matched[MATCHED.handler] = _get_adapt(handlers, index);\r\n                    let filter: Matched[MATCHED.filter] = _get_adapt(filters, index);\r\n                    let validator: Matched[MATCHED.validator] = _get_adapt(validators, index);\r\n                    Mark.MATCHED_RECORD = [\r\n                        precedence, null, wrapper, handler, validator, filter\r\n                    ];\r\n                    if (collector instanceof Array) {\r\n                        let _collector = { ...collectors[index - 1] };\r\n                        collector[0] && !(collector[0] instanceof Array) && (collector = [collector]);\r\n                        for (const [key, value] of collector) {\r\n                            _collector[key] = value;\r\n                        }\r\n                        collectors[index] = collector = _collector;\r\n                    }\r\n\r\n                    let nodes: IterationRecord = [[root, [], null]];\r\n\r\n                    //保证所有 key 都是同类型字符开头(否则可能会出现遍历顺序与定义顺序不同)\r\n                    for (const key in collector) {\r\n                        let operator = collector[key];\r\n                        if (!(operator instanceof Operator || operator instanceof Mark)) {\r\n                            operator = _Or(operator);\r\n                        }\r\n                        nodes = operator.attach(nodes, key);\r\n                    }\r\n\r\n                    for (const [last_node, props] of nodes) {\r\n                        let matched_record = Mark.MATCHED_RECORD.slice();\r\n                        matched_record[MATCHED.props] = props;\r\n                        if (!overload && last_node[MATCH_MARKS.MATCH_END]) {\r\n                            console.warn(\r\n                                \"conflict:\",\r\n                                last_node,\r\n                                last_node[MATCH_MARKS.MATCH_END],\r\n                                matched_record\r\n                            );\r\n                        }\r\n                        last_node[MATCH_MARKS.MATCH_END] = matched_record\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n    return root;\r\n\r\n}\r\n\r\n\r\n\r\n\r\nfunction _Context(parser: Parser, tokens: Array<Node>): Context {\r\n    let state_stack = [];\r\n    let context: any = new Array(CONTEXT.length);\r\n    context[CONTEXT.parser] = parser;\r\n    context[CONTEXT.tokens] = tokens;\r\n    context[CONTEXT.labelSet] = [];\r\n    context.wrap = wrap;\r\n    context.unwrap = unwrap;\r\n    context.store = store;\r\n    context.restore = restore;\r\n    //context.getToken = getToken;\r\n    return context;\r\n\r\n    /*function getToken(index: number) {\r\n        return context[CONTEXT.tokens][index];\r\n    }*/\r\n    function wrap(key: CONTEXT, value: any) {\r\n        state_stack.push(context[key], key);\r\n        context[key] = value;\r\n        return context;\r\n    };\r\n    function unwrap() {\r\n        context[state_stack.pop()] = state_stack.pop();\r\n        return context;\r\n    };\r\n    function store() {\r\n        let restore_point = state_stack.length;\r\n        for (let index = 0; index < arguments.length; index += 2) {\r\n            wrap(arguments[index], arguments[index + 1]);\r\n        }\r\n        return restore_point;\r\n    }\r\n    function restore(point: number) {\r\n        while (state_stack.length > point) {\r\n            unwrap();\r\n        }\r\n        return state_stack.length;\r\n    }\r\n}\r\nconst FutureReservedWord = [\"enum\", \"export\", \"import\", \"super\"];\r\nconst StrictModeReservedWord = [\r\n    \"implements\", \"interface\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\", \"let\"\r\n];\r\nconst RestrictedWord = [\"eval\", \"arguments\"];\r\n\r\nfunction isFutureReservedWord(id: string) {\r\n    return FutureReservedWord.indexOf(id) >= 0;\r\n}\r\nfunction isStrictModeReservedWord(id: string) {\r\n    return StrictModeReservedWord.indexOf(id) >= 0;\r\n}\r\nfunction isRestrictedWord(id: string) {\r\n    return RestrictedWord.indexOf(id) >= 0;\r\n}\r\n\r\n\r\nfunction _if_strict_throw_err(context: Context, token: Token) {\r\n    if (context[CONTEXT.strict]) {\r\n        context[CONTEXT.parser].err(token);\r\n    }\r\n}\r\nconst THROW_RESTRICT_WORDS_PATTERN = _Or(\r\n    \"Identifier eval arguments\"\r\n).watch(_if_strict_throw_err);\r\nconst THROW_STRICT_RESERVED_WORDS_PATTERN = _Or(\r\n    \"Identifier implements interface package private protected public static yield let\"\r\n).watch(_if_strict_throw_err);\r\n\r\nconst IDENTIFIER_OR_THROW_STRICT_RESERVED_WORDS_PATTERN = _Or(\"Identifier\", THROW_STRICT_RESERVED_WORDS_PATTERN);\r\nconst EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN = _Or(\"[Expression]\", THROW_STRICT_RESERVED_WORDS_PATTERN);\r\n\r\nconst IDENTIFIER_OR_VALIDATE_STRICT_RESERVED_WORDS_PATTERN = _Or(\"Identifier\").watch(validateIdentifier);\r\nconst EXPRESSION_OR_VALIDATE_STRICT_RESERVED_WORDS_PATTERN = _Or(\r\n    \"[Expression]\",\r\n    IDENTIFIER_OR_VALIDATE_STRICT_RESERVED_WORDS_PATTERN\r\n);\r\n\r\n\r\n/*const STRICT_RESERVED_WORDS = _Or(\r\n    \"Identifier implements interface package private protected public static yield let\"\r\n);*/\r\nfunction validateIdentifier(context: Context, node: Node) {\r\n    if (\r\n        context[CONTEXT.strict]\r\n    ) {\r\n        if (!isStrictModeReservedWord(node.name)) {\r\n            return true;\r\n        }\r\n        context[CONTEXT.parser].err(node);\r\n        return false;\r\n    }\r\n}\r\nfunction validateAssignment(context: Context, node: Node) {\r\n    if (\r\n        context[CONTEXT.strict]\r\n    ) {\r\n        if (!(\r\n            isRestrictedWord(node.name)\r\n            || isStrictModeReservedWord(node.name)\r\n        )) {\r\n            return true;\r\n        }\r\n        context[CONTEXT.parser].err(node);\r\n        return false;\r\n    }\r\n}\r\nfunction validateBinding(context: Context, node: Node) {\r\n    if (validateAssignment(context, node) === true) {\r\n        let binding_set = context[CONTEXT.bindingSet];\r\n        if (binding_set) {\r\n            binding_set.push(node.name);\r\n            if (binding_set.indexOf(node.name) !== binding_set.length - 1) {\r\n                context[CONTEXT.parser].err(node);\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}\r\n\r\nfunction validateLineTerminator([collected, parser, tokens, , right]: Context) {\r\n    if (collected._next) {\r\n        delete collected._next;\r\n    } else {\r\n        let next_token = tokens[right + 1];\r\n        if (next_token && next_token.loc.start.line === collected.loc.end.line) {\r\n            parser.err(next_token);\r\n        }\r\n    }\r\n    return collected;\r\n}\r\n\r\nlet join_content = function ([collected]: Context) {\r\n    let { success, content } = collected;\r\n    if (success) {\r\n        success.content.push(content);\r\n        return success;\r\n    } else {\r\n        collected.content = [content];\r\n        return collected;\r\n    }\r\n};\r\n\r\nlet TYPE_ALIAS = {};\r\n\r\nconst ASSIGNMENT_PUNCTUATORS_PATTERN = _Or(\"Punctuator = += -= **= *= /= %= <<= >>= >>>= &= ^= |=\");\r\n\r\nlet AWAIT_LIST: Array<() => void> = [];\r\n\r\nconst MODULE_ITEM_PATTERN = _Or(\r\n    \"ImportDeclaration\",\r\n    \"ExportAllDeclaration\",\r\n    \"ExportNamedDeclaration\",\r\n    \"ExportDefaultDeclaration\"\r\n);\r\nconst STATEMANT_LIST_ITEM_PATTERN = _Or(\"[Declaration]\", \"[Statement]\");\r\n\r\nconst RIGHT_SIDE_TOPLEVEL_ITEM_PATTERN = _Or(\r\n    \"SwitchCase\",\r\n    MODULE_ITEM_PATTERN,\r\n    STATEMANT_LIST_ITEM_PATTERN\r\n);\r\nconst TOPLEVEL_ITEM_PATTERN = _Or(\r\n    MATCH_MARKS.BOUNDARY,\r\n    \"SwitchCase\",\r\n    MODULE_ITEM_PATTERN,\r\n    STATEMANT_LIST_ITEM_PATTERN\r\n);\r\n\r\nfunction isAligned(context: Context, left: number, right: number) {\r\n    let tokens = context[CONTEXT.tokens];\r\n    for (let index = left; index < right; index++) {\r\n        if (tokens[index].loc.end.line !== tokens[index + 1].loc.start.line) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nexport {\r\n    Mark, isAligned,\r\n    STATEMANT_LIST_ITEM_PATTERN,\r\n    RIGHT_SIDE_TOPLEVEL_ITEM_PATTERN,\r\n    TOPLEVEL_ITEM_PATTERN,\r\n    AWAIT_LIST,\r\n    join_content,\r\n    IDENTIFIER_OR_VALIDATE_STRICT_RESERVED_WORDS_PATTERN,\r\n    EXPRESSION_OR_VALIDATE_STRICT_RESERVED_WORDS_PATTERN,\r\n    IDENTIFIER_OR_THROW_STRICT_RESERVED_WORDS_PATTERN,\r\n    EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN,\r\n    ASSIGNMENT_PUNCTUATORS_PATTERN,\r\n    validateBinding, validateLineTerminator,\r\n    NODES,\r\n    TYPE_ALIAS,\r\n    MATCH_MARKS,\r\n    createMatchTree,\r\n    isRestrictedWord,\r\n    isFutureReservedWord,\r\n    isStrictModeReservedWord,\r\n    validateIdentifier,\r\n    validateAssignment,\r\n    _Context,\r\n    _Option, _Or, _Series, _NonCapturing, _NonCollecting, _Mark, _Loop,\r\n}\r\n","\r\nimport {\r\n    Token, Node, Context, CONTEXT\r\n} from '../interfaces';\r\nimport {\r\n    MATCH_MARKS,\r\n    createMatchTree,\r\n    _Option, _Or, _Series, _NonCollecting, _Mark\r\n} from './head'\r\nimport Parser from '../parser'\r\n\r\n\r\nimport {\r\n    Expressions,\r\n    EXPRESSION_TREE\r\n} from './expression'\r\nimport Declarations from './declaration'\r\nimport Statements from './statement'\r\nimport ModuleDeclarations from './module_declaration'\r\n\r\n\r\n\r\nlet EXPRESSION_ITEM_PATTERN = {};\r\nlet DECLARATION_ITEM_PATTERN = {};\r\nlet STATEMENT_ITEM_PATTERN = {};\r\nlet STATEMENT_LIST_ITEM_PATTERN = {};\r\nlet MODULE_ITEM_PATTERN = {};\r\nfor (\r\n    const [descriptor, patterns]\r\n    of\r\n    [\r\n        [\r\n            Expressions,\r\n            [EXPRESSION_ITEM_PATTERN]\r\n        ],\r\n        [\r\n            Declarations,\r\n            [DECLARATION_ITEM_PATTERN, STATEMENT_LIST_ITEM_PATTERN]\r\n        ],\r\n        [\r\n            Statements,\r\n            [STATEMENT_ITEM_PATTERN, STATEMENT_LIST_ITEM_PATTERN]\r\n        ],\r\n        [\r\n            ModuleDeclarations,\r\n            [MODULE_ITEM_PATTERN, STATEMENT_LIST_ITEM_PATTERN]\r\n        ],\r\n    ] as Array<[Record<string, any>, Array<Record<string, boolean>>]>\r\n) {\r\n    for (const key in descriptor) {\r\n        if (key) {\r\n            for (const pattern of patterns) {\r\n                pattern[key] = true;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction isExpression(node: Node) {\r\n    return EXPRESSION_ITEM_PATTERN[node.type];\r\n}\r\nfunction isDeclaration(node: Node) {\r\n    return DECLARATION_ITEM_PATTERN[node.type];\r\n}\r\nfunction isStatement(node: Node) {\r\n    return STATEMENT_ITEM_PATTERN[node.type];\r\n}\r\nfunction isStatementListItem(node: Node) {\r\n    return STATEMENT_LIST_ITEM_PATTERN[node.type];\r\n}\r\nfunction isModuleItem(node: Node) {\r\n    return MODULE_ITEM_PATTERN[node.type];\r\n}\r\n\r\n\r\nconst SYNTAX_TREE = createMatchTree([\r\n    Declarations,\r\n    ModuleDeclarations,\r\n    Statements\r\n], EXPRESSION_TREE);\r\n\r\n\r\nfunction parse_next_statement(context: Context, start = context[CONTEXT.right] + 1) {\r\n    let parser = context[CONTEXT.parser];\r\n    if (\r\n        parser.parseCustom(\r\n            parser.SYNTAX_TREE,\r\n            context,\r\n            start,\r\n            isStatementListItem\r\n        )\r\n    ) {\r\n        return 0;\r\n    }\r\n}\r\nfunction get_inner_group(token: Token) {\r\n    while (\r\n        token.content.length === 1\r\n        && token.content[0].value === \"()\"\r\n        && token.content[0].type === \"Punctuator\"\r\n    ) {\r\n        token = token.content[0];\r\n    }\r\n    return token;\r\n}\r\n\r\nfunction extract_success(parser: Parser, nodes: Array<Node>) {\r\n    let res: Array<Node> = nodes;\r\n    if (nodes.length) {\r\n        if (nodes[0].type === \"Success\") {\r\n            res = nodes[0].content;\r\n            nodes.length > 1 && parser.err(...nodes.slice(1));\r\n        } else {\r\n            res = [];\r\n            parser.err(...nodes);\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nfunction parse_and_extract(match_tree: Record<string, any>, context: Context, node: Node) {\r\n    let [, parser] = context;\r\n    let tokens = node.content;\r\n    if (tokens.length) {\r\n        context[CONTEXT.tokens] = tokens;\r\n        parser.parseCustom(match_tree, context);\r\n        tokens = extract_success(parser, tokens)\r\n    }\r\n    return tokens;\r\n}\r\n/*\r\nfunction isCommaSeparator(node) {\r\n    return node.type === \"Punctuator\" && node.value === \",\";\r\n}*/\r\n\r\n\r\nexport {\r\n    parse_next_statement,\r\n    get_inner_group,\r\n    extract_success,\r\n    parse_and_extract,\r\n    MATCH_MARKS,\r\n    isExpression, isDeclaration, isStatement, isStatementListItem, isModuleItem,\r\n    SYNTAX_TREE, EXPRESSION_TREE\r\n}\r\n\r\n\r\n\r\n","import {\r\n    Node, Token, Context, CONTEXT, MATCHED\r\n} from '../interfaces';\r\nimport {\r\n    createMatchTree,\r\n    _Option, _Or, _Series, _NonCollecting, _NonCapturing, _Mark,\r\n    TYPE_ALIAS, _Context, _Loop, NODES, validateIdentifier, validateAssignment,\r\n    validateBinding, validateLineTerminator, ASSIGNMENT_PUNCTUATORS_PATTERN, join_content,\r\n\r\n    IDENTIFIER_OR_VALIDATE_STRICT_RESERVED_WORDS_PATTERN,\r\n    EXPRESSION_OR_VALIDATE_STRICT_RESERVED_WORDS_PATTERN,\r\n    IDENTIFIER_OR_THROW_STRICT_RESERVED_WORDS_PATTERN,\r\n    EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN,\r\n    TOPLEVEL_ITEM_PATTERN,\r\n    MATCH_MARKS,\r\n    isAligned\r\n} from './head'\r\nimport { extract_success, parse_and_extract } from './index';\r\n\r\nimport {\r\n    Patterns,\r\n    parseArrayPattern,\r\n    parseObjectPattern\r\n} from './pattern';\r\nconst Grouping = NODES.Grouping;\r\n\r\n\r\nconst ARGUMENTS_PATTERN = _Or(\"Punctuator ()\").watch(\r\n    function (context: Context, token: Token) {\r\n        let [collected] = context;\r\n        collected.arguments = parse_arguments(context, token.content);\r\n    }\r\n);\r\n\r\n\r\nconst Expressions: Record<string, any> = {\r\n    \"\": [\r\n        {\r\n            handler(context: Context) {\r\n                let [collected, parser] = context;\r\n                context.wrap(CONTEXT.bindingSet, null);\r\n                let node = parser.parseExpression(context, collected.token);\r\n                context.unwrap();\r\n                return node ? new Grouping(node, collected.token) : [];\r\n            },\r\n            precedence: 20,\r\n            collector: {\r\n                type: _Mark(\"Grouping\"),\r\n                token: \"Punctuator ()\"\r\n            }\r\n        },\r\n        {\r\n            validator(context: Context) {\r\n                let [, parser, tokens, , right] = context;\r\n                tokens[right] instanceof Grouping && parser.err(tokens[right]);\r\n                return true;\r\n            },\r\n            filter(context: Context) {\r\n                return context[CONTEXT.spreadElement] === context[CONTEXT.tokens];\r\n            },\r\n            precedence: 1.5,\r\n            collector: {\r\n                type: _Mark(\"SpreadElement\"),\r\n                token: _NonCollecting(\"Punctuator ...\"),\r\n                argument: \"[Expression]\"\r\n            }\r\n        },\r\n        {\r\n            validator(context: Context) {\r\n                let [, parser, tokens, , right] = context;\r\n                let argument = tokens[right];\r\n                argument instanceof Grouping && parser.err(argument);\r\n                return true;\r\n            },\r\n            filter: function (context: Context) {\r\n                return context[CONTEXT.bindingElement] === context[CONTEXT.tokens];\r\n            },\r\n            precedence: 1.5,\r\n            collector: {\r\n                type: _Mark(\"RestElement\"),\r\n                token: _NonCollecting(\"Punctuator ...\"),\r\n                argument: _Or(_Or(\"Identifier\").watch(validateBinding), \"ArrayPattern\", \"ObjectPattern\")\r\n            }\r\n        }\r\n    ],\r\n    \"Identifier\": [\r\n    ],\r\n    \"Literal\": [//已在 tokenizer => token_hooks 中处理\r\n        {\r\n            handler(context: Context) {\r\n                let [collected, parser] = context;\r\n                let { str: value, octal, value: raw } = collected.value;\r\n                collected.value = value;\r\n                collected.raw = raw;\r\n                if (octal && context[CONTEXT.strict]) {\r\n                    parser.err(collected);\r\n                }\r\n                return collected;\r\n            },\r\n            collector: {\r\n                value: \"String\",\r\n                raw: _Mark(null)\r\n            }\r\n        }\r\n    ],\r\n    \"ThisExpression\": {\r\n        collector: {\r\n            token: _NonCollecting(\"Keyword this\")\r\n        }\r\n    },\r\n    \"TemplateLiteral\": {\r\n        handler(context: Context) {\r\n            let [collected, parser, tokens, , right] = context;\r\n            let content = tokens[right].content;\r\n            for (const item of content) {\r\n                if (item.type === \"TemplateElement\") {\r\n                    collected.quasis.push(item);\r\n                } else {\r\n                    collected.expressions.push(parser.parseExpression(context, item));\r\n                }\r\n            }\r\n            return collected;\r\n        },\r\n        collector: [\r\n            {\r\n                _: _NonCapturing(_Option(\"[Expression]\")),\r\n                __: _NonCollecting(\"Template ``\"),\r\n                quasis: _Mark(Array),\r\n                expressions: _Mark(Array)\r\n            }\r\n        ]\r\n    },\r\n    \"ArrayExpression\": {\r\n        precedence: 20,\r\n        collector: {\r\n            elements: _Or(\"Punctuator []\").watch(\r\n                function (context: Context, node: Node) {\r\n                    let [collected] = context;\r\n                    context.wrap(CONTEXT.spreadElement, node.content);\r\n                    collected.elements = parse_and_extract(ARRAY_ELEMENTS_TREE, context, node);\r\n                    context.unwrap();\r\n                }\r\n            ),\r\n        }\r\n\r\n    },\r\n    \"ObjectExpression\": {\r\n        handler(context: Context) {\r\n            let [collected] = context;\r\n            collected.properties = parse_and_extract(OBJECT_PROPERTIES_TREE, context, collected.properties);\r\n            return collected;\r\n        },\r\n        precedence: 20,\r\n        collector: {\r\n            properties: \"Punctuator {}\",\r\n        }\r\n\r\n    },\r\n    \"FunctionExpression\": [\r\n        {\r\n            handler: parse_function_expression,\r\n            collector: [\r\n                {\r\n                    async: _Or(\r\n                        _Series(_Mark(true), _NonCollecting(\"Keyword async\")),\r\n                        _Mark(false)\r\n                    ),\r\n                    __: _NonCollecting(\"Keyword function\"),\r\n                    generator: _Or(\r\n                        _Series(_Mark(true), _NonCollecting(\"Punctuator *\")),\r\n                        _Mark(false)\r\n                    ),\r\n                    id: _Or(IDENTIFIER_OR_THROW_STRICT_RESERVED_WORDS_PATTERN, _Mark(null)),\r\n                    params: \"Punctuator ()\",\r\n                    body: \"Punctuator {}\",\r\n                    expression: _Mark(false)\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            handler([collected, parser]: Context) {\r\n                return parser.parseKeyword(collected.async);\r\n            },\r\n            filter: [\r\n                function () {\r\n                    return false;\r\n                },\r\n                isAligned\r\n            ],\r\n            collector: [\r\n                { _: _Series(\"Identifier async\", \"Identifier\") },\r\n                {\r\n                    async: \"Identifier async\",\r\n                    _next: _NonCapturing(\"Keyword function\"),\r\n                },\r\n                {\r\n                    async: \"Identifier async\",\r\n                    params: _NonCapturing(\"Punctuator ()\", \"Identifier\"),\r\n                    token: _NonCapturing(\"Punctuator =>\"),\r\n                },\r\n            ]\r\n        }\r\n    ],\r\n    \"ArrowFunctionExpression\": {\r\n        handler(context: Context) {\r\n            let [collected, parser, tokens, left] = context;\r\n            let { async, token, params, body, expression } = collected;\r\n            if (body) {\r\n                if (params.type === \"Identifier\") {\r\n                    validateAssignment(context, params);\r\n                    collected.params = [params];\r\n                } else {\r\n                    collected.params = parse_params(context, params)\r\n                }\r\n                if (!expression) {\r\n                    let body_context = _Context(parser, body.content);\r\n                    body_context[CONTEXT.inFunctionBody] = body.content;\r\n                    body_context[CONTEXT.allowAwait] = async;\r\n                    collected.body = {\r\n                        type: \"BlockStatement\",\r\n                        body: parser.parseBlock(body_context)\r\n                    };\r\n                }\r\n                return collected;\r\n            } if (token) {\r\n                token.value = \"_=>\";\r\n                let body_context = _Context(parser, tokens);\r\n                body_context[CONTEXT.strict] = context[CONTEXT.strict];\r\n                body_context[CONTEXT.allowAwait] = !!async;\r\n                if (\r\n                    parser.parseCustom(\r\n                        parser.EXPRESSION_TREE,\r\n                        body_context,\r\n                        left,\r\n                        (node: Node) => true/*node.type === \"ArrowFunctionExpression\"*/\r\n                    )\r\n                ) {\r\n                    return null;\r\n                }\r\n            }\r\n        },\r\n        precedence: new Number(3),\r\n        collector: [\r\n            {//占位使 () 不会被单独收集为表达式\r\n                async: _Or(\r\n                    _Series(_Mark(true), _NonCollecting(\"Keyword async\")),\r\n                    _Mark(false)\r\n                ),\r\n                generator: _Mark(false),\r\n                id: _Mark(null),\r\n                params: _Or(\"Punctuator ()\", \"Identifier\"),\r\n                token: _NonCollecting(\"Punctuator =>\"),\r\n                body: \"Punctuator {}\",\r\n                expression: _Mark(false)\r\n            },\r\n            [\r\n                [\"token\", \"Punctuator =>\"],\r\n                [\"body\", _Mark()]\r\n            ],\r\n            [\r\n                //_=>作用为隔断匹配，使后续的表达式使用当前方法声明的环境\r\n                [\"token\", _NonCollecting(\"Punctuator _=>\")],\r\n                [\"body\", _Option(\"[Expression]\")],\r\n                [\"expression\", _Mark(true)]\r\n            ]\r\n        ]\r\n    },\r\n    \"ClassExpression\": {\r\n        collector: [\r\n            {\r\n                _: _NonCollecting(\"Keyword class\"),\r\n                id: _Or(IDENTIFIER_OR_VALIDATE_STRICT_RESERVED_WORDS_PATTERN, _Mark(null)),\r\n                superClass: _Or(\r\n                    _Series(\r\n                        _NonCollecting(\"Keyword extends\"),\r\n                        IDENTIFIER_OR_VALIDATE_STRICT_RESERVED_WORDS_PATTERN\r\n                    ),\r\n                    _Mark(null)\r\n                ),\r\n                body: _Or(\"Punctuator {}\").watch(\r\n                    function (context: Context, body: Token) {\r\n                        let [collected] = context;\r\n                        collected.body = {\r\n                            type: \"ClassBody\",\r\n                            body: parse_and_extract(METHOD_DEFINITIONS_TREE, context, body),\r\n                            range: body.range,\r\n                            loc: body.loc\r\n                        };\r\n                    }\r\n                )\r\n            }\r\n        ]\r\n    },\r\n    \"TaggedTemplateExpression\": {\r\n        collector: [\r\n            {\r\n                tag: EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN,\r\n                quasi: \"TemplateLiteral\"\r\n            }\r\n        ]\r\n    },\r\n    \"MemberExpression\": [\r\n        {\r\n            precedence: 20,\r\n            collector: {\r\n                object: EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN,\r\n                property: _Series(\r\n                    _NonCollecting(\"Punctuator .\"),\r\n                    _Or(\r\n                        \"Identifier\",\r\n                        _Or(\"Keyword\").watch(\r\n                            function (context: Context, token: Token) {\r\n                                let [collected, parser] = context;\r\n                                collected.property = parser.parseIdentifier(token);\r\n                            }\r\n                        )\r\n                    )\r\n                ),\r\n                computed: _Mark(false)\r\n            }\r\n        },\r\n        {\r\n            filter: \"CallExpression\",\r\n            precedence: 20,\r\n            collector: {\r\n                object: EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN,\r\n                property: _Or(\"Punctuator []\").watch(\r\n                    function (context: Context, token: Token) {\r\n                        let [collected, parser] = context;\r\n                        collected.property = parser.parseExpression(context, token);\r\n                    }\r\n                ),\r\n                computed: _Mark(true)\r\n            }\r\n        }\r\n    ],\r\n    \"Super\": {\r\n        handler(context: Context) {\r\n            let [collected, parser, tokens, left, right] = context;\r\n            if (context[CONTEXT.inFunctionBody]) {\r\n                if (right === left) {\r\n                    parser.err(tokens[left]);\r\n                }\r\n            } else {\r\n                parser.err(tokens[left]);\r\n            }\r\n            return context[CONTEXT.collected];\r\n        },\r\n        collector: {\r\n            token: _NonCollecting(\"Keyword super\"),\r\n            _next: _NonCapturing(\"Punctuator () . []\")\r\n        }\r\n    },\r\n    \"MetaProperty\": {\r\n        handler([collected]: Context) {\r\n            collected.meta.type = \"Identifier\";\r\n            return collected;\r\n        },\r\n        collector: [\r\n            {\r\n                meta: \"Keyword import\",\r\n                _: _NonCollecting(\"Punctuator .\"),\r\n                property: \"Identifier meta\"\r\n            },\r\n            {\r\n                meta: \"Keyword new\",\r\n                _: _NonCollecting(\"Punctuator .\"),\r\n                property: \"Identifier target\"\r\n            }\r\n        ]\r\n    },\r\n    \"NewExpression\": {\r\n        precedence: new Number(20),//memberexpression\r\n        collector: [\r\n            {\r\n                token: _NonCollecting(\"Keyword new\"),\r\n                _: _Option(_NonCollecting(\"Punctuator ++ --\").watch(\r\n                    function (context: Context, token: Token) {\r\n                        context[CONTEXT.parser].err(token);\r\n                    }\r\n                )),\r\n                callee: EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN,\r\n                arguments: _Or(_Mark(Array), ARGUMENTS_PATTERN)\r\n            }\r\n        ]\r\n    },\r\n    \"CallExpression\": {\r\n        precedence: 20,\r\n        filter(context: Context, left: number) {\r\n            let tokens = context[CONTEXT.tokens];\r\n            let first_token = tokens[left], second_token = tokens[left + 1];\r\n            if (second_token === context[CONTEXT.rightAssociativeNode]) {\r\n                return false;\r\n            }\r\n            if (\r\n                first_token.type !== \"UpdateExpression\"\r\n                || first_token instanceof Grouping\r\n                || isAligned(context, left, left + 1)\r\n            ) {\r\n                return true;\r\n            }\r\n            context[CONTEXT.rightAssociativeNode] = second_token;\r\n        },\r\n        collector: {\r\n            callee: EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN,\r\n            arguments: ARGUMENTS_PATTERN\r\n        }\r\n\r\n    },\r\n    \"UpdateExpression\": [\r\n        {\r\n            handler(context: Context) {\r\n                let [collected] = context;\r\n                collected.operator = collected.operator.value;\r\n                return collected;\r\n            },\r\n            precedence: 17,\r\n            collector: {\r\n                operator: \"Punctuator ++ --\",\r\n                argument: _Or(\"MemberExpression\", IDENTIFIER_OR_THROW_STRICT_RESERVED_WORDS_PATTERN),\r\n                prefix: _Mark(true)\r\n            }\r\n        },\r\n        {\r\n            validator(context: Context) {\r\n                let collected = context[CONTEXT.parser].createNode(context);\r\n                collected.operator = collected.operator.value;\r\n                return collected;\r\n            },\r\n            filter: [\r\n                function (context: Context, left: number, right: number) {\r\n                    return isAligned(context, left, left + 1);\r\n                },\r\n                isAligned,\r\n            ],\r\n            precedence: 18,\r\n            collector: [\r\n                {\r\n                    argument: _Or(\"MemberExpression\", IDENTIFIER_OR_THROW_STRICT_RESERVED_WORDS_PATTERN),\r\n                    operator: \"Punctuator ++ --\",\r\n                    _: _NonCapturing(_Option(\"Punctuator .\").watch(\r\n                        function (context: Context, token: Token) {\r\n                            context[CONTEXT.parser].err(token);\r\n                        }\r\n                    )),\r\n                    prefix: _Mark(false)\r\n                },\r\n                [\"_\", _NonCapturing(\"Punctuator [] ()\").watch(\r\n                    function (context: Context, token: Token) {\r\n                        context[CONTEXT.parser].err(token);\r\n                    }\r\n                )]\r\n            ]\r\n        }\r\n    ],\r\n    \"AwaitExpression\": [\r\n        {\r\n            precedence: 17,\r\n            filter(context: Context) {\r\n                return context[CONTEXT.allowAwait];\r\n            },\r\n            collector: {\r\n                token: _NonCollecting(\"Keyword await\"),\r\n                argument: EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN\r\n            }\r\n        },\r\n        {\r\n            handler([collected, parser]: Context) {\r\n                return parser.parseIdentifier(collected.token);\r\n            },\r\n            filter(context: Context) {\r\n                return !context[CONTEXT.allowAwait];\r\n            },\r\n            collector: {\r\n                token: \"Keyword await\",\r\n            }\r\n        },\r\n    ],\r\n    \"UnaryExpression\": {\r\n        handler(context: Context) {\r\n            let [collected] = context;\r\n            collected.operator = collected.operator.value;\r\n            return collected;\r\n        },\r\n        precedence: 17,\r\n        collector: [\r\n            {\r\n                operator: _Or(\"Punctuator ~ ! + -\", \"Keyword delete void typeof\"),\r\n                argument: EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN,\r\n                prefix: _Mark(true)\r\n            }\r\n        ]\r\n    },\r\n    \"BinaryExpression\": {\r\n        handler(context: Context) {\r\n            let [collected] = context;\r\n            collected.operator = collected.operator.value;\r\n            return collected;\r\n        },\r\n        validator(context: Context) {\r\n            return context[CONTEXT.right] - context[CONTEXT.left] >= 2\r\n        },\r\n        precedence: [16, 15, 14, 13, 12, 11, 10, 9, 8, 7],\r\n        collector: [\r\n            {\r\n                left: EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN,\r\n                operator: `Punctuator **`,\r\n                right: _Option(EXPRESSION_OR_VALIDATE_STRICT_RESERVED_WORDS_PATTERN)\r\n            },\r\n            [\"operator\", `Punctuator * / %`],\r\n            [\"operator\", `Punctuator + -`],\r\n            [\"operator\", `Punctuator << >> >>>`],\r\n            [\"operator\", _Or(`Punctuator < <= > >=`, `Keyword in instanceof`)],\r\n            [\"operator\", `Punctuator == != === !==`],\r\n            [\"operator\", `Punctuator &`],\r\n            [\"operator\", `Punctuator ^`],\r\n            [\"operator\", `Punctuator |`],\r\n            [\"operator\", `Punctuator ??`]\r\n        ]\r\n    },\r\n    \"LogicalExpression\": {\r\n        validator(context: Context) {\r\n            if (context[CONTEXT.right] - context[CONTEXT.left] === 2) {\r\n                let collected = context[CONTEXT.parser].createNode(context);\r\n                collected.operator = collected.operator.value;\r\n                return collected;\r\n            }\r\n        },\r\n        precedence: [6, 5],\r\n        collector: [\r\n            {\r\n                left: EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN,\r\n                operator: \"Punctuator &&\",\r\n                right: _Option(EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN)\r\n            },\r\n            [\"operator\", \"Punctuator ||\"]\r\n        ]\r\n    },\r\n    \"ConditionalExpression\": [\r\n        {\r\n            validator(context: Context) {\r\n                let [, parser, tokens, left, right] = context;\r\n                if (right - left >= 4) {\r\n                    return true;\r\n                }\r\n                if (!context[CONTEXT.isExpression] || context[CONTEXT.bindingElement] === tokens) {\r\n                    let store = context.store(CONTEXT.isExpression, true, CONTEXT.bindingElement, null);\r\n                    parser.parseCustom(\r\n                        parser.EXPRESSION_TREE,\r\n                        context,\r\n                        left,\r\n                        (node: Node) => node.type === \"ConditionalExpression\"\r\n                    );\r\n                    context.restore(store);\r\n                    return null;\r\n                }\r\n            },\r\n            precedence: new Number(3),//与 Assignment 为右优先\r\n            collector: [\r\n                {\r\n                    test: EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN,//EXPRESSION_OR_VALIDATE_STRICT_RESERVED_WORDS\r\n                    token: _NonCollecting(\"Punctuator ?\")\r\n                },\r\n                [\"consequent\", EXPRESSION_OR_VALIDATE_STRICT_RESERVED_WORDS_PATTERN],\r\n                [\"_\", _NonCollecting(\"Punctuator :\")],\r\n                [\"alternate\", EXPRESSION_OR_VALIDATE_STRICT_RESERVED_WORDS_PATTERN]\r\n            ]\r\n        },\r\n    ],\r\n    \"YieldExpression\": [\r\n        {\r\n            filter(context: Context) {\r\n                return context[CONTEXT.allowYield];\r\n            },\r\n            precedence: 2,\r\n            collector: [\r\n                {\r\n                    token: _NonCollecting(\"Keyword yield\"),\r\n                    _: _NonCollecting(\"Punctuator *\"),\r\n                    argument: EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN,\r\n                    delegate: _Mark(true)\r\n                },\r\n                {\r\n                    token: _NonCollecting(\"Keyword yield\"),\r\n                    argument: EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN,\r\n                    delegate: _Mark(false)\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            handler([collected, parser]: Context) {\r\n                return parser.parseIdentifier(collected.token);\r\n            },\r\n            filter(context: Context) {\r\n                return !context[CONTEXT.allowYield];\r\n            },\r\n            collector: {\r\n                token: \"Keyword yield\"\r\n            }\r\n        },\r\n    ],\r\n    \"AssignmentExpression\": {\r\n        validator: \"LogicalExpression\",\r\n        precedence: new Number(3),//Right-associative\r\n        collector: {\r\n            left: _Or(\r\n                _Or(\"[Expression]\").watch(\r\n                    function (context: Context, expr: Node) {\r\n                        context[CONTEXT.parser].err(expr);\r\n                    }\r\n                ),\r\n                \"AssignmentExpression\",\r\n                \"MemberExpression\",\r\n                \"AssignmentPattern\",\r\n                \"ArrayPattern\",\r\n                \"ObjectPattern\",\r\n                IDENTIFIER_OR_THROW_STRICT_RESERVED_WORDS_PATTERN\r\n            ),\r\n            operator: ASSIGNMENT_PUNCTUATORS_PATTERN,\r\n            right: _Option(\"[Expression]\")//占位避免错误断句\r\n        }\r\n    },\r\n    \"SequenceExpression\": {\r\n        handler(context: Context) {\r\n            let [collected] = context;\r\n            let expressions: Array<Node> = collected.expressions;\r\n            if (expressions[0] instanceof NODES.SequenceExpression) {\r\n                expressions[0].expressions.push(expressions[1]);\r\n                collected.expressions = expressions[0].expressions\r\n            }\r\n            return collected\r\n        },\r\n        validator(context: Context) {\r\n            let [, , , left, right] = context;\r\n            if (right - left === 2) {\r\n                return true;\r\n            }\r\n        },\r\n        precedence: 1,\r\n        collector: {\r\n            expressions: _Series(\r\n                EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN,\r\n                _NonCollecting(\"Punctuator ,\"),\r\n                _Option(EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN)\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst COMPUTED_PROPERTY_NAME_PATTERN = _Or(\"Punctuator []\").watch(\r\n    function (context: Context, token: Token) {\r\n        let [collected, parser] = context;\r\n        collected.computed = true;\r\n        collected.key = parser.parseExpression(context, token, PRIMARY_EXPRESSION_TREE);\r\n    }\r\n);\r\n\r\nconst PROPERTY_NAME_PATTERN = _Or(\r\n    _Or(\r\n        _Or(\"Identifier\", \"Keyword\", \"Literal\").watch(\r\n            function (context: Context, token: Token) {\r\n                if (token instanceof Grouping) {\r\n                    context[CONTEXT.parser].err(token);\r\n                }\r\n            }\r\n        ),\r\n        COMPUTED_PROPERTY_NAME_PATTERN\r\n    ).watch(\r\n        function (context: Context) {\r\n            let [collected, parser] = context;\r\n            let { key } = collected;\r\n            switch (key.type) {\r\n                case \"Keyword\":\r\n                    collected.key = parser.parseIdentifier(key);\r\n                    break;\r\n                case \"Literal\":\r\n                    if (key.regex) {\r\n                        parser.err(key);\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    )\r\n);\r\n\r\n\r\nconst MethodDefinitions = {\r\n    \"Success\": {\r\n        handler: join_content,\r\n        precedence: 0,\r\n        collector: [\r\n            {\r\n                success: _Or(_NonCollecting(MATCH_MARKS.BOUNDARY), \"Success\"),\r\n                content: \"MethodDefinition\",\r\n            }\r\n        ]\r\n    },\r\n    \"\": {\r\n        validator(context: Context) {\r\n            context[CONTEXT.start] = context[CONTEXT.end] = context[CONTEXT.right];\r\n            return [];\r\n        },\r\n        collector: {\r\n            _: _NonCapturing(MATCH_MARKS.BOUNDARY, \"Success\"),\r\n            __: \"Punctuator ;\"\r\n        }\r\n    },\r\n    MethodDefinition: {\r\n        handler(context: Context) {\r\n            let [collected] = context;\r\n            let { value } = collected;\r\n            collected.kind = value.kind;\r\n            delete value.kind;\r\n            collected.computed = value.computed;\r\n            delete value.computed;\r\n            collected.key = value.key;\r\n            delete value.key;\r\n            return collected;\r\n        },\r\n        collector: [\r\n            {\r\n                _prev: _NonCapturing(MATCH_MARKS.BOUNDARY, \"Success\"),\r\n                key: _Mark(\"\"),\r\n                static: _Mark(true),\r\n                computed: _Mark(false),\r\n                _static: _NonCollecting(\"Identifier static\"),\r\n                value: \"FunctionExpression\",\r\n                kind: _Mark(\"\"),\r\n            },\r\n            [\r\n                [\"static\", _Mark(false)],\r\n                [\"_static\", _Mark()]\r\n            ]\r\n        ]\r\n    },\r\n    FunctionExpression: {\r\n        handler(context: Context) {\r\n            let [collected] = context;\r\n            let kind = collected.kind;\r\n            let param_count: number;\r\n            if (typeof kind === \"object\") {\r\n                collected.kind = kind.name;\r\n                param_count = collected.kind === \"get\" ? 0 : 1;\r\n            }\r\n            parse_function_expression(context, param_count);\r\n            return collected;\r\n        },\r\n        collector: [\r\n            {\r\n                _prev: _NonCapturing(MATCH_MARKS.BOUNDARY, \"Success\"),\r\n                static: _Option(_NonCapturing(\"Identifier static\")),\r\n                async: _Or(\r\n                    _Series(_Mark(true), _NonCollecting(\"Identifier async\")),\r\n                    _Mark(false)\r\n                ),\r\n                generator: _Or(\r\n                    _Series(_Mark(true), _NonCollecting(\"Punctuator *\")),\r\n                    _Mark(false)\r\n                ),\r\n                kind: _Mark(\"method\"),\r\n                computed: _Mark(false),\r\n                key: PROPERTY_NAME_PATTERN,\r\n                id: _Mark(null),\r\n                params: \"Punctuator ()\",\r\n                expression: _Mark(false),\r\n                body: \"Punctuator {}\"\r\n            },\r\n            [\r\n                [\"generator\", _Mark(false)],\r\n                [\"kind\", \"Identifier get set\"]\r\n            ]\r\n        ]\r\n    }\r\n}\r\n\r\nconst Arguments = {\r\n    \"Success\": {\r\n        handler: join_content,\r\n        //precedence: 0,\r\n        collector: {\r\n            success: _Or(_NonCollecting(MATCH_MARKS.BOUNDARY), \"Success\"),\r\n            content: _Or(\"SpreadElement\", EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN),\r\n            _: _NonCollecting(\"Punctuator ,\", MATCH_MARKS.BOUNDARY),\r\n        }\r\n    }\r\n}\r\n\r\nconst Params = {\r\n    \"Success\": {\r\n        handler(context: Context) {\r\n            let [collected, parser] = context;\r\n            if (collected.content instanceof Grouping) {\r\n                parser.err(collected.content);\r\n            }\r\n            return join_content(context);\r\n        },\r\n        collector: [\r\n            {\r\n                success: _Or(_NonCollecting(MATCH_MARKS.BOUNDARY), \"Success\"),\r\n                content: \"AssignmentPattern\",\r\n                _: _NonCollecting(\"Punctuator ,\", MATCH_MARKS.BOUNDARY),\r\n            },\r\n            [\"content\", _Or(\"Identifier\").watch(validateBinding)],\r\n            [\"content\", _Or(\"ArrayPattern\", \"ObjectPattern\")],\r\n            [\r\n                [\"content\", \"RestElement\"],\r\n                [\"_\", _NonCollecting(MATCH_MARKS.BOUNDARY)]\r\n            ]\r\n        ]\r\n    }\r\n}\r\n\r\nconst ArrayElements = {\r\n    \"Success\": {\r\n        handler: join_content,\r\n        precedence: 0,\r\n        collector: [\r\n            {\r\n                success: _Or(_NonCollecting(MATCH_MARKS.BOUNDARY), \"Success\"),\r\n                content: _Or(\"SpreadElement\", EXPRESSION_OR_VALIDATE_STRICT_RESERVED_WORDS_PATTERN),\r\n                _: _NonCollecting(\"Punctuator ,\", MATCH_MARKS.BOUNDARY),\r\n            },\r\n            [\r\n                [\"content\", _Mark(null)],\r\n                [\"_\", _NonCollecting(\"Punctuator ,\")]\r\n            ]\r\n        ]\r\n    }\r\n}\r\n\r\nconst ObjectProperties = {\r\n    \"Success\": {\r\n        handler: join_content,\r\n        precedence: 0,\r\n        collector: [\r\n            {\r\n                success: _Or(_NonCollecting(MATCH_MARKS.BOUNDARY), \"Success\"),\r\n                content: \"Property\",\r\n            }\r\n        ]\r\n    },\r\n    \"Property\": {\r\n        handler(context: Context) {\r\n            let [collected] = context;\r\n            let { type, key, value, kind, computed, method, shorthand, range, loc } = collected;\r\n            let param_count = undefined;\r\n            switch (true) {\r\n                case typeof kind === \"object\":\r\n                    kind = kind.name;\r\n                    param_count = kind === \"get\" ? 0 : 1;\r\n                case method:\r\n                    value = context[CONTEXT.collected] = new NODES.FunctionExpression();\r\n                    value.async = !!collected.async;\r\n                    value.generator = !!collected.generator;\r\n                    value.id = null;\r\n                    value.params = collected.params;\r\n                    value.body = collected.body;\r\n                    value.expression = false;\r\n                    value.range = range;\r\n                    value.loc = loc;\r\n                    value = parse_function_expression(context, param_count);\r\n                    break;\r\n            }\r\n            return { type, key, value: value || key, kind, computed, method, shorthand, range, loc };\r\n        },\r\n        collector: [\r\n            {\r\n                _prev: _NonCapturing(MATCH_MARKS.BOUNDARY, \"Success\"),\r\n                key: PROPERTY_NAME_PATTERN,//\"TemplateLiteral\"\r\n                value: _Series(_NonCollecting(\"Punctuator :\"), EXPRESSION_OR_VALIDATE_STRICT_RESERVED_WORDS_PATTERN),\r\n                _next: _NonCollecting(_Or(MATCH_MARKS.BOUNDARY, \"Punctuator ,\")),\r\n                kind: _Mark(\"init\"),\r\n                computed: _Mark(false),\r\n                method: _Mark(false),\r\n                shorthand: _Mark(false),\r\n            },\r\n            [\r\n                [\"key\", \"Identifier\"],\r\n                [\"value\", _Mark(null)],\r\n                [\"shorthand\", _Mark(true)]\r\n            ],\r\n            {\r\n                _prev: _NonCapturing(MATCH_MARKS.BOUNDARY, \"Success\"),\r\n                async: _Option(\"Identifier async\"),\r\n                generator: _Option(\"Punctuator *\"),\r\n                kind: _Mark(\"init\"),\r\n                key: PROPERTY_NAME_PATTERN,\r\n                params: \"Punctuator ()\",\r\n                body: \"Punctuator {}\",\r\n                _next: _NonCollecting(_Or(MATCH_MARKS.BOUNDARY, \"Punctuator ,\")),\r\n                computed: _Mark(false),\r\n                method: _Mark(true),\r\n                shorthand: _Mark(false),\r\n            },\r\n            [\r\n                [\"async\", _Mark(false)],\r\n                [\"generator\", _Mark(false)],\r\n                [\"kind\", \"Identifier get set\"],\r\n                [\"method\", _Mark(false)]\r\n            ]\r\n        ]\r\n    }\r\n}\r\n\r\n\r\nlet PRIMARY_EXPRESSION_TREE = createMatchTree(\r\n    [Expressions, Patterns],\r\n    undefined,\r\n    [\"SequenceExpression\"]\r\n);\r\nlet METHOD_DEFINITIONS_TREE = createMatchTree(\r\n    MethodDefinitions, PRIMARY_EXPRESSION_TREE\r\n);\r\nlet ARRAY_ELEMENTS_TREE = createMatchTree(ArrayElements, PRIMARY_EXPRESSION_TREE);\r\nlet OBJECT_PROPERTIES_TREE = createMatchTree(\r\n    ObjectProperties,\r\n    PRIMARY_EXPRESSION_TREE\r\n);\r\n\r\nconst PARAMS_TREE = createMatchTree(\r\n    Params,\r\n    PRIMARY_EXPRESSION_TREE\r\n);\r\nconst ARGUMENTS_TREE = createMatchTree(\r\n    Arguments,\r\n    PRIMARY_EXPRESSION_TREE\r\n);\r\n\r\nlet EXPRESSION_TREE = createMatchTree(\r\n    { SequenceExpression: Expressions.SequenceExpression }\r\n    , PRIMARY_EXPRESSION_TREE\r\n)\r\n\r\nfor (const type_name in Expressions) {\r\n    if (type_name) {\r\n        TYPE_ALIAS[type_name] = [type_name, \"[Expression]\"];\r\n    }\r\n}\r\nexport {\r\n    Expressions,\r\n    EXPRESSION_TREE,\r\n    PRIMARY_EXPRESSION_TREE,\r\n    parseArrayPattern,\r\n    parseObjectPattern,\r\n    parse_params,\r\n    parse_arguments,\r\n};\r\n\r\nfunction parse_function_expression(context: Context, param_count?: number) {\r\n    let [collected, parser] = context;\r\n    let { async, generator, params, body } = collected;\r\n    collected.params = parse_params(context, params.content);\r\n    if (param_count !== undefined && collected.params.length !== param_count) {\r\n        parser.err(params);\r\n    }\r\n    let body_context = _Context(parser, body.content);\r\n    body_context[CONTEXT.inFunctionBody] = body.content;\r\n    body_context[CONTEXT.strict] = context[CONTEXT.strict];\r\n    body_context[CONTEXT.allowYield] = generator;\r\n    body_context[CONTEXT.allowAwait] = async;\r\n    if (generator && async) {\r\n        parser.err(collected);\r\n    }\r\n    collected.body = { type: \"BlockStatement\", body: parser.parseBlock(body_context) };\r\n    return collected;\r\n}\r\nfunction parse_arguments(context: Context, tokens: Array<Token>) {\r\n    if (tokens.length) {\r\n        let parser = context[CONTEXT.parser];\r\n        let restore = context.store(\r\n            CONTEXT.tokens, tokens,\r\n            CONTEXT.spreadElement, tokens\r\n        );\r\n        parser.parseCustom(ARGUMENTS_TREE, context);\r\n        context.restore(restore);\r\n        return extract_success(parser, tokens);\r\n    }\r\n    return [];\r\n}\r\nfunction parse_params(context: Context, tokens: Array<Token>) {//\r\n    if (tokens.length) {\r\n        let parser = context[CONTEXT.parser];\r\n        let restore = context.store(\r\n            CONTEXT.tokens, tokens,\r\n            CONTEXT.bindingElement, tokens\r\n        );\r\n        context[CONTEXT.strict] && context.wrap(CONTEXT.bindingSet, []);\r\n        parser.parseCustom(PARAMS_TREE, context);\r\n        context.restore(restore);\r\n        return extract_success(parser, tokens);\r\n    }\r\n    return [];\r\n}\r\n","import { Token } from './interfaces'\r\nconst IdentifierStart = /[\\x24\\x5f\\x41-\\x5a\\x61-\\x7a]|[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEF\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7C6\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB67\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD23\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF45\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD44\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC5F\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDEB8\\uDF00-\\uDF1A]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCDF\\uDCFF\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDEE0-\\uDEF2]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE7F\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD4E\\uDEC0-\\uDEEB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43\\uDD4B]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]/;\r\nconst IdentifierPart = /[\\x24\\x5f\\x41-\\x5a\\x61-\\x7a\\x30-\\x39]|[\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u07FD\\u0800-\\u082D\\u0840-\\u085B\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D3-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u09FC\\u09FE\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9-\\u0AFF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D00-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CD0-\\u1CD2\\u1CD4-\\u1CFA\\u1D00-\\u1DF9\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEF\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7C6\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB67\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD27\\uDD30-\\uDD39\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF50\\uDFE0-\\uDFF6]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD44-\\uDD46\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDC9-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3B-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC5E\\uDC5F\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDC00-\\uDC3A\\uDCA0-\\uDCE9\\uDCFF\\uDDA0-\\uDDA7\\uDDAA-\\uDDD7\\uDDDA-\\uDDE1\\uDDE3\\uDDE4\\uDE00-\\uDE3E\\uDE47\\uDE50-\\uDE99\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC59\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD36\\uDD3A\\uDD3C\\uDD3D\\uDD3F-\\uDD47\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD8E\\uDD90\\uDD91\\uDD93-\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF6]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE7F\\uDF00-\\uDF4A\\uDF4F-\\uDF87\\uDF8F-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A\\uDD00-\\uDD2C\\uDD30-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDEC0-\\uDEF9]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6\\uDD00-\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/;\r\n\r\nexport default class {\r\n    public input: string;\r\n    public index: number;\r\n    public end: number;\r\n    public _bak: any;\r\n    public _scope: any;\r\n    private testCodePoint(regexp: RegExp) {\r\n        if (\r\n            (this.input.charCodeAt(this.index) & 0xfc00) === 0xd800\r\n            && (this.input.charCodeAt(this.index + 1) & 0xfc00) === 0xdc00\r\n        ) {\r\n            this._bak = this.input[this.index] + this.input[this.index + 1];\r\n            return regexp.test(this._bak) ? 2 : 0;\r\n        } else {\r\n            return regexp.test(this.input[this.index]) ? 1 : 0;\r\n        }\r\n    }\r\n    testUnicodeEscape(regexp: RegExp) {\r\n        let index = this.index + 1, code = 0;\r\n        if (this.input[index++] === \"u\") {\r\n            let cp = 0;\r\n            if (this.input[index] === \"{\") {\r\n                while (\r\n                    (code = this.hexValue(this.input.charCodeAt(++index))) >= 0\r\n                ) {\r\n                    cp = cp * 16 + code;\r\n                }\r\n                if (this.input[index++] !== \"}\") {/* || index < this.index + 5*/\r\n                    return 0;\r\n                }\r\n            } else {\r\n                let len = 4;\r\n                while (len--) {\r\n                    code = this.hexValue(this.input.charCodeAt(index++));\r\n                    if (code >= 0) {\r\n                        cp = cp * 16 + code;\r\n                    } else {\r\n                        return 0;\r\n                    }\r\n                }\r\n            }\r\n            return regexp.test(this.fromCodePoint(cp))\r\n                ? index - this.index\r\n                : -(index - this.index);\r\n        }\r\n        return 0;\r\n    }\r\n    scanHex(length: number = this.end): [number, number] {\r\n        let value = 0, code = 0, len = length;\r\n        while (len) {\r\n            code = this.hexValue(this.input.charCodeAt(this.index));\r\n            if (code >= 0) {\r\n                len--;\r\n                value = value * 16 + code;\r\n            } else {\r\n                break;\r\n            }\r\n            this.index++;\r\n        }\r\n        return [value, length - len];\r\n    }\r\n    hexValue(ch: number) {\r\n        return ch >= 0x30 && ch <= 0x39 ? ch - 0x30 :\r\n            ch >= 0x41 && ch <= 0x46 ? ch - 0x41 + 10 :\r\n                ch >= 0x61 && ch <= 0x66 ? ch - 0x61 + 10 : -1;\r\n    }\r\n    decimalValue(ch: number) {\r\n        return ch >= 0x30 && ch <= 0x39 ? ch - 0x30 : -1;\r\n    }\r\n    octalValue(ch: number) {\r\n        return ch >= 0x30 && ch <= 0x37 ? ch - 0x30 : -1;\r\n    }\r\n    binaryValue(ch: number) {\r\n        return ch === 0x30 || ch == 0x31 ? ch - 0x30 : -1;\r\n    }\r\n    //https://github.com/jquery/esprima/blob/master/src/character.ts\r\n    isWhiteSpace(ch: number) {\r\n        return (ch === 0x20) || (ch === 0x09) || (ch === 0x0B) || (ch === 0x0C) || (ch === 0xA0) ||\r\n            (ch >= 0x1680 && [0x1680, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(ch) >= 0);\r\n        /*return /^\\x20|\\x09|\\x0B|\\x0C|\\xA0|\\xfeff$/.test(char);*/\r\n    }\r\n    isLineTerminator(ch: number) {\r\n        return (ch === 0x0A) || (ch === 0x0D) || (ch === 0x2028) || (ch === 0x2029);\r\n        /*return /^\\x0A|\\x0D|\\x2028|\\x2029$/.test(char);*/\r\n    }\r\n    fromCodePoint(cp: number) {\r\n        return this._bak = cp < 0x10000\r\n            ? String.fromCharCode(cp)\r\n            : String.fromCharCode(0xd800 + (cp - 0x10000) >> 10)\r\n            + String.fromCharCode(0xdc00 + (cp - 0x10000) & 1023);\r\n    }\r\n    inIdentifierStart() {\r\n        let ch = this.input.charCodeAt(this.index);\r\n        return (ch === 0x24) || (ch === 0x5F) ||\r\n            (ch >= 0x41 && ch <= 0x5A) ||\r\n            (ch >= 0x61 && ch <= 0x7A) ? 1 : (\r\n                ch >= 0x80\r\n                    ? this.testCodePoint(IdentifierStart)\r\n                    : (ch === 0x5c ? this.testUnicodeEscape(IdentifierStart) : 0)\r\n            );\r\n        /*return /^[_$a-zA-Z\\u0080-\\uffffff]$/.test(char);*/\r\n    }\r\n    inIdentifierPart() {\r\n        let ch = this.input.charCodeAt(this.index);\r\n        return (ch === 0x24) || (ch === 0x5F) ||\r\n            (ch >= 0x41 && ch <= 0x5A) ||\r\n            (ch >= 0x61 && ch <= 0x7A) ||\r\n            (ch >= 0x30 && ch <= 0x39) ? 1 : (\r\n                ch >= 0x80\r\n                    ? this.testCodePoint(IdentifierPart)\r\n                    : (ch === 0x5c ? this.testUnicodeEscape(IdentifierPart) : 0)\r\n            );\r\n        /*return /^[\\w$\\u0080-\\uffffff]$/.test(char);*/\r\n    }\r\n    isFollowingAnExpression(token?: Token) {\r\n        return token ? [\r\n            'in', 'typeof', 'instanceof', 'new',\r\n            'return', 'case', 'delete', 'throw', 'void',\r\n            // assignment operators\r\n            '=', '+=', '-=', '*=', '**=', '/=', '%=', '<<=', '>>=', '>>>=',\r\n            '&=', '|=', '^=', ',',\r\n            // binary/unary operators\r\n            '+', '-', '*', '**', '/', '%', '++', '--', '<<', '>>', '>>>', '&',\r\n            '|', '^', '!', '~', '&&', '||', '?', ':', '===', '==', '>=',\r\n            '<=', '<', '>', '!=', '!=='\r\n        ].indexOf(token.value) >= 0 : false;\r\n    }\r\n}","\r\n\r\nimport {\r\n    PRIOR_REGEXP_PUNCTUATORS_TREE,\r\n    PUNCTUATORS_TREE,\r\n    NUMERIC_KEYWORD_MAP,\r\n    TOKEN_TYPE_MAP, TOKEN_TYPES\r\n} from \"./lexical/index\";\r\nimport Character from './character'\r\nimport {\r\n    Position, SourceLocation, Token, SearchTree, NUMERIC_TYPE\r\n} from \"./interfaces\";\r\n\r\n\r\nexport default class extends Character {\r\n    constructor(options?: Record<string, any>) {\r\n        super()\r\n        for (const key in options) {\r\n            this[key] = options[key];\r\n        }\r\n    }\r\n    public token_types = TOKEN_TYPES;\r\n    public token_hooks: Record<string, (token: Token) => Token> = {};\r\n    public line_number: number;\r\n    public line_start: number;\r\n    public save_comments: boolean = true;\r\n    public parent_token: Token;\r\n    public error_logs: Array<any>;\r\n    err(...args: any) {\r\n        //debugger;\r\n        this.error_logs.push.apply(this.error_logs, arguments);\r\n    }\r\n    tokenize(input: string): Array<Token> {\r\n        this.line_number = 0;\r\n        this.line_start = 0;\r\n        this.index = 0;\r\n        this.input = input;\r\n        this.end = this.input.length;\r\n        this.error_logs = [];\r\n        return this.scan(null, true);\r\n    }\r\n    getToken(\r\n        type: string | number,\r\n        range: [number, number],\r\n        value: any = this.input.slice(range[0], range[1]),\r\n        start: Position = {\r\n            line: this.line_number,\r\n            column: range[0] - this.line_start\r\n        },\r\n        end: Position = {\r\n            line: this.line_number,\r\n            column: range[1] - this.line_start\r\n        },\r\n    ): Token {\r\n        return {\r\n            type: type,\r\n            value,\r\n            range,\r\n            loc: {\r\n                start, end\r\n            }\r\n        };\r\n\r\n    }\r\n    private match(node: SearchTree) {\r\n        let start = this.index, end = this.index;\r\n        let prev_node: Token;\r\n        do {\r\n            prev_node = node;\r\n            node = prev_node[this.input[end++]];\r\n        } while (node)\r\n        if (prev_node.__) {\r\n            let target = prev_node.__;\r\n            this.index = end - 1;\r\n            if (target.scanner) {\r\n                return target.scanner(this);\r\n            } else {\r\n                let token = this.getToken(\r\n                    this.token_types[target.type],\r\n                    [start, end - 1],\r\n                    target.value\r\n                );\r\n                let bound = target.keys[1];\r\n                if (bound) {\r\n                    token.content = this.scan(token/*target.type*/);\r\n                    if (this.input.slice(this.index, this.index + bound.length) === bound) {\r\n                        this.index += bound.length;\r\n                    } else {\r\n                        this.err(token);\r\n                        token.error = \"error\";\r\n                    }\r\n                    token.range[1] = this.index;\r\n                    token.loc.end.line = this.line_number;\r\n                    token.loc.end.column = this.index - this.line_start;\r\n                }\r\n                return token;\r\n            }\r\n        }\r\n    }\r\n    private nextIdentifier(tokens: Array<Token>): Token | void {\r\n        let length = this.inIdentifierStart();\r\n        let token: Token;\r\n        if (length > 0) {\r\n            let start = this.index;\r\n            let str = \"\";\r\n            do {\r\n                str += length === 1 ? this.input[this.index] : this._bak;\r\n                this.index += length;\r\n                length = this.inIdentifierPart();\r\n            } while (length > 0)\r\n            let type = TOKEN_TYPE_MAP[\" \" + str];\r\n            token = this.getToken(\r\n                this.token_types[type || \"Identifier\"],\r\n                [start, this.index]\r\n            );\r\n            this._bak = str;\r\n            if (type && str.length !== this.index - start) {\r\n                this.err(token);\r\n            }\r\n        }\r\n        if (length < 0) {\r\n            this.err(this.getToken(\"error\", [this.index, this.index -= length]));\r\n        }\r\n        return token;\r\n    }\r\n    private nextRegexp(tokens: Array<Token>) {\r\n        let prev_token = tokens[tokens.length - 1];\r\n        let match_tree = PRIOR_REGEXP_PUNCTUATORS_TREE;\r\n        if (prev_token) {\r\n            if (prev_token.type === this.token_types.Punctuator) {\r\n                //https://github.com/jquery/esprima/blob/master/src/tokenizer.ts\r\n                switch (prev_token.value) {\r\n                    case \"[]\":\r\n                        match_tree = PUNCTUATORS_TREE;\r\n                        break;\r\n                    case \"()\":\r\n                        let keyword_token = tokens[tokens.length - 2];\r\n                        if (\r\n                            !keyword_token\r\n                            || [\"if\", \"while\", \"for\", \"with\"].indexOf(keyword_token.value) < 0\r\n                        ) {\r\n                            match_tree = PUNCTUATORS_TREE;\r\n                        }\r\n                        break;\r\n                    case \"{}\":\r\n                        let length = tokens.length;\r\n                        for (\r\n                            let checks of [\r\n                                [\r\n                                    [4, \"function\"],\r\n                                    [\r\n                                        5,\r\n                                        \"async\",\r\n                                        function () {\r\n                                            return tokens[length - 4].loc.start.line\r\n                                                === tokens[length - 5].loc.end.line;\r\n                                        }\r\n                                    ]\r\n                                ],\r\n                                [\r\n                                    [5, \"function\"],\r\n                                    [\r\n                                        6,\r\n                                        \"async\",\r\n                                        function () {\r\n                                            return tokens[length - 5].loc.start.line\r\n                                                === tokens[length - 6].loc.end.line;\r\n                                        }\r\n                                    ]\r\n                                ],\r\n                                [[2, \"class\"]],\r\n                                [[3, \"class\"]],\r\n                                [[5, \"class\"]],\r\n                            ] as Array<Array<[number, string, () => boolean | undefined]>>\r\n                        ) {\r\n                            let index: number;\r\n                            let target_token: Token;\r\n                            for (let check of checks) {\r\n                                target_token = tokens[length - check[0]];\r\n                                if (\r\n                                    target_token\r\n                                    && target_token.value === check[1]\r\n                                    && (!check[2] || check[2]())\r\n                                ) {\r\n                                    index = check[0];\r\n                                } else {\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (index !== undefined) {\r\n                                if (\r\n                                    this.parent_token\r\n                                    && [\"()\", \"[]\", \"${}\"].indexOf(this.parent_token.value) >= 0\r\n                                    || this.isFollowingAnExpression(tokens[length - index - 1])\r\n                                ) {\r\n                                    match_tree = PUNCTUATORS_TREE\r\n                                }\r\n                                break;\r\n                            }\r\n                        }\r\n                        break;\r\n\r\n                }\r\n            } else if (\r\n                prev_token.type !== this.token_types.Keyword//&& prev_token.value !== \"let\"\r\n            ) {\r\n                match_tree = PUNCTUATORS_TREE;\r\n            }\r\n        }\r\n        return this.match(match_tree);\r\n    }\r\n    private nextPunctuator(tokens: Array<Token>): Token | void {\r\n        return this.input[this.index] !== \"/\"\r\n            ? this.match(PUNCTUATORS_TREE)\r\n            : this.nextRegexp(tokens);\r\n    }\r\n\r\n    private nextNumeric(tokens: Array<Token>): Token | void {\r\n        let start = this.index;\r\n        let ch = this.input.charCodeAt(this.index);\r\n        let number: number;\r\n        let flags = NUMERIC_TYPE.DECIMAL;\r\n        let _get_token = () => {\r\n            this._bak = flags & NUMERIC_TYPE.OCTAL ? (flags & ~NUMERIC_TYPE.DECIMAL) : flags;\r\n            return this.getToken(this.token_types.Numeric, [start, this.index]);\r\n        }\r\n        let _get_error = (message: string = \"Invalid or unexpected token\") => {\r\n            let error = _get_token();\r\n            error.error = message;\r\n            error.input = this.input.slice(start, this.index + 1);\r\n            this.err(error);\r\n            return error;\r\n        }\r\n        let decimalValue = this.decimalValue;\r\n        switch (ch) {\r\n            case 0x2e://\".\"\r\n                if (decimalValue(this.input.charCodeAt(this.index + 1)) >= 0) {\r\n                    this.index += 1;\r\n                    flags |= NUMERIC_TYPE.FLOAT;\r\n                    break;\r\n                } else {\r\n                    return;\r\n                }\r\n            case 0x30://\"0\"\r\n                flags = NUMERIC_KEYWORD_MAP[this.input[++this.index]];\r\n                if (!flags) {\r\n                    number = decimalValue(this.input.charCodeAt(this.index));\r\n                    if (number >= 0) {\r\n                        flags = NUMERIC_TYPE.DECIMAL;\r\n                        number < 8 && (flags |= NUMERIC_TYPE.OCTAL);\r\n                    } else if (!this.inIdentifierStart()) {\r\n                        flags = NUMERIC_TYPE.DECIMAL;\r\n                        return _get_token();\r\n                    } else {\r\n                        return _get_error();\r\n                    }\r\n                }\r\n                break;\r\n            default:\r\n                if (decimalValue(ch) < 0) {\r\n                    return;\r\n                }\r\n        }\r\n        if (flags & NUMERIC_TYPE.DECIMAL) {\r\n            while ((ch = this.input.charCodeAt(++this.index))) {\r\n                number = decimalValue(ch)\r\n                if (number >= 0) {\r\n                    number < 8 || (flags &= ~NUMERIC_TYPE.OCTAL);\r\n                    continue;\r\n                }\r\n                switch (ch) {\r\n                    case 0x65://\"e\"\r\n                    case 0x45://\"E\"\r\n                        if (!(flags & (NUMERIC_TYPE.E | NUMERIC_TYPE.OCTAL))) {\r\n                            flags |= NUMERIC_TYPE.E;\r\n                            ch = this.input.charCodeAt(this.index + 1);\r\n                            if (ch === 0x2b || ch === 0x2d) {//+ -\r\n                                this.index += 1;\r\n                            }\r\n                            continue;\r\n                        } else {\r\n                            return _get_error();\r\n                        }\r\n                    case 0x2e://\".\"\r\n                        if (!(flags & (NUMERIC_TYPE.FLOAT | NUMERIC_TYPE.E | NUMERIC_TYPE.OCTAL))) {\r\n                            flags |= NUMERIC_TYPE.FLOAT;\r\n                            continue;\r\n                        }\r\n                    default:\r\n                        return this.inIdentifierStart()\r\n                            ? _get_error()\r\n                            : _get_token();\r\n                }\r\n            }\r\n            return _get_token();\r\n        } else {\r\n            let test = flags & NUMERIC_TYPE.HEX\r\n                ? this.hexValue : (\r\n                    flags & NUMERIC_TYPE.BINARY\r\n                        ? this.binaryValue\r\n                        : this.octalValue\r\n                );\r\n            while (test(this.input.charCodeAt(++this.index)) >= 0);\r\n            return this.index > start + 3 && !this.inIdentifierStart()\r\n                ? _get_token()\r\n                : _get_error();\r\n        }\r\n    }\r\n    private nextToken(tokens: Array<Token>): Token | void {\r\n        for (let cp: number; this.index < this.end; this.index++) {\r\n            cp = this.input.charCodeAt(this.index);\r\n            switch (true) {\r\n                case this.isWhiteSpace(cp):\r\n                    break;\r\n                case this.isLineTerminator(cp):\r\n                    this.line_number++;\r\n                    this.line_start = this.index + 1;\r\n                    break;\r\n                default:\r\n                    return this.nextIdentifier(tokens) ||\r\n                        this.nextNumeric(tokens) ||\r\n                        this.nextPunctuator(tokens);\r\n            }\r\n        }\r\n    }\r\n    scan(parent_token: Token, full_match = false) {\r\n        let parent_token_bak = this.parent_token;\r\n        this.parent_token = parent_token;\r\n        let content = [];\r\n        let proxy_hook: (token: Token, tokenizer: this) => Token;\r\n        let token: Token | void;\r\n        while (this.index < this.end) {\r\n            token = this.nextToken(content);\r\n            if (token) {\r\n                proxy_hook = this.token_hooks[token.type];\r\n                proxy_hook && (token = proxy_hook(token, this));\r\n                if (token.type !== this.token_types.Comments) {\r\n                    content.push(token);\r\n                } else {\r\n                    this.save_comments && content.push(token);\r\n                }\r\n            } else if (!full_match) {\r\n                break;\r\n            } else if (this.index < this.end) {\r\n                //debugger;\r\n                this.err(this.getToken(\"error\", [this.index, ++this.index]))\r\n            }\r\n        }\r\n        this.parent_token = parent_token_bak;\r\n        return content;\r\n    }\r\n}\r\n\r\n\r\n\r\n","import {\r\n    Token, NUMERIC_TYPE, MATCH_STATUS\r\n} from '../interfaces';\r\n\r\nimport Tokenizer from '../tokenizer'\r\nimport { search_scan, escape_scan, createSearchTree } from './head'\r\n\r\nlet TOKEN_TYPES: Record<string, string | number> = {\r\n    Identifier: \"Identifier\",\r\n    Keyword: \"Keyword\",\r\n    String: \"String\",\r\n    Boolean: \"Boolean\",\r\n    Numeric: \"Numeric\",\r\n    Punctuator: \"Punctuator\",\r\n    RegularExpression: \"RegularExpression\",\r\n    Template: \"Template\",\r\n    TemplateElement: \"TemplateElement\",\r\n    Comments: \"Comments\",\r\n    Null: \"Null\"\r\n};\r\n\r\n//const IS_RADIX = NUMERIC_TYPE.BINARY | NUMERIC_TYPE.OCTAL | NUMERIC_TYPE.HEX;\r\nconst NUMERIC_KEYWORD_MAP = {\r\n    \".\": NUMERIC_TYPE.FLOAT | NUMERIC_TYPE.DECIMAL,\r\n    \"x\": NUMERIC_TYPE.HEX,\r\n    \"b\": NUMERIC_TYPE.BINARY,\r\n    \"o\": NUMERIC_TYPE.OCTAL,\r\n\r\n    \"X\": NUMERIC_TYPE.HEX,\r\n    \"B\": NUMERIC_TYPE.BINARY,\r\n    \"O\": NUMERIC_TYPE.OCTAL,\r\n};\r\n\r\nlet TOKEN_TYPE_SET = [\r\n    [\r\n        \"Keyword\",\r\n        [\r\n            \"void\",\r\n            \"delete\",\r\n            \"new\",\r\n            \"class\", \"extends\",\r\n            \"function\",\r\n            \"throw\",\r\n            \"with\",\r\n            \"yield\",\r\n            \"in\", \"instanceof\", \"typeof\",\r\n            \"this\", \"super\",\r\n            \"var\", \"const\",// \"let\",\r\n            \"break\", \"continue\", \"return\",\r\n            \"if\", \"else\",\r\n            \"switch\", \"case\", \"default\",\r\n            \"try\", \"catch\", \"finally\",\r\n            \"do\", \"while\", \"for\",\r\n            \"await\",/*\"async\",*/\r\n            \"import\", \"export\",\r\n            \"debugger\",\r\n\r\n            \"enum\"//用于错误检测\r\n        ]\r\n    ],\r\n    [\"Identifier\", [\"let\", \"async\"]],//使 UnicodeEscape 的情况能被检测到报错\r\n    [\"Boolean\", [\"true\", \"false\"]],\r\n    [\"Null\", [\"null\"]]\r\n];\r\n\r\nconst TOKEN_TYPE_MAP = TOKEN_TYPE_SET.reduce(\r\n    (map, [type, id_set]) => {\r\n        for (let id of id_set) {\r\n            map[\" \" + id] = type;\r\n        }\r\n        return map;\r\n    }, {}\r\n);\r\n\r\nlet octal_escape = {\r\n    _state: MATCH_STATUS.ATTACH,\r\n    _attach(tokenizer: Tokenizer, scope: Record<string, any>) {\r\n        let code = tokenizer.octalValue(tokenizer.input.charCodeAt(tokenizer.index - 1));\r\n        let value = 0;\r\n        code && (scope.octal = true);\r\n        let len = code <= 3 ? 2 : 1;\r\n        while (true) {\r\n            value = value * 8 + code;\r\n            code = tokenizer.octalValue(tokenizer.input.charCodeAt(tokenizer.index));\r\n            if (code < 0 || --len < 0) {\r\n                break;\r\n            }\r\n            scope.octal = true;\r\n            tokenizer.index += 1;\r\n        }\r\n        return String.fromCharCode(value);\r\n    }\r\n};\r\nlet octal_escape_tree = {\r\n    \"\\\\0\": octal_escape,\r\n    \"\\\\1\": octal_escape,\r\n    \"\\\\2\": octal_escape,\r\n    \"\\\\3\": octal_escape,\r\n    \"\\\\4\": octal_escape,\r\n    \"\\\\5\": octal_escape,\r\n    \"\\\\6\": octal_escape,\r\n    \"\\\\7\": octal_escape,\r\n}\r\n\r\nlet strbase_match_tree = {\r\n    \"\\\\\\n\": { _str: \"\" },\r\n    \"\\\\n\": { _str: \"\\n\" },\r\n    \"\\\\r\": { _str: \"\\r\" },\r\n    \"\\\\t\": { _str: \"\\t\" },\r\n    \"\\\\b\": { _str: \"\\b\" },\r\n    \"\\\\f\": { _str: \"\\f\" },\r\n    \"\\\\v\": { _str: \"\\v\" },\r\n    \"\\\\u\": {\r\n        _state: MATCH_STATUS.ATTACH,\r\n        _attach(tokenizer: Tokenizer) {\r\n            if (tokenizer.input[tokenizer.index] === \"{\") {\r\n                tokenizer.index++;\r\n                let [code] = tokenizer.scanHex();\r\n                if (tokenizer.input[tokenizer.index] === \"}\") {\r\n                    tokenizer.index++;\r\n                    if (code <= 0x10ffff) {\r\n                        return String.fromCharCode(code);\r\n                    }\r\n                }\r\n            } else {\r\n                let [code, len] = tokenizer.scanHex(4);\r\n                if (len === 4) {\r\n                    return String.fromCharCode(code);\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    },\r\n    \"\\\\x\": {\r\n        _state: MATCH_STATUS.ATTACH,\r\n        _attach(tokenizer: Tokenizer) {\r\n            let [code, len] = tokenizer.scanHex(2);\r\n            if (len === 2) {\r\n                return String.fromCharCode(code);\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n};\r\n\r\nlet not_allow_octal_escape = {\r\n    _state: MATCH_STATUS.ERROR,\r\n    _message: \"Octal escape sequences are not allowed in template strings\"\r\n}\r\n\r\nconst PUNCTUATORS = [\r\n    {\r\n        keys: [`\"`, `\"`], type: \"String\",\r\n        match_tree: {\r\n            '\"': {\r\n                _state: MATCH_STATUS.END\r\n            },\r\n            \"\\n\": {\r\n                _state: MATCH_STATUS.ERROR,\r\n                _message: \"\"\r\n            },\r\n            ...strbase_match_tree,\r\n            ...octal_escape_tree\r\n        },\r\n        //scanner:escape_scan\r\n        escape_scan,\r\n        scanner(tokenizer: Tokenizer) {\r\n            return this.escape_scan(tokenizer, {});\r\n        }\r\n    },\r\n    {\r\n        keys: [`'`, `'`], type: \"String\",\r\n        match_tree: {\r\n            \"'\": {\r\n                _state: MATCH_STATUS.END\r\n            },\r\n            \"\\n\": {\r\n                _state: MATCH_STATUS.ERROR,\r\n                _message: \"\"\r\n            },\r\n            ...strbase_match_tree,\r\n            ...octal_escape_tree\r\n        },\r\n        //scanner:escape_scan\r\n        escape_scan,\r\n        scanner(tokenizer: Tokenizer) {\r\n            return this.escape_scan(tokenizer, {});\r\n        }\r\n    },\r\n    {\r\n        keys: [\"`\", \"`\"], type: \"Template\",\r\n        appendTemplateElement(\r\n            tokenizer: Tokenizer,\r\n            scope: Record<string, any>,\r\n            range: [number, number],\r\n            tail = false\r\n        ) {\r\n            let token = tokenizer.getToken(\r\n                \"TemplateElement\",\r\n                range,\r\n                {\r\n                    raw: tokenizer.input.slice(range[0], range[1]),\r\n                    cooked: tokenizer._bak\r\n                },\r\n                {\r\n                    line: scope.prev_line,\r\n                    column: scope.prev_solumn\r\n                }\r\n            );\r\n            token.tail = tail;\r\n            scope.content.push(token);\r\n        },\r\n        match_tree: {\r\n            \"\\\\0\": { _str: \"\\0\" },\r\n            \"\\\\1\": not_allow_octal_escape,\r\n            \"\\\\2\": not_allow_octal_escape,\r\n            \"\\\\3\": not_allow_octal_escape,\r\n            \"\\\\4\": not_allow_octal_escape,\r\n            \"\\\\5\": not_allow_octal_escape,\r\n            \"\\\\6\": not_allow_octal_escape,\r\n            \"\\\\7\": not_allow_octal_escape,\r\n            \"`\": {\r\n                _state: MATCH_STATUS.NEXT,\r\n                _next(tokenizer: Tokenizer, scope: Record<string, any>, start: number, error?: string) {\r\n                    this.appendTemplateElement(tokenizer, scope, [start, tokenizer.index], true);\r\n                    let token = tokenizer.getToken(\r\n                        this.type,\r\n                        [scope.start, tokenizer.index],\r\n                        this.value,\r\n                        {\r\n                            line: scope.start_line,\r\n                            column: scope.start_column\r\n                        }\r\n                    );\r\n                    token.content = scope.content;\r\n                    return token;\r\n                }\r\n            },\r\n            \"$\": {\r\n                \"{\": {\r\n                    _state: MATCH_STATUS.NEXT,\r\n                    _next(tokenizer: Tokenizer, scope: Record<string, any>, start: number, error) {\r\n                        if (start < tokenizer.index - 2) {\r\n                            this.appendTemplateElement(tokenizer, scope, [start, tokenizer.index - 2]);\r\n                        }\r\n                        start = tokenizer.index - 2;\r\n                        let token = tokenizer.getToken(\r\n                            tokenizer.token_types.Punctuator,\r\n                            [start, tokenizer.index],\r\n                            \"${}\",\r\n                            {\r\n                                line: tokenizer.line_number,\r\n                                column: start - tokenizer.line_start\r\n                            }\r\n                        );\r\n                        let content = tokenizer.scan(token);\r\n                        if (tokenizer.input[tokenizer.index] === \"}\") {\r\n                            tokenizer.index += 1;\r\n                            scope.prev_line = tokenizer.line_number;\r\n                            scope.prev_column = tokenizer.index - tokenizer.line_start;\r\n                            token.range[1] = tokenizer.index;\r\n                            token.loc.end.line = scope.prev_line;\r\n                            token.loc.end.column = scope.prev_column;\r\n                            token.content = content;\r\n                            scope.content.push(token);\r\n                            return this.escape_scan(tokenizer, scope, tokenizer.index);\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            ...strbase_match_tree\r\n        },\r\n        escape_scan,\r\n        scanner(tokenizer: Tokenizer) {\r\n            let start = tokenizer.index - 1;\r\n            let start_line = tokenizer.line_number;\r\n            let start_column = start - tokenizer.line_start;\r\n            return this.escape_scan(\r\n                tokenizer,\r\n                {\r\n                    content: [],\r\n                    start,\r\n                    start_line,\r\n                    start_column,\r\n                    prev_line: start_line,\r\n                    prev_column: start_column\r\n                }\r\n            );\r\n        }\r\n    },\r\n    { keys: ['/*', '*/'], type: \"Comments\", scanner: search_scan },\r\n    { keys: ['//', '\\n'], type: \"Comments\", scanner: search_scan },\r\n\r\n    [\"(\", \")\"], [\"[\", \"]\"], [\"{\", \"}\"],\r\n    ';', '.', '?.',\r\n    '++', '--', '~', '!',\r\n    '**', '*', '/', '%',\r\n    '+', '-',\r\n    '<<', '>>', '>>>',\r\n    '<', '>', '<=', '>=', '==', '!=', '===', '!==',\r\n    '&',\r\n    '^',\r\n    '|',\r\n    '&&',\r\n    '||',\r\n    '?', \":\",\r\n    '=', '+=', '-=', '*=', '/=', '%=', '**=', '<<=', '>>=', '>>>=', '&=', '|=', '^=',\r\n    '...',\r\n    ',',\r\n    '=>'\r\n];\r\n\r\nconst REGEXP_DESCRIPTOR = {\r\n    keys: ['/', '/'], type: \"RegularExpression\",\r\n    match_tree: {\r\n        '/': {\r\n            _state: MATCH_STATUS.END,\r\n            _end(tokenizer: Tokenizer, scope: Record<string, any>) {\r\n                return !scope.class_marker;\r\n            }\r\n        },\r\n        '[': {\r\n            _state: MATCH_STATUS.ATTACH,\r\n            _attach(tokenizer: Tokenizer, scope: Record<string, any>) {\r\n                scope.class_marker = true;\r\n            }\r\n        },\r\n        ']': {\r\n            _state: MATCH_STATUS.ATTACH,\r\n            _attach(tokenizer: Tokenizer, scope: Record<string, any>) {\r\n                scope.class_marker = false;\r\n            }\r\n        },\r\n        '\\n': {\r\n            _state: MATCH_STATUS.ERROR\r\n        },\r\n        '\\\\\\n': {\r\n            _state: MATCH_STATUS.ERROR\r\n        },\r\n        'EOF': {\r\n            _state: MATCH_STATUS.END,\r\n            _error: \"Invalid or unexpected token\"\r\n        }\r\n    },\r\n    overload: true,\r\n    escape_scan,\r\n    scanner(tokenizer: Tokenizer, prev_token: Token) {\r\n        let scope: Record<string, any> = {};\r\n        let token = this.escape_scan(tokenizer, scope);\r\n        if (token) {\r\n            token.regex = {\r\n                pattern: token.value.slice(\r\n                    1, token.value[token.value.length - 1] !== \"/\" ? undefined : -1\r\n                ),\r\n                flags: \"\"\r\n            };\r\n            let start = tokenizer.index;\r\n            let length = 0;\r\n            do {\r\n                tokenizer.index += length;\r\n                length = tokenizer.inIdentifierPart();\r\n            } while (length)\r\n            if (start !== tokenizer.index) {\r\n                token.regex.flags = tokenizer.input.slice(start, tokenizer.index)\r\n                token.value += token.regex.flags;\r\n                token.range[1] += tokenizer.index - start;\r\n                token.loc.end.column += tokenizer.index - start;\r\n            }\r\n            return token;\r\n        }\r\n    }\r\n};\r\nconst PUNCTUATORS_TREE = createSearchTree(PUNCTUATORS);\r\nconst PRIOR_REGEXP_PUNCTUATORS_TREE = createSearchTree(\r\n    [REGEXP_DESCRIPTOR],\r\n    createSearchTree(PUNCTUATORS, [\"/=\"]),\r\n);\r\n\r\n\r\nexport {\r\n    PRIOR_REGEXP_PUNCTUATORS_TREE,\r\n    PUNCTUATORS_TREE,\r\n    NUMERIC_KEYWORD_MAP,\r\n    TOKEN_TYPE_MAP, TOKEN_TYPES\r\n}\r\n\r\n\r\n","\r\nimport {\r\n    Token, SearchTree, MATCH_STATUS\r\n} from '../interfaces';\r\n\r\nimport Tokenizer from '../tokenizer'\r\n\r\nfunction createSearchTree(\r\n    data: Array<string | string[] | Record<string, any>>,\r\n    root: Record<string, any> = {},\r\n    block_list: Array<string> = []\r\n): SearchTree {\r\n    for (let item of data as any) {\r\n        let node = root;\r\n        switch (true) {\r\n            case typeof item === \"string\":\r\n                item = [item];\r\n            case item instanceof Array:\r\n                item = {\r\n                    type: \"Punctuator\",\r\n                    keys: item,\r\n                    value: item.join(\"\")\r\n                }\r\n                break;\r\n            default:\r\n                item.type === undefined && (item.type = \"Punctuator\");\r\n                item.value === undefined && (item.value = item.keys.join(\"\"));\r\n                break;\r\n        }\r\n        if (~block_list.indexOf(item.keys[0])) {\r\n            continue;\r\n        }\r\n        for (const part of item.keys[0]) {\r\n            node = node[part] || (node[part] = {});\r\n        }\r\n        if (node.__ && !item.overload) {\r\n            console.warn(\"conflict:\", node, node.__, item);\r\n        }\r\n        node.__ = item;\r\n    }\r\n    return root;\r\n}\r\n\r\nfunction escape_scan(\r\n    tokenizer: Tokenizer,\r\n    scope?: Record<string, any>,\r\n    start: number = tokenizer.index - this.keys[0].length\r\n) {\r\n    let error: string;\r\n    let line_number = tokenizer.line_number;\r\n    let line_start = tokenizer.line_start;\r\n    let str = \"\";\r\n    let root = this.match_tree;\r\n    let node = root;\r\n    let _next = () => {\r\n        let token: Token;\r\n        let res: string | boolean;\r\n        switch (node._state) {\r\n            case MATCH_STATUS.END:\r\n                if (!node._end || (res = node._end.call(this, tokenizer, scope, start, error)) === true) {\r\n                    token = tokenizer.getToken(\r\n                        this.type,\r\n                        [start, tokenizer.index],\r\n                        undefined, { line: line_number, column: start - line_start }\r\n                    );\r\n                    tokenizer._scope = scope;\r\n                    tokenizer._bak = str;\r\n                    if (node._error || error) {\r\n                        token.error = (node._error || error);\r\n                        tokenizer.err(token);\r\n                    }\r\n                    return token;\r\n                } else if (typeof res === \"string\") {\r\n                    str += res;\r\n                }\r\n                break;\r\n            case MATCH_STATUS.ATTACH:\r\n                res = node._attach.call(this, tokenizer, scope, start, error);\r\n                if (res !== false) {\r\n                    res && (str += res);\r\n                    break;\r\n                }\r\n            case MATCH_STATUS.ERROR:\r\n                error = node._message || \"Invalid or unexpected token\";\r\n            case MATCH_STATUS.NEXT:\r\n                if (node._next) {\r\n                    tokenizer._bak = str;\r\n                    return node._next.call(this, tokenizer, scope, start, error);\r\n                }\r\n                break;\r\n            default:\r\n                if (node._str === undefined) {\r\n                    return;\r\n                }\r\n                str += node._str;\r\n        }\r\n        node = root;\r\n    }\r\n    for (\r\n        let char = tokenizer.input[tokenizer.index++],\r\n        backslash_count = 0,\r\n        token: Token;\r\n        char;\r\n        char = tokenizer.input[tokenizer.index++]\r\n    ) {\r\n        let has_escape = backslash_count % 2;\r\n        if (char === \"\\\\\") {\r\n            backslash_count += 1;\r\n            has_escape && (node = node[\"\\\\\"]);\r\n        } else {\r\n            backslash_count = 0;\r\n            if (tokenizer.isLineTerminator(char.charCodeAt(0))) {\r\n                tokenizer.line_number += 1;\r\n                tokenizer.line_start = tokenizer.index;\r\n                node = node[\r\n                    has_escape\r\n                        ? \"\\\\\\n\"\r\n                        : \"\\n\"\r\n                ];\r\n            } else {\r\n                node = node[!has_escape ? char : \"\\\\\" + char];\r\n            }\r\n        }\r\n\r\n        if (!node) {\r\n            str += char;\r\n            node = root;\r\n        } else if ((token = _next())) {\r\n            return token;\r\n        }\r\n    }\r\n    if (root.EOF) {\r\n        node = root.EOF;\r\n        return _next();\r\n    }\r\n}\r\nfunction search_scan(tokenizer: Tokenizer) {\r\n    let start = tokenizer.index - this.keys[0].length;\r\n    let bound = this.keys[1];\r\n    let start_line = tokenizer.line_number;\r\n    let start_column = start - tokenizer.line_start;\r\n    let matched_count = 0;\r\n    for (\r\n        let char = tokenizer.input[tokenizer.index++];\r\n        char;\r\n        char = tokenizer.input[tokenizer.index++]\r\n    ) {\r\n        if (tokenizer.isLineTerminator(char.charCodeAt(0))) {\r\n            if (bound === \"\\n\") {\r\n                tokenizer.index -= 1;\r\n                break;\r\n            }\r\n            tokenizer.line_number += 1;\r\n            tokenizer.line_start = tokenizer.index;\r\n        } else if (char === bound[matched_count]) {\r\n            if (bound.length > ++matched_count) {\r\n                continue;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n        matched_count = 0;\r\n    }\r\n    let token = tokenizer.getToken(\r\n        this.type,\r\n        [start, tokenizer.index],\r\n        undefined,\r\n        { line: start_line, column: start_column }\r\n    );\r\n    if (matched_count !== bound.length && bound !== \"\\n\" && bound !== \"EOF\") {\r\n        token.error = \"Invalid or unexpected token\";\r\n        tokenizer.err(token);\r\n    }\r\n    return token;\r\n}\r\nexport {\r\n    createSearchTree, escape_scan, search_scan\r\n}","\r\n\r\nimport {\r\n    Context, CONTEXT, SourceLocation, Node\r\n} from '../interfaces';\r\nimport {\r\n    isRestrictedWord,\r\n    STATEMANT_LIST_ITEM_PATTERN,\r\n    TOPLEVEL_ITEM_PATTERN,\r\n    _Option, _Or, _Series, _NonCollecting, _Mark, NODES, TYPE_ALIAS,\r\n    validateBinding, validateLineTerminator, AWAIT_LIST, createMatchTree, join_content, _NonCapturing, MATCH_MARKS\r\n} from './head'\r\nimport { Expressions, PRIMARY_EXPRESSION_TREE } from './expression';\r\n\r\nlet Grouping = NODES.Grouping;\r\n\r\n\r\nfunction get_variable_declarator(context: Context, id: Node, init: Node, range: [number, number], loc: SourceLocation): Node {\r\n    if (id instanceof Grouping) {\r\n        context[CONTEXT.parser].err(id);\r\n    } else if (context[CONTEXT.strict]) {\r\n        init || validateBinding(context, id);\r\n    } if (id.name === \"let\") {\r\n        let kind = context[CONTEXT.tokens][context[CONTEXT.begin] - 1];\r\n        if (kind.value === \"let\" || kind.value === \"const\") {\r\n            context[CONTEXT.parser].err(id);\r\n        }\r\n    }\r\n    return {\r\n        type: \"VariableDeclarator\",\r\n        id, init, range, loc\r\n    };\r\n}\r\n\r\nlet VariableDeclarators = {\r\n    Success: {\r\n        handler: [\r\n            join_content,\r\n            function (context: Context) {\r\n                let [collected] = context;\r\n                validateLineTerminator(context);\r\n                collected.content = join_content(context).content;\r\n                return collected;\r\n            }\r\n        ],\r\n        precedence: [100, 0],\r\n        collector: [\r\n            {\r\n                success: _Or(\"Success\", MATCH_MARKS.BOUNDARY),\r\n                content: _Or(\r\n                    _Or(\"Identifier\").watch(\r\n                        function (context: Context, identifier: Node) {\r\n                            context[CONTEXT.collected].content = get_variable_declarator(\r\n                                context,\r\n                                identifier,\r\n                                null,\r\n                                identifier.range,\r\n                                identifier.loc\r\n                            );\r\n                        }\r\n                    ),\r\n                    _Or(\"AssignmentPattern\").watch(\r\n                        function (context: Context, pattern: Node) {\r\n                            context[CONTEXT.collected].content = get_variable_declarator(\r\n                                context,\r\n                                pattern.left,\r\n                                pattern.right,\r\n                                pattern.range,\r\n                                pattern.loc\r\n                            );\r\n                        }\r\n                    )\r\n                ),\r\n                _next: _NonCollecting(\"Punctuator ,\"),\r\n            },\r\n            [\r\n                [\"type\", _Mark(\"VariableDeclarators\")],\r\n                [\"_next\", _Option(\"Punctuator ;\")]\r\n            ]\r\n        ]\r\n    }\r\n}\r\nlet VARIABLE_DECLARATOR_TREE: Record<string, any>;\r\n\r\nAWAIT_LIST.push(function () {\r\n    VARIABLE_DECLARATOR_TREE = createMatchTree(VariableDeclarators, PRIMARY_EXPRESSION_TREE);\r\n});\r\n\r\nfunction reinterpreat_expression_as_declaration(context: Context, expr: Node) {\r\n    let [collected, parser] = context;\r\n    expr.type = collected.type;\r\n    if (expr.id) {\r\n        if (isRestrictedWord(expr.id.name)) {\r\n            parser.err(expr.id);\r\n        }\r\n    } else {\r\n        parser.err(expr);\r\n    }\r\n    for (let key in expr) {\r\n        collected[key] = expr[key];\r\n    }\r\n}\r\nconst Declarations: Record<string, any> = {\r\n    \"ClassDeclaration\": { //<= ClassExpression\r\n        filter(context: Context, left: number, right: number) {\r\n            let tokens = context[CONTEXT.tokens];\r\n            return !(tokens[right] instanceof Grouping);\r\n        },\r\n        collector: [\r\n            {\r\n                _prev: _NonCapturing(TOPLEVEL_ITEM_PATTERN),\r\n                id: _Or(\"ClassExpression\").watch(reinterpreat_expression_as_declaration)\r\n            }\r\n        ]\r\n    },\r\n    \"FunctionDeclaration\": {\r\n        filter: \"ClassDeclaration\",\r\n        collector: [\r\n            {\r\n                _prev: _NonCapturing(TOPLEVEL_ITEM_PATTERN),\r\n                id: _Or(\"FunctionExpression\").watch(reinterpreat_expression_as_declaration)\r\n            }\r\n        ]\r\n    },\r\n    \"VariableDeclaration\": [\r\n        {\r\n            validator(context: Context) {\r\n                let [, parser, tokens, left] = context;\r\n                context[CONTEXT.start] = context[CONTEXT.end] = left + 1;\r\n                return parser.parseKeyword(tokens[left + 1]);\r\n            },\r\n            collector: {\r\n                _: TOPLEVEL_ITEM_PATTERN,\r\n                __: \"Identifier let\",\r\n                ___: \"Punctuator []\"\r\n            }\r\n        },\r\n        {\r\n            validator: [\r\n                function (context: Context) {\r\n                    let [, parser, tokens, left] = context;\r\n                    context.wrap(CONTEXT.bindingElement, tokens);\r\n                    let res = parser.parseCustom(\r\n                        VARIABLE_DECLARATOR_TREE,\r\n                        context,\r\n                        left + 1,\r\n                        (node: Node) => node.type === \"VariableDeclarators\"\r\n                    );\r\n                    context.unwrap();\r\n                    return res && 0;\r\n                }, null\r\n            ],\r\n            handler(context: Context) {\r\n                let [collected] = context;\r\n                let { declarations, kind } = collected;\r\n                collected.declarations = declarations.content;\r\n                collected.kind = kind.value || kind.name;\r\n                return collected;\r\n            },\r\n            collector: [\r\n                {\r\n                    //_: _NonCapturing(TOPLEVEL_ITEM_PATTERN),\r\n                    kind: _Or(\"Keyword var const let\", \"Identifier let\"),\r\n                    declarations: _Or(\r\n                        \"Identifier\",\r\n                        _Series(\"Punctuator [] {}\", \"Punctuator =\")\r\n                    )\r\n                },\r\n                [\r\n                    [\"declarations\", \"VariableDeclarators\"],\r\n                ]\r\n            ]\r\n        }\r\n    ]\r\n\r\n};\r\nfor (const type_name in Declarations) {\r\n    type_name && (TYPE_ALIAS[type_name] = [type_name, \"[Declaration]\"]);\r\n}\r\n\r\nexport default Declarations;\r\n","import Tokenizer from \"./tokenizer\"\r\nimport {\r\n    NodeProp,\r\n    MATCHED,\r\n    Matched,\r\n    MATCHED_RECORDS,\r\n    MatchedRecords,\r\n    Token, Node, Watcher,\r\n    SearchTree, NUMERIC_TYPE, Context, CONTEXT,\r\n    SourceLocation\r\n} from \"./interfaces\";\r\nimport {\r\n    SYNTAX_TREE,\r\n    MATCH_MARKS,\r\n    EXPRESSION_TREE,\r\n    isExpression, isStatementListItem\r\n} from \"./syntax/index\";\r\nimport { _Context, TYPE_ALIAS, NODES, AWAIT_LIST, Mark } from \"./syntax/head\";\r\ntype Extreme = MatchedRecords;\r\ntype Longest = MatchedRecords;\r\nfor (const cbfun of AWAIT_LIST) {\r\n    cbfun();\r\n}\r\n\r\nconst { Script, Module, Directive } = NODES;\r\nfunction parseIdentifier({ value, range, loc }: Token, tokenizer?: Tokenizer): Node {\r\n    let name = tokenizer ? tokenizer._bak : value;\r\n    let identifier = {\r\n        type: \"Identifier\", name, range, loc\r\n    };\r\n    Object.defineProperty(identifier, \"value\", {\r\n        configurable: true,\r\n        enumerable: false,\r\n        value: name\r\n    });\r\n    return identifier;\r\n\r\n}\r\n\r\nfunction getLiteral(parse_value: (token: Token, tokenizer: Tokenizer) => any, token: Token, tokenizer: Tokenizer) {\r\n    return {\r\n        type: \"Literal\",\r\n        value: parse_value(token, tokenizer),\r\n        raw: token.value,\r\n        range: token.range,\r\n        loc: token.loc\r\n    }\r\n}\r\n\r\nlet tokenizer = new Tokenizer({\r\n    save_comments: false, token_hooks: {\r\n        Identifier: parseIdentifier,\r\n        Numeric: getLiteral.bind(null, (token: Token) => Number(token.value)),\r\n        Boolean: getLiteral.bind(null, (token: Token) => token.value === \"true\"),\r\n        String(token: Token, tokenizer: Tokenizer) {\r\n            if (!tokenizer._scope.octal) {\r\n                return {\r\n                    type: \"Literal\",\r\n                    value: tokenizer._bak,\r\n                    raw: token.value,\r\n                    range: token.range,\r\n                    loc: token.loc\r\n                };\r\n            }\r\n            token.str = tokenizer._bak;\r\n            token.octal = tokenizer._scope.octal;\r\n            return token;\r\n        },\r\n        Null: getLiteral.bind(null, () => null),\r\n        RegularExpression(token: Token, tokenizer: Tokenizer) {\r\n            let regex = token.regex;\r\n            let expr = {\r\n                type: \"Literal\",\r\n                value: null,\r\n                raw: token.value,\r\n                regex,\r\n                range: token.range,\r\n                loc: token.loc\r\n            }\r\n            try {\r\n                expr.value = new RegExp(regex.pattern, regex.flags);\r\n            } catch (e) { }\r\n            return expr;\r\n        }\r\n    }\r\n});\r\n\r\nexport default class {\r\n    tokens: Array<Token>;\r\n    SYNTAX_TREE = SYNTAX_TREE;\r\n    EXPRESSION_TREE = EXPRESSION_TREE;\r\n    tokenizer = tokenizer;\r\n    TYPE_ALIAS = TYPE_ALIAS;\r\n    padding_token: Token = {\r\n        type: MATCH_MARKS.BOUNDARY,\r\n        value: MATCH_MARKS.BOUNDARY\r\n    };\r\n    error_logs: Array<any>;\r\n    err(...args: any) {\r\n        //debugger;\r\n        this.error_logs.push.apply(this.error_logs, args);\r\n    }\r\n    constructor() {\r\n    }\r\n    parse(input: string) {\r\n        return this.parseScript(input);\r\n    }\r\n    parseModule(input: string) {\r\n        return new Module(this._parse(input, CONTEXT.isModule, true, CONTEXT.strict, true), this.range, this.loc);\r\n    }\r\n    parseScript(input: string) {\r\n        return new Script(this._parse(input), this.range, this.loc);\r\n    }\r\n    parseBlock(context: Context, token?: Token) {\r\n        token && (context[CONTEXT.tokens] = token.content);\r\n        let tokens = context[CONTEXT.tokens];\r\n        this.parseCustom(\r\n            SYNTAX_TREE,\r\n            context\r\n        );\r\n        let last_node = tokens[tokens.length - 1];\r\n        if (last_node && !isStatementListItem(last_node)) {\r\n            this.err(tokens.pop());\r\n        }\r\n        return tokens;\r\n    }\r\n    parseExpression(\r\n        context: Context,\r\n        token?: Token,\r\n        match_tree: Record<string, any> = EXPRESSION_TREE\r\n    ) {\r\n        return this.parseNode(match_tree, isExpression, context, token);\r\n    }\r\n    private range: [number, number];\r\n    private loc: SourceLocation;\r\n    private _parse(input: string, ...environments: Array<number | any>) {\r\n        this.tokens = this.tokenizer.tokenize(input);\r\n        this.range = [0, this.tokenizer.index];\r\n        this.loc = {\r\n            start: {\r\n                line: 0,\r\n                column: 0\r\n            },\r\n            end: {\r\n                line: this.tokenizer.line_number,\r\n                column: this.tokenizer.index - this.tokenizer.line_start\r\n            }\r\n        };\r\n        this.error_logs = this.tokenizer.error_logs;\r\n        let context = _Context(this, this.tokens);\r\n        environments.length && context.store(...environments);\r\n        this.parseBlock(context);\r\n        if (this.error_logs.length) {\r\n            console.warn(\"error:\", this.error_logs);\r\n        }\r\n        return this.tokens;\r\n    }\r\n    parseCustom(\r\n        root: Record<string, any>,\r\n        context: Context,\r\n        begin: number = 0,\r\n        hook?: Function\r\n    ) {\r\n        let point = context.store(CONTEXT.begin, begin);\r\n        let cursor: number = begin - 1;\r\n        let tokens = context[CONTEXT.tokens];\r\n        let backflow_tape: Array<number> = new Array(begin);\r\n        backflow_tape.push(cursor);\r\n        let extreme: Extreme;\r\n        let state: number;\r\n        while (true) {\r\n            if (cursor < tokens.length) {\r\n                //debugger;\r\n                if (\r\n                    !(\r\n                        extreme\r\n                        && (\r\n                            extreme[MATCHED_RECORDS.right] < cursor\r\n                            && backflow_tape.length <= 3 + extreme[MATCHED_RECORDS.right]\r\n                            //匹配边界断句\r\n                        )\r\n                        && (\r\n                            (state = this.finallize(context, extreme))\r\n                            || (extreme = undefined)\r\n                        )\r\n                    )\r\n                ) {\r\n                    let longest = this.walk(\r\n                        root,\r\n                        context,\r\n                        cursor,\r\n                        backflow_tape,\r\n                        extreme?.[MATCHED_RECORDS.right]\r\n                    );\r\n                    if (longest) {\r\n                        if (\r\n                            !extreme\r\n                            || !(\r\n                                extreme[MATCHED_RECORDS.precedence] > longest[MATCHED_RECORDS.precedence]\r\n                                || extreme[MATCHED_RECORDS.precedence] === Number(longest[MATCHED_RECORDS.precedence]) //左结合\r\n                            ) || !(state = this.finallize(context, extreme))\r\n                        ) {\r\n                            extreme = longest;\r\n                            //cursor += 1;\r\n                            //也可以单步步进，不过这样更效率一些也和当前收集器无冲突\r\n                            cursor += longest[MATCHED_RECORDS.right] - longest[MATCHED_RECORDS.left] || 1;\r\n                            continue;\r\n                        }\r\n                    } else {\r\n                        cursor += 1;\r\n                        continue;\r\n                    }\r\n                }\r\n            } else if (\r\n                !(\r\n                    extreme\r\n                    && (state = this.finallize(context, extreme))\r\n                )\r\n            ) {\r\n                break;\r\n            }\r\n            if (extreme) {\r\n                if (hook && extreme[MATCHED_RECORDS.left] <= begin && hook(tokens[begin])) {\r\n                    context.restore(point);\r\n                    return tokens[begin];\r\n                }\r\n                cursor = extreme[MATCHED_RECORDS.left];\r\n            }\r\n            cursor >= begin && state !== -1 && (cursor = backflow_tape[cursor]);\r\n            state = 0;\r\n            extreme = undefined;\r\n            backflow_tape.splice(cursor + 1, backflow_tape.length - (cursor + 1));\r\n        }\r\n        context.restore(point);\r\n    }\r\n    parseNode(\r\n        match_tree: Record<string, any>,\r\n        test: (node: Node) => boolean,\r\n        context: Context,\r\n        token?: Token\r\n    ) {\r\n        let tokens = token\r\n            ? (context[CONTEXT.tokens] = token.content)\r\n            : context[CONTEXT.tokens];\r\n        context.wrap(CONTEXT.isExpression, true);\r\n        this.parseCustom(\r\n            match_tree,\r\n            context\r\n        );\r\n        context.unwrap();\r\n        if (tokens.length) {\r\n            if (test(tokens[0])) {\r\n                tokens.length > 1 && this.err(...tokens.slice(1));\r\n                return tokens[0];\r\n            }\r\n            this.err(...tokens);\r\n        } else if (token) {\r\n            this.err(token);\r\n        }\r\n    }\r\n    parseIdentifier = parseIdentifier;\r\n    parseKeyword({ value, range, loc }: Token): Node {\r\n        return {\r\n            type: \"Keyword\",\r\n            value,\r\n            range,\r\n            loc\r\n        };\r\n    }\r\n    parseDirective(node: Node) {\r\n        let expression = node.expression;\r\n        if (\r\n            expression\r\n            && expression.type === \"Literal\"\r\n            && typeof expression.value === \"string\"\r\n            && expression.raw.length > 2\r\n        ) {\r\n            return new Directive(\r\n                node.type,\r\n                node.expression,\r\n                expression.raw.slice(1, -1),\r\n                node.range,\r\n                node.loc\r\n            );\r\n        }\r\n        return node;\r\n    }\r\n\r\n    walk(\r\n        root: Record<string, any>,\r\n        context: Context,\r\n        index: number,\r\n        backflow_tape: Array<number>,\r\n        minimum: number\r\n    ): Longest {\r\n        let padding_token = this.padding_token;\r\n        let TYPE_ALIAS = this.TYPE_ALIAS;\r\n        let tokens = context[CONTEXT.tokens];\r\n        //let steps: Array<number> = [];\r\n        return next(\r\n            root,\r\n            index >= context[CONTEXT.begin] ? tokens[index] : padding_token,\r\n            index,\r\n            index\r\n        );\r\n\r\n        function next(parent: Record<string, any>, token: Token, start: number, end: number): Longest {\r\n            let has_backflow = false;\r\n            if (backflow_tape.length <= end + 1) {\r\n                has_backflow = true;\r\n                backflow_tape.push(start);\r\n            }\r\n            let alias = TYPE_ALIAS[token.type];\r\n            if (!alias) {\r\n                return explore(token.type);\r\n            } else {\r\n                let index = 0, longest: Extreme;\r\n                while (index < alias.length) {\r\n                    longest = explore(alias[index++]) || longest;\r\n                }\r\n                return longest;\r\n            }\r\n\r\n            function explore(type: string | number): Longest {\r\n                let node: Record<string, any>, next_token: Record<string, any>;\r\n                let res: Longest, matched: Matched, matched_node: Record<string, any>;\r\n                let value_node: Record<string, any>, type_node: Record<string, any>;\r\n                if (!(node = parent[type])) {\r\n                    return;\r\n                }\r\n                next_token = tokens[end + 1] || (end < tokens.length && padding_token);//末尾溢出一个填充节点\r\n                value_node = node[token.value];\r\n                if (!(\r\n                    next_token && value_node\r\n                    && (res = next(value_node, next_token, start, end + 1))\r\n                )) {\r\n                    type_node = node[MATCH_MARKS.TYPE_ONLY];\r\n                    if (!(\r\n                        next_token && type_node\r\n                        && (res = next(type_node, next_token, start, end + 1))\r\n                    )) {\r\n                        if (\r\n                            !(end <= minimum)\r\n                            && (\r\n                                matched =\r\n                                (matched_node = value_node) && matched_node[MATCH_MARKS.MATCH_END]\r\n                                || (matched_node = type_node) && matched_node[MATCH_MARKS.MATCH_END]\r\n                            )\r\n                        ) {\r\n                            if (\r\n                                !matched[MATCHED.filter]\r\n                                || matched[MATCHED.filter](context, start, end)\r\n                            ) {\r\n                                minimum = end;\r\n                                res = [\r\n                                    matched[MATCHED.precedence],\r\n                                    start,\r\n                                    end,\r\n                                    matched\r\n                                ];\r\n                            } else if (has_backflow && end > start) {\r\n                                backflow_tape.splice(end + 1, backflow_tape.length - end - 1);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return res;\r\n            }\r\n        }\r\n    }\r\n    createNode(context: Context) {\r\n        let left = context[CONTEXT.left];\r\n        let right = context[CONTEXT.right];\r\n        let matched = context[CONTEXT.matched];\r\n        let tokens = context[CONTEXT.tokens];\r\n        let begin = context[CONTEXT.begin];\r\n        let node: any = new matched[MATCHED.wrapper]();\r\n        let length = tokens.length;\r\n        let start = left, end = right < length ? right : length - 1;\r\n        let offset = left, key: string, watchers: Array<Watcher>;\r\n\r\n        context[CONTEXT.collected] = node;\r\n        for (const prop of matched[MATCHED.props]) {\r\n            if (!(prop instanceof Mark)) {\r\n                [key, watchers] = (prop as any);\r\n                let token: Token = offset >= begin && offset < length ? tokens[offset] : null;\r\n                if (key) {\r\n                    if (token && end < offset) {\r\n                        end = offset;\r\n                    }\r\n                    if (node[key] === undefined) {\r\n                        node[key] = token;\r\n                    } else {\r\n                        if (node[key] instanceof Array) {\r\n                            node[key].push(token)\r\n                        } else {\r\n                            node[key] = [node[key], token];\r\n                        }\r\n                    }\r\n                } else if (key === null) {\r\n                    if (offset === start) {\r\n                        offset < end && (start = offset + 1);\r\n                    } else if (offset > begin && offset - 1 < end) {\r\n                        end = offset - 1;\r\n                    }\r\n                } else if (token && end < offset) {\r\n                    end = offset;\r\n                }\r\n                for (let i in watchers) {\r\n                    watchers[i](context, token);\r\n                    context[CONTEXT.left] = left;\r\n                    context[CONTEXT.right] = right;\r\n                    context[CONTEXT.matched] = matched;\r\n                    context[CONTEXT.tokens] = tokens;\r\n                    context[CONTEXT.collected] = node\r\n                }\r\n                offset += 1;\r\n            } else {\r\n                node[prop.key] = prop.value;\r\n            }\r\n        }\r\n\r\n        start >= begin || (start = begin);\r\n\r\n        let start_token = tokens[start];\r\n        let end_token = tokens[end];\r\n        node.range = [start_token.range[0], end_token.range[1]];\r\n        node.loc = {\r\n            start: start_token.loc.start,\r\n            end: end_token.loc.end\r\n        }\r\n        context[CONTEXT.start] = start;\r\n        context[CONTEXT.end] = end;\r\n        return node;\r\n    }\r\n    finallize(\r\n        context: Context,\r\n        record: Extreme\r\n    ) {\r\n        let [_, left, right, matched/*, steps*/] = record;\r\n        let validator = matched[MATCHED.validator];\r\n        let collected: any;\r\n        let start: number, end: number;\r\n        context[CONTEXT.left] = left;\r\n        context[CONTEXT.right] = right;\r\n        context[CONTEXT.matched] = matched;\r\n        let tokens = context[CONTEXT.tokens];\r\n        let handler = matched[MATCHED.handler];\r\n        if (!validator || (collected = validator(context)) === true) {\r\n            collected = this.createNode(context);\r\n            start = context[CONTEXT.start];\r\n            end = context[CONTEXT.end];\r\n            if (handler) {\r\n                collected = handler(context);\r\n            }\r\n        } else if (collected) {\r\n            start = context[CONTEXT.start];\r\n            end = context[CONTEXT.end];\r\n        }\r\n        context[CONTEXT.tokens] = tokens;\r\n        if (!collected) {\r\n            return collected === undefined || collected === false\r\n                ? 0\r\n                : (collected === null ? 1 : -1);\r\n        }\r\n        //debugger;\r\n        /*if (tokens === this.tokens) {\r\n            debugger;\r\n        }*/\r\n\r\n        let length = end - start + 1;\r\n        if (collected instanceof Array) {\r\n            tokens.splice(start, length, ...collected);\r\n        } else {\r\n            tokens.splice(start, length, collected);\r\n        }\r\n        return length;\r\n    }\r\n}\r\n","\r\nimport {\r\n    Node, Token, Context, CONTEXT\r\n} from '../interfaces';\r\nimport {\r\n    createMatchTree,\r\n    _Option, _Or, _Series, _NonCollecting, _NonCapturing, _Mark,\r\n    TYPE_ALIAS, _Context, _Loop, NODES, MATCH_MARKS,\r\n    validateBinding, validateLineTerminator, ASSIGNMENT_PUNCTUATORS_PATTERN, join_content, AWAIT_LIST\r\n} from './head'\r\nimport { isExpression, isStatementListItem, get_inner_group, parse_and_extract } from './index';\r\n\r\nimport { PRIMARY_EXPRESSION_TREE } from './expression';\r\n//import { MEMBER_EXPRESSION_TREE } from './expression';\r\nconst Grouping = NODES.Grouping;\r\n\r\nlet PETTERN_ELEMENTS_TREE: Record<string, any>;\r\nlet PATTERN_PROPERTIES_TREE: Record<string, any>;\r\n\r\nAWAIT_LIST.push(function () {\r\n    //({ MEMBER_EXPRESSION_TREE } = await require('./expression'));\r\n    PETTERN_ELEMENTS_TREE = createMatchTree(\r\n        PatternElements,\r\n        PRIMARY_EXPRESSION_TREE\r\n    );\r\n    PATTERN_PROPERTIES_TREE = createMatchTree(\r\n        PatternProperties,\r\n        PRIMARY_EXPRESSION_TREE\r\n    );\r\n});\r\n\r\n\r\nconst Patterns: Record<string, any> = {\r\n    ArrayPattern: {\r\n        handler(context: Context) {\r\n            let [collected] = context;\r\n            collected.is_binding || context.wrap(CONTEXT.bindingSet, null);\r\n            let res = parseArrayPattern(context, collected.elements);\r\n            collected.is_binding || context.unwrap();\r\n            return res;\r\n        },\r\n        precedence: 20,\r\n        filter: [\r\n            null,\r\n            function (context: Context) {\r\n                return context[CONTEXT.bindingElement] === context[CONTEXT.tokens];\r\n            }\r\n        ],\r\n        collector: [\r\n            {\r\n                elements: _Or(\"Punctuator []\"),\r\n                _next: _NonCapturing(ASSIGNMENT_PUNCTUATORS_PATTERN),//+=\r\n            },\r\n            {\r\n                _prev: _NonCapturing(\"Punctuator  ...\", MATCH_MARKS.BOUNDARY, \"Success\"),\r\n                elements: _Or(\"Punctuator []\"),\r\n                is_binding: _Mark(true)\r\n            }\r\n        ]\r\n    },\r\n    ObjectPattern: {\r\n        handler: function (context: Context) {\r\n            let [collected] = context;\r\n            collected.is_binding || context.wrap(CONTEXT.bindingSet, null);\r\n            let res = parseObjectPattern(context, collected.properties);\r\n            collected.is_binding || context.unwrap();\r\n            return res;\r\n        },\r\n        precedence: 20,\r\n        filter: [\r\n            null, null,\r\n            function (context: Context, left: number, right: number) {\r\n                let tokens = context[CONTEXT.tokens];\r\n                return context[CONTEXT.bindingElement] === tokens\r\n                    || context[CONTEXT.isExpression];\r\n            },\r\n            function (context: Context) {\r\n                return context[CONTEXT.bindingElement] === context[CONTEXT.tokens];\r\n            }\r\n        ],\r\n        collector: [\r\n            {\r\n                type: _Mark(\"ObjectPattern\"),\r\n                _prev: _NonCapturing(ASSIGNMENT_PUNCTUATORS_PATTERN),\r\n                properties: _Or(\"Punctuator {}\"),\r\n                _next: _NonCapturing(ASSIGNMENT_PUNCTUATORS_PATTERN)\r\n            },\r\n            [\r\n                [\"_prev\", _NonCapturing(\"Punctuator  ,\")],\r\n                [\"is_binding\", _Mark(true)]\r\n            ],\r\n            [\"_prev\", _Mark()],\r\n            {\r\n                type: _Mark(\"ObjectPattern\"),\r\n                _prev: _NonCapturing(\"Punctuator ...\", MATCH_MARKS.BOUNDARY, \"Success\"),\r\n                properties: _Or(\"Punctuator {}\"),\r\n                is_binding: _Mark(true)\r\n            }\r\n        ]\r\n    },\r\n    AssignmentPattern: {\r\n        filter(context: Context) {\r\n            return context[CONTEXT.bindingElement] === context[CONTEXT.tokens];\r\n        },\r\n        precedence: 1.5,\r\n        collector: {\r\n            _: _NonCapturing(MATCH_MARKS.BOUNDARY, \"Success\"),\r\n            left: _Or(\r\n                \"ArrayPattern\", \"ObjectPattern\",\r\n                _Or(\"Identifier\").watch(\r\n                    function (context: Context, identifier: Node) {\r\n                        if (identifier instanceof Grouping) {\r\n                            context[CONTEXT.parser].err(identifier);\r\n                        } else {\r\n                            validateBinding(context, identifier);\r\n                        }\r\n                    }\r\n                )\r\n            ),\r\n            __: _NonCollecting(\"Punctuator =\"),\r\n            right: \"[Expression]\"\r\n        }\r\n    },\r\n    \"\": {\r\n        handler(context: Context) {\r\n            let [{ token }, parser, tokens, left, right] = context;\r\n            if (right - left >= 2 && context[CONTEXT.bindingElement] === tokens) {\r\n                parser.err(token);\r\n            }\r\n            token = get_inner_group(token);\r\n            let store = context.store(CONTEXT.bindingElement, token.content, CONTEXT.bindingSet, null);\r\n            let node = parser.parseNode(\r\n                PRIMARY_EXPRESSION_TREE,\r\n                node => isExpression(node)\r\n                    || node.type === \"ArrayPattern\"\r\n                    || node.type === \"ObjectPattern\"\r\n                    || node.type === \"AssignmentPattern\",\r\n                context,\r\n                token\r\n            );\r\n            context.restore(store);\r\n            return new Grouping(node, token);\r\n        },\r\n        precedence: [100, new Number(3)],\r\n        collector: [\r\n            {\r\n                _prev: _NonCapturing(\"Punctuator ,\", MATCH_MARKS.BOUNDARY, \"Success\"),\r\n                token: _Or(\"Punctuator ()\"),\r\n                _next: _NonCapturing(ASSIGNMENT_PUNCTUATORS_PATTERN)\r\n            },\r\n            [\r\n                [\"_prev\", _Mark()],\r\n                [\"prevent_binding\", _Mark(true)]\r\n            ]\r\n        ]\r\n    }\r\n};\r\nexport {\r\n    Patterns,\r\n    parseArrayPattern,\r\n    parseObjectPattern\r\n}\r\n\r\n\r\nfunction parseArrayPattern(context: Context, token: Token): Node {\r\n    let pattern = new NODES.ArrayPattern();\r\n    context.wrap(CONTEXT.bindingElement, token.content);\r\n    pattern.elements = parse_and_extract(PETTERN_ELEMENTS_TREE, context, token);\r\n    context.unwrap();\r\n    pattern.range = token.range;\r\n    pattern.loc = token.loc;\r\n    return pattern;\r\n}\r\nfunction parseObjectPattern(context: Context, token: Token): Node {\r\n    let pattern = new NODES.ObjectPattern();\r\n    context.wrap(CONTEXT.bindingElement, token.content);\r\n    pattern.properties = parse_and_extract(PATTERN_PROPERTIES_TREE, context, token);\r\n    context.unwrap();\r\n    pattern.range = token.range;\r\n    pattern.loc = token.loc;\r\n    return pattern;\r\n}\r\n\r\nlet PatternElements = {\r\n    Success: {\r\n        handler: join_content,\r\n        collector: [\r\n            {\r\n                success: _Or(MATCH_MARKS.BOUNDARY, \"Success\"),\r\n                content: _Or(\r\n                    _Or(\"Identifier\").watch(\r\n                        function (context: Context, identifier: Token) {\r\n                            if (identifier instanceof Grouping) {\r\n                                context[CONTEXT.parser].err(identifier);\r\n                            } else {\r\n                                validateBinding(context, identifier);\r\n                            }\r\n                        }\r\n                    ),\r\n                    _Or(\"ArrayPattern\", \"ObjectPattern\", \"AssignmentPattern\")\r\n                ),\r\n                _next: _NonCollecting(_Or(\"Punctuator ,\", MATCH_MARKS.BOUNDARY))\r\n            },\r\n            [\r\n                [\"content\", \"RestElement\"],\r\n                [\"_next\", _NonCollecting(MATCH_MARKS.BOUNDARY)]\r\n            ],\r\n            {\r\n                success: _Or(MATCH_MARKS.BOUNDARY, \"Success\"),\r\n                content: _Mark(null),\r\n                _next: _NonCollecting(\"Punctuator ,\")\r\n            }\r\n        ]\r\n    }\r\n}\r\n\r\nconst PatternProperties = {\r\n    Success: {\r\n        handler: join_content,\r\n        precedence: 0,\r\n        collector: {\r\n            success: _Or(_NonCollecting(MATCH_MARKS.BOUNDARY), \"Success\"),\r\n            content: \"Property\",\r\n        }\r\n\r\n    },\r\n    Property: [\r\n        {\r\n            handler(context: Context) {\r\n                let [collected, parser] = context;\r\n                let { key, value } = collected;\r\n                if (key.type === \"Punctuator\") {\r\n                    collected.key = parser.parseExpression(context, key);//SequenceExpression\r\n                }\r\n                if (!value) {\r\n                    collected.value = key;\r\n                    validateBinding(context, key);\r\n                } else {\r\n                    let init: Node;\r\n                    if (collected.shorthand) {\r\n                        init = value;\r\n                        value = key;\r\n                        validateBinding(context, value);\r\n                    } else {\r\n                        if (value instanceof Array) {\r\n                            init = value[1];\r\n                            value = value[0];\r\n                        }\r\n                        if (value.type === \"Identifier\") {\r\n                            validateBinding(context, value);\r\n                        } else {\r\n                            value = (\r\n                                value.value === \"[]\"\r\n                                    ? parseArrayPattern\r\n                                    : parseObjectPattern\r\n                            )(context, value);\r\n                        }\r\n                    }\r\n                    collected.value = init ? {\r\n                        type: \"AssignmentPattern\",\r\n                        left: value,\r\n                        right: init\r\n                    } : value;\r\n                }\r\n                return collected;\r\n            },\r\n            collector: [\r\n                {\r\n                    _prev: _NonCapturing(MATCH_MARKS.BOUNDARY, \"Property\"),\r\n                    key: \"Punctuator []\",\r\n                    value: _Series(\r\n                        _NonCollecting(\"Punctuator :\"),\r\n                        _Or(\"Identifier\", \"Punctuator [] {}\"),\r\n                        _Option(_Series(_NonCollecting(\"Punctuator =\"), \"[Expression]\"))\r\n                    ),\r\n                    _next: _NonCollecting(MATCH_MARKS.BOUNDARY, \"Punctuator ,\"),\r\n                    computed: _Mark(true),\r\n                    kind: _Mark(\"init\"),\r\n                    method: _Mark(false),\r\n                    shorthand: _Mark(false),\r\n                },\r\n                [\r\n                    [\r\n                        \"key\",\r\n                        _Or(\"Identifier\").watch(\r\n                            function (context: Context, identifier: Node) {\r\n                                if (identifier instanceof Grouping) {\r\n                                    context[CONTEXT.parser].err(identifier);\r\n                                }\r\n                            }\r\n                        )\r\n                    ],\r\n                    [\"computed\", _Mark(false)]\r\n                ],\r\n                [\r\n                    [\"value\", _Option(_Series(_NonCollecting(\"Punctuator =\"), \"[Expression]\"))],\r\n                    [\"shorthand\", _Mark(true)]\r\n                ]\r\n            ]\r\n        },\r\n        {\r\n            validator() {//匹配占位\r\n                return false;\r\n            },\r\n            precedence: new Number(3),\r\n            collector: {\r\n                __: _Series(\r\n                    _Or(MATCH_MARKS.BOUNDARY, \"Property\"),\r\n                    _Or(\r\n                        \"Punctuator []\",\r\n                        \"Identifier\",\r\n                    ),\r\n                    \"Punctuator :\",\r\n                    _Or(\r\n                        \"Identifier\",\r\n                        \"Punctuator [] {}\",\r\n                    ),\r\n                    \"Punctuator =\"\r\n                )\r\n            }\r\n        }\r\n    ]\r\n}\r\n","\r\nimport {\r\n    Context, CONTEXT, Node, Token\r\n} from '../interfaces';\r\nimport {\r\n    isExpression, isStatement, isStatementListItem,\r\n    parse_next_statement, get_inner_group,\r\n} from './index'\r\nimport {\r\n    createMatchTree,\r\n    NODES, MATCH_MARKS,\r\n    _Option, _Or, _Series, _NonCollecting, _Mark, _Loop, TYPE_ALIAS,\r\n    validateBinding, validateLineTerminator, _NonCapturing,\r\n    validateIdentifier, validateAssignment,\r\n    STATEMANT_LIST_ITEM_PATTERN,\r\n    TOPLEVEL_ITEM_PATTERN,\r\n    RIGHT_SIDE_TOPLEVEL_ITEM_PATTERN,\r\n    EXPRESSION_OR_VALIDATE_STRICT_RESERVED_WORDS_PATTERN,\r\n    IDENTIFIER_OR_VALIDATE_STRICT_RESERVED_WORDS_PATTERN,\r\n    IDENTIFIER_OR_THROW_STRICT_RESERVED_WORDS_PATTERN,\r\n    EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN,\r\n    isAligned,\r\n} from './head'\r\nimport {\r\n    EXPRESSION_TREE,\r\n    parseArrayPattern,\r\n    parseObjectPattern,\r\n    parse_params\r\n\r\n} from './expression';\r\nimport Declaration from './declaration';\r\nconst Grouping = NODES.Grouping;\r\nlet { VariableDeclaration } = Declaration;\r\n\r\nconst Statements: Record<string, any> = {\r\n    \"\": {\r\n        handler([collected, parser]: Context) {\r\n            parser.err(collected.error);\r\n            return [];\r\n        },\r\n        precedence: -1,\r\n        collector: [\r\n            {\r\n                error: _Or(\"Punctuator\", \"Keyword\"),\r\n                _next: _NonCapturing(RIGHT_SIDE_TOPLEVEL_ITEM_PATTERN),\r\n            }\r\n        ]\r\n    },\r\n    \"BreakStatement\": {\r\n        handler(context: Context) {\r\n            let [collected, parser] = context;\r\n            validateLineTerminator(context);\r\n            let label = collected.label;\r\n            if (label) {\r\n                if (\r\n                    label instanceof Grouping\r\n                    || context[CONTEXT.labelSet].indexOf(label.name) < 0\r\n                ) {\r\n                    parser.err(label);\r\n                }\r\n            } else if (!context[CONTEXT.inIteration] && !context[CONTEXT.inSwitch]) {\r\n                parser.err(collected);\r\n            }\r\n            return collected;\r\n        },\r\n        filter: [\r\n            function (context: Context, left: number) {\r\n                return isAligned(context, left, left + 1);\r\n            },\r\n            null,\r\n        ],\r\n        collector: [\r\n            {\r\n                token: _NonCollecting(\"Keyword break\"),\r\n                label: IDENTIFIER_OR_THROW_STRICT_RESERVED_WORDS_PATTERN,\r\n                _next: _Option(\"Punctuator ;\")\r\n            },\r\n            [\"label\", _Mark(null)]\r\n        ]\r\n    },\r\n    \"ContinueStatement\": {\r\n        handler(context: Context) {\r\n            let [collected, parser] = context;\r\n            let label = collected.label;\r\n            validateLineTerminator(context);\r\n            if (label) {\r\n                if (\r\n                    label instanceof Grouping\r\n                    || context[CONTEXT.labelSet].indexOf(label.name) < 0\r\n                ) {\r\n                    parser.err(label);\r\n                }\r\n            } else if (!context[CONTEXT.inIteration]) {\r\n                parser.err(collected);\r\n            }\r\n            return collected;\r\n        },\r\n        filter: \"BreakStatement\",\r\n        collector: [\r\n            {\r\n                token: _NonCollecting(\"Keyword continue\"),\r\n                label: IDENTIFIER_OR_THROW_STRICT_RESERVED_WORDS_PATTERN,\r\n                _next: _Option(\"Punctuator ;\")\r\n            },\r\n            [\"label\", _Mark(null)],\r\n        ]\r\n    },\r\n    \"ReturnStatement\": {\r\n        handler(context: Context) {\r\n            let [collected, parser] = context;\r\n            validateLineTerminator(context);\r\n            if (!context[CONTEXT.inFunctionBody]) {\r\n                parser.err(collected);\r\n            }\r\n            return collected;\r\n        },\r\n        validator(context: Context) {\r\n            let [, , tokens, left, right] = context;\r\n            if (left === right) {\r\n                let next_token = tokens[left + 1];\r\n                if (next_token && tokens[left].loc.end.line === next_token.loc.start.line) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        },\r\n        filter: \"BreakStatement\",\r\n        precedence: 0,\r\n        collector: [\r\n            {\r\n                token: _NonCollecting(\"Keyword return\"),\r\n                argument: EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN,\r\n                _next: _Option(\"Punctuator ;\")\r\n            },\r\n            [\"argument\", _Mark(null)]\r\n        ]\r\n    },\r\n    \"BlockStatement\": {\r\n        handler(context: Context) {\r\n            let [collected, parser] = context;\r\n            collected.body = parser.parseBlock(context, collected.body);\r\n            return collected;\r\n        },\r\n        overload: true,//和 ObjectPattern 收集器有重叠，在存在 BlockStatement 的环境， ObjectPattern 的 filter 不会返回 true，这里强制覆盖\r\n        precedence: 0,\r\n        collector: [\r\n            {\r\n                _prev: _NonCapturing(TOPLEVEL_ITEM_PATTERN),\r\n                body: \"Punctuator {}\"\r\n            }\r\n        ]\r\n    },\r\n    \"DoWhileStatement\": {\r\n        validator: \"ForStatement\",\r\n        handler(context: Context) {\r\n            let [collected, parser] = context;\r\n            validateLineTerminator(context);\r\n            collected.test = parser.parseExpression(context, collected.test);\r\n            return collected;\r\n        },\r\n        collector: [\r\n            {\r\n                keyword: _NonCollecting(\"Keyword do\"),\r\n            },\r\n            [\r\n                [\"body\", STATEMANT_LIST_ITEM_PATTERN],\r\n                [\"test\", _Series(_NonCollecting(\"Keyword while\"), \"Punctuator ()\")],\r\n                [\"_next\", _Option(\"Punctuator ;\")]\r\n            ]\r\n        ]\r\n    },\r\n    \"EmptyStatement\": [\r\n        {\r\n            precedence: 100,\r\n            collector: [\r\n                {\r\n                    _prev: _NonCapturing(TOPLEVEL_ITEM_PATTERN),\r\n                    _: _NonCollecting(\"Punctuator ;\")\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"ExpressionStatement\": {\r\n        handler(context: Context) {\r\n            let [collected, parser, tokens, left] = context;\r\n            validateLineTerminator(context);\r\n            let prev_node = tokens[left - 1];\r\n            if (\r\n                (!prev_node || prev_node.directive)\r\n                && (\r\n                    tokens === parser.tokens\r\n                    || tokens === context[CONTEXT.inFunctionBody]\r\n                )\r\n            ) {\r\n                collected = parser.parseDirective(collected);\r\n                switch (collected.directive) {\r\n                    case \"use strict\":\r\n                        context[CONTEXT.strict] = true;\r\n                        break;\r\n                }\r\n            }\r\n            return collected;\r\n        },\r\n        precedence: 0,\r\n        collector: [\r\n            {\r\n                expression: EXPRESSION_OR_VALIDATE_STRICT_RESERVED_WORDS_PATTERN,\r\n                _next: _Option(\"Punctuator ;\")\r\n            }\r\n        ]\r\n    },\r\n    \"ForStatement\": {\r\n        validator: [\r\n            function (context: Context) {\r\n                context.wrap(CONTEXT.inIteration, true);\r\n                let res = parse_next_statement(context);\r\n                context.unwrap();\r\n                return res;\r\n            },\r\n            null\r\n        ],\r\n        handler(context: Context) {\r\n            let [collected, parser] = context;\r\n            let { iterator, body, range, loc } = collected;\r\n            let iterator_tokens = iterator.content;\r\n            context.wrap(CONTEXT.isExpression, true);\r\n            context[CONTEXT.tokens] = iterator_tokens;\r\n            parser.parseCustom(FOR_ITERATOR_TREE, context);\r\n            context.unwrap();\r\n            if (iterator_tokens.length > 0) {\r\n                let index = 0;\r\n                if (isStatement(iterator_tokens[0])) {\r\n                    collected = iterator_tokens[0];\r\n                    collected.body = body;\r\n                    collected.range = range;\r\n                    collected.loc = loc;\r\n                    index = 1;\r\n                }\r\n                if (iterator_tokens.length > index) {\r\n                    parser.err(...iterator_tokens.slice(index));\r\n                }\r\n            }\r\n            return collected;\r\n        },\r\n        collector: [\r\n            {\r\n                keyword: _NonCollecting(\"Keyword for\"),\r\n                iterator: \"Punctuator ()\"\r\n            },\r\n            [\"body\", STATEMANT_LIST_ITEM_PATTERN]\r\n        ]\r\n    },\r\n    \"ForInStatement\": {//ForStatement\r\n    },\r\n    \"ForOfStatement\": {//ForStatement\r\n    },\r\n    \"IfStatement\": {\r\n        validator(context: Context) {\r\n            let [, , , left, right] = context;\r\n            if ((right - left) % 2 === 1) {\r\n                return parse_next_statement(context);\r\n            }\r\n            return true;\r\n        },\r\n        handler(context: Context) {\r\n            let [collected, parser] = context;\r\n            collected.test = parser.parseExpression(context, collected.test);\r\n            return collected;\r\n        },\r\n        collector: [\r\n            {\r\n                token: _NonCollecting(\"Keyword if\"),\r\n                test: \"Punctuator ()\",\r\n                consequent: _Mark(null),\r\n                alternate: _Mark(null)\r\n            },\r\n            [\"consequent\", STATEMANT_LIST_ITEM_PATTERN],\r\n            [\r\n                \"alternate\", _Series(\r\n                    _NonCollecting(\"Keyword else\"),\r\n                    _Option(STATEMANT_LIST_ITEM_PATTERN)\r\n                )\r\n            ]\r\n        ]\r\n    },\r\n    \"LabeledStatement\": {\r\n        validator: [\r\n            function (context: Context) {\r\n                let [, parser, tokens, left] = context;\r\n                let label = tokens[left];\r\n                let label_name = label.name;\r\n                let label_set = context[CONTEXT.labelSet];\r\n                if (label_set.indexOf(label_name) >= 0) {\r\n                    parser.err(label);\r\n                }\r\n                let index = label_set.push(label_name) - 1;\r\n                let res = parse_next_statement(context);\r\n                label_set.splice(index, 1);\r\n                return res;\r\n            },\r\n            null\r\n        ],\r\n        precedence: 0,\r\n        collector: [\r\n            {\r\n                label: _Series(\r\n                    IDENTIFIER_OR_THROW_STRICT_RESERVED_WORDS_PATTERN,\r\n                    _NonCollecting(\"Punctuator :\")\r\n                )\r\n            },\r\n            [\"body\", STATEMANT_LIST_ITEM_PATTERN]\r\n        ]\r\n    },\r\n    \"SwitchStatement\": [\r\n        {\r\n            handler(context: Context) {\r\n                let [collected, parser] = context;\r\n                let { discriminant } = collected;\r\n                collected.discriminant = parser.parseExpression(context, discriminant);\r\n                collected.discriminant || parser.err(discriminant);\r\n                collected.cases = context[CONTEXT.tokens] = collected.cases.content;\r\n                context.wrap(CONTEXT.inSwitch, context[CONTEXT.tokens]);\r\n                parser.parseCustom(parser.SYNTAX_TREE, context);\r\n                context.unwrap();\r\n                let has_default = false;\r\n                for (const item of collected.cases) {\r\n                    if (item.type === \"SwitchCase\") {\r\n                        if (item.test) {\r\n                            continue;\r\n                        }\r\n                        if (!has_default) {\r\n                            has_default = true;\r\n                            continue;\r\n                        }\r\n                    }\r\n                    parser.err(item);\r\n                }\r\n                return collected;\r\n            },\r\n            collector: [\r\n                {\r\n                    token: _NonCollecting(\"Keyword switch\"),\r\n                    discriminant: \"Punctuator ()\",\r\n                    cases: \"Punctuator {}\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            handler([collected]: Context) {\r\n                collected.consequent = [];\r\n                return collected;\r\n            },\r\n            precedence: 0,\r\n            filter(content: Context) {\r\n                return content[CONTEXT.inSwitch] === content[CONTEXT.tokens];\r\n            },\r\n            collector: [\r\n                {\r\n                    type: _Mark(\"SwitchCase\"),\r\n                    test: _Or(\r\n                        _Series(\r\n                            _NonCollecting(\"Keyword case\"),\r\n                            EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN\r\n                        ),\r\n                        _Series(\r\n                            _NonCollecting(\"Keyword default\"),\r\n                            _Mark(null)\r\n                        )\r\n                    ),\r\n                    __: _NonCollecting(\"Punctuator :\")\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            handler([collected]: Context) {\r\n                collected.token.consequent.push(collected.consequent)\r\n                return collected.token;\r\n            },\r\n            collector: {\r\n                token: \"SwitchCase\",\r\n                consequent: STATEMANT_LIST_ITEM_PATTERN\r\n            }\r\n        }\r\n    ],\r\n    \"ThrowStatement\": {\r\n        handler(context: Context) {\r\n            let [collected, parser] = context;\r\n            validateLineTerminator(context);\r\n            if (collected.loc.start.line !== collected.argument.loc.start.line) {\r\n                parser.err(collected);\r\n            }\r\n            return collected;\r\n        },\r\n        precedence: 0,\r\n        collector: [\r\n            {\r\n                token: _NonCollecting(\"Keyword throw\"),\r\n                argument: EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN,\r\n                _next: _Option(\"Punctuator ;\")\r\n            }\r\n        ]\r\n    },\r\n    \"TryStatement\": {\r\n        handler(context: Context) {\r\n            let [collected, parser] = context;\r\n            let { block, handler, finalizer } = collected;\r\n            collected.block = { type: \"BlockStatement\", body: parser.parseBlock(context, block) }\r\n            if (handler) {\r\n                let [param, body] = handler;\r\n                let params = parse_params(context, param.content);\r\n                if (params.length !== 1) {\r\n                    parser.err(param);\r\n                }\r\n                collected.handler = {\r\n                    type: \"CatchClause\",\r\n                    param: params[0],\r\n                    body: { type: \"BlockStatement\", body: parser.parseBlock(context, body) }\r\n                };\r\n            }\r\n            if (finalizer) {\r\n                collected.finalizer = { type: \"BlockStatement\", body: parser.parseBlock(context, finalizer) };\r\n            }\r\n            return collected;\r\n        },\r\n        collector: [\r\n            {\r\n                token: _NonCollecting(\"Keyword try\"),\r\n                block: \"Punctuator {}\",\r\n                handler: _Series(_NonCollecting(\"Keyword catch\"), \"Punctuator ()\", \"Punctuator {}\"),\r\n                finalizer: _Mark(null)\r\n            },\r\n            [\"finalizer\", _Series(_NonCollecting(\"Keyword finally\"), \"Punctuator {}\")],\r\n            [\"handler\", _Mark(null)],\r\n        ]\r\n    },\r\n    \"WhileStatement\": {\r\n        validator: \"ForStatement\",\r\n        handler(context: Context) {\r\n            let [collected, parser] = context;\r\n            collected.test = parser.parseExpression(context, collected.test);\r\n            return collected;\r\n        },\r\n        collector: [\r\n            {\r\n                token: _NonCollecting(\"Keyword while\"),\r\n                test: \"Punctuator ()\"\r\n            },\r\n            [\"body\", STATEMANT_LIST_ITEM_PATTERN]\r\n        ]\r\n    },\r\n    \"WithStatement\": {\r\n        validator: [\r\n            parse_next_statement,\r\n            null\r\n        ],\r\n        handler(context: Context) {\r\n            let [collected, parser] = context;\r\n            if (context[CONTEXT.strict]) {\r\n                parser.err(collected);\r\n            }\r\n            collected.object = parser.parseExpression(context, collected.object);\r\n            return collected;\r\n        },\r\n        collector: [\r\n            {\r\n                token: \"Keyword with\",\r\n                object: \"Punctuator ()\"\r\n            },\r\n            [\"body\", STATEMANT_LIST_ITEM_PATTERN]\r\n        ]\r\n    }\r\n};\r\n\r\nfor (const type_name in Statements) {\r\n    if (type_name) {\r\n        type_name && (TYPE_ALIAS[type_name] = [type_name, \"[Statement]\"]);\r\n    }\r\n}\r\nexport default Statements;\r\n\r\nlet ForIterator = {\r\n    VariableDeclaration,\r\n    ForStatement: [\r\n        {\r\n            collector: [\r\n                {\r\n                    init: _Or(\r\n                        \"VariableDeclaration\",\r\n                        _Series(\r\n                            _NonCollecting(MATCH_MARKS.BOUNDARY),\r\n                            _Or(EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN, _Mark(null)),//EXPRESSION_OR_VALIDATE_STRICT_RESERVED_WORDS\r\n                            _NonCollecting(\"Punctuator ;\")\r\n                        )\r\n                    ),\r\n                    test: _Series(\r\n                        _Or(EXPRESSION_OR_VALIDATE_STRICT_RESERVED_WORDS_PATTERN, _Mark(null)),\r\n                        _NonCollecting(\"Punctuator ;\")\r\n                    ),\r\n                    update: _Series(\r\n                        _Or(EXPRESSION_OR_VALIDATE_STRICT_RESERVED_WORDS_PATTERN, _Mark(null)),\r\n                        _NonCollecting(MATCH_MARKS.BOUNDARY)\r\n                    ),\r\n                    body: _Mark(null)\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            handler(context: Context) {\r\n                let [collected, parser] = context;\r\n                let { left } = collected;\r\n                let kind: Node, declarator: Node;\r\n                if (left instanceof Array) {\r\n                    [kind, declarator] = left;\r\n                } else {\r\n                    declarator = left;\r\n                }\r\n                if (declarator.value === \"()\" && declarator.type === \"Punctuator\") {\r\n                    let wrapper = declarator;\r\n                    declarator = get_inner_group(declarator);\r\n                    if (declarator.content.length > 0) {\r\n                        if (kind) {\r\n                            parser.err(declarator);\r\n                        } else if (declarator.content.length > 1) {\r\n                            parser.err(...declarator.content.slice(1));\r\n                        }\r\n                        declarator = new Grouping(declarator.content[0], wrapper);\r\n                    }\r\n                }\r\n                if (declarator.type === \"Punctuator\") {\r\n                    switch (declarator.value) {\r\n                        case \"{}\":\r\n                            declarator = parseObjectPattern(context, declarator);\r\n                            break;\r\n                        case \"[]\":\r\n                            declarator = parseArrayPattern(context, declarator);\r\n                            break;\r\n                        default:\r\n                            parser.err(declarator);\r\n                            declarator = null;\r\n                    }\r\n                } else if (declarator.type !== \"Identifier\") {\r\n                    parser.err(declarator);\r\n                    declarator = null;\r\n                } else {\r\n                    validateAssignment(context, declarator);\r\n                }\r\n                if (kind) {\r\n                    left = new NODES.VariableDeclaration();\r\n                    left.declarations = [\r\n                        {\r\n                            type: \"VariableDeclarator\",\r\n                            id: declarator,\r\n                            init: null\r\n                        }\r\n                    ];\r\n                    left.kind = kind.value;\r\n                    left.range = [kind.range[0], declarator.range[1]];\r\n                    left.loc = {\r\n                        start: kind.loc.start,\r\n                        end: declarator.loc.end\r\n                    };\r\n                    collected.left = left;\r\n                } else {\r\n                    collected.left = declarator;\r\n                }\r\n                return collected;\r\n            },\r\n            validator(context: Context) {\r\n                return context[CONTEXT.right] >= context[CONTEXT.tokens].length;\r\n            },\r\n            filter: [function () { return false }, null],\r\n            precedence: 1.5,\r\n            collector: [\r\n                {\r\n                    _: _Series(//和 VariableDeclaration 不冲突的占位 \r\n                        MATCH_MARKS.BOUNDARY,\r\n                        _Or(\r\n                            _Series(\r\n                                _Or(\"Keyword var const let\"),\r\n                                _Or(\"Identifier\", \"Punctuator {} [] ()\")\r\n                            ),\r\n                            _Series(\r\n                                \"Identifier let\",\r\n                                _Or(\"Identifier\", \"Punctuator {} ()\")\r\n                            )\r\n                        )\r\n\r\n                    )\r\n                },\r\n                {\r\n                    type: _Mark(\"ForOfStatement\"),\r\n                    _prev: _NonCollecting(MATCH_MARKS.BOUNDARY),\r\n                    left: _Series(\r\n                        _Option(_Or(\"Identifier let\", \"Keyword var const let\")),\r\n                        _Or(\"Identifier\", \"Punctuator {} [] ()\")\r\n                    ),\r\n                    token: _NonCollecting(\"Identifier of\"),\r\n                    right: _Option(\r\n                        _Series(\r\n                            EXPRESSION_OR_VALIDATE_STRICT_RESERVED_WORDS_PATTERN,\r\n                            _Option(_NonCollecting(MATCH_MARKS.BOUNDARY))\r\n                        )\r\n                    ),\r\n                    body: _Mark(null),\r\n                },\r\n                [\r\n                    [\"type\", _Mark(\"ForInStatement\")],\r\n                    [\"token\", _NonCollecting(\"Keyword in\")],\r\n                    [\"each\", _Mark(false)]\r\n                ]\r\n            ]\r\n\r\n        }\r\n    ]\r\n};\r\nlet FOR_ITERATOR_TREE = createMatchTree(ForIterator, EXPRESSION_TREE);\r\n","import {\r\n    Context, CONTEXT, Token, Node\r\n} from '../interfaces';\r\nimport {\r\n    _Option, _Or, _Series, _NonCollecting, _Mark, TYPE_ALIAS, MATCH_MARKS,\r\n    validateLineTerminator, NODES, _NonCapturing, join_content, createMatchTree\r\n} from './head'\r\nimport { parse_and_extract } from './index';\r\nlet Grouping = NODES.Grouping;\r\n\r\nconst STRING_LITERAL_PATTERN = _Or(\"Literal\").watch(\r\n    function (context: Context, token: Token) {\r\n        if (token instanceof Grouping || typeof token.value !== \"string\") {\r\n            context[CONTEXT.parser].err(token);\r\n        }\r\n    }\r\n)\r\n\r\nlet ImportSpecifiers = {\r\n    \"Success\": {\r\n        handler: join_content,\r\n        precedence: 0,\r\n        collector: [\r\n            {\r\n                success: _Or(MATCH_MARKS.BOUNDARY, \"Success\"),\r\n                content: \"ImportSpecifier\",\r\n            }\r\n        ]\r\n    },\r\n    ImportSpecifier: {\r\n        collector: {\r\n            _prev: _NonCapturing(\"Success\", MATCH_MARKS.BOUNDARY),\r\n            imported: \"Identifier\",\r\n            local: _Or(\r\n                _Series(\r\n                    _NonCollecting(\"Identifier as\"),\r\n                    \"Identifier\",\r\n                    _NonCollecting(\"Punctuator ,\", MATCH_MARKS.BOUNDARY)\r\n                ),\r\n                _Or(\"Punctuator ,\", MATCH_MARKS.BOUNDARY).watch(\r\n                    function (context: Context) {\r\n                        let [collected] = context;\r\n                        collected.local = collected.imported;\r\n                    }\r\n                )\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst IMPORT_SPECIFIERS_TREE = createMatchTree(ImportSpecifiers);\r\nconst EXPORT_SPECIFIERS_TREE = createMatchTree({\r\n    \"Success\": {\r\n        handler: join_content,\r\n        precedence: 0,\r\n        collector: [\r\n            {\r\n                success: _Or(MATCH_MARKS.BOUNDARY, \"Success\"),\r\n                content: \"ExportSpecifier\",\r\n            }\r\n        ]\r\n    },\r\n    ExportSpecifier: {\r\n        collector: {\r\n            _prev: _NonCapturing(\"Success\", MATCH_MARKS.BOUNDARY),\r\n            local: \"Identifier\",\r\n            exported: _Or(\r\n                _Series(\r\n                    _NonCollecting(\"Identifier as\"),\r\n                    \"Identifier\",\r\n                    _NonCollecting(\"Punctuator ,\", MATCH_MARKS.BOUNDARY)\r\n                ),\r\n                _Or(\"Punctuator ,\", MATCH_MARKS.BOUNDARY).watch(\r\n                    function (context: Context) {\r\n                        let [collected] = context;\r\n                        collected.exported = collected.local;\r\n                    }\r\n                )\r\n            )\r\n        }\r\n    }\r\n});\r\n\r\nconst ModuleDeclarations: Record<string, any> = {\r\n    \"ImportDeclaration\": {\r\n        handler(context: Context) {\r\n            let [collected, parser] = context;\r\n            validateLineTerminator(context);\r\n            if (!context[CONTEXT.isModule]) {\r\n                parser.err(collected);\r\n            }\r\n            return collected;\r\n        },\r\n        collector: [\r\n            {\r\n                token: _NonCollecting(\"Keyword import\"),\r\n                specifiers: _Or(\r\n                    _Or(\"Punctuator {}\").watch(\r\n                        function (context: Context, token: Token) {\r\n                            let [collected] = context;\r\n                            collected.specifiers = parse_and_extract(IMPORT_SPECIFIERS_TREE, context, token);\r\n                        }\r\n                    ),\r\n                    _Or(\"Identifier\").watch(\r\n                        function (context: Context, Identifier: Token) {\r\n                            context[CONTEXT.collected].specifiers = [\r\n                                {\r\n                                    type: \"ImportDefaultSpecifier\",\r\n                                    local: Identifier\r\n                                }\r\n                            ]\r\n                        }\r\n                    )\r\n                ),\r\n                _: _NonCollecting(\"Identifier from\"),\r\n                source: STRING_LITERAL_PATTERN,\r\n                _next: _Option(\"Punctuator ;\")\r\n            }\r\n        ]\r\n    },\r\n    \"ExportAllDeclaration\": {\r\n        handler(context: Context) {\r\n            let [collected, parser] = context;\r\n            if (collected.check_line_terminator) {\r\n                delete collected.check_line_terminator;\r\n                validateLineTerminator(context);\r\n            }\r\n            if (!context[CONTEXT.isModule]) {\r\n                parser.err(collected);\r\n            }\r\n            return collected;\r\n        },\r\n        collector: {\r\n            _: _NonCollecting(_Series(\"Keyword export\", \"Punctuator *\", \"Identifier from\")),\r\n            source: STRING_LITERAL_PATTERN,\r\n            _next: _Option(\"Punctuator ;\"),\r\n            check_line_terminator: _Mark(true)\r\n        },\r\n    },\r\n    \"ExportNamedDeclaration\": {\r\n        handler: \"ExportAllDeclaration\",\r\n        collector: [\r\n            {\r\n                _: _NonCollecting(\"Keyword export\"),\r\n                declaration: \"VariableDeclaration\",\r\n                specifiers: _Mark(Array),\r\n                source: _Mark(null)\r\n            },\r\n            {\r\n                _: _NonCollecting(\"Keyword export\"),\r\n                declaration: _Mark(null),\r\n                specifiers: _Or(\"Punctuator {}\").watch(\r\n                    function (context: Context, token: Token) {\r\n                        let [collected] = context;\r\n                        collected.specifiers = parse_and_extract(EXPORT_SPECIFIERS_TREE, context, token);\r\n                    }\r\n                ),\r\n                source: _Mark(null),\r\n                _next: _Option(\"Punctuator ;\"),\r\n                check_line_terminator: _Mark(true)\r\n            }\r\n        ]\r\n    },\r\n    \"ExportDefaultDeclaration\": {\r\n        handler(context: Context) {\r\n            let [collected] = context;\r\n            validateLineTerminator(context);\r\n            if (!context[CONTEXT.isModule]) {\r\n                context[CONTEXT.parser].err(collected);\r\n            }\r\n            return collected;\r\n        },\r\n        precedence: 1.5,\r\n        collector: [\r\n            {\r\n                type: _Mark(\"ExportDefaultDeclaration\"),\r\n                _: _NonCollecting(\"Keyword export\"),\r\n                __: _NonCollecting(\"Keyword default\"),\r\n                declaration: \"[Expression]\",\r\n                _next: _Option(\"Punctuator ;\")\r\n            }\r\n        ]\r\n    }\r\n}\r\nexport default ModuleDeclarations;","\r\nimport Tokenizer from \"./tokenizer\"\r\nimport Parser from \"./parser\"\r\n\r\nlet esprima = require(\"./test/esprima.js\")\r\n\r\nconst parser = new Parser();\r\n\r\nimport data1 from './test/test_data1.js'\r\nimport data2 from './test/test_data2.js'\r\nimport data3 from './test/test_data3.js'\r\nimport data4 from './test/test_data4.js'\r\nimport data5 from './test/test_data5.js'\r\nimport data6 from './test/test_data6.js'\r\n\r\nlet data0 = (window as any).test.innerHTML;\r\n\r\nlet test_data = data6;\r\nlet a, b;\r\n\r\nconsole.time(\"dison\");\r\nconsole.log(a = parser.parseModule(test_data));\r\nconsole.timeEnd(\"dison\");\r\nconsole.time(\"esprima\");\r\nconsole.log(b = esprima.parseModule(test_data, {\r\n    range: true,\r\n    loc: true\r\n}));\r\nconsole.timeEnd(\"esprima\");\r\n\r\nconsole.log(123, weakEqual(a, b));\r\n(window as any).parser = parser;\r\n\r\nlet tokenizer = new Tokenizer();\r\n(window as any).tokenizer = tokenizer;\r\nconsole.log(parser.parseModule(data0).body);\r\n\r\n\r\nlet tast_list: Array<[string, any]> = [\r\n    [\r\n        `\r\n        let test1\\\\u0061asd = \"\\\\u{0000000be} \\\\u0044 \\\\\\\\ \\\\x44s \\\\0112  \\\\ns\"+/s[s/]/\r\n        `,\r\n        { \"type\": \"Program\", \"sourceType\": \"script\", \"body\": [{ \"type\": \"VariableDeclaration\", \"kind\": \"let\", \"declarations\": [{ \"type\": \"VariableDeclarator\", \"id\": { \"type\": \"Identifier\", \"name\": \"test1aasd\", \"range\": [13, 27], \"loc\": { \"start\": { \"line\": 1, \"column\": 12 }, \"end\": { \"line\": 1, \"column\": 26 } } }, \"init\": { \"type\": \"BinaryExpression\", \"left\": { \"type\": \"Literal\", \"value\": \"¾ D \\\\ Ds \\t2  \\ns\", \"raw\": \"\\\"\\\\u{0000000be} \\\\u0044 \\\\\\\\ \\\\x44s \\\\0112  \\\\ns\\\"\", \"range\": [30, 72], \"loc\": { \"start\": { \"line\": 1, \"column\": 29 }, \"end\": { \"line\": 1, \"column\": 71 } } }, \"operator\": \"+\", \"right\": { \"type\": \"Literal\", \"value\": {}, \"raw\": \"/s[s/]/\", \"regex\": { \"pattern\": \"s[s/]\", \"flags\": \"\" }, \"range\": [73, 80], \"loc\": { \"start\": { \"line\": 1, \"column\": 72 }, \"end\": { \"line\": 1, \"column\": 79 } } }, \"range\": [30, 80], \"loc\": { \"start\": { \"line\": 1, \"column\": 29 }, \"end\": { \"line\": 1, \"column\": 79 } } }, \"range\": [13, 80], \"loc\": { \"start\": { \"line\": 1, \"column\": 12 }, \"end\": { \"line\": 1, \"column\": 79 } } }], \"range\": [9, 80], \"loc\": { \"start\": { \"line\": 1, \"column\": 8 }, \"end\": { \"line\": 1, \"column\": 79 } } }], \"range\": [0, 89], \"loc\": { \"start\": { \"line\": 0, \"column\": 0 }, \"end\": { \"line\": 2, \"column\": 8 } } }\r\n    ],\r\n    [\r\n        `\r\n        ++a\r\n        ++\r\n        b+c++\r\n        (e)\r\n        c++\r\n        [D]\r\n        ++\r\n        b+(c++)[D]\r\n        //b+c++[D]\r\n        `,\r\n        { \"type\": \"Program\", \"sourceType\": \"script\", \"body\": [{ \"type\": \"ExpressionStatement\", \"expression\": { \"type\": \"UpdateExpression\", \"operator\": \"++\", \"argument\": { \"type\": \"Identifier\", \"name\": \"a\", \"range\": [11, 12], \"loc\": { \"start\": { \"line\": 1, \"column\": 10 }, \"end\": { \"line\": 1, \"column\": 11 } } }, \"prefix\": true, \"range\": [9, 12], \"loc\": { \"start\": { \"line\": 1, \"column\": 8 }, \"end\": { \"line\": 1, \"column\": 11 } } }, \"range\": [9, 12], \"loc\": { \"start\": { \"line\": 1, \"column\": 8 }, \"end\": { \"line\": 1, \"column\": 11 } } }, { \"type\": \"ExpressionStatement\", \"expression\": { \"type\": \"BinaryExpression\", \"left\": { \"type\": \"UpdateExpression\", \"operator\": \"++\", \"argument\": { \"type\": \"Identifier\", \"name\": \"b\", \"range\": [32, 33], \"loc\": { \"start\": { \"line\": 3, \"column\": 8 }, \"end\": { \"line\": 3, \"column\": 9 } } }, \"prefix\": true, \"range\": [21, 33], \"loc\": { \"start\": { \"line\": 2, \"column\": 8 }, \"end\": { \"line\": 3, \"column\": 9 } } }, \"operator\": \"+\", \"right\": { \"type\": \"UpdateExpression\", \"argument\": { \"type\": \"Identifier\", \"name\": \"c\", \"range\": [34, 35], \"loc\": { \"start\": { \"line\": 3, \"column\": 10 }, \"end\": { \"line\": 3, \"column\": 11 } } }, \"operator\": \"++\", \"prefix\": false, \"range\": [34, 37], \"loc\": { \"start\": { \"line\": 3, \"column\": 10 }, \"end\": { \"line\": 3, \"column\": 13 } } }, \"range\": [21, 37], \"loc\": { \"start\": { \"line\": 2, \"column\": 8 }, \"end\": { \"line\": 3, \"column\": 13 } } }, \"range\": [21, 37], \"loc\": { \"start\": { \"line\": 2, \"column\": 8 }, \"end\": { \"line\": 3, \"column\": 13 } } }, { \"type\": \"ExpressionStatement\", \"expression\": { \"type\": \"Identifier\", \"name\": \"e\", \"range\": [46, 49], \"loc\": { \"start\": { \"line\": 4, \"column\": 8 }, \"end\": { \"line\": 4, \"column\": 11 } } }, \"range\": [46, 49], \"loc\": { \"start\": { \"line\": 4, \"column\": 8 }, \"end\": { \"line\": 4, \"column\": 11 } } }, { \"type\": \"ExpressionStatement\", \"expression\": { \"type\": \"UpdateExpression\", \"argument\": { \"type\": \"Identifier\", \"name\": \"c\", \"range\": [58, 59], \"loc\": { \"start\": { \"line\": 5, \"column\": 8 }, \"end\": { \"line\": 5, \"column\": 9 } } }, \"operator\": \"++\", \"prefix\": false, \"range\": [58, 61], \"loc\": { \"start\": { \"line\": 5, \"column\": 8 }, \"end\": { \"line\": 5, \"column\": 11 } } }, \"range\": [58, 61], \"loc\": { \"start\": { \"line\": 5, \"column\": 8 }, \"end\": { \"line\": 5, \"column\": 11 } } }, { \"type\": \"ExpressionStatement\", \"expression\": { \"type\": \"ArrayExpression\", \"elements\": [{ \"type\": \"Identifier\", \"name\": \"D\", \"range\": [71, 72], \"loc\": { \"start\": { \"line\": 6, \"column\": 9 }, \"end\": { \"line\": 6, \"column\": 10 } } }], \"range\": [70, 73], \"loc\": { \"start\": { \"line\": 6, \"column\": 8 }, \"end\": { \"line\": 6, \"column\": 11 } } }, \"range\": [70, 73], \"loc\": { \"start\": { \"line\": 6, \"column\": 8 }, \"end\": { \"line\": 6, \"column\": 11 } } }, { \"type\": \"ExpressionStatement\", \"expression\": { \"type\": \"BinaryExpression\", \"left\": { \"type\": \"UpdateExpression\", \"operator\": \"++\", \"argument\": { \"type\": \"Identifier\", \"name\": \"b\", \"range\": [93, 94], \"loc\": { \"start\": { \"line\": 8, \"column\": 8 }, \"end\": { \"line\": 8, \"column\": 9 } } }, \"prefix\": true, \"range\": [82, 94], \"loc\": { \"start\": { \"line\": 7, \"column\": 8 }, \"end\": { \"line\": 8, \"column\": 9 } } }, \"operator\": \"+\", \"right\": { \"type\": \"MemberExpression\", \"object\": { \"type\": \"UpdateExpression\", \"argument\": { \"type\": \"Identifier\", \"name\": \"c\", \"range\": [96, 97], \"loc\": { \"start\": { \"line\": 8, \"column\": 11 }, \"end\": { \"line\": 8, \"column\": 12 } } }, \"operator\": \"++\", \"prefix\": false, \"range\": [95, 100], \"loc\": { \"start\": { \"line\": 8, \"column\": 10 }, \"end\": { \"line\": 8, \"column\": 15 } } }, \"property\": { \"type\": \"Identifier\", \"name\": \"D\", \"range\": [101, 102], \"loc\": { \"start\": { \"line\": 8, \"column\": 16 }, \"end\": { \"line\": 8, \"column\": 17 } } }, \"computed\": true, \"range\": [95, 103], \"loc\": { \"start\": { \"line\": 8, \"column\": 10 }, \"end\": { \"line\": 8, \"column\": 18 } } }, \"range\": [82, 103], \"loc\": { \"start\": { \"line\": 7, \"column\": 8 }, \"end\": { \"line\": 8, \"column\": 18 } } }, \"range\": [82, 103], \"loc\": { \"start\": { \"line\": 7, \"column\": 8 }, \"end\": { \"line\": 8, \"column\": 18 } } }], \"range\": [0, 131], \"loc\": { \"start\": { \"line\": 0, \"column\": 0 }, \"end\": { \"line\": 10, \"column\": 8 } } }\r\n    ],\r\n    [\r\n        `6*a%[a][b]()*c,a,b?new [].c[10][20]()[10]:d`,\r\n        { \"type\": \"Program\", \"sourceType\": \"script\", \"body\": [{ \"type\": \"ExpressionStatement\", \"expression\": { \"type\": \"SequenceExpression\", \"expressions\": [{ \"type\": \"BinaryExpression\", \"left\": { \"type\": \"BinaryExpression\", \"left\": { \"type\": \"BinaryExpression\", \"left\": { \"type\": \"Literal\", \"value\": 6, \"raw\": \"6\", \"range\": [0, 1], \"loc\": { \"start\": { \"line\": 0, \"column\": 0 }, \"end\": { \"line\": 0, \"column\": 1 } } }, \"operator\": \"*\", \"right\": { \"type\": \"Identifier\", \"name\": \"a\", \"range\": [2, 3], \"loc\": { \"start\": { \"line\": 0, \"column\": 2 }, \"end\": { \"line\": 0, \"column\": 3 } } }, \"range\": [0, 3], \"loc\": { \"start\": { \"line\": 0, \"column\": 0 }, \"end\": { \"line\": 0, \"column\": 3 } } }, \"operator\": \"%\", \"right\": { \"type\": \"CallExpression\", \"callee\": { \"type\": \"MemberExpression\", \"object\": { \"type\": \"ArrayExpression\", \"elements\": [{ \"type\": \"Identifier\", \"name\": \"a\", \"range\": [5, 6], \"loc\": { \"start\": { \"line\": 0, \"column\": 5 }, \"end\": { \"line\": 0, \"column\": 6 } } }], \"range\": [4, 7], \"loc\": { \"start\": { \"line\": 0, \"column\": 4 }, \"end\": { \"line\": 0, \"column\": 7 } } }, \"property\": { \"type\": \"Identifier\", \"name\": \"b\", \"range\": [8, 9], \"loc\": { \"start\": { \"line\": 0, \"column\": 8 }, \"end\": { \"line\": 0, \"column\": 9 } } }, \"computed\": true, \"range\": [4, 10], \"loc\": { \"start\": { \"line\": 0, \"column\": 4 }, \"end\": { \"line\": 0, \"column\": 10 } } }, \"arguments\": [], \"range\": [4, 12], \"loc\": { \"start\": { \"line\": 0, \"column\": 4 }, \"end\": { \"line\": 0, \"column\": 12 } } }, \"range\": [0, 12], \"loc\": { \"start\": { \"line\": 0, \"column\": 0 }, \"end\": { \"line\": 0, \"column\": 12 } } }, \"operator\": \"*\", \"right\": { \"type\": \"Identifier\", \"name\": \"c\", \"range\": [13, 14], \"loc\": { \"start\": { \"line\": 0, \"column\": 13 }, \"end\": { \"line\": 0, \"column\": 14 } } }, \"range\": [0, 14], \"loc\": { \"start\": { \"line\": 0, \"column\": 0 }, \"end\": { \"line\": 0, \"column\": 14 } } }, { \"type\": \"Identifier\", \"name\": \"a\", \"range\": [15, 16], \"loc\": { \"start\": { \"line\": 0, \"column\": 15 }, \"end\": { \"line\": 0, \"column\": 16 } } }, { \"type\": \"ConditionalExpression\", \"test\": { \"type\": \"Identifier\", \"name\": \"b\", \"range\": [17, 18], \"loc\": { \"start\": { \"line\": 0, \"column\": 17 }, \"end\": { \"line\": 0, \"column\": 18 } } }, \"consequent\": { \"type\": \"MemberExpression\", \"object\": { \"type\": \"NewExpression\", \"callee\": { \"type\": \"MemberExpression\", \"object\": { \"type\": \"MemberExpression\", \"object\": { \"type\": \"MemberExpression\", \"object\": { \"type\": \"ArrayExpression\", \"elements\": [], \"range\": [23, 25], \"loc\": { \"start\": { \"line\": 0, \"column\": 23 }, \"end\": { \"line\": 0, \"column\": 25 } } }, \"property\": { \"type\": \"Identifier\", \"name\": \"c\", \"range\": [26, 27], \"loc\": { \"start\": { \"line\": 0, \"column\": 26 }, \"end\": { \"line\": 0, \"column\": 27 } } }, \"computed\": false, \"range\": [23, 27], \"loc\": { \"start\": { \"line\": 0, \"column\": 23 }, \"end\": { \"line\": 0, \"column\": 27 } } }, \"property\": { \"type\": \"Literal\", \"value\": 10, \"raw\": \"10\", \"range\": [28, 30], \"loc\": { \"start\": { \"line\": 0, \"column\": 28 }, \"end\": { \"line\": 0, \"column\": 30 } } }, \"computed\": true, \"range\": [23, 31], \"loc\": { \"start\": { \"line\": 0, \"column\": 23 }, \"end\": { \"line\": 0, \"column\": 31 } } }, \"property\": { \"type\": \"Literal\", \"value\": 20, \"raw\": \"20\", \"range\": [32, 34], \"loc\": { \"start\": { \"line\": 0, \"column\": 32 }, \"end\": { \"line\": 0, \"column\": 34 } } }, \"computed\": true, \"range\": [23, 35], \"loc\": { \"start\": { \"line\": 0, \"column\": 23 }, \"end\": { \"line\": 0, \"column\": 35 } } }, \"arguments\": [], \"range\": [19, 37], \"loc\": { \"start\": { \"line\": 0, \"column\": 19 }, \"end\": { \"line\": 0, \"column\": 37 } } }, \"property\": { \"type\": \"Literal\", \"value\": 10, \"raw\": \"10\", \"range\": [38, 40], \"loc\": { \"start\": { \"line\": 0, \"column\": 38 }, \"end\": { \"line\": 0, \"column\": 40 } } }, \"computed\": true, \"range\": [19, 41], \"loc\": { \"start\": { \"line\": 0, \"column\": 19 }, \"end\": { \"line\": 0, \"column\": 41 } } }, \"alternate\": { \"type\": \"Identifier\", \"name\": \"d\", \"range\": [42, 43], \"loc\": { \"start\": { \"line\": 0, \"column\": 42 }, \"end\": { \"line\": 0, \"column\": 43 } } }, \"range\": [17, 43], \"loc\": { \"start\": { \"line\": 0, \"column\": 17 }, \"end\": { \"line\": 0, \"column\": 43 } } }], \"range\": [0, 43], \"loc\": { \"start\": { \"line\": 0, \"column\": 0 }, \"end\": { \"line\": 0, \"column\": 43 } } }, \"range\": [0, 43], \"loc\": { \"start\": { \"line\": 0, \"column\": 0 }, \"end\": { \"line\": 0, \"column\": 43 } } }], \"range\": [0, 43], \"loc\": { \"start\": { \"line\": 0, \"column\": 0 }, \"end\": { \"line\": 0, \"column\": 43 } } }\r\n    ], [\r\n        `yield* a.b.c?a+b:/fsd/ig&&d;void function *(){yield* a.b.c?a+b:/fsd/ig&&d}`,\r\n        { \"type\": \"Program\", \"sourceType\": \"script\", \"body\": [{ \"type\": \"ExpressionStatement\", \"expression\": { \"type\": \"ConditionalExpression\", \"test\": { \"type\": \"BinaryExpression\", \"left\": { \"type\": \"Identifier\", \"name\": \"yield\", \"range\": [0, 5], \"loc\": { \"start\": { \"line\": 0, \"column\": 0 }, \"end\": { \"line\": 0, \"column\": 5 } } }, \"operator\": \"*\", \"right\": { \"type\": \"MemberExpression\", \"object\": { \"type\": \"MemberExpression\", \"object\": { \"type\": \"Identifier\", \"name\": \"a\", \"range\": [7, 8], \"loc\": { \"start\": { \"line\": 0, \"column\": 7 }, \"end\": { \"line\": 0, \"column\": 8 } } }, \"property\": { \"type\": \"Identifier\", \"name\": \"b\", \"range\": [9, 10], \"loc\": { \"start\": { \"line\": 0, \"column\": 9 }, \"end\": { \"line\": 0, \"column\": 10 } } }, \"computed\": false, \"range\": [7, 10], \"loc\": { \"start\": { \"line\": 0, \"column\": 7 }, \"end\": { \"line\": 0, \"column\": 10 } } }, \"property\": { \"type\": \"Identifier\", \"name\": \"c\", \"range\": [11, 12], \"loc\": { \"start\": { \"line\": 0, \"column\": 11 }, \"end\": { \"line\": 0, \"column\": 12 } } }, \"computed\": false, \"range\": [7, 12], \"loc\": { \"start\": { \"line\": 0, \"column\": 7 }, \"end\": { \"line\": 0, \"column\": 12 } } }, \"range\": [0, 12], \"loc\": { \"start\": { \"line\": 0, \"column\": 0 }, \"end\": { \"line\": 0, \"column\": 12 } } }, \"consequent\": { \"type\": \"BinaryExpression\", \"left\": { \"type\": \"Identifier\", \"name\": \"a\", \"range\": [13, 14], \"loc\": { \"start\": { \"line\": 0, \"column\": 13 }, \"end\": { \"line\": 0, \"column\": 14 } } }, \"operator\": \"+\", \"right\": { \"type\": \"Identifier\", \"name\": \"b\", \"range\": [15, 16], \"loc\": { \"start\": { \"line\": 0, \"column\": 15 }, \"end\": { \"line\": 0, \"column\": 16 } } }, \"range\": [13, 16], \"loc\": { \"start\": { \"line\": 0, \"column\": 13 }, \"end\": { \"line\": 0, \"column\": 16 } } }, \"alternate\": { \"type\": \"LogicalExpression\", \"left\": { \"type\": \"Literal\", \"value\": {}, \"raw\": \"/fsd/ig\", \"regex\": { \"pattern\": \"fsd\", \"flags\": \"ig\" }, \"range\": [17, 24], \"loc\": { \"start\": { \"line\": 0, \"column\": 17 }, \"end\": { \"line\": 0, \"column\": 24 } } }, \"operator\": \"&&\", \"right\": { \"type\": \"Identifier\", \"name\": \"d\", \"range\": [26, 27], \"loc\": { \"start\": { \"line\": 0, \"column\": 26 }, \"end\": { \"line\": 0, \"column\": 27 } } }, \"range\": [17, 27], \"loc\": { \"start\": { \"line\": 0, \"column\": 17 }, \"end\": { \"line\": 0, \"column\": 27 } } }, \"range\": [0, 27], \"loc\": { \"start\": { \"line\": 0, \"column\": 0 }, \"end\": { \"line\": 0, \"column\": 27 } } }, \"range\": [0, 28], \"loc\": { \"start\": { \"line\": 0, \"column\": 0 }, \"end\": { \"line\": 0, \"column\": 28 } } }, { \"type\": \"ExpressionStatement\", \"expression\": { \"type\": \"UnaryExpression\", \"operator\": \"void\", \"argument\": { \"type\": \"FunctionExpression\", \"async\": false, \"generator\": true, \"id\": null, \"params\": [], \"body\": { \"type\": \"BlockStatement\", \"body\": [{ \"type\": \"ExpressionStatement\", \"expression\": { \"type\": \"YieldExpression\", \"argument\": { \"type\": \"ConditionalExpression\", \"test\": { \"type\": \"MemberExpression\", \"object\": { \"type\": \"MemberExpression\", \"object\": { \"type\": \"Identifier\", \"name\": \"a\", \"range\": [53, 54], \"loc\": { \"start\": { \"line\": 0, \"column\": 53 }, \"end\": { \"line\": 0, \"column\": 54 } } }, \"property\": { \"type\": \"Identifier\", \"name\": \"b\", \"range\": [55, 56], \"loc\": { \"start\": { \"line\": 0, \"column\": 55 }, \"end\": { \"line\": 0, \"column\": 56 } } }, \"computed\": false, \"range\": [53, 56], \"loc\": { \"start\": { \"line\": 0, \"column\": 53 }, \"end\": { \"line\": 0, \"column\": 56 } } }, \"property\": { \"type\": \"Identifier\", \"name\": \"c\", \"range\": [57, 58], \"loc\": { \"start\": { \"line\": 0, \"column\": 57 }, \"end\": { \"line\": 0, \"column\": 58 } } }, \"computed\": false, \"range\": [53, 58], \"loc\": { \"start\": { \"line\": 0, \"column\": 53 }, \"end\": { \"line\": 0, \"column\": 58 } } }, \"consequent\": { \"type\": \"BinaryExpression\", \"left\": { \"type\": \"Identifier\", \"name\": \"a\", \"range\": [59, 60], \"loc\": { \"start\": { \"line\": 0, \"column\": 59 }, \"end\": { \"line\": 0, \"column\": 60 } } }, \"operator\": \"+\", \"right\": { \"type\": \"Identifier\", \"name\": \"b\", \"range\": [61, 62], \"loc\": { \"start\": { \"line\": 0, \"column\": 61 }, \"end\": { \"line\": 0, \"column\": 62 } } }, \"range\": [59, 62], \"loc\": { \"start\": { \"line\": 0, \"column\": 59 }, \"end\": { \"line\": 0, \"column\": 62 } } }, \"alternate\": { \"type\": \"LogicalExpression\", \"left\": { \"type\": \"Literal\", \"value\": {}, \"raw\": \"/fsd/ig\", \"regex\": { \"pattern\": \"fsd\", \"flags\": \"ig\" }, \"range\": [63, 70], \"loc\": { \"start\": { \"line\": 0, \"column\": 63 }, \"end\": { \"line\": 0, \"column\": 70 } } }, \"operator\": \"&&\", \"right\": { \"type\": \"Identifier\", \"name\": \"d\", \"range\": [72, 73], \"loc\": { \"start\": { \"line\": 0, \"column\": 72 }, \"end\": { \"line\": 0, \"column\": 73 } } }, \"range\": [63, 73], \"loc\": { \"start\": { \"line\": 0, \"column\": 63 }, \"end\": { \"line\": 0, \"column\": 73 } } }, \"range\": [53, 73], \"loc\": { \"start\": { \"line\": 0, \"column\": 53 }, \"end\": { \"line\": 0, \"column\": 73 } } }, \"delegate\": true, \"range\": [46, 73], \"loc\": { \"start\": { \"line\": 0, \"column\": 46 }, \"end\": { \"line\": 0, \"column\": 73 } } }, \"range\": [46, 73], \"loc\": { \"start\": { \"line\": 0, \"column\": 46 }, \"end\": { \"line\": 0, \"column\": 73 } } }] }, \"expression\": false, \"range\": [33, 74], \"loc\": { \"start\": { \"line\": 0, \"column\": 33 }, \"end\": { \"line\": 0, \"column\": 74 } } }, \"prefix\": true, \"range\": [28, 74], \"loc\": { \"start\": { \"line\": 0, \"column\": 28 }, \"end\": { \"line\": 0, \"column\": 74 } } }, \"range\": [28, 74], \"loc\": { \"start\": { \"line\": 0, \"column\": 28 }, \"end\": { \"line\": 0, \"column\": 74 } } }], \"range\": [0, 74], \"loc\": { \"start\": { \"line\": 0, \"column\": 0 }, \"end\": { \"line\": 0, \"column\": 74 } } }\r\n    ], [\r\n        `\r\n        a,b?new [].c[10][20]()[10]:d;\r\n        await- a.b.c?a+b:/fsd/ig&&d;\r\n        async a=>await- a.b.c?a+b:/fsd/ig&&d;\r\n        `,\r\n        { \"type\": \"Program\", \"sourceType\": \"script\", \"body\": [{ \"type\": \"ExpressionStatement\", \"expression\": { \"type\": \"SequenceExpression\", \"expressions\": [{ \"type\": \"Identifier\", \"name\": \"a\", \"range\": [9, 10], \"loc\": { \"start\": { \"line\": 1, \"column\": 8 }, \"end\": { \"line\": 1, \"column\": 9 } } }, { \"type\": \"ConditionalExpression\", \"test\": { \"type\": \"Identifier\", \"name\": \"b\", \"range\": [11, 12], \"loc\": { \"start\": { \"line\": 1, \"column\": 10 }, \"end\": { \"line\": 1, \"column\": 11 } } }, \"consequent\": { \"type\": \"MemberExpression\", \"object\": { \"type\": \"NewExpression\", \"callee\": { \"type\": \"MemberExpression\", \"object\": { \"type\": \"MemberExpression\", \"object\": { \"type\": \"MemberExpression\", \"object\": { \"type\": \"ArrayExpression\", \"elements\": [], \"range\": [17, 19], \"loc\": { \"start\": { \"line\": 1, \"column\": 16 }, \"end\": { \"line\": 1, \"column\": 18 } } }, \"property\": { \"type\": \"Identifier\", \"name\": \"c\", \"range\": [20, 21], \"loc\": { \"start\": { \"line\": 1, \"column\": 19 }, \"end\": { \"line\": 1, \"column\": 20 } } }, \"computed\": false, \"range\": [17, 21], \"loc\": { \"start\": { \"line\": 1, \"column\": 16 }, \"end\": { \"line\": 1, \"column\": 20 } } }, \"property\": { \"type\": \"Literal\", \"value\": 10, \"raw\": \"10\", \"range\": [22, 24], \"loc\": { \"start\": { \"line\": 1, \"column\": 21 }, \"end\": { \"line\": 1, \"column\": 23 } } }, \"computed\": true, \"range\": [17, 25], \"loc\": { \"start\": { \"line\": 1, \"column\": 16 }, \"end\": { \"line\": 1, \"column\": 24 } } }, \"property\": { \"type\": \"Literal\", \"value\": 20, \"raw\": \"20\", \"range\": [26, 28], \"loc\": { \"start\": { \"line\": 1, \"column\": 25 }, \"end\": { \"line\": 1, \"column\": 27 } } }, \"computed\": true, \"range\": [17, 29], \"loc\": { \"start\": { \"line\": 1, \"column\": 16 }, \"end\": { \"line\": 1, \"column\": 28 } } }, \"arguments\": [], \"range\": [13, 31], \"loc\": { \"start\": { \"line\": 1, \"column\": 12 }, \"end\": { \"line\": 1, \"column\": 30 } } }, \"property\": { \"type\": \"Literal\", \"value\": 10, \"raw\": \"10\", \"range\": [32, 34], \"loc\": { \"start\": { \"line\": 1, \"column\": 31 }, \"end\": { \"line\": 1, \"column\": 33 } } }, \"computed\": true, \"range\": [13, 35], \"loc\": { \"start\": { \"line\": 1, \"column\": 12 }, \"end\": { \"line\": 1, \"column\": 34 } } }, \"alternate\": { \"type\": \"Identifier\", \"name\": \"d\", \"range\": [36, 37], \"loc\": { \"start\": { \"line\": 1, \"column\": 35 }, \"end\": { \"line\": 1, \"column\": 36 } } }, \"range\": [11, 37], \"loc\": { \"start\": { \"line\": 1, \"column\": 10 }, \"end\": { \"line\": 1, \"column\": 36 } } }], \"range\": [9, 37], \"loc\": { \"start\": { \"line\": 1, \"column\": 8 }, \"end\": { \"line\": 1, \"column\": 36 } } }, \"range\": [9, 38], \"loc\": { \"start\": { \"line\": 1, \"column\": 8 }, \"end\": { \"line\": 1, \"column\": 37 } } }, { \"type\": \"ExpressionStatement\", \"expression\": { \"type\": \"ConditionalExpression\", \"test\": { \"type\": \"BinaryExpression\", \"left\": { \"type\": \"Identifier\", \"name\": \"await\", \"range\": [47, 52], \"loc\": { \"start\": { \"line\": 2, \"column\": 8 }, \"end\": { \"line\": 2, \"column\": 13 } } }, \"operator\": \"-\", \"right\": { \"type\": \"MemberExpression\", \"object\": { \"type\": \"MemberExpression\", \"object\": { \"type\": \"Identifier\", \"name\": \"a\", \"range\": [54, 55], \"loc\": { \"start\": { \"line\": 2, \"column\": 15 }, \"end\": { \"line\": 2, \"column\": 16 } } }, \"property\": { \"type\": \"Identifier\", \"name\": \"b\", \"range\": [56, 57], \"loc\": { \"start\": { \"line\": 2, \"column\": 17 }, \"end\": { \"line\": 2, \"column\": 18 } } }, \"computed\": false, \"range\": [54, 57], \"loc\": { \"start\": { \"line\": 2, \"column\": 15 }, \"end\": { \"line\": 2, \"column\": 18 } } }, \"property\": { \"type\": \"Identifier\", \"name\": \"c\", \"range\": [58, 59], \"loc\": { \"start\": { \"line\": 2, \"column\": 19 }, \"end\": { \"line\": 2, \"column\": 20 } } }, \"computed\": false, \"range\": [54, 59], \"loc\": { \"start\": { \"line\": 2, \"column\": 15 }, \"end\": { \"line\": 2, \"column\": 20 } } }, \"range\": [47, 59], \"loc\": { \"start\": { \"line\": 2, \"column\": 8 }, \"end\": { \"line\": 2, \"column\": 20 } } }, \"consequent\": { \"type\": \"BinaryExpression\", \"left\": { \"type\": \"Identifier\", \"name\": \"a\", \"range\": [60, 61], \"loc\": { \"start\": { \"line\": 2, \"column\": 21 }, \"end\": { \"line\": 2, \"column\": 22 } } }, \"operator\": \"+\", \"right\": { \"type\": \"Identifier\", \"name\": \"b\", \"range\": [62, 63], \"loc\": { \"start\": { \"line\": 2, \"column\": 23 }, \"end\": { \"line\": 2, \"column\": 24 } } }, \"range\": [60, 63], \"loc\": { \"start\": { \"line\": 2, \"column\": 21 }, \"end\": { \"line\": 2, \"column\": 24 } } }, \"alternate\": { \"type\": \"LogicalExpression\", \"left\": { \"type\": \"Literal\", \"value\": {}, \"raw\": \"/fsd/ig\", \"regex\": { \"pattern\": \"fsd\", \"flags\": \"ig\" }, \"range\": [64, 71], \"loc\": { \"start\": { \"line\": 2, \"column\": 25 }, \"end\": { \"line\": 2, \"column\": 32 } } }, \"operator\": \"&&\", \"right\": { \"type\": \"Identifier\", \"name\": \"d\", \"range\": [73, 74], \"loc\": { \"start\": { \"line\": 2, \"column\": 34 }, \"end\": { \"line\": 2, \"column\": 35 } } }, \"range\": [64, 74], \"loc\": { \"start\": { \"line\": 2, \"column\": 25 }, \"end\": { \"line\": 2, \"column\": 35 } } }, \"range\": [47, 74], \"loc\": { \"start\": { \"line\": 2, \"column\": 8 }, \"end\": { \"line\": 2, \"column\": 35 } } }, \"range\": [47, 75], \"loc\": { \"start\": { \"line\": 2, \"column\": 8 }, \"end\": { \"line\": 2, \"column\": 36 } } }, { \"type\": \"ExpressionStatement\", \"expression\": { \"type\": \"ArrowFunctionExpression\", \"async\": true, \"generator\": false, \"id\": null, \"params\": [{ \"type\": \"Identifier\", \"name\": \"a\", \"range\": [90, 91], \"loc\": { \"start\": { \"line\": 3, \"column\": 14 }, \"end\": { \"line\": 3, \"column\": 15 } } }], \"body\": { \"type\": \"ConditionalExpression\", \"test\": { \"type\": \"AwaitExpression\", \"argument\": { \"type\": \"UnaryExpression\", \"operator\": \"-\", \"argument\": { \"type\": \"MemberExpression\", \"object\": { \"type\": \"MemberExpression\", \"object\": { \"type\": \"Identifier\", \"name\": \"a\", \"range\": [100, 101], \"loc\": { \"start\": { \"line\": 3, \"column\": 24 }, \"end\": { \"line\": 3, \"column\": 25 } } }, \"property\": { \"type\": \"Identifier\", \"name\": \"b\", \"range\": [102, 103], \"loc\": { \"start\": { \"line\": 3, \"column\": 26 }, \"end\": { \"line\": 3, \"column\": 27 } } }, \"computed\": false, \"range\": [100, 103], \"loc\": { \"start\": { \"line\": 3, \"column\": 24 }, \"end\": { \"line\": 3, \"column\": 27 } } }, \"property\": { \"type\": \"Identifier\", \"name\": \"c\", \"range\": [104, 105], \"loc\": { \"start\": { \"line\": 3, \"column\": 28 }, \"end\": { \"line\": 3, \"column\": 29 } } }, \"computed\": false, \"range\": [100, 105], \"loc\": { \"start\": { \"line\": 3, \"column\": 24 }, \"end\": { \"line\": 3, \"column\": 29 } } }, \"prefix\": true, \"range\": [98, 105], \"loc\": { \"start\": { \"line\": 3, \"column\": 22 }, \"end\": { \"line\": 3, \"column\": 29 } } }, \"range\": [93, 105], \"loc\": { \"start\": { \"line\": 3, \"column\": 17 }, \"end\": { \"line\": 3, \"column\": 29 } } }, \"consequent\": { \"type\": \"BinaryExpression\", \"left\": { \"type\": \"Identifier\", \"name\": \"a\", \"range\": [106, 107], \"loc\": { \"start\": { \"line\": 3, \"column\": 30 }, \"end\": { \"line\": 3, \"column\": 31 } } }, \"operator\": \"+\", \"right\": { \"type\": \"Identifier\", \"name\": \"b\", \"range\": [108, 109], \"loc\": { \"start\": { \"line\": 3, \"column\": 32 }, \"end\": { \"line\": 3, \"column\": 33 } } }, \"range\": [106, 109], \"loc\": { \"start\": { \"line\": 3, \"column\": 30 }, \"end\": { \"line\": 3, \"column\": 33 } } }, \"alternate\": { \"type\": \"LogicalExpression\", \"left\": { \"type\": \"Literal\", \"value\": {}, \"raw\": \"/fsd/ig\", \"regex\": { \"pattern\": \"fsd\", \"flags\": \"ig\" }, \"range\": [110, 117], \"loc\": { \"start\": { \"line\": 3, \"column\": 34 }, \"end\": { \"line\": 3, \"column\": 41 } } }, \"operator\": \"&&\", \"right\": { \"type\": \"Identifier\", \"name\": \"d\", \"range\": [119, 120], \"loc\": { \"start\": { \"line\": 3, \"column\": 43 }, \"end\": { \"line\": 3, \"column\": 44 } } }, \"range\": [110, 120], \"loc\": { \"start\": { \"line\": 3, \"column\": 34 }, \"end\": { \"line\": 3, \"column\": 44 } } }, \"range\": [93, 120], \"loc\": { \"start\": { \"line\": 3, \"column\": 17 }, \"end\": { \"line\": 3, \"column\": 44 } } }, \"expression\": true, \"range\": [84, 120], \"loc\": { \"start\": { \"line\": 3, \"column\": 8 }, \"end\": { \"line\": 3, \"column\": 44 } } }, \"range\": [84, 121], \"loc\": { \"start\": { \"line\": 3, \"column\": 8 }, \"end\": { \"line\": 3, \"column\": 45 } } }], \"range\": [0, 130], \"loc\": { \"start\": { \"line\": 0, \"column\": 0 }, \"end\": { \"line\": 4, \"column\": 8 } } }\r\n    ],\r\n    [\r\n        \"if(a){}else if(b+c){}else if('') console.log();else a:while(b)b:{break a;} !function a(){}[10] ;new function(){}``()\",\r\n        { \"type\": \"Program\", \"sourceType\": \"script\", \"body\": [{ \"type\": \"IfStatement\", \"test\": { \"type\": \"Identifier\", \"name\": \"a\", \"range\": [3, 4], \"loc\": { \"start\": { \"line\": 0, \"column\": 3 }, \"end\": { \"line\": 0, \"column\": 4 } } }, \"consequent\": { \"type\": \"BlockStatement\", \"body\": [], \"range\": [5, 7], \"loc\": { \"start\": { \"line\": 0, \"column\": 5 }, \"end\": { \"line\": 0, \"column\": 7 } } }, \"alternate\": { \"type\": \"IfStatement\", \"test\": { \"type\": \"BinaryExpression\", \"left\": { \"type\": \"Identifier\", \"name\": \"b\", \"range\": [15, 16], \"loc\": { \"start\": { \"line\": 0, \"column\": 15 }, \"end\": { \"line\": 0, \"column\": 16 } } }, \"operator\": \"+\", \"right\": { \"type\": \"Identifier\", \"name\": \"c\", \"range\": [17, 18], \"loc\": { \"start\": { \"line\": 0, \"column\": 17 }, \"end\": { \"line\": 0, \"column\": 18 } } }, \"range\": [15, 18], \"loc\": { \"start\": { \"line\": 0, \"column\": 15 }, \"end\": { \"line\": 0, \"column\": 18 } } }, \"consequent\": { \"type\": \"BlockStatement\", \"body\": [], \"range\": [19, 21], \"loc\": { \"start\": { \"line\": 0, \"column\": 19 }, \"end\": { \"line\": 0, \"column\": 21 } } }, \"alternate\": { \"type\": \"IfStatement\", \"test\": { \"type\": \"Literal\", \"value\": \"\", \"raw\": \"''\", \"range\": [29, 31], \"loc\": { \"start\": { \"line\": 0, \"column\": 29 }, \"end\": { \"line\": 0, \"column\": 31 } } }, \"consequent\": { \"type\": \"ExpressionStatement\", \"expression\": { \"type\": \"CallExpression\", \"callee\": { \"type\": \"MemberExpression\", \"object\": { \"type\": \"Identifier\", \"name\": \"console\", \"range\": [33, 40], \"loc\": { \"start\": { \"line\": 0, \"column\": 33 }, \"end\": { \"line\": 0, \"column\": 40 } } }, \"property\": { \"type\": \"Identifier\", \"name\": \"log\", \"range\": [41, 44], \"loc\": { \"start\": { \"line\": 0, \"column\": 41 }, \"end\": { \"line\": 0, \"column\": 44 } } }, \"computed\": false, \"range\": [33, 44], \"loc\": { \"start\": { \"line\": 0, \"column\": 33 }, \"end\": { \"line\": 0, \"column\": 44 } } }, \"arguments\": [], \"range\": [33, 46], \"loc\": { \"start\": { \"line\": 0, \"column\": 33 }, \"end\": { \"line\": 0, \"column\": 46 } } }, \"range\": [33, 47], \"loc\": { \"start\": { \"line\": 0, \"column\": 33 }, \"end\": { \"line\": 0, \"column\": 47 } } }, \"alternate\": { \"type\": \"LabeledStatement\", \"label\": { \"type\": \"Identifier\", \"name\": \"a\", \"range\": [52, 53], \"loc\": { \"start\": { \"line\": 0, \"column\": 52 }, \"end\": { \"line\": 0, \"column\": 53 } } }, \"body\": { \"type\": \"WhileStatement\", \"test\": { \"type\": \"Identifier\", \"name\": \"b\", \"range\": [60, 61], \"loc\": { \"start\": { \"line\": 0, \"column\": 60 }, \"end\": { \"line\": 0, \"column\": 61 } } }, \"body\": { \"type\": \"LabeledStatement\", \"label\": { \"type\": \"Identifier\", \"name\": \"b\", \"range\": [62, 63], \"loc\": { \"start\": { \"line\": 0, \"column\": 62 }, \"end\": { \"line\": 0, \"column\": 63 } } }, \"body\": { \"type\": \"BlockStatement\", \"body\": [{ \"type\": \"BreakStatement\", \"label\": { \"type\": \"Identifier\", \"name\": \"a\", \"range\": [71, 72], \"loc\": { \"start\": { \"line\": 0, \"column\": 71 }, \"end\": { \"line\": 0, \"column\": 72 } } }, \"range\": [65, 73], \"loc\": { \"start\": { \"line\": 0, \"column\": 65 }, \"end\": { \"line\": 0, \"column\": 73 } } }], \"range\": [64, 74], \"loc\": { \"start\": { \"line\": 0, \"column\": 64 }, \"end\": { \"line\": 0, \"column\": 74 } } }, \"range\": [62, 74], \"loc\": { \"start\": { \"line\": 0, \"column\": 62 }, \"end\": { \"line\": 0, \"column\": 74 } } }, \"range\": [54, 74], \"loc\": { \"start\": { \"line\": 0, \"column\": 54 }, \"end\": { \"line\": 0, \"column\": 74 } } }, \"range\": [52, 74], \"loc\": { \"start\": { \"line\": 0, \"column\": 52 }, \"end\": { \"line\": 0, \"column\": 74 } } }, \"range\": [26, 74], \"loc\": { \"start\": { \"line\": 0, \"column\": 26 }, \"end\": { \"line\": 0, \"column\": 74 } } }, \"range\": [12, 74], \"loc\": { \"start\": { \"line\": 0, \"column\": 12 }, \"end\": { \"line\": 0, \"column\": 74 } } }, \"range\": [0, 74], \"loc\": { \"start\": { \"line\": 0, \"column\": 0 }, \"end\": { \"line\": 0, \"column\": 74 } } }, { \"type\": \"ExpressionStatement\", \"expression\": { \"type\": \"UnaryExpression\", \"operator\": \"!\", \"argument\": { \"type\": \"MemberExpression\", \"object\": { \"type\": \"FunctionExpression\", \"async\": false, \"generator\": false, \"id\": { \"type\": \"Identifier\", \"name\": \"a\", \"range\": [85, 86], \"loc\": { \"start\": { \"line\": 0, \"column\": 85 }, \"end\": { \"line\": 0, \"column\": 86 } } }, \"params\": [], \"body\": { \"type\": \"BlockStatement\", \"body\": [] }, \"expression\": false, \"range\": [76, 90], \"loc\": { \"start\": { \"line\": 0, \"column\": 76 }, \"end\": { \"line\": 0, \"column\": 90 } } }, \"property\": { \"type\": \"Literal\", \"value\": 10, \"raw\": \"10\", \"range\": [91, 93], \"loc\": { \"start\": { \"line\": 0, \"column\": 91 }, \"end\": { \"line\": 0, \"column\": 93 } } }, \"computed\": true, \"range\": [76, 94], \"loc\": { \"start\": { \"line\": 0, \"column\": 76 }, \"end\": { \"line\": 0, \"column\": 94 } } }, \"prefix\": true, \"range\": [75, 94], \"loc\": { \"start\": { \"line\": 0, \"column\": 75 }, \"end\": { \"line\": 0, \"column\": 94 } } }, \"range\": [75, 96], \"loc\": { \"start\": { \"line\": 0, \"column\": 75 }, \"end\": { \"line\": 0, \"column\": 96 } } }, { \"type\": \"ExpressionStatement\", \"expression\": { \"type\": \"NewExpression\", \"callee\": { \"type\": \"TaggedTemplateExpression\", \"tag\": { \"type\": \"FunctionExpression\", \"async\": false, \"generator\": false, \"id\": null, \"params\": [], \"body\": { \"type\": \"BlockStatement\", \"body\": [] }, \"expression\": false, \"range\": [100, 112], \"loc\": { \"start\": { \"line\": 0, \"column\": 100 }, \"end\": { \"line\": 0, \"column\": 112 } } }, \"quasi\": { \"type\": \"TemplateLiteral\", \"quasis\": [{ \"type\": \"TemplateElement\", \"value\": { \"raw\": \"``\", \"cooked\": \"\" }, \"range\": [112, 114], \"loc\": { \"start\": { \"line\": 0 }, \"end\": { \"line\": 0, \"column\": 114 } }, \"tail\": true }], \"expressions\": [], \"range\": [112, 114], \"loc\": { \"start\": { \"line\": 0, \"column\": 112 }, \"end\": { \"line\": 0, \"column\": 114 } } }, \"range\": [100, 114], \"loc\": { \"start\": { \"line\": 0, \"column\": 100 }, \"end\": { \"line\": 0, \"column\": 114 } } }, \"arguments\": [], \"range\": [96, 116], \"loc\": { \"start\": { \"line\": 0, \"column\": 96 }, \"end\": { \"line\": 0, \"column\": 116 } } }, \"range\": [96, 116], \"loc\": { \"start\": { \"line\": 0, \"column\": 96 }, \"end\": { \"line\": 0, \"column\": 116 } } }], \"range\": [0, 116], \"loc\": { \"start\": { \"line\": 0, \"column\": 0 }, \"end\": { \"line\": 0, \"column\": 116 } } }\r\n    ]\r\n]\r\nlet table = [];\r\n\r\nfor (const [input, control] of tast_list) {\r\n    let output = parser.parse(input);\r\n    table.push(\r\n        {\r\n            equal: deepEqual(control, output),\r\n            source: input,\r\n            control,\r\n            output\r\n        }\r\n    )\r\n}\r\nconsole.table(table);\r\n\r\n\r\n\r\nfunction weakEqual(a: any, b: any) {\r\n    if (typeof a === \"object\") {\r\n        if (typeof b === \"object\") {\r\n            if (a !== b) {\r\n                if (a === null || b === null) {\r\n                    return [a, b];\r\n                }\r\n                let keys = new Set(Object.keys(a).concat(Object.keys(b)));\r\n                for (const key of Array.from(keys)) {\r\n                    if (key === \"range\" || key === \"loc\") {\r\n                        continue;\r\n                    }\r\n                    let res = weakEqual(a[key], b[key]);\r\n                    if (res !== true) {\r\n                        res.unshift(a, b, key);\r\n                        return res;\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        } else {\r\n            return [a, b];\r\n        }\r\n    } else {\r\n        return a === b || [a, b];\r\n    }\r\n}\r\n\r\nfunction deepEqual(a: any, b: any) {\r\n    if (typeof a === \"object\") {\r\n        if (typeof b === \"object\") {\r\n            if (a !== b) {\r\n                if (a === null || b === null) {\r\n                    return [a, b];\r\n                }\r\n                let keys = new Set(Object.keys(a).concat(Object.keys(b)));\r\n                for (const key of Array.from(keys)) {\r\n                    let res = deepEqual(a[key], b[key]);\r\n                    if (res !== true) {\r\n                        res.unshift(a, b, key);\r\n                        return res;\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        } else {\r\n            return [a, b];\r\n        }\r\n    } else {\r\n        return a === b || [a, b];\r\n    }\r\n}\r\n\r\n\r\n","\r\n(function webpackUniversalModuleDefinition(root, factory) {\r\n/* istanbul ignore next */\r\n\tif(typeof exports === 'object' && typeof module === 'object')\r\n\t\tmodule.exports = factory();\r\n\telse if(typeof define === 'function' && define.amd)\r\n\t\tdefine([], factory);\r\n/* istanbul ignore next */\r\n\telse if(typeof exports === 'object')\r\n\t\texports[\"esprima\"] = factory();\r\n\telse\r\n\t\troot[\"esprima\"] = factory();\r\n})(this, function() {\r\nreturn /******/ (function(modules) { // webpackBootstrap\r\n/******/ \t// The module cache\r\n/******/ \tvar installedModules = {};\r\n\r\n/******/ \t// The require function\r\n/******/ \tfunction __webpack_require__(moduleId) {\r\n\r\n/******/ \t\t// Check if module is in cache\r\n/* istanbul ignore if */\r\n/******/ \t\tif(installedModules[moduleId])\r\n/******/ \t\t\treturn installedModules[moduleId].exports;\r\n\r\n/******/ \t\t// Create a new module (and put it into the cache)\r\n/******/ \t\tvar module = installedModules[moduleId] = {\r\n/******/ \t\t\texports: {},\r\n/******/ \t\t\tid: moduleId,\r\n/******/ \t\t\tloaded: false\r\n/******/ \t\t};\r\n\r\n/******/ \t\t// Execute the module function\r\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\r\n\r\n/******/ \t\t// Flag the module as loaded\r\n/******/ \t\tmodule.loaded = true;\r\n\r\n/******/ \t\t// Return the exports of the module\r\n/******/ \t\treturn module.exports;\r\n/******/ \t}\r\n\r\n\r\n/******/ \t// expose the modules object (__webpack_modules__)\r\n/******/ \t__webpack_require__.m = modules;\r\n\r\n/******/ \t// expose the module cache\r\n/******/ \t__webpack_require__.c = installedModules;\r\n\r\n/******/ \t// __webpack_public_path__\r\n/******/ \t__webpack_require__.p = \"\";\r\n\r\n/******/ \t// Load entry module and return exports\r\n/******/ \treturn __webpack_require__(0);\r\n/******/ })\r\n/************************************************************************/\r\n/******/ ([\r\n/* 0 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\"use strict\";\r\n\t/*\r\n\t  Copyright JS Foundation and other contributors, https://js.foundation/\r\n\r\n\t  Redistribution and use in source and binary forms, with or without\r\n\t  modification, are permitted provided that the following conditions are met:\r\n\r\n\t    * Redistributions of source code must retain the above copyright\r\n\t      notice, this list of conditions and the following disclaimer.\r\n\t    * Redistributions in binary form must reproduce the above copyright\r\n\t      notice, this list of conditions and the following disclaimer in the\r\n\t      documentation and/or other materials provided with the distribution.\r\n\r\n\t  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n\t  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n\t  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n\t  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\r\n\t  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n\t  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n\t  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n\t  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n\t  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\r\n\t  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\t*/\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar comment_handler_1 = __webpack_require__(1);\r\n\tvar jsx_parser_1 = __webpack_require__(3);\r\n\tvar parser_1 = __webpack_require__(8);\r\n\tvar tokenizer_1 = __webpack_require__(15);\r\n\tfunction parse(code, options, delegate) {\r\n\t    var commentHandler = null;\r\n\t    var proxyDelegate = function (node, metadata) {\r\n\t        if (delegate) {\r\n\t            delegate(node, metadata);\r\n\t        }\r\n\t        if (commentHandler) {\r\n\t            commentHandler.visit(node, metadata);\r\n\t        }\r\n\t    };\r\n\t    var parserDelegate = (typeof delegate === 'function') ? proxyDelegate : null;\r\n\t    var collectComment = false;\r\n\t    if (options) {\r\n\t        collectComment = (typeof options.comment === 'boolean' && options.comment);\r\n\t        var attachComment = (typeof options.attachComment === 'boolean' && options.attachComment);\r\n\t        if (collectComment || attachComment) {\r\n\t            commentHandler = new comment_handler_1.CommentHandler();\r\n\t            commentHandler.attach = attachComment;\r\n\t            options.comment = true;\r\n\t            parserDelegate = proxyDelegate;\r\n\t        }\r\n\t    }\r\n\t    var isModule = false;\r\n\t    if (options && typeof options.sourceType === 'string') {\r\n\t        isModule = (options.sourceType === 'module');\r\n\t    }\r\n\t    var parser;\r\n\t    if (options && typeof options.jsx === 'boolean' && options.jsx) {\r\n\t        parser = new jsx_parser_1.JSXParser(code, options, parserDelegate);\r\n\t    }\r\n\t    else {\r\n\t        parser = new parser_1.Parser(code, options, parserDelegate);\r\n\t    }\r\n\t    var program = isModule ? parser.parseModule() : parser.parseScript();\r\n\t    var ast = program;\r\n\t    if (collectComment && commentHandler) {\r\n\t        ast.comments = commentHandler.comments;\r\n\t    }\r\n\t    if (parser.config.tokens) {\r\n\t        ast.tokens = parser.tokens;\r\n\t    }\r\n\t    if (parser.config.tolerant) {\r\n\t        ast.errors = parser.errorHandler.errors;\r\n\t    }\r\n\t    return ast;\r\n\t}\r\n\texports.parse = parse;\r\n\tfunction parseModule(code, options, delegate) {\r\n\t    var parsingOptions = options || {};\r\n\t    parsingOptions.sourceType = 'module';\r\n\t    return parse(code, parsingOptions, delegate);\r\n\t}\r\n\texports.parseModule = parseModule;\r\n\tfunction parseScript(code, options, delegate) {\r\n\t    var parsingOptions = options || {};\r\n\t    parsingOptions.sourceType = 'script';\r\n\t    return parse(code, parsingOptions, delegate);\r\n\t}\r\n\texports.parseScript = parseScript;\r\n\tfunction tokenize(code, options, delegate) {\r\n\t    var tokenizer = new tokenizer_1.Tokenizer(code, options);\r\n\t    var tokens = [];\r\n\t    try {\r\n\t        while (true) {\r\n\t            var token = tokenizer.getNextToken();\r\n\t            if (!token) {\r\n\t                break;\r\n\t            }\r\n\t            if (delegate) {\r\n\t                token = delegate(token);\r\n\t            }\r\n\t            tokens.push(token);\r\n\t        }\r\n\t    }\r\n\t    catch (e) {\r\n\t        tokenizer.errorHandler.tolerate(e);\r\n\t    }\r\n\t    if (tokenizer.errorHandler.tolerant) {\r\n\t        tokens.errors = tokenizer.errors();\r\n\t    }\r\n\t    return tokens;\r\n\t}\r\n\texports.tokenize = tokenize;\r\n\tvar syntax_1 = __webpack_require__(2);\r\n\texports.Syntax = syntax_1.Syntax;\r\n\t// Sync with *.json manifests.\r\n\texports.version = '4.0.0-dev';\r\n\r\n\r\n/***/ },\r\n/* 1 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\"use strict\";\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar syntax_1 = __webpack_require__(2);\r\n\tvar CommentHandler = /** @class */ (function () {\r\n\t    function CommentHandler() {\r\n\t        this.attach = false;\r\n\t        this.comments = [];\r\n\t        this.stack = [];\r\n\t        this.leading = [];\r\n\t        this.trailing = [];\r\n\t    }\r\n\t    CommentHandler.prototype.insertInnerComments = function (node, metadata) {\r\n\t        //  innnerComments for properties empty block\r\n\t        //  `function a() {/** comments **\\/}`\r\n\t        if (node.type === syntax_1.Syntax.BlockStatement && node.body.length === 0) {\r\n\t            var innerComments = [];\r\n\t            for (var i = this.leading.length - 1; i >= 0; --i) {\r\n\t                var entry = this.leading[i];\r\n\t                if (metadata.end.offset >= entry.start) {\r\n\t                    innerComments.unshift(entry.comment);\r\n\t                    this.leading.splice(i, 1);\r\n\t                    this.trailing.splice(i, 1);\r\n\t                }\r\n\t            }\r\n\t            if (innerComments.length) {\r\n\t                node.innerComments = innerComments;\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    CommentHandler.prototype.findTrailingComments = function (metadata) {\r\n\t        var trailingComments = [];\r\n\t        if (this.trailing.length > 0) {\r\n\t            for (var i = this.trailing.length - 1; i >= 0; --i) {\r\n\t                var entry = this.trailing[i];\r\n\t                if (entry.start >= metadata.end.offset) {\r\n\t                    trailingComments.unshift(entry.comment);\r\n\t                }\r\n\t            }\r\n\t            this.trailing.length = 0;\r\n\t            return trailingComments;\r\n\t        }\r\n\t        var last = this.stack[this.stack.length - 1];\r\n\t        if (last && last.node.trailingComments) {\r\n\t            var firstComment = last.node.trailingComments[0];\r\n\t            if (firstComment && firstComment.range[0] >= metadata.end.offset) {\r\n\t                trailingComments = last.node.trailingComments;\r\n\t                delete last.node.trailingComments;\r\n\t            }\r\n\t        }\r\n\t        return trailingComments;\r\n\t    };\r\n\t    CommentHandler.prototype.findLeadingComments = function (metadata) {\r\n\t        var leadingComments = [];\r\n\t        var target;\r\n\t        while (this.stack.length > 0) {\r\n\t            var entry = this.stack[this.stack.length - 1];\r\n\t            if (entry && entry.start >= metadata.start.offset) {\r\n\t                target = entry.node;\r\n\t                this.stack.pop();\r\n\t            }\r\n\t            else {\r\n\t                break;\r\n\t            }\r\n\t        }\r\n\t        if (target) {\r\n\t            var count = target.leadingComments ? target.leadingComments.length : 0;\r\n\t            for (var i = count - 1; i >= 0; --i) {\r\n\t                var comment = target.leadingComments[i];\r\n\t                if (comment.range[1] <= metadata.start.offset) {\r\n\t                    leadingComments.unshift(comment);\r\n\t                    target.leadingComments.splice(i, 1);\r\n\t                }\r\n\t            }\r\n\t            if (target.leadingComments && target.leadingComments.length === 0) {\r\n\t                delete target.leadingComments;\r\n\t            }\r\n\t            return leadingComments;\r\n\t        }\r\n\t        for (var i = this.leading.length - 1; i >= 0; --i) {\r\n\t            var entry = this.leading[i];\r\n\t            if (entry.start <= metadata.start.offset) {\r\n\t                leadingComments.unshift(entry.comment);\r\n\t                this.leading.splice(i, 1);\r\n\t            }\r\n\t        }\r\n\t        return leadingComments;\r\n\t    };\r\n\t    CommentHandler.prototype.visitNode = function (node, metadata) {\r\n\t        if (node.type === syntax_1.Syntax.Program && node.body.length > 0) {\r\n\t            return;\r\n\t        }\r\n\t        this.insertInnerComments(node, metadata);\r\n\t        var trailingComments = this.findTrailingComments(metadata);\r\n\t        var leadingComments = this.findLeadingComments(metadata);\r\n\t        if (leadingComments.length > 0) {\r\n\t            node.leadingComments = leadingComments;\r\n\t        }\r\n\t        if (trailingComments.length > 0) {\r\n\t            node.trailingComments = trailingComments;\r\n\t        }\r\n\t        this.stack.push({\r\n\t            node: node,\r\n\t            start: metadata.start.offset\r\n\t        });\r\n\t    };\r\n\t    CommentHandler.prototype.visitComment = function (node, metadata) {\r\n\t        var type = (node.type[0] === 'L') ? 'Line' : 'Block';\r\n\t        var comment = {\r\n\t            type: type,\r\n\t            value: node.value\r\n\t        };\r\n\t        if (node.range) {\r\n\t            comment.range = node.range;\r\n\t        }\r\n\t        if (node.loc) {\r\n\t            comment.loc = node.loc;\r\n\t        }\r\n\t        this.comments.push(comment);\r\n\t        if (this.attach) {\r\n\t            var entry = {\r\n\t                comment: {\r\n\t                    type: type,\r\n\t                    value: node.value,\r\n\t                    range: [metadata.start.offset, metadata.end.offset]\r\n\t                },\r\n\t                start: metadata.start.offset\r\n\t            };\r\n\t            if (node.loc) {\r\n\t                entry.comment.loc = node.loc;\r\n\t            }\r\n\t            node.type = type;\r\n\t            this.leading.push(entry);\r\n\t            this.trailing.push(entry);\r\n\t        }\r\n\t    };\r\n\t    CommentHandler.prototype.visit = function (node, metadata) {\r\n\t        if (node.type === 'LineComment') {\r\n\t            this.visitComment(node, metadata);\r\n\t        }\r\n\t        else if (node.type === 'BlockComment') {\r\n\t            this.visitComment(node, metadata);\r\n\t        }\r\n\t        else if (this.attach) {\r\n\t            this.visitNode(node, metadata);\r\n\t        }\r\n\t    };\r\n\t    return CommentHandler;\r\n\t}());\r\n\texports.CommentHandler = CommentHandler;\r\n\r\n\r\n/***/ },\r\n/* 2 */\r\n/***/ function(module, exports) {\r\n\r\n\t\"use strict\";\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\texports.Syntax = {\r\n\t    AssignmentExpression: 'AssignmentExpression',\r\n\t    AssignmentPattern: 'AssignmentPattern',\r\n\t    ArrayExpression: 'ArrayExpression',\r\n\t    ArrayPattern: 'ArrayPattern',\r\n\t    ArrowFunctionExpression: 'ArrowFunctionExpression',\r\n\t    AwaitExpression: 'AwaitExpression',\r\n\t    BlockStatement: 'BlockStatement',\r\n\t    BinaryExpression: 'BinaryExpression',\r\n\t    BreakStatement: 'BreakStatement',\r\n\t    CallExpression: 'CallExpression',\r\n\t    CatchClause: 'CatchClause',\r\n\t    ClassBody: 'ClassBody',\r\n\t    ClassDeclaration: 'ClassDeclaration',\r\n\t    ClassExpression: 'ClassExpression',\r\n\t    ConditionalExpression: 'ConditionalExpression',\r\n\t    ContinueStatement: 'ContinueStatement',\r\n\t    DoWhileStatement: 'DoWhileStatement',\r\n\t    DebuggerStatement: 'DebuggerStatement',\r\n\t    EmptyStatement: 'EmptyStatement',\r\n\t    ExportAllDeclaration: 'ExportAllDeclaration',\r\n\t    ExportDefaultDeclaration: 'ExportDefaultDeclaration',\r\n\t    ExportNamedDeclaration: 'ExportNamedDeclaration',\r\n\t    ExportSpecifier: 'ExportSpecifier',\r\n\t    ExpressionStatement: 'ExpressionStatement',\r\n\t    ForStatement: 'ForStatement',\r\n\t    ForOfStatement: 'ForOfStatement',\r\n\t    ForInStatement: 'ForInStatement',\r\n\t    FunctionDeclaration: 'FunctionDeclaration',\r\n\t    FunctionExpression: 'FunctionExpression',\r\n\t    Identifier: 'Identifier',\r\n\t    IfStatement: 'IfStatement',\r\n\t    Import: 'Import',\r\n\t    ImportDeclaration: 'ImportDeclaration',\r\n\t    ImportDefaultSpecifier: 'ImportDefaultSpecifier',\r\n\t    ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',\r\n\t    ImportSpecifier: 'ImportSpecifier',\r\n\t    Literal: 'Literal',\r\n\t    LabeledStatement: 'LabeledStatement',\r\n\t    LogicalExpression: 'LogicalExpression',\r\n\t    MemberExpression: 'MemberExpression',\r\n\t    MetaProperty: 'MetaProperty',\r\n\t    MethodDefinition: 'MethodDefinition',\r\n\t    NewExpression: 'NewExpression',\r\n\t    ObjectExpression: 'ObjectExpression',\r\n\t    ObjectPattern: 'ObjectPattern',\r\n\t    Program: 'Program',\r\n\t    Property: 'Property',\r\n\t    RestElement: 'RestElement',\r\n\t    ReturnStatement: 'ReturnStatement',\r\n\t    SequenceExpression: 'SequenceExpression',\r\n\t    SpreadElement: 'SpreadElement',\r\n\t    Super: 'Super',\r\n\t    SwitchCase: 'SwitchCase',\r\n\t    SwitchStatement: 'SwitchStatement',\r\n\t    TaggedTemplateExpression: 'TaggedTemplateExpression',\r\n\t    TemplateElement: 'TemplateElement',\r\n\t    TemplateLiteral: 'TemplateLiteral',\r\n\t    ThisExpression: 'ThisExpression',\r\n\t    ThrowStatement: 'ThrowStatement',\r\n\t    TryStatement: 'TryStatement',\r\n\t    UnaryExpression: 'UnaryExpression',\r\n\t    UpdateExpression: 'UpdateExpression',\r\n\t    VariableDeclaration: 'VariableDeclaration',\r\n\t    VariableDeclarator: 'VariableDeclarator',\r\n\t    WhileStatement: 'WhileStatement',\r\n\t    WithStatement: 'WithStatement',\r\n\t    YieldExpression: 'YieldExpression'\r\n\t};\r\n\r\n\r\n/***/ },\r\n/* 3 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\"use strict\";\r\n/* istanbul ignore next */\r\n\tvar __extends = (this && this.__extends) || (function () {\r\n\t    var extendStatics = function (d, b) {\r\n\t        extendStatics = Object.setPrototypeOf ||\r\n\t            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t        return extendStatics(d, b);\r\n\t    };\r\n\t    return function (d, b) {\r\n\t        extendStatics(d, b);\r\n\t        function __() { this.constructor = d; }\r\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t    };\r\n\t})();\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar character_1 = __webpack_require__(4);\r\n\tvar JSXNode = __webpack_require__(5);\r\n\tvar jsx_syntax_1 = __webpack_require__(6);\r\n\tvar Node = __webpack_require__(7);\r\n\tvar parser_1 = __webpack_require__(8);\r\n\tvar token_1 = __webpack_require__(13);\r\n\tvar xhtml_entities_1 = __webpack_require__(14);\r\n\ttoken_1.TokenName[100 /* Identifier */] = 'JSXIdentifier';\r\n\ttoken_1.TokenName[101 /* Text */] = 'JSXText';\r\n\t// Fully qualified element name, e.g. <svg:path> returns \"svg:path\"\r\n\tfunction getQualifiedElementName(elementName) {\r\n\t    var qualifiedName;\r\n\t    switch (elementName.type) {\r\n\t        case jsx_syntax_1.JSXSyntax.JSXIdentifier:\r\n\t            var id = elementName;\r\n\t            qualifiedName = id.name;\r\n\t            break;\r\n\t        case jsx_syntax_1.JSXSyntax.JSXNamespacedName:\r\n\t            var ns = elementName;\r\n\t            qualifiedName = getQualifiedElementName(ns.namespace) + ':' +\r\n\t                getQualifiedElementName(ns.name);\r\n\t            break;\r\n\t        case jsx_syntax_1.JSXSyntax.JSXMemberExpression:\r\n\t            var expr = elementName;\r\n\t            qualifiedName = getQualifiedElementName(expr.object) + '.' +\r\n\t                getQualifiedElementName(expr.property);\r\n\t            break;\r\n\t        /* istanbul ignore next */\r\n\t        default:\r\n\t            break;\r\n\t    }\r\n\t    return qualifiedName;\r\n\t}\r\n\tvar JSXParser = /** @class */ (function (_super) {\r\n\t    __extends(JSXParser, _super);\r\n\t    function JSXParser(code, options, delegate) {\r\n\t        return _super.call(this, code, options, delegate) || this;\r\n\t    }\r\n\t    JSXParser.prototype.parsePrimaryExpression = function () {\r\n\t        return this.match('<') ? this.parseJSXRoot() : _super.prototype.parsePrimaryExpression.call(this);\r\n\t    };\r\n\t    JSXParser.prototype.startJSX = function () {\r\n\t        // Unwind the scanner before the lookahead token.\r\n\t        this.scanner.index = this.startMarker.index;\r\n\t        this.scanner.lineNumber = this.startMarker.line;\r\n\t        this.scanner.lineStart = this.startMarker.index - this.startMarker.column;\r\n\t    };\r\n\t    JSXParser.prototype.finishJSX = function () {\r\n\t        // Prime the next lookahead.\r\n\t        this.nextToken();\r\n\t    };\r\n\t    JSXParser.prototype.reenterJSX = function () {\r\n\t        this.startJSX();\r\n\t        this.expectJSX('}');\r\n\t        // Pop the closing '}' added from the lookahead.\r\n\t        if (this.config.tokens) {\r\n\t            this.tokens.pop();\r\n\t        }\r\n\t    };\r\n\t    JSXParser.prototype.createJSXNode = function () {\r\n\t        this.collectComments();\r\n\t        return {\r\n\t            index: this.scanner.index,\r\n\t            line: this.scanner.lineNumber,\r\n\t            column: this.scanner.index - this.scanner.lineStart\r\n\t        };\r\n\t    };\r\n\t    JSXParser.prototype.createJSXChildNode = function () {\r\n\t        return {\r\n\t            index: this.scanner.index,\r\n\t            line: this.scanner.lineNumber,\r\n\t            column: this.scanner.index - this.scanner.lineStart\r\n\t        };\r\n\t    };\r\n\t    JSXParser.prototype.scanXHTMLEntity = function (quote) {\r\n\t        var result = '&';\r\n\t        var valid = true;\r\n\t        var terminated = false;\r\n\t        var numeric = false;\r\n\t        var hex = false;\r\n\t        while (!this.scanner.eof() && valid && !terminated) {\r\n\t            var ch = this.scanner.source[this.scanner.index];\r\n\t            if (ch === quote) {\r\n\t                break;\r\n\t            }\r\n\t            terminated = (ch === ';');\r\n\t            result += ch;\r\n\t            ++this.scanner.index;\r\n\t            if (!terminated) {\r\n\t                switch (result.length) {\r\n\t                    case 2:\r\n\t                        // e.g. '&#123;'\r\n\t                        numeric = (ch === '#');\r\n\t                        break;\r\n\t                    case 3:\r\n\t                        if (numeric) {\r\n\t                            // e.g. '&#x41;'\r\n\t                            hex = (ch === 'x');\r\n\t                            valid = hex || character_1.Character.isDecimalDigit(ch.charCodeAt(0));\r\n\t                            numeric = numeric && !hex;\r\n\t                        }\r\n\t                        break;\r\n\t                    default:\r\n\t                        valid = valid && !(numeric && !character_1.Character.isDecimalDigit(ch.charCodeAt(0)));\r\n\t                        valid = valid && !(hex && !character_1.Character.isHexDigit(ch.charCodeAt(0)));\r\n\t                        break;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        if (valid && terminated && result.length > 2) {\r\n\t            // e.g. '&#x41;' becomes just '#x41'\r\n\t            var str = result.substr(1, result.length - 2);\r\n\t            if (numeric && str.length > 1) {\r\n\t                result = String.fromCharCode(parseInt(str.substr(1), 10));\r\n\t            }\r\n\t            else if (hex && str.length > 2) {\r\n\t                result = String.fromCharCode(parseInt('0' + str.substr(1), 16));\r\n\t            }\r\n\t            else if (!numeric && !hex && xhtml_entities_1.XHTMLEntities[str]) {\r\n\t                result = xhtml_entities_1.XHTMLEntities[str];\r\n\t            }\r\n\t        }\r\n\t        return result;\r\n\t    };\r\n\t    // Scan the next JSX token. This replaces Scanner#lex when in JSX mode.\r\n\t    JSXParser.prototype.lexJSX = function () {\r\n\t        var cp = this.scanner.source.charCodeAt(this.scanner.index);\r\n\t        // < > / : = { }\r\n\t        if (cp === 60 || cp === 62 || cp === 47 || cp === 58 || cp === 61 || cp === 123 || cp === 125) {\r\n\t            var value = this.scanner.source[this.scanner.index++];\r\n\t            return {\r\n\t                type: 7 /* Punctuator */,\r\n\t                value: value,\r\n\t                lineNumber: this.scanner.lineNumber,\r\n\t                lineStart: this.scanner.lineStart,\r\n\t                start: this.scanner.index - 1,\r\n\t                end: this.scanner.index\r\n\t            };\r\n\t        }\r\n\t        // \" '\r\n\t        if (cp === 34 || cp === 39) {\r\n\t            var start = this.scanner.index;\r\n\t            var quote = this.scanner.source[this.scanner.index++];\r\n\t            var str = '';\r\n\t            while (!this.scanner.eof()) {\r\n\t                var ch = this.scanner.source[this.scanner.index++];\r\n\t                if (ch === quote) {\r\n\t                    break;\r\n\t                }\r\n\t                else if (ch === '&') {\r\n\t                    str += this.scanXHTMLEntity(quote);\r\n\t                }\r\n\t                else {\r\n\t                    str += ch;\r\n\t                }\r\n\t            }\r\n\t            return {\r\n\t                type: 8 /* StringLiteral */,\r\n\t                value: str,\r\n\t                lineNumber: this.scanner.lineNumber,\r\n\t                lineStart: this.scanner.lineStart,\r\n\t                start: start,\r\n\t                end: this.scanner.index\r\n\t            };\r\n\t        }\r\n\t        // ... or .\r\n\t        if (cp === 46) {\r\n\t            var n1 = this.scanner.source.charCodeAt(this.scanner.index + 1);\r\n\t            var n2 = this.scanner.source.charCodeAt(this.scanner.index + 2);\r\n\t            var value = (n1 === 46 && n2 === 46) ? '...' : '.';\r\n\t            var start = this.scanner.index;\r\n\t            this.scanner.index += value.length;\r\n\t            return {\r\n\t                type: 7 /* Punctuator */,\r\n\t                value: value,\r\n\t                lineNumber: this.scanner.lineNumber,\r\n\t                lineStart: this.scanner.lineStart,\r\n\t                start: start,\r\n\t                end: this.scanner.index\r\n\t            };\r\n\t        }\r\n\t        // `\r\n\t        if (cp === 96) {\r\n\t            // Only placeholder, since it will be rescanned as a real assignment expression.\r\n\t            return {\r\n\t                type: 10 /* Template */,\r\n\t                value: '',\r\n\t                lineNumber: this.scanner.lineNumber,\r\n\t                lineStart: this.scanner.lineStart,\r\n\t                start: this.scanner.index,\r\n\t                end: this.scanner.index\r\n\t            };\r\n\t        }\r\n\t        // Identifer can not contain backslash (char code 92).\r\n\t        if (character_1.Character.isIdentifierStart(cp) && (cp !== 92)) {\r\n\t            var start = this.scanner.index;\r\n\t            ++this.scanner.index;\r\n\t            while (!this.scanner.eof()) {\r\n\t                var ch = this.scanner.source.charCodeAt(this.scanner.index);\r\n\t                if (character_1.Character.isIdentifierPart(ch) && (ch !== 92)) {\r\n\t                    ++this.scanner.index;\r\n\t                }\r\n\t                else if (ch === 45) {\r\n\t                    // Hyphen (char code 45) can be part of an identifier.\r\n\t                    ++this.scanner.index;\r\n\t                }\r\n\t                else {\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\t            var id = this.scanner.source.slice(start, this.scanner.index);\r\n\t            return {\r\n\t                type: 100 /* Identifier */,\r\n\t                value: id,\r\n\t                lineNumber: this.scanner.lineNumber,\r\n\t                lineStart: this.scanner.lineStart,\r\n\t                start: start,\r\n\t                end: this.scanner.index\r\n\t            };\r\n\t        }\r\n\t        return this.scanner.lex();\r\n\t    };\r\n\t    JSXParser.prototype.nextJSXToken = function () {\r\n\t        this.collectComments();\r\n\t        this.startMarker.index = this.scanner.index;\r\n\t        this.startMarker.line = this.scanner.lineNumber;\r\n\t        this.startMarker.column = this.scanner.index - this.scanner.lineStart;\r\n\t        var token = this.lexJSX();\r\n\t        this.lastMarker.index = this.scanner.index;\r\n\t        this.lastMarker.line = this.scanner.lineNumber;\r\n\t        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\r\n\t        if (this.config.tokens) {\r\n\t            this.tokens.push(this.convertToken(token));\r\n\t        }\r\n\t        return token;\r\n\t    };\r\n\t    JSXParser.prototype.nextJSXText = function () {\r\n\t        this.startMarker.index = this.scanner.index;\r\n\t        this.startMarker.line = this.scanner.lineNumber;\r\n\t        this.startMarker.column = this.scanner.index - this.scanner.lineStart;\r\n\t        var start = this.scanner.index;\r\n\t        var text = '';\r\n\t        while (!this.scanner.eof()) {\r\n\t            var ch = this.scanner.source[this.scanner.index];\r\n\t            if (ch === '{' || ch === '<') {\r\n\t                break;\r\n\t            }\r\n\t            ++this.scanner.index;\r\n\t            text += ch;\r\n\t            if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\r\n\t                ++this.scanner.lineNumber;\r\n\t                if (ch === '\\r' && this.scanner.source[this.scanner.index] === '\\n') {\r\n\t                    ++this.scanner.index;\r\n\t                }\r\n\t                this.scanner.lineStart = this.scanner.index;\r\n\t            }\r\n\t        }\r\n\t        this.lastMarker.index = this.scanner.index;\r\n\t        this.lastMarker.line = this.scanner.lineNumber;\r\n\t        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\r\n\t        var token = {\r\n\t            type: 101 /* Text */,\r\n\t            value: text,\r\n\t            lineNumber: this.scanner.lineNumber,\r\n\t            lineStart: this.scanner.lineStart,\r\n\t            start: start,\r\n\t            end: this.scanner.index\r\n\t        };\r\n\t        if ((text.length > 0) && this.config.tokens) {\r\n\t            this.tokens.push(this.convertToken(token));\r\n\t        }\r\n\t        return token;\r\n\t    };\r\n\t    JSXParser.prototype.peekJSXToken = function () {\r\n\t        var state = this.scanner.saveState();\r\n\t        this.scanner.scanComments();\r\n\t        var next = this.lexJSX();\r\n\t        this.scanner.restoreState(state);\r\n\t        return next;\r\n\t    };\r\n\t    // Expect the next JSX token to match the specified punctuator.\r\n\t    // If not, an exception will be thrown.\r\n\t    JSXParser.prototype.expectJSX = function (value) {\r\n\t        var token = this.nextJSXToken();\r\n\t        if (token.type !== 7 /* Punctuator */ || token.value !== value) {\r\n\t            this.throwUnexpectedToken(token);\r\n\t        }\r\n\t    };\r\n\t    // Return true if the next JSX token matches the specified punctuator.\r\n\t    JSXParser.prototype.matchJSX = function (value) {\r\n\t        var next = this.peekJSXToken();\r\n\t        return next.type === 7 /* Punctuator */ && next.value === value;\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXIdentifier = function () {\r\n\t        var node = this.createJSXNode();\r\n\t        var token = this.nextJSXToken();\r\n\t        if (token.type !== 100 /* Identifier */) {\r\n\t            this.throwUnexpectedToken(token);\r\n\t        }\r\n\t        return this.finalize(node, new JSXNode.JSXIdentifier(token.value));\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXElementName = function () {\r\n\t        var node = this.createJSXNode();\r\n\t        var elementName = this.parseJSXIdentifier();\r\n\t        if (this.matchJSX(':')) {\r\n\t            var namespace = elementName;\r\n\t            this.expectJSX(':');\r\n\t            var name_1 = this.parseJSXIdentifier();\r\n\t            elementName = this.finalize(node, new JSXNode.JSXNamespacedName(namespace, name_1));\r\n\t        }\r\n\t        else if (this.matchJSX('.')) {\r\n\t            while (this.matchJSX('.')) {\r\n\t                var object = elementName;\r\n\t                this.expectJSX('.');\r\n\t                var property = this.parseJSXIdentifier();\r\n\t                elementName = this.finalize(node, new JSXNode.JSXMemberExpression(object, property));\r\n\t            }\r\n\t        }\r\n\t        return elementName;\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXAttributeName = function () {\r\n\t        var node = this.createJSXNode();\r\n\t        var attributeName;\r\n\t        var identifier = this.parseJSXIdentifier();\r\n\t        if (this.matchJSX(':')) {\r\n\t            var namespace = identifier;\r\n\t            this.expectJSX(':');\r\n\t            var name_2 = this.parseJSXIdentifier();\r\n\t            attributeName = this.finalize(node, new JSXNode.JSXNamespacedName(namespace, name_2));\r\n\t        }\r\n\t        else {\r\n\t            attributeName = identifier;\r\n\t        }\r\n\t        return attributeName;\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXStringLiteralAttribute = function () {\r\n\t        var node = this.createJSXNode();\r\n\t        var token = this.nextJSXToken();\r\n\t        if (token.type !== 8 /* StringLiteral */) {\r\n\t            this.throwUnexpectedToken(token);\r\n\t        }\r\n\t        var raw = this.getTokenRaw(token);\r\n\t        return this.finalize(node, new Node.Literal(token.value, raw));\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXExpressionAttribute = function () {\r\n\t        var node = this.createJSXNode();\r\n\t        this.expectJSX('{');\r\n\t        this.finishJSX();\r\n\t        if (this.match('}')) {\r\n\t            this.tolerateError('JSX attributes must only be assigned a non-empty expression');\r\n\t        }\r\n\t        var expression = this.parseAssignmentExpression();\r\n\t        this.reenterJSX();\r\n\t        return this.finalize(node, new JSXNode.JSXExpressionContainer(expression));\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXAttributeValue = function () {\r\n\t        return this.matchJSX('{') ? this.parseJSXExpressionAttribute() :\r\n\t            this.matchJSX('<') ? this.parseJSXElement() : this.parseJSXStringLiteralAttribute();\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXNameValueAttribute = function () {\r\n\t        var node = this.createJSXNode();\r\n\t        var name = this.parseJSXAttributeName();\r\n\t        var value = null;\r\n\t        if (this.matchJSX('=')) {\r\n\t            this.expectJSX('=');\r\n\t            value = this.parseJSXAttributeValue();\r\n\t        }\r\n\t        return this.finalize(node, new JSXNode.JSXAttribute(name, value));\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXSpreadAttribute = function () {\r\n\t        var node = this.createJSXNode();\r\n\t        this.expectJSX('{');\r\n\t        this.expectJSX('...');\r\n\t        this.finishJSX();\r\n\t        var argument = this.parseAssignmentExpression();\r\n\t        this.reenterJSX();\r\n\t        return this.finalize(node, new JSXNode.JSXSpreadAttribute(argument));\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXAttributes = function () {\r\n\t        var attributes = [];\r\n\t        while (!this.matchJSX('/') && !this.matchJSX('>')) {\r\n\t            var attribute = this.matchJSX('{') ? this.parseJSXSpreadAttribute() :\r\n\t                this.parseJSXNameValueAttribute();\r\n\t            attributes.push(attribute);\r\n\t        }\r\n\t        return attributes;\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXOpeningElement = function () {\r\n\t        var node = this.createJSXNode();\r\n\t        this.expectJSX('<');\r\n\t        var name = this.parseJSXElementName();\r\n\t        var attributes = this.parseJSXAttributes();\r\n\t        var selfClosing = this.matchJSX('/');\r\n\t        if (selfClosing) {\r\n\t            this.expectJSX('/');\r\n\t        }\r\n\t        this.expectJSX('>');\r\n\t        return this.finalize(node, new JSXNode.JSXOpeningElement(name, selfClosing, attributes));\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXBoundaryElement = function () {\r\n\t        var node = this.createJSXNode();\r\n\t        this.expectJSX('<');\r\n\t        if (this.matchJSX('/')) {\r\n\t            this.expectJSX('/');\r\n\t            var elementName = this.parseJSXElementName();\r\n\t            this.expectJSX('>');\r\n\t            return this.finalize(node, new JSXNode.JSXClosingElement(elementName));\r\n\t        }\r\n\t        var name = this.parseJSXElementName();\r\n\t        var attributes = this.parseJSXAttributes();\r\n\t        var selfClosing = this.matchJSX('/');\r\n\t        if (selfClosing) {\r\n\t            this.expectJSX('/');\r\n\t        }\r\n\t        this.expectJSX('>');\r\n\t        return this.finalize(node, new JSXNode.JSXOpeningElement(name, selfClosing, attributes));\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXEmptyExpression = function () {\r\n\t        var node = this.createJSXChildNode();\r\n\t        this.collectComments();\r\n\t        this.lastMarker.index = this.scanner.index;\r\n\t        this.lastMarker.line = this.scanner.lineNumber;\r\n\t        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\r\n\t        return this.finalize(node, new JSXNode.JSXEmptyExpression());\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXExpressionContainer = function () {\r\n\t        var node = this.createJSXNode();\r\n\t        this.expectJSX('{');\r\n\t        var expression;\r\n\t        if (this.matchJSX('}')) {\r\n\t            expression = this.parseJSXEmptyExpression();\r\n\t            this.expectJSX('}');\r\n\t        }\r\n\t        else {\r\n\t            this.finishJSX();\r\n\t            expression = this.parseAssignmentExpression();\r\n\t            this.reenterJSX();\r\n\t        }\r\n\t        return this.finalize(node, new JSXNode.JSXExpressionContainer(expression));\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXChildren = function () {\r\n\t        var children = [];\r\n\t        while (!this.scanner.eof()) {\r\n\t            var node = this.createJSXChildNode();\r\n\t            var token = this.nextJSXText();\r\n\t            if (token.start < token.end) {\r\n\t                var raw = this.getTokenRaw(token);\r\n\t                var child = this.finalize(node, new JSXNode.JSXText(token.value, raw));\r\n\t                children.push(child);\r\n\t            }\r\n\t            if (this.scanner.source[this.scanner.index] === '{') {\r\n\t                var container = this.parseJSXExpressionContainer();\r\n\t                children.push(container);\r\n\t            }\r\n\t            else {\r\n\t                break;\r\n\t            }\r\n\t        }\r\n\t        return children;\r\n\t    };\r\n\t    JSXParser.prototype.parseComplexJSXElement = function (el) {\r\n\t        var stack = [];\r\n\t        while (!this.scanner.eof()) {\r\n\t            el.children = el.children.concat(this.parseJSXChildren());\r\n\t            var node = this.createJSXChildNode();\r\n\t            var element = this.parseJSXBoundaryElement();\r\n\t            if (element.type === jsx_syntax_1.JSXSyntax.JSXOpeningElement) {\r\n\t                var opening = element;\r\n\t                if (opening.selfClosing) {\r\n\t                    var child = this.finalize(node, new JSXNode.JSXElement(opening, [], null));\r\n\t                    el.children.push(child);\r\n\t                }\r\n\t                else {\r\n\t                    stack.push(el);\r\n\t                    el = { node: node, opening: opening, closing: null, children: [] };\r\n\t                }\r\n\t            }\r\n\t            if (element.type === jsx_syntax_1.JSXSyntax.JSXClosingElement) {\r\n\t                el.closing = element;\r\n\t                var open_1 = getQualifiedElementName(el.opening.name);\r\n\t                var close_1 = getQualifiedElementName(el.closing.name);\r\n\t                if (open_1 !== close_1) {\r\n\t                    this.tolerateError('Expected corresponding JSX closing tag for %0', open_1);\r\n\t                }\r\n\t                if (stack.length > 0) {\r\n\t                    var child = this.finalize(el.node, new JSXNode.JSXElement(el.opening, el.children, el.closing));\r\n\t                    el = stack[stack.length - 1];\r\n\t                    el.children.push(child);\r\n\t                    stack.pop();\r\n\t                }\r\n\t                else {\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        return el;\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXElement = function () {\r\n\t        var node = this.createJSXNode();\r\n\t        var opening = this.parseJSXOpeningElement();\r\n\t        var children = [];\r\n\t        var closing = null;\r\n\t        if (!opening.selfClosing) {\r\n\t            var el = this.parseComplexJSXElement({ node: node, opening: opening, closing: closing, children: children });\r\n\t            children = el.children;\r\n\t            closing = el.closing;\r\n\t        }\r\n\t        return this.finalize(node, new JSXNode.JSXElement(opening, children, closing));\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXRoot = function () {\r\n\t        // Pop the opening '<' added from the lookahead.\r\n\t        if (this.config.tokens) {\r\n\t            this.tokens.pop();\r\n\t        }\r\n\t        this.startJSX();\r\n\t        var element = this.parseJSXElement();\r\n\t        this.finishJSX();\r\n\t        return element;\r\n\t    };\r\n\t    JSXParser.prototype.isStartOfExpression = function () {\r\n\t        return _super.prototype.isStartOfExpression.call(this) || this.match('<');\r\n\t    };\r\n\t    return JSXParser;\r\n\t}(parser_1.Parser));\r\n\texports.JSXParser = JSXParser;\r\n\r\n\r\n/***/ },\r\n/* 4 */\r\n/***/ function(module, exports) {\r\n\r\n\t\"use strict\";\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t// See also tools/generate-unicode-regex.js.\r\n\tvar Regex = {\r\n\t    // Unicode v12.1.0 NonAsciiIdentifierStart:\r\n\t    NonAsciiIdentifierStart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEF\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7C6\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB67\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD23\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF45\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD44\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC5F\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDEB8\\uDF00-\\uDF1A]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCDF\\uDCFF\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDEE0-\\uDEF2]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE7F\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD4E\\uDEC0-\\uDEEB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43\\uDD4B]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]/,\r\n\t    // Unicode v12.1.0 NonAsciiIdentifierPart:\r\n\t    // eslint-disable-next-line no-misleading-character-class\r\n\t    NonAsciiIdentifierPart: /[\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u07FD\\u0800-\\u082D\\u0840-\\u085B\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D3-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u09FC\\u09FE\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9-\\u0AFF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D00-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CD0-\\u1CD2\\u1CD4-\\u1CFA\\u1D00-\\u1DF9\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEF\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7C6\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB67\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD27\\uDD30-\\uDD39\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF50\\uDFE0-\\uDFF6]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD44-\\uDD46\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDC9-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3B-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC5E\\uDC5F\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDC00-\\uDC3A\\uDCA0-\\uDCE9\\uDCFF\\uDDA0-\\uDDA7\\uDDAA-\\uDDD7\\uDDDA-\\uDDE1\\uDDE3\\uDDE4\\uDE00-\\uDE3E\\uDE47\\uDE50-\\uDE99\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC59\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD36\\uDD3A\\uDD3C\\uDD3D\\uDD3F-\\uDD47\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD8E\\uDD90\\uDD91\\uDD93-\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF6]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE7F\\uDF00-\\uDF4A\\uDF4F-\\uDF87\\uDF8F-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A\\uDD00-\\uDD2C\\uDD30-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDEC0-\\uDEF9]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6\\uDD00-\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/\r\n\t};\r\n\texports.Character = {\r\n\t    fromCodePoint: function (cp) {\r\n\t        return (cp < 0x10000) ? String.fromCharCode(cp) :\r\n\t            String.fromCharCode(0xD800 + ((cp - 0x10000) >> 10)) +\r\n\t                String.fromCharCode(0xDC00 + ((cp - 0x10000) & 1023));\r\n\t    },\r\n\t    // https://tc39.github.io/ecma262/#sec-white-space\r\n\t    isWhiteSpace: function (cp) {\r\n\t        return (cp === 0x20) || (cp === 0x09) || (cp === 0x0B) || (cp === 0x0C) || (cp === 0xA0) ||\r\n\t            (cp >= 0x1680 && [0x1680, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(cp) >= 0);\r\n\t    },\r\n\t    // https://tc39.github.io/ecma262/#sec-line-terminators\r\n\t    isLineTerminator: function (cp) {\r\n\t        return (cp === 0x0A) || (cp === 0x0D) || (cp === 0x2028) || (cp === 0x2029);\r\n\t    },\r\n\t    // https://tc39.github.io/ecma262/#sec-names-and-keywords\r\n\t    isIdentifierStart: function (cp) {\r\n\t        return (cp === 0x24) || (cp === 0x5F) || // $ (dollar) and _ (underscore)\r\n\t            (cp >= 0x41 && cp <= 0x5A) || // A..Z\r\n\t            (cp >= 0x61 && cp <= 0x7A) || // a..z\r\n\t            (cp === 0x5C) || // \\ (backslash)\r\n\t            ((cp >= 0x80) && Regex.NonAsciiIdentifierStart.test(exports.Character.fromCodePoint(cp)));\r\n\t    },\r\n\t    isIdentifierPart: function (cp) {\r\n\t        return (cp === 0x24) || (cp === 0x5F) || // $ (dollar) and _ (underscore)\r\n\t            (cp >= 0x41 && cp <= 0x5A) || // A..Z\r\n\t            (cp >= 0x61 && cp <= 0x7A) || // a..z\r\n\t            (cp >= 0x30 && cp <= 0x39) || // 0..9\r\n\t            (cp === 0x5C) || // \\ (backslash)\r\n\t            ((cp >= 0x80) && Regex.NonAsciiIdentifierPart.test(exports.Character.fromCodePoint(cp)));\r\n\t    },\r\n\t    // https://tc39.github.io/ecma262/#sec-literals-numeric-literals\r\n\t    isDecimalDigit: function (cp) {\r\n\t        return (cp >= 0x30 && cp <= 0x39); // 0..9\r\n\t    },\r\n\t    isHexDigit: function (cp) {\r\n\t        return (cp >= 0x30 && cp <= 0x39) || // 0..9\r\n\t            (cp >= 0x41 && cp <= 0x46) || // A..F\r\n\t            (cp >= 0x61 && cp <= 0x66); // a..f\r\n\t    },\r\n\t    isOctalDigit: function (cp) {\r\n\t        return (cp >= 0x30 && cp <= 0x37); // 0..7\r\n\t    }\r\n\t};\r\n\r\n\r\n/***/ },\r\n/* 5 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\"use strict\";\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar jsx_syntax_1 = __webpack_require__(6);\r\n\tvar JSXClosingElement = /** @class */ (function () {\r\n\t    function JSXClosingElement(name) {\r\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXClosingElement;\r\n\t        this.name = name;\r\n\t    }\r\n\t    return JSXClosingElement;\r\n\t}());\r\n\texports.JSXClosingElement = JSXClosingElement;\r\n\tvar JSXElement = /** @class */ (function () {\r\n\t    function JSXElement(openingElement, children, closingElement) {\r\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXElement;\r\n\t        this.openingElement = openingElement;\r\n\t        this.children = children;\r\n\t        this.closingElement = closingElement;\r\n\t    }\r\n\t    return JSXElement;\r\n\t}());\r\n\texports.JSXElement = JSXElement;\r\n\tvar JSXEmptyExpression = /** @class */ (function () {\r\n\t    function JSXEmptyExpression() {\r\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXEmptyExpression;\r\n\t    }\r\n\t    return JSXEmptyExpression;\r\n\t}());\r\n\texports.JSXEmptyExpression = JSXEmptyExpression;\r\n\tvar JSXExpressionContainer = /** @class */ (function () {\r\n\t    function JSXExpressionContainer(expression) {\r\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXExpressionContainer;\r\n\t        this.expression = expression;\r\n\t    }\r\n\t    return JSXExpressionContainer;\r\n\t}());\r\n\texports.JSXExpressionContainer = JSXExpressionContainer;\r\n\tvar JSXIdentifier = /** @class */ (function () {\r\n\t    function JSXIdentifier(name) {\r\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXIdentifier;\r\n\t        this.name = name;\r\n\t    }\r\n\t    return JSXIdentifier;\r\n\t}());\r\n\texports.JSXIdentifier = JSXIdentifier;\r\n\tvar JSXMemberExpression = /** @class */ (function () {\r\n\t    function JSXMemberExpression(object, property) {\r\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXMemberExpression;\r\n\t        this.object = object;\r\n\t        this.property = property;\r\n\t    }\r\n\t    return JSXMemberExpression;\r\n\t}());\r\n\texports.JSXMemberExpression = JSXMemberExpression;\r\n\tvar JSXAttribute = /** @class */ (function () {\r\n\t    function JSXAttribute(name, value) {\r\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXAttribute;\r\n\t        this.name = name;\r\n\t        this.value = value;\r\n\t    }\r\n\t    return JSXAttribute;\r\n\t}());\r\n\texports.JSXAttribute = JSXAttribute;\r\n\tvar JSXNamespacedName = /** @class */ (function () {\r\n\t    function JSXNamespacedName(namespace, name) {\r\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXNamespacedName;\r\n\t        this.namespace = namespace;\r\n\t        this.name = name;\r\n\t    }\r\n\t    return JSXNamespacedName;\r\n\t}());\r\n\texports.JSXNamespacedName = JSXNamespacedName;\r\n\tvar JSXOpeningElement = /** @class */ (function () {\r\n\t    function JSXOpeningElement(name, selfClosing, attributes) {\r\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXOpeningElement;\r\n\t        this.name = name;\r\n\t        this.selfClosing = selfClosing;\r\n\t        this.attributes = attributes;\r\n\t    }\r\n\t    return JSXOpeningElement;\r\n\t}());\r\n\texports.JSXOpeningElement = JSXOpeningElement;\r\n\tvar JSXSpreadAttribute = /** @class */ (function () {\r\n\t    function JSXSpreadAttribute(argument) {\r\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXSpreadAttribute;\r\n\t        this.argument = argument;\r\n\t    }\r\n\t    return JSXSpreadAttribute;\r\n\t}());\r\n\texports.JSXSpreadAttribute = JSXSpreadAttribute;\r\n\tvar JSXText = /** @class */ (function () {\r\n\t    function JSXText(value, raw) {\r\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXText;\r\n\t        this.value = value;\r\n\t        this.raw = raw;\r\n\t    }\r\n\t    return JSXText;\r\n\t}());\r\n\texports.JSXText = JSXText;\r\n\r\n\r\n/***/ },\r\n/* 6 */\r\n/***/ function(module, exports) {\r\n\r\n\t\"use strict\";\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\texports.JSXSyntax = {\r\n\t    JSXAttribute: 'JSXAttribute',\r\n\t    JSXClosingElement: 'JSXClosingElement',\r\n\t    JSXElement: 'JSXElement',\r\n\t    JSXEmptyExpression: 'JSXEmptyExpression',\r\n\t    JSXExpressionContainer: 'JSXExpressionContainer',\r\n\t    JSXIdentifier: 'JSXIdentifier',\r\n\t    JSXMemberExpression: 'JSXMemberExpression',\r\n\t    JSXNamespacedName: 'JSXNamespacedName',\r\n\t    JSXOpeningElement: 'JSXOpeningElement',\r\n\t    JSXSpreadAttribute: 'JSXSpreadAttribute',\r\n\t    JSXText: 'JSXText'\r\n\t};\r\n\r\n\r\n/***/ },\r\n/* 7 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\"use strict\";\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar syntax_1 = __webpack_require__(2);\r\n\tvar ArrayExpression = /** @class */ (function () {\r\n\t    function ArrayExpression(elements) {\r\n\t        this.type = syntax_1.Syntax.ArrayExpression;\r\n\t        this.elements = elements;\r\n\t    }\r\n\t    return ArrayExpression;\r\n\t}());\r\n\texports.ArrayExpression = ArrayExpression;\r\n\tvar ArrayPattern = /** @class */ (function () {\r\n\t    function ArrayPattern(elements) {\r\n\t        this.type = syntax_1.Syntax.ArrayPattern;\r\n\t        this.elements = elements;\r\n\t    }\r\n\t    return ArrayPattern;\r\n\t}());\r\n\texports.ArrayPattern = ArrayPattern;\r\n\tvar ArrowFunctionExpression = /** @class */ (function () {\r\n\t    function ArrowFunctionExpression(params, body, expression) {\r\n\t        this.type = syntax_1.Syntax.ArrowFunctionExpression;\r\n\t        this.id = null;\r\n\t        this.params = params;\r\n\t        this.body = body;\r\n\t        this.generator = false;\r\n\t        this.expression = expression;\r\n\t        this.async = false;\r\n\t    }\r\n\t    return ArrowFunctionExpression;\r\n\t}());\r\n\texports.ArrowFunctionExpression = ArrowFunctionExpression;\r\n\tvar AssignmentExpression = /** @class */ (function () {\r\n\t    function AssignmentExpression(operator, left, right) {\r\n\t        this.type = syntax_1.Syntax.AssignmentExpression;\r\n\t        this.operator = operator;\r\n\t        this.left = left;\r\n\t        this.right = right;\r\n\t    }\r\n\t    return AssignmentExpression;\r\n\t}());\r\n\texports.AssignmentExpression = AssignmentExpression;\r\n\tvar AssignmentPattern = /** @class */ (function () {\r\n\t    function AssignmentPattern(left, right) {\r\n\t        this.type = syntax_1.Syntax.AssignmentPattern;\r\n\t        this.left = left;\r\n\t        this.right = right;\r\n\t    }\r\n\t    return AssignmentPattern;\r\n\t}());\r\n\texports.AssignmentPattern = AssignmentPattern;\r\n\tvar AsyncArrowFunctionExpression = /** @class */ (function () {\r\n\t    function AsyncArrowFunctionExpression(params, body, expression) {\r\n\t        this.type = syntax_1.Syntax.ArrowFunctionExpression;\r\n\t        this.id = null;\r\n\t        this.params = params;\r\n\t        this.body = body;\r\n\t        this.generator = false;\r\n\t        this.expression = expression;\r\n\t        this.async = true;\r\n\t    }\r\n\t    return AsyncArrowFunctionExpression;\r\n\t}());\r\n\texports.AsyncArrowFunctionExpression = AsyncArrowFunctionExpression;\r\n\tvar AsyncFunctionDeclaration = /** @class */ (function () {\r\n\t    function AsyncFunctionDeclaration(id, params, body) {\r\n\t        this.type = syntax_1.Syntax.FunctionDeclaration;\r\n\t        this.id = id;\r\n\t        this.params = params;\r\n\t        this.body = body;\r\n\t        this.generator = false;\r\n\t        this.expression = false;\r\n\t        this.async = true;\r\n\t    }\r\n\t    return AsyncFunctionDeclaration;\r\n\t}());\r\n\texports.AsyncFunctionDeclaration = AsyncFunctionDeclaration;\r\n\tvar AsyncFunctionExpression = /** @class */ (function () {\r\n\t    function AsyncFunctionExpression(id, params, body) {\r\n\t        this.type = syntax_1.Syntax.FunctionExpression;\r\n\t        this.id = id;\r\n\t        this.params = params;\r\n\t        this.body = body;\r\n\t        this.generator = false;\r\n\t        this.expression = false;\r\n\t        this.async = true;\r\n\t    }\r\n\t    return AsyncFunctionExpression;\r\n\t}());\r\n\texports.AsyncFunctionExpression = AsyncFunctionExpression;\r\n\tvar AwaitExpression = /** @class */ (function () {\r\n\t    function AwaitExpression(argument) {\r\n\t        this.type = syntax_1.Syntax.AwaitExpression;\r\n\t        this.argument = argument;\r\n\t    }\r\n\t    return AwaitExpression;\r\n\t}());\r\n\texports.AwaitExpression = AwaitExpression;\r\n\tvar BinaryExpression = /** @class */ (function () {\r\n\t    function BinaryExpression(operator, left, right) {\r\n\t        var logical = (operator === '||' || operator === '&&');\r\n\t        this.type = logical ? syntax_1.Syntax.LogicalExpression : syntax_1.Syntax.BinaryExpression;\r\n\t        this.operator = operator;\r\n\t        this.left = left;\r\n\t        this.right = right;\r\n\t    }\r\n\t    return BinaryExpression;\r\n\t}());\r\n\texports.BinaryExpression = BinaryExpression;\r\n\tvar BlockStatement = /** @class */ (function () {\r\n\t    function BlockStatement(body) {\r\n\t        this.type = syntax_1.Syntax.BlockStatement;\r\n\t        this.body = body;\r\n\t    }\r\n\t    return BlockStatement;\r\n\t}());\r\n\texports.BlockStatement = BlockStatement;\r\n\tvar BreakStatement = /** @class */ (function () {\r\n\t    function BreakStatement(label) {\r\n\t        this.type = syntax_1.Syntax.BreakStatement;\r\n\t        this.label = label;\r\n\t    }\r\n\t    return BreakStatement;\r\n\t}());\r\n\texports.BreakStatement = BreakStatement;\r\n\tvar CallExpression = /** @class */ (function () {\r\n\t    function CallExpression(callee, args) {\r\n\t        this.type = syntax_1.Syntax.CallExpression;\r\n\t        this.callee = callee;\r\n\t        this.arguments = args;\r\n\t    }\r\n\t    return CallExpression;\r\n\t}());\r\n\texports.CallExpression = CallExpression;\r\n\tvar CatchClause = /** @class */ (function () {\r\n\t    function CatchClause(param, body) {\r\n\t        this.type = syntax_1.Syntax.CatchClause;\r\n\t        this.param = param;\r\n\t        this.body = body;\r\n\t    }\r\n\t    return CatchClause;\r\n\t}());\r\n\texports.CatchClause = CatchClause;\r\n\tvar ClassBody = /** @class */ (function () {\r\n\t    function ClassBody(body) {\r\n\t        this.type = syntax_1.Syntax.ClassBody;\r\n\t        this.body = body;\r\n\t    }\r\n\t    return ClassBody;\r\n\t}());\r\n\texports.ClassBody = ClassBody;\r\n\tvar ClassDeclaration = /** @class */ (function () {\r\n\t    function ClassDeclaration(id, superClass, body) {\r\n\t        this.type = syntax_1.Syntax.ClassDeclaration;\r\n\t        this.id = id;\r\n\t        this.superClass = superClass;\r\n\t        this.body = body;\r\n\t    }\r\n\t    return ClassDeclaration;\r\n\t}());\r\n\texports.ClassDeclaration = ClassDeclaration;\r\n\tvar ClassExpression = /** @class */ (function () {\r\n\t    function ClassExpression(id, superClass, body) {\r\n\t        this.type = syntax_1.Syntax.ClassExpression;\r\n\t        this.id = id;\r\n\t        this.superClass = superClass;\r\n\t        this.body = body;\r\n\t    }\r\n\t    return ClassExpression;\r\n\t}());\r\n\texports.ClassExpression = ClassExpression;\r\n\tvar ComputedMemberExpression = /** @class */ (function () {\r\n\t    function ComputedMemberExpression(object, property) {\r\n\t        this.type = syntax_1.Syntax.MemberExpression;\r\n\t        this.computed = true;\r\n\t        this.object = object;\r\n\t        this.property = property;\r\n\t    }\r\n\t    return ComputedMemberExpression;\r\n\t}());\r\n\texports.ComputedMemberExpression = ComputedMemberExpression;\r\n\tvar ConditionalExpression = /** @class */ (function () {\r\n\t    function ConditionalExpression(test, consequent, alternate) {\r\n\t        this.type = syntax_1.Syntax.ConditionalExpression;\r\n\t        this.test = test;\r\n\t        this.consequent = consequent;\r\n\t        this.alternate = alternate;\r\n\t    }\r\n\t    return ConditionalExpression;\r\n\t}());\r\n\texports.ConditionalExpression = ConditionalExpression;\r\n\tvar ContinueStatement = /** @class */ (function () {\r\n\t    function ContinueStatement(label) {\r\n\t        this.type = syntax_1.Syntax.ContinueStatement;\r\n\t        this.label = label;\r\n\t    }\r\n\t    return ContinueStatement;\r\n\t}());\r\n\texports.ContinueStatement = ContinueStatement;\r\n\tvar DebuggerStatement = /** @class */ (function () {\r\n\t    function DebuggerStatement() {\r\n\t        this.type = syntax_1.Syntax.DebuggerStatement;\r\n\t    }\r\n\t    return DebuggerStatement;\r\n\t}());\r\n\texports.DebuggerStatement = DebuggerStatement;\r\n\tvar Directive = /** @class */ (function () {\r\n\t    function Directive(expression, directive) {\r\n\t        this.type = syntax_1.Syntax.ExpressionStatement;\r\n\t        this.expression = expression;\r\n\t        this.directive = directive;\r\n\t    }\r\n\t    return Directive;\r\n\t}());\r\n\texports.Directive = Directive;\r\n\tvar DoWhileStatement = /** @class */ (function () {\r\n\t    function DoWhileStatement(body, test) {\r\n\t        this.type = syntax_1.Syntax.DoWhileStatement;\r\n\t        this.body = body;\r\n\t        this.test = test;\r\n\t    }\r\n\t    return DoWhileStatement;\r\n\t}());\r\n\texports.DoWhileStatement = DoWhileStatement;\r\n\tvar EmptyStatement = /** @class */ (function () {\r\n\t    function EmptyStatement() {\r\n\t        this.type = syntax_1.Syntax.EmptyStatement;\r\n\t    }\r\n\t    return EmptyStatement;\r\n\t}());\r\n\texports.EmptyStatement = EmptyStatement;\r\n\tvar ExportAllDeclaration = /** @class */ (function () {\r\n\t    function ExportAllDeclaration(source) {\r\n\t        this.type = syntax_1.Syntax.ExportAllDeclaration;\r\n\t        this.source = source;\r\n\t    }\r\n\t    return ExportAllDeclaration;\r\n\t}());\r\n\texports.ExportAllDeclaration = ExportAllDeclaration;\r\n\tvar ExportDefaultDeclaration = /** @class */ (function () {\r\n\t    function ExportDefaultDeclaration(declaration) {\r\n\t        this.type = syntax_1.Syntax.ExportDefaultDeclaration;\r\n\t        this.declaration = declaration;\r\n\t    }\r\n\t    return ExportDefaultDeclaration;\r\n\t}());\r\n\texports.ExportDefaultDeclaration = ExportDefaultDeclaration;\r\n\tvar ExportNamedDeclaration = /** @class */ (function () {\r\n\t    function ExportNamedDeclaration(declaration, specifiers, source) {\r\n\t        this.type = syntax_1.Syntax.ExportNamedDeclaration;\r\n\t        this.declaration = declaration;\r\n\t        this.specifiers = specifiers;\r\n\t        this.source = source;\r\n\t    }\r\n\t    return ExportNamedDeclaration;\r\n\t}());\r\n\texports.ExportNamedDeclaration = ExportNamedDeclaration;\r\n\tvar ExportSpecifier = /** @class */ (function () {\r\n\t    function ExportSpecifier(local, exported) {\r\n\t        this.type = syntax_1.Syntax.ExportSpecifier;\r\n\t        this.exported = exported;\r\n\t        this.local = local;\r\n\t    }\r\n\t    return ExportSpecifier;\r\n\t}());\r\n\texports.ExportSpecifier = ExportSpecifier;\r\n\tvar ExpressionStatement = /** @class */ (function () {\r\n\t    function ExpressionStatement(expression) {\r\n\t        this.type = syntax_1.Syntax.ExpressionStatement;\r\n\t        this.expression = expression;\r\n\t    }\r\n\t    return ExpressionStatement;\r\n\t}());\r\n\texports.ExpressionStatement = ExpressionStatement;\r\n\tvar ForInStatement = /** @class */ (function () {\r\n\t    function ForInStatement(left, right, body) {\r\n\t        this.type = syntax_1.Syntax.ForInStatement;\r\n\t        this.left = left;\r\n\t        this.right = right;\r\n\t        this.body = body;\r\n\t        this.each = false;\r\n\t    }\r\n\t    return ForInStatement;\r\n\t}());\r\n\texports.ForInStatement = ForInStatement;\r\n\tvar ForOfStatement = /** @class */ (function () {\r\n\t    function ForOfStatement(left, right, body) {\r\n\t        this.type = syntax_1.Syntax.ForOfStatement;\r\n\t        this.left = left;\r\n\t        this.right = right;\r\n\t        this.body = body;\r\n\t    }\r\n\t    return ForOfStatement;\r\n\t}());\r\n\texports.ForOfStatement = ForOfStatement;\r\n\tvar ForStatement = /** @class */ (function () {\r\n\t    function ForStatement(init, test, update, body) {\r\n\t        this.type = syntax_1.Syntax.ForStatement;\r\n\t        this.init = init;\r\n\t        this.test = test;\r\n\t        this.update = update;\r\n\t        this.body = body;\r\n\t    }\r\n\t    return ForStatement;\r\n\t}());\r\n\texports.ForStatement = ForStatement;\r\n\tvar FunctionDeclaration = /** @class */ (function () {\r\n\t    function FunctionDeclaration(id, params, body, generator) {\r\n\t        this.type = syntax_1.Syntax.FunctionDeclaration;\r\n\t        this.id = id;\r\n\t        this.params = params;\r\n\t        this.body = body;\r\n\t        this.generator = generator;\r\n\t        this.expression = false;\r\n\t        this.async = false;\r\n\t    }\r\n\t    return FunctionDeclaration;\r\n\t}());\r\n\texports.FunctionDeclaration = FunctionDeclaration;\r\n\tvar FunctionExpression = /** @class */ (function () {\r\n\t    function FunctionExpression(id, params, body, generator) {\r\n\t        this.type = syntax_1.Syntax.FunctionExpression;\r\n\t        this.id = id;\r\n\t        this.params = params;\r\n\t        this.body = body;\r\n\t        this.generator = generator;\r\n\t        this.expression = false;\r\n\t        this.async = false;\r\n\t    }\r\n\t    return FunctionExpression;\r\n\t}());\r\n\texports.FunctionExpression = FunctionExpression;\r\n\tvar Identifier = /** @class */ (function () {\r\n\t    function Identifier(name) {\r\n\t        this.type = syntax_1.Syntax.Identifier;\r\n\t        this.name = name;\r\n\t    }\r\n\t    return Identifier;\r\n\t}());\r\n\texports.Identifier = Identifier;\r\n\tvar IfStatement = /** @class */ (function () {\r\n\t    function IfStatement(test, consequent, alternate) {\r\n\t        this.type = syntax_1.Syntax.IfStatement;\r\n\t        this.test = test;\r\n\t        this.consequent = consequent;\r\n\t        this.alternate = alternate;\r\n\t    }\r\n\t    return IfStatement;\r\n\t}());\r\n\texports.IfStatement = IfStatement;\r\n\tvar Import = /** @class */ (function () {\r\n\t    function Import() {\r\n\t        this.type = syntax_1.Syntax.Import;\r\n\t    }\r\n\t    return Import;\r\n\t}());\r\n\texports.Import = Import;\r\n\tvar ImportDeclaration = /** @class */ (function () {\r\n\t    function ImportDeclaration(specifiers, source) {\r\n\t        this.type = syntax_1.Syntax.ImportDeclaration;\r\n\t        this.specifiers = specifiers;\r\n\t        this.source = source;\r\n\t    }\r\n\t    return ImportDeclaration;\r\n\t}());\r\n\texports.ImportDeclaration = ImportDeclaration;\r\n\tvar ImportDefaultSpecifier = /** @class */ (function () {\r\n\t    function ImportDefaultSpecifier(local) {\r\n\t        this.type = syntax_1.Syntax.ImportDefaultSpecifier;\r\n\t        this.local = local;\r\n\t    }\r\n\t    return ImportDefaultSpecifier;\r\n\t}());\r\n\texports.ImportDefaultSpecifier = ImportDefaultSpecifier;\r\n\tvar ImportNamespaceSpecifier = /** @class */ (function () {\r\n\t    function ImportNamespaceSpecifier(local) {\r\n\t        this.type = syntax_1.Syntax.ImportNamespaceSpecifier;\r\n\t        this.local = local;\r\n\t    }\r\n\t    return ImportNamespaceSpecifier;\r\n\t}());\r\n\texports.ImportNamespaceSpecifier = ImportNamespaceSpecifier;\r\n\tvar ImportSpecifier = /** @class */ (function () {\r\n\t    function ImportSpecifier(local, imported) {\r\n\t        this.type = syntax_1.Syntax.ImportSpecifier;\r\n\t        this.local = local;\r\n\t        this.imported = imported;\r\n\t    }\r\n\t    return ImportSpecifier;\r\n\t}());\r\n\texports.ImportSpecifier = ImportSpecifier;\r\n\tvar LabeledStatement = /** @class */ (function () {\r\n\t    function LabeledStatement(label, body) {\r\n\t        this.type = syntax_1.Syntax.LabeledStatement;\r\n\t        this.label = label;\r\n\t        this.body = body;\r\n\t    }\r\n\t    return LabeledStatement;\r\n\t}());\r\n\texports.LabeledStatement = LabeledStatement;\r\n\tvar Literal = /** @class */ (function () {\r\n\t    function Literal(value, raw) {\r\n\t        this.type = syntax_1.Syntax.Literal;\r\n\t        this.value = value;\r\n\t        this.raw = raw;\r\n\t    }\r\n\t    return Literal;\r\n\t}());\r\n\texports.Literal = Literal;\r\n\tvar MetaProperty = /** @class */ (function () {\r\n\t    function MetaProperty(meta, property) {\r\n\t        this.type = syntax_1.Syntax.MetaProperty;\r\n\t        this.meta = meta;\r\n\t        this.property = property;\r\n\t    }\r\n\t    return MetaProperty;\r\n\t}());\r\n\texports.MetaProperty = MetaProperty;\r\n\tvar MethodDefinition = /** @class */ (function () {\r\n\t    function MethodDefinition(key, computed, value, kind, isStatic) {\r\n\t        this.type = syntax_1.Syntax.MethodDefinition;\r\n\t        this.key = key;\r\n\t        this.computed = computed;\r\n\t        this.value = value;\r\n\t        this.kind = kind;\r\n\t        this.static = isStatic;\r\n\t    }\r\n\t    return MethodDefinition;\r\n\t}());\r\n\texports.MethodDefinition = MethodDefinition;\r\n\tvar Module = /** @class */ (function () {\r\n\t    function Module(body) {\r\n\t        this.type = syntax_1.Syntax.Program;\r\n\t        this.body = body;\r\n\t        this.sourceType = 'module';\r\n\t    }\r\n\t    return Module;\r\n\t}());\r\n\texports.Module = Module;\r\n\tvar NewExpression = /** @class */ (function () {\r\n\t    function NewExpression(callee, args) {\r\n\t        this.type = syntax_1.Syntax.NewExpression;\r\n\t        this.callee = callee;\r\n\t        this.arguments = args;\r\n\t    }\r\n\t    return NewExpression;\r\n\t}());\r\n\texports.NewExpression = NewExpression;\r\n\tvar ObjectExpression = /** @class */ (function () {\r\n\t    function ObjectExpression(properties) {\r\n\t        this.type = syntax_1.Syntax.ObjectExpression;\r\n\t        this.properties = properties;\r\n\t    }\r\n\t    return ObjectExpression;\r\n\t}());\r\n\texports.ObjectExpression = ObjectExpression;\r\n\tvar ObjectPattern = /** @class */ (function () {\r\n\t    function ObjectPattern(properties) {\r\n\t        this.type = syntax_1.Syntax.ObjectPattern;\r\n\t        this.properties = properties;\r\n\t    }\r\n\t    return ObjectPattern;\r\n\t}());\r\n\texports.ObjectPattern = ObjectPattern;\r\n\tvar Property = /** @class */ (function () {\r\n\t    function Property(kind, key, computed, value, method, shorthand) {\r\n\t        this.type = syntax_1.Syntax.Property;\r\n\t        this.key = key;\r\n\t        this.computed = computed;\r\n\t        this.value = value;\r\n\t        this.kind = kind;\r\n\t        this.method = method;\r\n\t        this.shorthand = shorthand;\r\n\t    }\r\n\t    return Property;\r\n\t}());\r\n\texports.Property = Property;\r\n\tvar RegexLiteral = /** @class */ (function () {\r\n\t    function RegexLiteral(value, raw, pattern, flags) {\r\n\t        this.type = syntax_1.Syntax.Literal;\r\n\t        this.value = value;\r\n\t        this.raw = raw;\r\n\t        this.regex = { pattern: pattern, flags: flags };\r\n\t    }\r\n\t    return RegexLiteral;\r\n\t}());\r\n\texports.RegexLiteral = RegexLiteral;\r\n\tvar RestElement = /** @class */ (function () {\r\n\t    function RestElement(argument) {\r\n\t        this.type = syntax_1.Syntax.RestElement;\r\n\t        this.argument = argument;\r\n\t    }\r\n\t    return RestElement;\r\n\t}());\r\n\texports.RestElement = RestElement;\r\n\tvar ReturnStatement = /** @class */ (function () {\r\n\t    function ReturnStatement(argument) {\r\n\t        this.type = syntax_1.Syntax.ReturnStatement;\r\n\t        this.argument = argument;\r\n\t    }\r\n\t    return ReturnStatement;\r\n\t}());\r\n\texports.ReturnStatement = ReturnStatement;\r\n\tvar Script = /** @class */ (function () {\r\n\t    function Script(body) {\r\n\t        this.type = syntax_1.Syntax.Program;\r\n\t        this.body = body;\r\n\t        this.sourceType = 'script';\r\n\t    }\r\n\t    return Script;\r\n\t}());\r\n\texports.Script = Script;\r\n\tvar SequenceExpression = /** @class */ (function () {\r\n\t    function SequenceExpression(expressions) {\r\n\t        this.type = syntax_1.Syntax.SequenceExpression;\r\n\t        this.expressions = expressions;\r\n\t    }\r\n\t    return SequenceExpression;\r\n\t}());\r\n\texports.SequenceExpression = SequenceExpression;\r\n\tvar SpreadElement = /** @class */ (function () {\r\n\t    function SpreadElement(argument) {\r\n\t        this.type = syntax_1.Syntax.SpreadElement;\r\n\t        this.argument = argument;\r\n\t    }\r\n\t    return SpreadElement;\r\n\t}());\r\n\texports.SpreadElement = SpreadElement;\r\n\tvar StaticMemberExpression = /** @class */ (function () {\r\n\t    function StaticMemberExpression(object, property) {\r\n\t        this.type = syntax_1.Syntax.MemberExpression;\r\n\t        this.computed = false;\r\n\t        this.object = object;\r\n\t        this.property = property;\r\n\t    }\r\n\t    return StaticMemberExpression;\r\n\t}());\r\n\texports.StaticMemberExpression = StaticMemberExpression;\r\n\tvar Super = /** @class */ (function () {\r\n\t    function Super() {\r\n\t        this.type = syntax_1.Syntax.Super;\r\n\t    }\r\n\t    return Super;\r\n\t}());\r\n\texports.Super = Super;\r\n\tvar SwitchCase = /** @class */ (function () {\r\n\t    function SwitchCase(test, consequent) {\r\n\t        this.type = syntax_1.Syntax.SwitchCase;\r\n\t        this.test = test;\r\n\t        this.consequent = consequent;\r\n\t    }\r\n\t    return SwitchCase;\r\n\t}());\r\n\texports.SwitchCase = SwitchCase;\r\n\tvar SwitchStatement = /** @class */ (function () {\r\n\t    function SwitchStatement(discriminant, cases) {\r\n\t        this.type = syntax_1.Syntax.SwitchStatement;\r\n\t        this.discriminant = discriminant;\r\n\t        this.cases = cases;\r\n\t    }\r\n\t    return SwitchStatement;\r\n\t}());\r\n\texports.SwitchStatement = SwitchStatement;\r\n\tvar TaggedTemplateExpression = /** @class */ (function () {\r\n\t    function TaggedTemplateExpression(tag, quasi) {\r\n\t        this.type = syntax_1.Syntax.TaggedTemplateExpression;\r\n\t        this.tag = tag;\r\n\t        this.quasi = quasi;\r\n\t    }\r\n\t    return TaggedTemplateExpression;\r\n\t}());\r\n\texports.TaggedTemplateExpression = TaggedTemplateExpression;\r\n\tvar TemplateElement = /** @class */ (function () {\r\n\t    function TemplateElement(value, tail) {\r\n\t        this.type = syntax_1.Syntax.TemplateElement;\r\n\t        this.value = value;\r\n\t        this.tail = tail;\r\n\t    }\r\n\t    return TemplateElement;\r\n\t}());\r\n\texports.TemplateElement = TemplateElement;\r\n\tvar TemplateLiteral = /** @class */ (function () {\r\n\t    function TemplateLiteral(quasis, expressions) {\r\n\t        this.type = syntax_1.Syntax.TemplateLiteral;\r\n\t        this.quasis = quasis;\r\n\t        this.expressions = expressions;\r\n\t    }\r\n\t    return TemplateLiteral;\r\n\t}());\r\n\texports.TemplateLiteral = TemplateLiteral;\r\n\tvar ThisExpression = /** @class */ (function () {\r\n\t    function ThisExpression() {\r\n\t        this.type = syntax_1.Syntax.ThisExpression;\r\n\t    }\r\n\t    return ThisExpression;\r\n\t}());\r\n\texports.ThisExpression = ThisExpression;\r\n\tvar ThrowStatement = /** @class */ (function () {\r\n\t    function ThrowStatement(argument) {\r\n\t        this.type = syntax_1.Syntax.ThrowStatement;\r\n\t        this.argument = argument;\r\n\t    }\r\n\t    return ThrowStatement;\r\n\t}());\r\n\texports.ThrowStatement = ThrowStatement;\r\n\tvar TryStatement = /** @class */ (function () {\r\n\t    function TryStatement(block, handler, finalizer) {\r\n\t        this.type = syntax_1.Syntax.TryStatement;\r\n\t        this.block = block;\r\n\t        this.handler = handler;\r\n\t        this.finalizer = finalizer;\r\n\t    }\r\n\t    return TryStatement;\r\n\t}());\r\n\texports.TryStatement = TryStatement;\r\n\tvar UnaryExpression = /** @class */ (function () {\r\n\t    function UnaryExpression(operator, argument) {\r\n\t        this.type = syntax_1.Syntax.UnaryExpression;\r\n\t        this.operator = operator;\r\n\t        this.argument = argument;\r\n\t        this.prefix = true;\r\n\t    }\r\n\t    return UnaryExpression;\r\n\t}());\r\n\texports.UnaryExpression = UnaryExpression;\r\n\tvar UpdateExpression = /** @class */ (function () {\r\n\t    function UpdateExpression(operator, argument, prefix) {\r\n\t        this.type = syntax_1.Syntax.UpdateExpression;\r\n\t        this.operator = operator;\r\n\t        this.argument = argument;\r\n\t        this.prefix = prefix;\r\n\t    }\r\n\t    return UpdateExpression;\r\n\t}());\r\n\texports.UpdateExpression = UpdateExpression;\r\n\tvar VariableDeclaration = /** @class */ (function () {\r\n\t    function VariableDeclaration(declarations, kind) {\r\n\t        this.type = syntax_1.Syntax.VariableDeclaration;\r\n\t        this.declarations = declarations;\r\n\t        this.kind = kind;\r\n\t    }\r\n\t    return VariableDeclaration;\r\n\t}());\r\n\texports.VariableDeclaration = VariableDeclaration;\r\n\tvar VariableDeclarator = /** @class */ (function () {\r\n\t    function VariableDeclarator(id, init) {\r\n\t        this.type = syntax_1.Syntax.VariableDeclarator;\r\n\t        this.id = id;\r\n\t        this.init = init;\r\n\t    }\r\n\t    return VariableDeclarator;\r\n\t}());\r\n\texports.VariableDeclarator = VariableDeclarator;\r\n\tvar WhileStatement = /** @class */ (function () {\r\n\t    function WhileStatement(test, body) {\r\n\t        this.type = syntax_1.Syntax.WhileStatement;\r\n\t        this.test = test;\r\n\t        this.body = body;\r\n\t    }\r\n\t    return WhileStatement;\r\n\t}());\r\n\texports.WhileStatement = WhileStatement;\r\n\tvar WithStatement = /** @class */ (function () {\r\n\t    function WithStatement(object, body) {\r\n\t        this.type = syntax_1.Syntax.WithStatement;\r\n\t        this.object = object;\r\n\t        this.body = body;\r\n\t    }\r\n\t    return WithStatement;\r\n\t}());\r\n\texports.WithStatement = WithStatement;\r\n\tvar YieldExpression = /** @class */ (function () {\r\n\t    function YieldExpression(argument, delegate) {\r\n\t        this.type = syntax_1.Syntax.YieldExpression;\r\n\t        this.argument = argument;\r\n\t        this.delegate = delegate;\r\n\t    }\r\n\t    return YieldExpression;\r\n\t}());\r\n\texports.YieldExpression = YieldExpression;\r\n\r\n\r\n/***/ },\r\n/* 8 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\"use strict\";\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar assert_1 = __webpack_require__(9);\r\n\tvar error_handler_1 = __webpack_require__(10);\r\n\tvar messages_1 = __webpack_require__(11);\r\n\tvar Node = __webpack_require__(7);\r\n\tvar scanner_1 = __webpack_require__(12);\r\n\tvar syntax_1 = __webpack_require__(2);\r\n\tvar token_1 = __webpack_require__(13);\r\n\tvar ArrowParameterPlaceHolder = 'ArrowParameterPlaceHolder';\r\n\t/* eslint-disable @typescript-eslint/unbound-method */\r\n\tvar Parser = /** @class */ (function () {\r\n\t    function Parser(code, options, delegate) {\r\n\t        if (options === void 0) { options = {}; }\r\n\t        this.config = {\r\n\t            range: (typeof options.range === 'boolean') && options.range,\r\n\t            loc: (typeof options.loc === 'boolean') && options.loc,\r\n\t            source: null,\r\n\t            tokens: (typeof options.tokens === 'boolean') && options.tokens,\r\n\t            comment: (typeof options.comment === 'boolean') && options.comment,\r\n\t            tolerant: (typeof options.tolerant === 'boolean') && options.tolerant\r\n\t        };\r\n\t        if (this.config.loc && options.source && options.source !== null) {\r\n\t            this.config.source = String(options.source);\r\n\t        }\r\n\t        this.delegate = delegate;\r\n\t        this.errorHandler = new error_handler_1.ErrorHandler();\r\n\t        this.errorHandler.tolerant = this.config.tolerant;\r\n\t        this.scanner = new scanner_1.Scanner(code, this.errorHandler);\r\n\t        this.scanner.trackComment = this.config.comment;\r\n\t        this.operatorPrecedence = {\r\n\t            ')': 0,\r\n\t            ';': 0,\r\n\t            ',': 0,\r\n\t            '=': 0,\r\n\t            ']': 0,\r\n\t            '||': 1,\r\n\t            '&&': 2,\r\n\t            '|': 3,\r\n\t            '^': 4,\r\n\t            '&': 5,\r\n\t            '==': 6,\r\n\t            '!=': 6,\r\n\t            '===': 6,\r\n\t            '!==': 6,\r\n\t            '<': 7,\r\n\t            '>': 7,\r\n\t            '<=': 7,\r\n\t            '>=': 7,\r\n\t            '<<': 8,\r\n\t            '>>': 8,\r\n\t            '>>>': 8,\r\n\t            '+': 9,\r\n\t            '-': 9,\r\n\t            '*': 11,\r\n\t            '/': 11,\r\n\t            '%': 11\r\n\t        };\r\n\t        this.lookahead = {\r\n\t            type: 2 /* EOF */,\r\n\t            value: '',\r\n\t            lineNumber: this.scanner.lineNumber,\r\n\t            lineStart: 0,\r\n\t            start: 0,\r\n\t            end: 0\r\n\t        };\r\n\t        this.hasLineTerminator = false;\r\n\t        this.context = {\r\n\t            isModule: false,\r\n\t            await: false,\r\n\t            allowIn: true,\r\n\t            allowStrictDirective: true,\r\n\t            allowYield: true,\r\n\t            firstCoverInitializedNameError: null,\r\n\t            isAssignmentTarget: false,\r\n\t            isBindingElement: false,\r\n\t            inFunctionBody: false,\r\n\t            inIteration: false,\r\n\t            inSwitch: false,\r\n\t            labelSet: {},\r\n\t            strict: false\r\n\t        };\r\n\t        this.tokens = [];\r\n\t        this.startMarker = {\r\n\t            index: 0,\r\n\t            line: this.scanner.lineNumber,\r\n\t            column: 0\r\n\t        };\r\n\t        this.lastMarker = {\r\n\t            index: 0,\r\n\t            line: this.scanner.lineNumber,\r\n\t            column: 0\r\n\t        };\r\n\t        this.nextToken();\r\n\t        this.lastMarker = {\r\n\t            index: this.scanner.index,\r\n\t            line: this.scanner.lineNumber,\r\n\t            column: this.scanner.index - this.scanner.lineStart\r\n\t        };\r\n\t    }\r\n\t    Parser.prototype.throwError = function (messageFormat) {\r\n\t        var values = [];\r\n\t        for (var _i = 1; _i < arguments.length; _i++) {\r\n\t            values[_i - 1] = arguments[_i];\r\n\t        }\r\n\t        var args = values.slice();\r\n\t        var msg = messageFormat.replace(/%(\\d)/g, function (whole, idx) {\r\n\t            assert_1.assert(idx < args.length, 'Message reference must be in range');\r\n\t            return args[idx];\r\n\t        });\r\n\t        var index = this.lastMarker.index;\r\n\t        var line = this.lastMarker.line;\r\n\t        var column = this.lastMarker.column + 1;\r\n\t        throw this.errorHandler.createError(index, line, column, msg);\r\n\t    };\r\n\t    Parser.prototype.tolerateError = function (messageFormat) {\r\n\t        var values = [];\r\n\t        for (var _i = 1; _i < arguments.length; _i++) {\r\n\t            values[_i - 1] = arguments[_i];\r\n\t        }\r\n\t        var args = values.slice();\r\n\t        var msg = messageFormat.replace(/%(\\d)/g, function (whole, idx) {\r\n\t            assert_1.assert(idx < args.length, 'Message reference must be in range');\r\n\t            return args[idx];\r\n\t        });\r\n\t        var index = this.lastMarker.index;\r\n\t        var line = this.scanner.lineNumber;\r\n\t        var column = this.lastMarker.column + 1;\r\n\t        this.errorHandler.tolerateError(index, line, column, msg);\r\n\t    };\r\n\t    // Throw an exception because of the token.\r\n\t    Parser.prototype.unexpectedTokenError = function (token, message) {\r\n\t        var msg = message || messages_1.Messages.UnexpectedToken;\r\n\t        var value;\r\n\t        if (token) {\r\n\t            if (!message) {\r\n\t                msg = (token.type === 2 /* EOF */) ? messages_1.Messages.UnexpectedEOS :\r\n\t                    (token.type === 3 /* Identifier */) ? messages_1.Messages.UnexpectedIdentifier :\r\n\t                        (token.type === 6 /* NumericLiteral */) ? messages_1.Messages.UnexpectedNumber :\r\n\t                            (token.type === 8 /* StringLiteral */) ? messages_1.Messages.UnexpectedString :\r\n\t                                (token.type === 10 /* Template */) ? messages_1.Messages.UnexpectedTemplate :\r\n\t                                    messages_1.Messages.UnexpectedToken;\r\n\t                if (token.type === 4 /* Keyword */) {\r\n\t                    if (this.scanner.isFutureReservedWord(token.value)) {\r\n\t                        msg = messages_1.Messages.UnexpectedReserved;\r\n\t                    }\r\n\t                    else if (this.context.strict && this.scanner.isStrictModeReservedWord(token.value)) {\r\n\t                        msg = messages_1.Messages.StrictReservedWord;\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            value = token.value;\r\n\t        }\r\n\t        else {\r\n\t            value = 'ILLEGAL';\r\n\t        }\r\n\t        msg = msg.replace('%0', value);\r\n\t        if (token && typeof token.lineNumber === 'number') {\r\n\t            var index = token.start;\r\n\t            var line = token.lineNumber;\r\n\t            var lastMarkerLineStart = this.lastMarker.index - this.lastMarker.column;\r\n\t            var column = token.start - lastMarkerLineStart + 1;\r\n\t            return this.errorHandler.createError(index, line, column, msg);\r\n\t        }\r\n\t        else {\r\n\t            var index = this.lastMarker.index;\r\n\t            var line = this.lastMarker.line;\r\n\t            var column = this.lastMarker.column + 1;\r\n\t            return this.errorHandler.createError(index, line, column, msg);\r\n\t        }\r\n\t    };\r\n\t    Parser.prototype.throwUnexpectedToken = function (token, message) {\r\n\t        throw this.unexpectedTokenError(token, message);\r\n\t    };\r\n\t    Parser.prototype.tolerateUnexpectedToken = function (token, message) {\r\n\t        this.errorHandler.tolerate(this.unexpectedTokenError(token, message));\r\n\t    };\r\n\t    Parser.prototype.collectComments = function () {\r\n\t        if (!this.config.comment) {\r\n\t            this.scanner.scanComments();\r\n\t        }\r\n\t        else {\r\n\t            var comments = this.scanner.scanComments();\r\n\t            if (comments.length > 0 && this.delegate) {\r\n\t                for (var i = 0; i < comments.length; ++i) {\r\n\t                    var e = comments[i];\r\n\t                    var node = {\r\n\t                        type: e.multiLine ? 'BlockComment' : 'LineComment',\r\n\t                        value: this.scanner.source.slice(e.slice[0], e.slice[1])\r\n\t                    };\r\n\t                    if (this.config.range) {\r\n\t                        node.range = e.range;\r\n\t                    }\r\n\t                    if (this.config.loc) {\r\n\t                        node.loc = e.loc;\r\n\t                    }\r\n\t                    var metadata = {\r\n\t                        start: {\r\n\t                            line: e.loc.start.line,\r\n\t                            column: e.loc.start.column,\r\n\t                            offset: e.range[0]\r\n\t                        },\r\n\t                        end: {\r\n\t                            line: e.loc.end.line,\r\n\t                            column: e.loc.end.column,\r\n\t                            offset: e.range[1]\r\n\t                        }\r\n\t                    };\r\n\t                    this.delegate(node, metadata);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    // From internal representation to an external structure\r\n\t    Parser.prototype.getTokenRaw = function (token) {\r\n\t        return this.scanner.source.slice(token.start, token.end);\r\n\t    };\r\n\t    Parser.prototype.convertToken = function (token) {\r\n\t        var t = {\r\n\t            type: token_1.TokenName[token.type],\r\n\t            value: this.getTokenRaw(token)\r\n\t        };\r\n\t        if (this.config.range) {\r\n\t            t.range = [token.start, token.end];\r\n\t        }\r\n\t        if (this.config.loc) {\r\n\t            t.loc = {\r\n\t                start: {\r\n\t                    line: this.startMarker.line,\r\n\t                    column: this.startMarker.column\r\n\t                },\r\n\t                end: {\r\n\t                    line: this.scanner.lineNumber,\r\n\t                    column: this.scanner.index - this.scanner.lineStart\r\n\t                }\r\n\t            };\r\n\t        }\r\n\t        if (token.type === 9 /* RegularExpression */) {\r\n\t            var pattern = token.pattern;\r\n\t            var flags = token.flags;\r\n\t            t.regex = { pattern: pattern, flags: flags };\r\n\t        }\r\n\t        return t;\r\n\t    };\r\n\t    Parser.prototype.nextToken = function () {\r\n\t        var token = this.lookahead;\r\n\t        this.lastMarker.index = this.scanner.index;\r\n\t        this.lastMarker.line = this.scanner.lineNumber;\r\n\t        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\r\n\t        this.collectComments();\r\n\t        if (this.scanner.index !== this.startMarker.index) {\r\n\t            this.startMarker.index = this.scanner.index;\r\n\t            this.startMarker.line = this.scanner.lineNumber;\r\n\t            this.startMarker.column = this.scanner.index - this.scanner.lineStart;\r\n\t        }\r\n\t        var next = this.scanner.lex();\r\n\t        this.hasLineTerminator = (token.lineNumber !== next.lineNumber);\r\n\t        if (next && this.context.strict && next.type === 3 /* Identifier */) {\r\n\t            if (this.scanner.isStrictModeReservedWord(next.value)) {\r\n\t                next.type = 4 /* Keyword */;\r\n\t            }\r\n\t        }\r\n\t        this.lookahead = next;\r\n\t        if (this.config.tokens && next.type !== 2 /* EOF */) {\r\n\t            this.tokens.push(this.convertToken(next));\r\n\t        }\r\n\t        return token;\r\n\t    };\r\n\t    Parser.prototype.nextRegexToken = function () {\r\n\t        this.collectComments();\r\n\t        var token = this.scanner.scanRegExp();\r\n\t        if (this.config.tokens) {\r\n\t            // Pop the previous token, '/' or '/='\r\n\t            // This is added from the lookahead token.\r\n\t            this.tokens.pop();\r\n\t            this.tokens.push(this.convertToken(token));\r\n\t        }\r\n\t        // Prime the next lookahead.\r\n\t        this.lookahead = token;\r\n\t        this.nextToken();\r\n\t        return token;\r\n\t    };\r\n\t    Parser.prototype.createNode = function () {\r\n\t        return {\r\n\t            index: this.startMarker.index,\r\n\t            line: this.startMarker.line,\r\n\t            column: this.startMarker.column\r\n\t        };\r\n\t    };\r\n\t    Parser.prototype.startNode = function (token, lastLineStart) {\r\n\t        if (lastLineStart === void 0) { lastLineStart = 0; }\r\n\t        var column = token.start - token.lineStart;\r\n\t        var line = token.lineNumber;\r\n\t        if (column < 0) {\r\n\t            column += lastLineStart;\r\n\t            line--;\r\n\t        }\r\n\t        return {\r\n\t            index: token.start,\r\n\t            line: line,\r\n\t            column: column\r\n\t        };\r\n\t    };\r\n\t    Parser.prototype.finalize = function (marker, node) {\r\n\t        if (this.config.range) {\r\n\t            node.range = [marker.index, this.lastMarker.index];\r\n\t        }\r\n\t        if (this.config.loc) {\r\n\t            node.loc = {\r\n\t                start: {\r\n\t                    line: marker.line,\r\n\t                    column: marker.column,\r\n\t                },\r\n\t                end: {\r\n\t                    line: this.lastMarker.line,\r\n\t                    column: this.lastMarker.column\r\n\t                }\r\n\t            };\r\n\t            if (this.config.source) {\r\n\t                node.loc.source = this.config.source;\r\n\t            }\r\n\t        }\r\n\t        if (this.delegate) {\r\n\t            var metadata = {\r\n\t                start: {\r\n\t                    line: marker.line,\r\n\t                    column: marker.column,\r\n\t                    offset: marker.index\r\n\t                },\r\n\t                end: {\r\n\t                    line: this.lastMarker.line,\r\n\t                    column: this.lastMarker.column,\r\n\t                    offset: this.lastMarker.index\r\n\t                }\r\n\t            };\r\n\t            this.delegate(node, metadata);\r\n\t        }\r\n\t        return node;\r\n\t    };\r\n\t    // Expect the next token to match the specified punctuator.\r\n\t    // If not, an exception will be thrown.\r\n\t    Parser.prototype.expect = function (value) {\r\n\t        var token = this.nextToken();\r\n\t        if (token.type !== 7 /* Punctuator */ || token.value !== value) {\r\n\t            this.throwUnexpectedToken(token);\r\n\t        }\r\n\t    };\r\n\t    // Quietly expect a comma when in tolerant mode, otherwise delegates to expect().\r\n\t    Parser.prototype.expectCommaSeparator = function () {\r\n\t        if (this.config.tolerant) {\r\n\t            var token = this.lookahead;\r\n\t            if (token.type === 7 /* Punctuator */ && token.value === ',') {\r\n\t                this.nextToken();\r\n\t            }\r\n\t            else if (token.type === 7 /* Punctuator */ && token.value === ';') {\r\n\t                this.nextToken();\r\n\t                this.tolerateUnexpectedToken(token);\r\n\t            }\r\n\t            else {\r\n\t                this.tolerateUnexpectedToken(token, messages_1.Messages.UnexpectedToken);\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            this.expect(',');\r\n\t        }\r\n\t    };\r\n\t    // Expect the next token to match the specified keyword.\r\n\t    // If not, an exception will be thrown.\r\n\t    Parser.prototype.expectKeyword = function (keyword) {\r\n\t        var token = this.nextToken();\r\n\t        if (token.type !== 4 /* Keyword */ || token.value !== keyword) {\r\n\t            this.throwUnexpectedToken(token);\r\n\t        }\r\n\t    };\r\n\t    // Return true if the next token matches the specified punctuator.\r\n\t    Parser.prototype.match = function (value) {\r\n\t        return this.lookahead.type === 7 /* Punctuator */ && this.lookahead.value === value;\r\n\t    };\r\n\t    // Return true if the next token matches the specified keyword\r\n\t    Parser.prototype.matchKeyword = function (keyword) {\r\n\t        return this.lookahead.type === 4 /* Keyword */ && this.lookahead.value === keyword;\r\n\t    };\r\n\t    // Return true if the next token matches the specified contextual keyword\r\n\t    // (where an identifier is sometimes a keyword depending on the context)\r\n\t    Parser.prototype.matchContextualKeyword = function (keyword) {\r\n\t        return this.lookahead.type === 3 /* Identifier */ && this.lookahead.value === keyword;\r\n\t    };\r\n\t    // Return true if the next token is an assignment operator\r\n\t    Parser.prototype.matchAssign = function () {\r\n\t        if (this.lookahead.type !== 7 /* Punctuator */) {\r\n\t            return false;\r\n\t        }\r\n\t        var op = this.lookahead.value;\r\n\t        return op === '=' ||\r\n\t            op === '*=' ||\r\n\t            op === '**=' ||\r\n\t            op === '/=' ||\r\n\t            op === '%=' ||\r\n\t            op === '+=' ||\r\n\t            op === '-=' ||\r\n\t            op === '<<=' ||\r\n\t            op === '>>=' ||\r\n\t            op === '>>>=' ||\r\n\t            op === '&=' ||\r\n\t            op === '^=' ||\r\n\t            op === '|=';\r\n\t    };\r\n\t    // Cover grammar support.\r\n\t    //\r\n\t    // When an assignment expression position starts with an left parenthesis, the determination of the type\r\n\t    // of the syntax is to be deferred arbitrarily long until the end of the parentheses pair (plus a lookahead)\r\n\t    // or the first comma. This situation also defers the determination of all the expressions nested in the pair.\r\n\t    //\r\n\t    // There are three productions that can be parsed in a parentheses pair that needs to be determined\r\n\t    // after the outermost pair is closed. They are:\r\n\t    //\r\n\t    //   1. AssignmentExpression\r\n\t    //   2. BindingElements\r\n\t    //   3. AssignmentTargets\r\n\t    //\r\n\t    // In order to avoid exponential backtracking, we use two flags to denote if the production can be\r\n\t    // binding element or assignment target.\r\n\t    //\r\n\t    // The three productions have the relationship:\r\n\t    //\r\n\t    //   BindingElements ⊆ AssignmentTargets ⊆ AssignmentExpression\r\n\t    //\r\n\t    // with a single exception that CoverInitializedName when used directly in an Expression, generates\r\n\t    // an early error. Therefore, we need the third state, firstCoverInitializedNameError, to track the\r\n\t    // first usage of CoverInitializedName and report it when we reached the end of the parentheses pair.\r\n\t    //\r\n\t    // isolateCoverGrammar function runs the given parser function with a new cover grammar context, and it does not\r\n\t    // effect the current flags. This means the production the parser parses is only used as an expression. Therefore\r\n\t    // the CoverInitializedName check is conducted.\r\n\t    //\r\n\t    // inheritCoverGrammar function runs the given parse function with a new cover grammar context, and it propagates\r\n\t    // the flags outside of the parser. This means the production the parser parses is used as a part of a potential\r\n\t    // pattern. The CoverInitializedName check is deferred.\r\n\t    Parser.prototype.isolateCoverGrammar = function (parseFunction) {\r\n\t        var previousIsBindingElement = this.context.isBindingElement;\r\n\t        var previousIsAssignmentTarget = this.context.isAssignmentTarget;\r\n\t        var previousFirstCoverInitializedNameError = this.context.firstCoverInitializedNameError;\r\n\t        this.context.isBindingElement = true;\r\n\t        this.context.isAssignmentTarget = true;\r\n\t        this.context.firstCoverInitializedNameError = null;\r\n\t        var result = parseFunction.call(this);\r\n\t        if (this.context.firstCoverInitializedNameError !== null) {\r\n\t            this.throwUnexpectedToken(this.context.firstCoverInitializedNameError);\r\n\t        }\r\n\t        this.context.isBindingElement = previousIsBindingElement;\r\n\t        this.context.isAssignmentTarget = previousIsAssignmentTarget;\r\n\t        this.context.firstCoverInitializedNameError = previousFirstCoverInitializedNameError;\r\n\t        return result;\r\n\t    };\r\n\t    Parser.prototype.inheritCoverGrammar = function (parseFunction) {\r\n\t        var previousIsBindingElement = this.context.isBindingElement;\r\n\t        var previousIsAssignmentTarget = this.context.isAssignmentTarget;\r\n\t        var previousFirstCoverInitializedNameError = this.context.firstCoverInitializedNameError;\r\n\t        this.context.isBindingElement = true;\r\n\t        this.context.isAssignmentTarget = true;\r\n\t        this.context.firstCoverInitializedNameError = null;\r\n\t        var result = parseFunction.call(this);\r\n\t        this.context.isBindingElement = this.context.isBindingElement && previousIsBindingElement;\r\n\t        this.context.isAssignmentTarget = this.context.isAssignmentTarget && previousIsAssignmentTarget;\r\n\t        this.context.firstCoverInitializedNameError = previousFirstCoverInitializedNameError || this.context.firstCoverInitializedNameError;\r\n\t        return result;\r\n\t    };\r\n\t    Parser.prototype.consumeSemicolon = function () {\r\n\t        if (this.match(';')) {\r\n\t            this.nextToken();\r\n\t        }\r\n\t        else if (!this.hasLineTerminator) {\r\n\t            if (this.lookahead.type !== 2 /* EOF */ && !this.match('}')) {\r\n\t                this.throwUnexpectedToken(this.lookahead);\r\n\t            }\r\n\t            this.lastMarker.index = this.startMarker.index;\r\n\t            this.lastMarker.line = this.startMarker.line;\r\n\t            this.lastMarker.column = this.startMarker.column;\r\n\t        }\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-primary-expression\r\n\t    Parser.prototype.parsePrimaryExpression = function () {\r\n\t        var node = this.createNode();\r\n\t        var expr;\r\n\t        var token, raw;\r\n\t        switch (this.lookahead.type) {\r\n\t            case 3 /* Identifier */:\r\n\t                if ((this.context.isModule || this.context.await) && this.lookahead.value === 'await') {\r\n\t                    this.tolerateUnexpectedToken(this.lookahead);\r\n\t                }\r\n\t                expr = this.matchAsyncFunction() ? this.parseFunctionExpression() : this.finalize(node, new Node.Identifier(this.nextToken().value));\r\n\t                break;\r\n\t            case 6 /* NumericLiteral */:\r\n\t            case 8 /* StringLiteral */:\r\n\t                if (this.context.strict && this.lookahead.octal) {\r\n\t                    this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.StrictOctalLiteral);\r\n\t                }\r\n\t                this.context.isAssignmentTarget = false;\r\n\t                this.context.isBindingElement = false;\r\n\t                token = this.nextToken();\r\n\t                raw = this.getTokenRaw(token);\r\n\t                expr = this.finalize(node, new Node.Literal(token.value, raw));\r\n\t                break;\r\n\t            case 1 /* BooleanLiteral */:\r\n\t                this.context.isAssignmentTarget = false;\r\n\t                this.context.isBindingElement = false;\r\n\t                token = this.nextToken();\r\n\t                raw = this.getTokenRaw(token);\r\n\t                expr = this.finalize(node, new Node.Literal(token.value === 'true', raw));\r\n\t                break;\r\n\t            case 5 /* NullLiteral */:\r\n\t                this.context.isAssignmentTarget = false;\r\n\t                this.context.isBindingElement = false;\r\n\t                token = this.nextToken();\r\n\t                raw = this.getTokenRaw(token);\r\n\t                expr = this.finalize(node, new Node.Literal(null, raw));\r\n\t                break;\r\n\t            case 10 /* Template */:\r\n\t                expr = this.parseTemplateLiteral();\r\n\t                break;\r\n\t            case 7 /* Punctuator */:\r\n\t                switch (this.lookahead.value) {\r\n\t                    case '(':\r\n\t                        this.context.isBindingElement = false;\r\n\t                        expr = this.inheritCoverGrammar(this.parseGroupExpression);\r\n\t                        break;\r\n\t                    case '[':\r\n\t                        expr = this.inheritCoverGrammar(this.parseArrayInitializer);\r\n\t                        break;\r\n\t                    case '{':\r\n\t                        expr = this.inheritCoverGrammar(this.parseObjectInitializer);\r\n\t                        break;\r\n\t                    case '/':\r\n\t                    case '/=':\r\n\t                        this.context.isAssignmentTarget = false;\r\n\t                        this.context.isBindingElement = false;\r\n\t                        this.scanner.index = this.startMarker.index;\r\n\t                        token = this.nextRegexToken();\r\n\t                        raw = this.getTokenRaw(token);\r\n\t                        expr = this.finalize(node, new Node.RegexLiteral(token.regex, raw, token.pattern, token.flags));\r\n\t                        break;\r\n\t                    default:\r\n\t                        expr = this.throwUnexpectedToken(this.nextToken());\r\n\t                }\r\n\t                break;\r\n\t            case 4 /* Keyword */:\r\n\t                if (!this.context.strict && this.context.allowYield && this.matchKeyword('yield')) {\r\n\t                    expr = this.parseIdentifierName();\r\n\t                }\r\n\t                else if (!this.context.strict && this.matchKeyword('let')) {\r\n\t                    expr = this.finalize(node, new Node.Identifier(this.nextToken().value));\r\n\t                }\r\n\t                else {\r\n\t                    this.context.isAssignmentTarget = false;\r\n\t                    this.context.isBindingElement = false;\r\n\t                    if (this.matchKeyword('function')) {\r\n\t                        expr = this.parseFunctionExpression();\r\n\t                    }\r\n\t                    else if (this.matchKeyword('this')) {\r\n\t                        this.nextToken();\r\n\t                        expr = this.finalize(node, new Node.ThisExpression());\r\n\t                    }\r\n\t                    else if (this.matchKeyword('class')) {\r\n\t                        expr = this.parseClassExpression();\r\n\t                    }\r\n\t                    else if (this.matchImportCall()) {\r\n\t                        expr = this.parseImportCall();\r\n\t                    }\r\n\t                    else {\r\n\t                        expr = this.throwUnexpectedToken(this.nextToken());\r\n\t                    }\r\n\t                }\r\n\t                break;\r\n\t            default:\r\n\t                expr = this.throwUnexpectedToken(this.nextToken());\r\n\t        }\r\n\t        return expr;\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-array-initializer\r\n\t    Parser.prototype.parseSpreadElement = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expect('...');\r\n\t        var arg = this.inheritCoverGrammar(this.parseAssignmentExpression);\r\n\t        return this.finalize(node, new Node.SpreadElement(arg));\r\n\t    };\r\n\t    Parser.prototype.parseArrayInitializer = function () {\r\n\t        var node = this.createNode();\r\n\t        var elements = [];\r\n\t        this.expect('[');\r\n\t        while (!this.match(']')) {\r\n\t            if (this.match(',')) {\r\n\t                this.nextToken();\r\n\t                elements.push(null);\r\n\t            }\r\n\t            else if (this.match('...')) {\r\n\t                var element = this.parseSpreadElement();\r\n\t                if (!this.match(']')) {\r\n\t                    this.context.isAssignmentTarget = false;\r\n\t                    this.context.isBindingElement = false;\r\n\t                    this.expect(',');\r\n\t                }\r\n\t                elements.push(element);\r\n\t            }\r\n\t            else {\r\n\t                elements.push(this.inheritCoverGrammar(this.parseAssignmentExpression));\r\n\t                if (!this.match(']')) {\r\n\t                    this.expect(',');\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        this.expect(']');\r\n\t        return this.finalize(node, new Node.ArrayExpression(elements));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-object-initializer\r\n\t    Parser.prototype.parsePropertyMethod = function (params) {\r\n\t        this.context.isAssignmentTarget = false;\r\n\t        this.context.isBindingElement = false;\r\n\t        var previousStrict = this.context.strict;\r\n\t        var previousAllowStrictDirective = this.context.allowStrictDirective;\r\n\t        this.context.allowStrictDirective = params.simple;\r\n\t        var body = this.isolateCoverGrammar(this.parseFunctionSourceElements);\r\n\t        if (this.context.strict && params.firstRestricted) {\r\n\t            this.tolerateUnexpectedToken(params.firstRestricted, params.message);\r\n\t        }\r\n\t        if (this.context.strict && params.stricted) {\r\n\t            this.tolerateUnexpectedToken(params.stricted, params.message);\r\n\t        }\r\n\t        this.context.strict = previousStrict;\r\n\t        this.context.allowStrictDirective = previousAllowStrictDirective;\r\n\t        return body;\r\n\t    };\r\n\t    Parser.prototype.parsePropertyMethodFunction = function () {\r\n\t        var isGenerator = false;\r\n\t        var node = this.createNode();\r\n\t        var previousAllowYield = this.context.allowYield;\r\n\t        this.context.allowYield = true;\r\n\t        var params = this.parseFormalParameters();\r\n\t        var method = this.parsePropertyMethod(params);\r\n\t        this.context.allowYield = previousAllowYield;\r\n\t        return this.finalize(node, new Node.FunctionExpression(null, params.params, method, isGenerator));\r\n\t    };\r\n\t    Parser.prototype.parsePropertyMethodAsyncFunction = function () {\r\n\t        var node = this.createNode();\r\n\t        var previousAllowYield = this.context.allowYield;\r\n\t        var previousAwait = this.context.await;\r\n\t        this.context.allowYield = false;\r\n\t        this.context.await = true;\r\n\t        var params = this.parseFormalParameters();\r\n\t        var method = this.parsePropertyMethod(params);\r\n\t        this.context.allowYield = previousAllowYield;\r\n\t        this.context.await = previousAwait;\r\n\t        return this.finalize(node, new Node.AsyncFunctionExpression(null, params.params, method));\r\n\t    };\r\n\t    Parser.prototype.parseObjectPropertyKey = function () {\r\n\t        var node = this.createNode();\r\n\t        var token = this.nextToken();\r\n\t\t\tvar key;\r\n\t        switch (token.type) {\r\n\t            case 8 /* StringLiteral */:\r\n\t            case 6 /* NumericLiteral */:\r\n\t                if (this.context.strict && token.octal) {\r\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictOctalLiteral);\r\n\t                }\r\n\t                var raw = this.getTokenRaw(token);\r\n\t                key = this.finalize(node, new Node.Literal(token.value, raw));\r\n\t                break;\r\n\t            case 3 /* Identifier */:\r\n\t            case 1 /* BooleanLiteral */:\r\n\t            case 5 /* NullLiteral */:\r\n\t            case 4 /* Keyword */:\r\n\t                key = this.finalize(node, new Node.Identifier(token.value));\r\n\t                break;\r\n\t            case 7 /* Punctuator */:\r\n\t                if (token.value === '[') {\r\n\t                    key = this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t                    this.expect(']');\r\n\t                }\r\n\t                else {\r\n\t                    key = this.throwUnexpectedToken(token);\r\n\t                }\r\n\t                break;\r\n\t            default:\r\n\t                key = this.throwUnexpectedToken(token);\r\n\t        }\r\n\t        return key;\r\n\t    };\r\n\t    Parser.prototype.isPropertyKey = function (key, value) {\r\n\t        return (key.type === syntax_1.Syntax.Identifier && key.name === value) ||\r\n\t            (key.type === syntax_1.Syntax.Literal && key.value === value);\r\n\t    };\r\n\t    Parser.prototype.parseObjectProperty = function (hasProto) {\r\n\t        var node = this.createNode();\r\n\t        var token = this.lookahead;\r\n\t        var kind;\r\n\t        var key = null;\r\n\t        var value = null;\r\n\t        var computed = false;\r\n\t        var method = false;\r\n\t        var shorthand = false;\r\n\t        var isAsync = false;\r\n\t        if (token.type === 3 /* Identifier */) {\r\n\t\t\t\tvar id = token.value;\r\n\t            this.nextToken();\r\n\t            computed = this.match('[');\r\n\t            isAsync = !this.hasLineTerminator && (id === 'async') &&\r\n\t                !this.match(':') && !this.match('(') && !this.match('*') && !this.match(',');\r\n\t            key = isAsync ? this.parseObjectPropertyKey() : this.finalize(node, new Node.Identifier(id));\r\n\t        }\r\n\t        else if (this.match('*')) {\r\n\t            this.nextToken();\r\n\t        }\r\n\t        else {\r\n\t            computed = this.match('[');\r\n\t            key = this.parseObjectPropertyKey();\r\n\t        }\r\n\t        var lookaheadPropertyKey = this.qualifiedPropertyName(this.lookahead);\r\n\t        if (token.type === 3 /* Identifier */ && !isAsync && token.value === 'get' && lookaheadPropertyKey) {\r\n\t            kind = 'get';\r\n\t            computed = this.match('[');\r\n\t            key = this.parseObjectPropertyKey();\r\n\t            this.context.allowYield = false;\r\n\t            value = this.parseGetterMethod();\r\n\t        }\r\n\t        else if (token.type === 3 /* Identifier */ && !isAsync && token.value === 'set' && lookaheadPropertyKey) {\r\n\t            kind = 'set';\r\n\t            computed = this.match('[');\r\n\t            key = this.parseObjectPropertyKey();\r\n\t            value = this.parseSetterMethod();\r\n\t        }\r\n\t        else if (token.type === 7 /* Punctuator */ && token.value === '*' && lookaheadPropertyKey) {\r\n\t            kind = 'init';\r\n\t            computed = this.match('[');\r\n\t            key = this.parseObjectPropertyKey();\r\n\t            value = this.parseGeneratorMethod();\r\n\t            method = true;\r\n\t        }\r\n\t        else {\r\n\t            if (!key) {\r\n\t                this.throwUnexpectedToken(this.lookahead);\r\n\t            }\r\n\t            kind = 'init';\r\n\t            if (this.match(':') && !isAsync) {\r\n\t                if (!computed && this.isPropertyKey(key, '__proto__')) {\r\n\t                    if (hasProto.value) {\r\n\t                        this.tolerateError(messages_1.Messages.DuplicateProtoProperty);\r\n\t                    }\r\n\t                    hasProto.value = true;\r\n\t                }\r\n\t                this.nextToken();\r\n\t                value = this.inheritCoverGrammar(this.parseAssignmentExpression);\r\n\t            }\r\n\t            else if (this.match('(')) {\r\n\t                value = isAsync ? this.parsePropertyMethodAsyncFunction() : this.parsePropertyMethodFunction();\r\n\t                method = true;\r\n\t            }\r\n\t            else if (token.type === 3 /* Identifier */) {\r\n\t                var id = this.finalize(node, new Node.Identifier(token.value));\r\n\t                if (this.match('=')) {\r\n\t                    this.context.firstCoverInitializedNameError = this.lookahead;\r\n\t                    this.nextToken();\r\n\t                    shorthand = true;\r\n\t                    var init = this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t                    value = this.finalize(node, new Node.AssignmentPattern(id, init));\r\n\t                }\r\n\t                else {\r\n\t                    shorthand = true;\r\n\t                    value = id;\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                this.throwUnexpectedToken(this.nextToken());\r\n\t            }\r\n\t        }\r\n\t        return this.finalize(node, new Node.Property(kind, key, computed, value, method, shorthand));\r\n\t    };\r\n\t    Parser.prototype.parseObjectInitializer = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expect('{');\r\n\t        var properties = [];\r\n\t        var hasProto = { value: false };\r\n\t        while (!this.match('}')) {\r\n\t            properties.push(this.match('...') ? this.parseSpreadElement() : this.parseObjectProperty(hasProto));\r\n\t            if (!this.match('}')) {\r\n\t                this.expectCommaSeparator();\r\n\t            }\r\n\t        }\r\n\t        this.expect('}');\r\n\t        return this.finalize(node, new Node.ObjectExpression(properties));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-template-literals\r\n\t    Parser.prototype.parseTemplateHead = function () {\r\n\t        assert_1.assert(this.lookahead.head, 'Template literal must start with a template head');\r\n\t        var node = this.createNode();\r\n\t        var token = this.nextToken();\r\n\t        var raw = token.value;\r\n\t        var cooked = token.cooked;\r\n\t        return this.finalize(node, new Node.TemplateElement({ raw: raw, cooked: cooked }, token.tail));\r\n\t    };\r\n\t    Parser.prototype.parseTemplateElement = function () {\r\n\t        if (this.lookahead.type !== 10 /* Template */) {\r\n\t            this.throwUnexpectedToken();\r\n\t        }\r\n\t        var node = this.createNode();\r\n\t        var token = this.nextToken();\r\n\t        var raw = token.value;\r\n\t        var cooked = token.cooked;\r\n\t        return this.finalize(node, new Node.TemplateElement({ raw: raw, cooked: cooked }, token.tail));\r\n\t    };\r\n\t    Parser.prototype.parseTemplateLiteral = function () {\r\n\t        var node = this.createNode();\r\n\t        var expressions = [];\r\n\t        var quasis = [];\r\n\t        var quasi = this.parseTemplateHead();\r\n\t        quasis.push(quasi);\r\n\t        while (!quasi.tail) {\r\n\t            expressions.push(this.parseExpression());\r\n\t            quasi = this.parseTemplateElement();\r\n\t            quasis.push(quasi);\r\n\t        }\r\n\t        return this.finalize(node, new Node.TemplateLiteral(quasis, expressions));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-grouping-operator\r\n\t    Parser.prototype.reinterpretExpressionAsPattern = function (expr) {\r\n\t        switch (expr.type) {\r\n\t            case syntax_1.Syntax.Identifier:\r\n\t            case syntax_1.Syntax.MemberExpression:\r\n\t            case syntax_1.Syntax.RestElement:\r\n\t            case syntax_1.Syntax.AssignmentPattern:\r\n\t                break;\r\n\t            case syntax_1.Syntax.SpreadElement:\r\n\t                expr.type = syntax_1.Syntax.RestElement;\r\n\t                this.reinterpretExpressionAsPattern(expr.argument);\r\n\t                break;\r\n\t            case syntax_1.Syntax.ArrayExpression:\r\n\t                expr.type = syntax_1.Syntax.ArrayPattern;\r\n\t                for (var i = 0; i < expr.elements.length; i++) {\r\n\t                    if (expr.elements[i] !== null) {\r\n\t                        this.reinterpretExpressionAsPattern(expr.elements[i]);\r\n\t                    }\r\n\t                }\r\n\t                break;\r\n\t            case syntax_1.Syntax.ObjectExpression:\r\n\t                expr.type = syntax_1.Syntax.ObjectPattern;\r\n\t                for (var i = 0; i < expr.properties.length; i++) {\r\n\t                    var property = expr.properties[i];\r\n\t                    this.reinterpretExpressionAsPattern(property.type === syntax_1.Syntax.SpreadElement ? property : property.value);\r\n\t                }\r\n\t                break;\r\n\t            case syntax_1.Syntax.AssignmentExpression:\r\n\t                expr.type = syntax_1.Syntax.AssignmentPattern;\r\n\t                delete expr.operator;\r\n\t                this.reinterpretExpressionAsPattern(expr.left);\r\n\t                break;\r\n\t            default:\r\n\t                // Allow other node type for tolerant parsing.\r\n\t                break;\r\n\t        }\r\n\t    };\r\n\t    Parser.prototype.parseGroupExpression = function () {\r\n\t        var expr;\r\n\t        this.expect('(');\r\n\t        if (this.match(')')) {\r\n\t            this.nextToken();\r\n\t            if (!this.match('=>')) {\r\n\t                this.expect('=>');\r\n\t            }\r\n\t            expr = {\r\n\t                type: ArrowParameterPlaceHolder,\r\n\t                params: [],\r\n\t                async: false\r\n\t            };\r\n\t        }\r\n\t        else {\r\n\t            var startToken = this.lookahead;\r\n\t            var params = [];\r\n\t            if (this.match('...')) {\r\n\t                expr = this.parseRestElement(params);\r\n\t                this.expect(')');\r\n\t                if (!this.match('=>')) {\r\n\t                    this.expect('=>');\r\n\t                }\r\n\t                expr = {\r\n\t                    type: ArrowParameterPlaceHolder,\r\n\t                    params: [expr],\r\n\t                    async: false\r\n\t                };\r\n\t            }\r\n\t            else {\r\n\t                var arrow = false;\r\n\t                this.context.isBindingElement = true;\r\n\t                expr = this.inheritCoverGrammar(this.parseAssignmentExpression);\r\n\t                if (this.match(',')) {\r\n\t                    var expressions = [];\r\n\t                    this.context.isAssignmentTarget = false;\r\n\t                    expressions.push(expr);\r\n\t                    while (this.lookahead.type !== 2 /* EOF */) {\r\n\t                        if (!this.match(',')) {\r\n\t                            break;\r\n\t                        }\r\n\t                        this.nextToken();\r\n\t                        if (this.match(')')) {\r\n\t                            this.nextToken();\r\n\t                            for (var i = 0; i < expressions.length; i++) {\r\n\t                                this.reinterpretExpressionAsPattern(expressions[i]);\r\n\t                            }\r\n\t                            arrow = true;\r\n\t                            expr = {\r\n\t                                type: ArrowParameterPlaceHolder,\r\n\t                                params: expressions,\r\n\t                                async: false\r\n\t                            };\r\n\t                        }\r\n\t                        else if (this.match('...')) {\r\n\t                            if (!this.context.isBindingElement) {\r\n\t                                this.throwUnexpectedToken(this.lookahead);\r\n\t                            }\r\n\t                            expressions.push(this.parseRestElement(params));\r\n\t                            this.expect(')');\r\n\t                            if (!this.match('=>')) {\r\n\t                                this.expect('=>');\r\n\t                            }\r\n\t                            this.context.isBindingElement = false;\r\n\t                            for (var i = 0; i < expressions.length; i++) {\r\n\t                                this.reinterpretExpressionAsPattern(expressions[i]);\r\n\t                            }\r\n\t                            arrow = true;\r\n\t                            expr = {\r\n\t                                type: ArrowParameterPlaceHolder,\r\n\t                                params: expressions,\r\n\t                                async: false\r\n\t                            };\r\n\t                        }\r\n\t                        else {\r\n\t                            expressions.push(this.inheritCoverGrammar(this.parseAssignmentExpression));\r\n\t                        }\r\n\t                        if (arrow) {\r\n\t                            break;\r\n\t                        }\r\n\t                    }\r\n\t                    if (!arrow) {\r\n\t                        expr = this.finalize(this.startNode(startToken), new Node.SequenceExpression(expressions));\r\n\t                    }\r\n\t                }\r\n\t                if (!arrow) {\r\n\t                    this.expect(')');\r\n\t                    if (this.match('=>')) {\r\n\t                        if (expr.type === syntax_1.Syntax.Identifier && expr.name === 'yield') {\r\n\t                            arrow = true;\r\n\t                            expr = {\r\n\t                                type: ArrowParameterPlaceHolder,\r\n\t                                params: [expr],\r\n\t                                async: false\r\n\t                            };\r\n\t                        }\r\n\t                        if (!arrow) {\r\n\t                            if (!this.context.isBindingElement) {\r\n\t                                this.throwUnexpectedToken(this.lookahead);\r\n\t                            }\r\n\t                            if (expr.type === syntax_1.Syntax.SequenceExpression) {\r\n\t                                for (var i = 0; i < expr.expressions.length; i++) {\r\n\t                                    this.reinterpretExpressionAsPattern(expr.expressions[i]);\r\n\t                                }\r\n\t                            }\r\n\t                            else {\r\n\t                                this.reinterpretExpressionAsPattern(expr);\r\n\t                            }\r\n\t                            var parameters = (expr.type === syntax_1.Syntax.SequenceExpression ? expr.expressions : [expr]);\r\n\t                            expr = {\r\n\t                                type: ArrowParameterPlaceHolder,\r\n\t                                params: parameters,\r\n\t                                async: false\r\n\t                            };\r\n\t                        }\r\n\t                    }\r\n\t                    this.context.isBindingElement = false;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        return expr;\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-left-hand-side-expressions\r\n\t    Parser.prototype.parseArguments = function () {\r\n\t        this.expect('(');\r\n\t        var args = [];\r\n\t        if (!this.match(')')) {\r\n\t            while (true) {\r\n\t                var expr = this.match('...') ? this.parseSpreadElement() :\r\n\t                    this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t                args.push(expr);\r\n\t                if (this.match(')')) {\r\n\t                    break;\r\n\t                }\r\n\t                this.expectCommaSeparator();\r\n\t                if (this.match(')')) {\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        this.expect(')');\r\n\t        return args;\r\n\t    };\r\n\t    Parser.prototype.isIdentifierName = function (token) {\r\n\t        return token.type === 3 /* Identifier */ ||\r\n\t            token.type === 4 /* Keyword */ ||\r\n\t            token.type === 1 /* BooleanLiteral */ ||\r\n\t            token.type === 5 /* NullLiteral */;\r\n\t    };\r\n\t    Parser.prototype.parseIdentifierName = function () {\r\n\t        var node = this.createNode();\r\n\t        var token = this.nextToken();\r\n\t        if (!this.isIdentifierName(token)) {\r\n\t            this.throwUnexpectedToken(token);\r\n\t        }\r\n\t        return this.finalize(node, new Node.Identifier(token.value));\r\n\t    };\r\n\t    Parser.prototype.parseNewExpression = function () {\r\n\t        var node = this.createNode();\r\n\t        var id = this.parseIdentifierName();\r\n\t        assert_1.assert(id.name === 'new', 'New expression must start with `new`');\r\n\t        var expr;\r\n\t        if (this.match('.')) {\r\n\t            this.nextToken();\r\n\t            if (this.lookahead.type === 3 /* Identifier */ && this.context.inFunctionBody && this.lookahead.value === 'target') {\r\n\t                var property = this.parseIdentifierName();\r\n\t                expr = new Node.MetaProperty(id, property);\r\n\t            }\r\n\t            else {\r\n\t                this.throwUnexpectedToken(this.lookahead);\r\n\t            }\r\n\t        }\r\n\t        else if (this.matchKeyword('import')) {\r\n\t            this.throwUnexpectedToken(this.lookahead);\r\n\t        }\r\n\t        else {\r\n\t            var callee = this.isolateCoverGrammar(this.parseLeftHandSideExpression);\r\n\t            var args = this.match('(') ? this.parseArguments() : [];\r\n\t            expr = new Node.NewExpression(callee, args);\r\n\t            this.context.isAssignmentTarget = false;\r\n\t            this.context.isBindingElement = false;\r\n\t        }\r\n\t        return this.finalize(node, expr);\r\n\t    };\r\n\t    Parser.prototype.parseAsyncArgument = function () {\r\n\t        var arg = this.parseAssignmentExpression();\r\n\t        this.context.firstCoverInitializedNameError = null;\r\n\t        return arg;\r\n\t    };\r\n\t    Parser.prototype.parseAsyncArguments = function () {\r\n\t        this.expect('(');\r\n\t        var args = [];\r\n\t        if (!this.match(')')) {\r\n\t            while (true) {\r\n\t                var expr = this.match('...') ? this.parseSpreadElement() :\r\n\t                    this.isolateCoverGrammar(this.parseAsyncArgument);\r\n\t                args.push(expr);\r\n\t                if (this.match(')')) {\r\n\t                    break;\r\n\t                }\r\n\t                this.expectCommaSeparator();\r\n\t                if (this.match(')')) {\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        this.expect(')');\r\n\t        return args;\r\n\t    };\r\n\t    Parser.prototype.matchImportCall = function () {\r\n\t        var match = this.matchKeyword('import');\r\n\t        if (match) {\r\n\t            var state = this.scanner.saveState();\r\n\t            this.scanner.scanComments();\r\n\t            var next = this.scanner.lex();\r\n\t            this.scanner.restoreState(state);\r\n\t            match = (next.type === 7 /* Punctuator */) && (next.value === '(');\r\n\t        }\r\n\t        return match;\r\n\t    };\r\n\t    Parser.prototype.parseImportCall = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('import');\r\n\t        return this.finalize(node, new Node.Import());\r\n\t    };\r\n\t    Parser.prototype.parseLeftHandSideExpressionAllowCall = function () {\r\n\t        var startToken = this.lookahead;\r\n\t        var maybeAsync = this.matchContextualKeyword('async');\r\n\t        var previousAllowIn = this.context.allowIn;\r\n\t        this.context.allowIn = true;\r\n\t        var expr;\r\n\t        if (this.matchKeyword('super') && this.context.inFunctionBody) {\r\n\t            expr = this.createNode();\r\n\t            this.nextToken();\r\n\t            expr = this.finalize(expr, new Node.Super());\r\n\t            if (!this.match('(') && !this.match('.') && !this.match('[')) {\r\n\t                this.throwUnexpectedToken(this.lookahead);\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            expr = this.inheritCoverGrammar(this.matchKeyword('new') ? this.parseNewExpression : this.parsePrimaryExpression);\r\n\t        }\r\n\t        while (true) {\r\n\t            if (this.match('.')) {\r\n\t                this.context.isBindingElement = false;\r\n\t                this.context.isAssignmentTarget = true;\r\n\t                this.expect('.');\r\n\t                var property = this.parseIdentifierName();\r\n\t                expr = this.finalize(this.startNode(startToken), new Node.StaticMemberExpression(expr, property));\r\n\t            }\r\n\t            else if (this.match('(')) {\r\n\t                var asyncArrow = maybeAsync && (startToken.lineNumber === this.lookahead.lineNumber);\r\n\t                this.context.isBindingElement = false;\r\n\t                this.context.isAssignmentTarget = false;\r\n\t                var args = asyncArrow ? this.parseAsyncArguments() : this.parseArguments();\r\n\t                if (expr.type === syntax_1.Syntax.Import && args.length !== 1) {\r\n\t                    this.tolerateError(messages_1.Messages.BadImportCallArity);\r\n\t                }\r\n\t                expr = this.finalize(this.startNode(startToken), new Node.CallExpression(expr, args));\r\n\t                if (asyncArrow && this.match('=>')) {\r\n\t                    for (var i = 0; i < args.length; ++i) {\r\n\t                        this.reinterpretExpressionAsPattern(args[i]);\r\n\t                    }\r\n\t                    expr = {\r\n\t                        type: ArrowParameterPlaceHolder,\r\n\t                        params: args,\r\n\t                        async: true\r\n\t                    };\r\n\t                }\r\n\t            }\r\n\t            else if (this.match('[')) {\r\n\t                this.context.isBindingElement = false;\r\n\t                this.context.isAssignmentTarget = true;\r\n\t                this.expect('[');\r\n\t                var property = this.isolateCoverGrammar(this.parseExpression);\r\n\t                this.expect(']');\r\n\t                expr = this.finalize(this.startNode(startToken), new Node.ComputedMemberExpression(expr, property));\r\n\t            }\r\n\t            else if (this.lookahead.type === 10 /* Template */ && this.lookahead.head) {\r\n\t                var quasi = this.parseTemplateLiteral();\r\n\t                expr = this.finalize(this.startNode(startToken), new Node.TaggedTemplateExpression(expr, quasi));\r\n\t            }\r\n\t            else {\r\n\t                break;\r\n\t            }\r\n\t        }\r\n\t        this.context.allowIn = previousAllowIn;\r\n\t        return expr;\r\n\t    };\r\n\t    Parser.prototype.parseSuper = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('super');\r\n\t        if (!this.match('[') && !this.match('.')) {\r\n\t            this.throwUnexpectedToken(this.lookahead);\r\n\t        }\r\n\t        return this.finalize(node, new Node.Super());\r\n\t    };\r\n\t    Parser.prototype.parseLeftHandSideExpression = function () {\r\n\t        assert_1.assert(this.context.allowIn, 'callee of new expression always allow in keyword.');\r\n\t        var node = this.startNode(this.lookahead);\r\n\t        var expr = (this.matchKeyword('super') && this.context.inFunctionBody) ? this.parseSuper() :\r\n\t            this.inheritCoverGrammar(this.matchKeyword('new') ? this.parseNewExpression : this.parsePrimaryExpression);\r\n\t        while (true) {\r\n\t            if (this.match('[')) {\r\n\t                this.context.isBindingElement = false;\r\n\t                this.context.isAssignmentTarget = true;\r\n\t                this.expect('[');\r\n\t                var property = this.isolateCoverGrammar(this.parseExpression);\r\n\t                this.expect(']');\r\n\t                expr = this.finalize(node, new Node.ComputedMemberExpression(expr, property));\r\n\t            }\r\n\t            else if (this.match('.')) {\r\n\t                this.context.isBindingElement = false;\r\n\t                this.context.isAssignmentTarget = true;\r\n\t                this.expect('.');\r\n\t                var property = this.parseIdentifierName();\r\n\t                expr = this.finalize(node, new Node.StaticMemberExpression(expr, property));\r\n\t            }\r\n\t            else if (this.lookahead.type === 10 /* Template */ && this.lookahead.head) {\r\n\t                var quasi = this.parseTemplateLiteral();\r\n\t                expr = this.finalize(node, new Node.TaggedTemplateExpression(expr, quasi));\r\n\t            }\r\n\t            else {\r\n\t                break;\r\n\t            }\r\n\t        }\r\n\t        return expr;\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-update-expressions\r\n\t    Parser.prototype.parseUpdateExpression = function () {\r\n\t        var expr;\r\n\t        var startToken = this.lookahead;\r\n\t        if (this.match('++') || this.match('--')) {\r\n\t            var node = this.startNode(startToken);\r\n\t            var token = this.nextToken();\r\n\t            expr = this.inheritCoverGrammar(this.parseUnaryExpression);\r\n\t            if (this.context.strict && expr.type === syntax_1.Syntax.Identifier && this.scanner.isRestrictedWord(expr.name)) {\r\n\t                this.tolerateError(messages_1.Messages.StrictLHSPrefix);\r\n\t            }\r\n\t            if (!this.context.isAssignmentTarget) {\r\n\t                this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);\r\n\t            }\r\n\t            var prefix = true;\r\n\t            expr = this.finalize(node, new Node.UpdateExpression(token.value, expr, prefix));\r\n\t            this.context.isAssignmentTarget = false;\r\n\t            this.context.isBindingElement = false;\r\n\t        }\r\n\t        else {\r\n\t            expr = this.inheritCoverGrammar(this.parseLeftHandSideExpressionAllowCall);\r\n\t            if (!this.hasLineTerminator && this.lookahead.type === 7 /* Punctuator */) {\r\n\t                if (this.match('++') || this.match('--')) {\r\n\t                    if (this.context.strict && expr.type === syntax_1.Syntax.Identifier && this.scanner.isRestrictedWord(expr.name)) {\r\n\t                        this.tolerateError(messages_1.Messages.StrictLHSPostfix);\r\n\t                    }\r\n\t                    if (!this.context.isAssignmentTarget) {\r\n\t                        this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);\r\n\t                    }\r\n\t                    this.context.isAssignmentTarget = false;\r\n\t                    this.context.isBindingElement = false;\r\n\t                    var operator = this.nextToken().value;\r\n\t                    var prefix = false;\r\n\t                    expr = this.finalize(this.startNode(startToken), new Node.UpdateExpression(operator, expr, prefix));\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        return expr;\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-unary-operators\r\n\t    Parser.prototype.parseAwaitExpression = function () {\r\n\t        var node = this.createNode();\r\n\t        this.nextToken();\r\n\t        var argument = this.parseUnaryExpression();\r\n\t        return this.finalize(node, new Node.AwaitExpression(argument));\r\n\t    };\r\n\t    Parser.prototype.parseUnaryExpression = function () {\r\n\t        var expr;\r\n\t        if (this.match('+') || this.match('-') || this.match('~') || this.match('!') ||\r\n\t            this.matchKeyword('delete') || this.matchKeyword('void') || this.matchKeyword('typeof')) {\r\n\t            var node = this.startNode(this.lookahead);\r\n\t            var token = this.nextToken();\r\n\t            expr = this.inheritCoverGrammar(this.parseUnaryExpression);\r\n\t            expr = this.finalize(node, new Node.UnaryExpression(token.value, expr));\r\n\t            if (this.context.strict && expr.operator === 'delete' && expr.argument.type === syntax_1.Syntax.Identifier) {\r\n\t                this.tolerateError(messages_1.Messages.StrictDelete);\r\n\t            }\r\n\t            this.context.isAssignmentTarget = false;\r\n\t            this.context.isBindingElement = false;\r\n\t        }\r\n\t        else if (this.context.await && this.matchContextualKeyword('await')) {\r\n\t            expr = this.parseAwaitExpression();\r\n\t        }\r\n\t        else {\r\n\t            expr = this.parseUpdateExpression();\r\n\t        }\r\n\t        return expr;\r\n\t    };\r\n\t    Parser.prototype.parseExponentiationExpression = function () {\r\n\t        var startToken = this.lookahead;\r\n\t        var expr = this.inheritCoverGrammar(this.parseUnaryExpression);\r\n\t        if (expr.type !== syntax_1.Syntax.UnaryExpression && this.match('**')) {\r\n\t            this.nextToken();\r\n\t            this.context.isAssignmentTarget = false;\r\n\t            this.context.isBindingElement = false;\r\n\t            var left = expr;\r\n\t            var right = this.isolateCoverGrammar(this.parseExponentiationExpression);\r\n\t            expr = this.finalize(this.startNode(startToken), new Node.BinaryExpression('**', left, right));\r\n\t        }\r\n\t        return expr;\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-exp-operator\r\n\t    // https://tc39.github.io/ecma262/#sec-multiplicative-operators\r\n\t    // https://tc39.github.io/ecma262/#sec-additive-operators\r\n\t    // https://tc39.github.io/ecma262/#sec-bitwise-shift-operators\r\n\t    // https://tc39.github.io/ecma262/#sec-relational-operators\r\n\t    // https://tc39.github.io/ecma262/#sec-equality-operators\r\n\t    // https://tc39.github.io/ecma262/#sec-binary-bitwise-operators\r\n\t    // https://tc39.github.io/ecma262/#sec-binary-logical-operators\r\n\t    Parser.prototype.binaryPrecedence = function (token) {\r\n\t        var op = token.value;\r\n\t        var precedence;\r\n\t        if (token.type === 7 /* Punctuator */) {\r\n\t            precedence = this.operatorPrecedence[op] || 0;\r\n\t        }\r\n\t        else if (token.type === 4 /* Keyword */) {\r\n\t            precedence = (op === 'instanceof' || (this.context.allowIn && op === 'in')) ? 7 : 0;\r\n\t        }\r\n\t        else {\r\n\t            precedence = 0;\r\n\t        }\r\n\t        return precedence;\r\n\t    };\r\n\t    Parser.prototype.parseBinaryExpression = function () {\r\n\t        var startToken = this.lookahead;\r\n\t        var expr = this.inheritCoverGrammar(this.parseExponentiationExpression);\r\n\t        var token = this.lookahead;\r\n\t        var prec = this.binaryPrecedence(token);\r\n\t        if (prec > 0) {\r\n\t            this.nextToken();\r\n\t            this.context.isAssignmentTarget = false;\r\n\t            this.context.isBindingElement = false;\r\n\t            var markers = [startToken, this.lookahead];\r\n\t            var left = expr;\r\n\t            var right = this.isolateCoverGrammar(this.parseExponentiationExpression);\r\n\t            var stack = [left, token.value, right];\r\n\t            var precedences = [prec];\r\n\t            while (true) {\r\n\t                prec = this.binaryPrecedence(this.lookahead);\r\n\t                if (prec <= 0) {\r\n\t                    break;\r\n\t                }\r\n\t                // Reduce: make a binary expression from the three topmost entries.\r\n\t                while ((stack.length > 2) && (prec <= precedences[precedences.length - 1])) {\r\n\t                    right = stack.pop();\r\n\t                    var operator = stack.pop();\r\n\t                    precedences.pop();\r\n\t                    left = stack.pop();\r\n\t                    markers.pop();\r\n\t                    var node = this.startNode(markers[markers.length - 1]);\r\n\t                    stack.push(this.finalize(node, new Node.BinaryExpression(operator, left, right)));\r\n\t                }\r\n\t                // Shift.\r\n\t                stack.push(this.nextToken().value);\r\n\t                precedences.push(prec);\r\n\t                markers.push(this.lookahead);\r\n\t                stack.push(this.isolateCoverGrammar(this.parseExponentiationExpression));\r\n\t            }\r\n\t            // Final reduce to clean-up the stack.\r\n\t            var i = stack.length - 1;\r\n\t            expr = stack[i];\r\n\t            var lastMarker = markers.pop();\r\n\t            while (i > 1) {\r\n\t                var marker = markers.pop();\r\n\t                var lastLineStart = lastMarker && lastMarker.lineStart;\r\n\t                var node = this.startNode(marker, lastLineStart);\r\n\t                var operator = stack[i - 1];\r\n\t                expr = this.finalize(node, new Node.BinaryExpression(operator, stack[i - 2], expr));\r\n\t                i -= 2;\r\n\t                lastMarker = marker;\r\n\t            }\r\n\t        }\r\n\t        return expr;\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-conditional-operator\r\n\t    Parser.prototype.parseConditionalExpression = function () {\r\n\t        var startToken = this.lookahead;\r\n\t        var expr = this.inheritCoverGrammar(this.parseBinaryExpression);\r\n\t        if (this.match('?')) {\r\n\t            this.nextToken();\r\n\t            var previousAllowIn = this.context.allowIn;\r\n\t            this.context.allowIn = true;\r\n\t            var consequent = this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t            this.context.allowIn = previousAllowIn;\r\n\t            this.expect(':');\r\n\t            var alternate = this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t            expr = this.finalize(this.startNode(startToken), new Node.ConditionalExpression(expr, consequent, alternate));\r\n\t            this.context.isAssignmentTarget = false;\r\n\t            this.context.isBindingElement = false;\r\n\t        }\r\n\t        return expr;\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-assignment-operators\r\n\t    Parser.prototype.checkPatternParam = function (options, param) {\r\n\t        switch (param.type) {\r\n\t            case syntax_1.Syntax.Identifier:\r\n\t                this.validateParam(options, param, param.name);\r\n\t                break;\r\n\t            case syntax_1.Syntax.RestElement:\r\n\t                this.checkPatternParam(options, param.argument);\r\n\t                break;\r\n\t            case syntax_1.Syntax.AssignmentPattern:\r\n\t                this.checkPatternParam(options, param.left);\r\n\t                break;\r\n\t            case syntax_1.Syntax.ArrayPattern:\r\n\t                for (var i = 0; i < param.elements.length; i++) {\r\n\t                    if (param.elements[i] !== null) {\r\n\t                        this.checkPatternParam(options, param.elements[i]);\r\n\t                    }\r\n\t                }\r\n\t                break;\r\n\t            case syntax_1.Syntax.ObjectPattern:\r\n\t                for (var i = 0; i < param.properties.length; i++) {\r\n\t                    var property = param.properties[i];\r\n\t                    this.checkPatternParam(options, (property.type === syntax_1.Syntax.RestElement) ? property : property.value);\r\n\t                }\r\n\t                break;\r\n\t            default:\r\n\t                break;\r\n\t        }\r\n\t        options.simple = options.simple && (param instanceof Node.Identifier);\r\n\t    };\r\n\t    Parser.prototype.reinterpretAsCoverFormalsList = function (expr) {\r\n\t        var params = [expr];\r\n\t        var options = {\r\n\t            simple: true,\r\n\t            paramSet: {}\r\n\t        };\r\n\t        var asyncArrow = false;\r\n\t        switch (expr.type) {\r\n\t            case syntax_1.Syntax.Identifier:\r\n\t                break;\r\n\t            case ArrowParameterPlaceHolder:\r\n\t                params = expr.params;\r\n\t                asyncArrow = expr.async;\r\n\t                break;\r\n\t            default:\r\n\t                return null;\r\n\t        }\r\n\t        for (var i = 0; i < params.length; ++i) {\r\n\t            var param = params[i];\r\n\t            if (param.type === syntax_1.Syntax.AssignmentPattern) {\r\n\t                if (param.right.type === syntax_1.Syntax.YieldExpression) {\r\n\t                    if (param.right.argument) {\r\n\t                        this.throwUnexpectedToken(this.lookahead);\r\n\t                    }\r\n\t                    param.right.type = syntax_1.Syntax.Identifier;\r\n\t                    param.right.name = 'yield';\r\n\t                    delete param.right.argument;\r\n\t                    delete param.right.delegate;\r\n\t                }\r\n\t            }\r\n\t            else if (asyncArrow && param.type === syntax_1.Syntax.Identifier && param.name === 'await') {\r\n\t                this.throwUnexpectedToken(this.lookahead);\r\n\t            }\r\n\t            this.checkPatternParam(options, param);\r\n\t            params[i] = param;\r\n\t        }\r\n\t        if (this.context.strict || !this.context.allowYield) {\r\n\t            for (var i = 0; i < params.length; ++i) {\r\n\t                var param = params[i];\r\n\t                if (param.type === syntax_1.Syntax.YieldExpression) {\r\n\t                    this.throwUnexpectedToken(this.lookahead);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        if (options.message === messages_1.Messages.StrictParamDupe) {\r\n\t            var token = this.context.strict ? options.stricted : options.firstRestricted;\r\n\t            this.throwUnexpectedToken(token, options.message);\r\n\t        }\r\n\t        return {\r\n\t            simple: options.simple,\r\n\t            params: params,\r\n\t            stricted: options.stricted,\r\n\t            firstRestricted: options.firstRestricted,\r\n\t            message: options.message\r\n\t        };\r\n\t    };\r\n\t    Parser.prototype.parseAssignmentExpression = function () {\r\n\t        var expr;\r\n\t        if (!this.context.allowYield && this.matchKeyword('yield')) {\r\n\t            expr = this.parseYieldExpression();\r\n\t        }\r\n\t        else {\r\n\t            var startToken = this.lookahead;\r\n\t            var token = startToken;\r\n\t            expr = this.parseConditionalExpression();\r\n\t            if (token.type === 3 /* Identifier */ && (token.lineNumber === this.lookahead.lineNumber) && token.value === 'async') {\r\n\t                if (this.lookahead.type === 3 /* Identifier */ || this.matchKeyword('yield')) {\r\n\t                    var arg = this.parsePrimaryExpression();\r\n\t                    this.reinterpretExpressionAsPattern(arg);\r\n\t                    expr = {\r\n\t                        type: ArrowParameterPlaceHolder,\r\n\t                        params: [arg],\r\n\t                        async: true\r\n\t                    };\r\n\t                }\r\n\t            }\r\n\t            if (expr.type === ArrowParameterPlaceHolder || this.match('=>')) {\r\n\t                // https://tc39.github.io/ecma262/#sec-arrow-function-definitions\r\n\t                this.context.isAssignmentTarget = false;\r\n\t                this.context.isBindingElement = false;\r\n\t                var isAsync = expr.async;\r\n\t                var list = this.reinterpretAsCoverFormalsList(expr);\r\n\t                if (list) {\r\n\t                    if (this.hasLineTerminator) {\r\n\t                        this.tolerateUnexpectedToken(this.lookahead);\r\n\t                    }\r\n\t                    this.context.firstCoverInitializedNameError = null;\r\n\t                    var previousStrict = this.context.strict;\r\n\t                    var previousAllowStrictDirective = this.context.allowStrictDirective;\r\n\t                    this.context.allowStrictDirective = list.simple;\r\n\t                    var previousAllowYield = this.context.allowYield;\r\n\t                    var previousAwait = this.context.await;\r\n\t                    this.context.allowYield = true;\r\n\t                    this.context.await = isAsync;\r\n\t                    var node = this.startNode(startToken);\r\n\t                    this.expect('=>');\r\n\t                    var body = void 0;\r\n\t                    if (this.match('{')) {\r\n\t                        var previousAllowIn = this.context.allowIn;\r\n\t                        this.context.allowIn = true;\r\n\t                        body = this.parseFunctionSourceElements();\r\n\t                        this.context.allowIn = previousAllowIn;\r\n\t                    }\r\n\t                    else {\r\n\t                        body = this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t                    }\r\n\t                    var expression = body.type !== syntax_1.Syntax.BlockStatement;\r\n\t                    if (this.context.strict && list.firstRestricted) {\r\n\t                        this.throwUnexpectedToken(list.firstRestricted, list.message);\r\n\t                    }\r\n\t                    if (this.context.strict && list.stricted) {\r\n\t                        this.tolerateUnexpectedToken(list.stricted, list.message);\r\n\t                    }\r\n\t                    expr = isAsync ? this.finalize(node, new Node.AsyncArrowFunctionExpression(list.params, body, expression)) :\r\n\t                        this.finalize(node, new Node.ArrowFunctionExpression(list.params, body, expression));\r\n\t                    this.context.strict = previousStrict;\r\n\t                    this.context.allowStrictDirective = previousAllowStrictDirective;\r\n\t                    this.context.allowYield = previousAllowYield;\r\n\t                    this.context.await = previousAwait;\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                if (this.matchAssign()) {\r\n\t                    if (!this.context.isAssignmentTarget) {\r\n\t                        this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);\r\n\t                    }\r\n\t                    if (this.context.strict && expr.type === syntax_1.Syntax.Identifier) {\r\n\t                        var id = expr;\r\n\t                        if (this.scanner.isRestrictedWord(id.name)) {\r\n\t                            this.tolerateUnexpectedToken(token, messages_1.Messages.StrictLHSAssignment);\r\n\t                        }\r\n\t                        if (this.scanner.isStrictModeReservedWord(id.name)) {\r\n\t                            this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);\r\n\t                        }\r\n\t                    }\r\n\t                    if (!this.match('=')) {\r\n\t                        this.context.isAssignmentTarget = false;\r\n\t                        this.context.isBindingElement = false;\r\n\t                    }\r\n\t                    else {\r\n\t                        this.reinterpretExpressionAsPattern(expr);\r\n\t                    }\r\n\t                    token = this.nextToken();\r\n\t                    var operator = token.value;\r\n\t                    var right = this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t                    expr = this.finalize(this.startNode(startToken), new Node.AssignmentExpression(operator, expr, right));\r\n\t                    this.context.firstCoverInitializedNameError = null;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        return expr;\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-comma-operator\r\n\t    Parser.prototype.parseExpression = function () {\r\n\t        var startToken = this.lookahead;\r\n\t        var expr = this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t        if (this.match(',')) {\r\n\t            var expressions = [];\r\n\t            expressions.push(expr);\r\n\t            while (this.lookahead.type !== 2 /* EOF */) {\r\n\t                if (!this.match(',')) {\r\n\t                    break;\r\n\t                }\r\n\t                this.nextToken();\r\n\t                expressions.push(this.isolateCoverGrammar(this.parseAssignmentExpression));\r\n\t            }\r\n\t            expr = this.finalize(this.startNode(startToken), new Node.SequenceExpression(expressions));\r\n\t        }\r\n\t        return expr;\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-block\r\n\t    Parser.prototype.parseStatementListItem = function () {\r\n\t        var statement;\r\n\t        this.context.isAssignmentTarget = true;\r\n\t        this.context.isBindingElement = true;\r\n\t        if (this.lookahead.type === 4 /* Keyword */) {\r\n\t            switch (this.lookahead.value) {\r\n\t                case 'export':\r\n\t                    if (!this.context.isModule) {\r\n\t                        this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.IllegalExportDeclaration);\r\n\t                    }\r\n\t                    statement = this.parseExportDeclaration();\r\n\t                    break;\r\n\t                case 'import':\r\n\t                    if (this.matchImportCall()) {\r\n\t                        statement = this.parseExpressionStatement();\r\n\t                    }\r\n\t                    else {\r\n\t                        if (!this.context.isModule) {\r\n\t                            this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.IllegalImportDeclaration);\r\n\t                        }\r\n\t                        statement = this.parseImportDeclaration();\r\n\t                    }\r\n\t                    break;\r\n\t                case 'const':\r\n\t                    statement = this.parseLexicalDeclaration({ inFor: false });\r\n\t                    break;\r\n\t                case 'function':\r\n\t                    statement = this.parseFunctionDeclaration();\r\n\t                    break;\r\n\t                case 'class':\r\n\t                    statement = this.parseClassDeclaration();\r\n\t                    break;\r\n\t                case 'let':\r\n\t                    statement = this.isLexicalDeclaration() ? this.parseLexicalDeclaration({ inFor: false }) : this.parseStatement();\r\n\t                    break;\r\n\t                default:\r\n\t                    statement = this.parseStatement();\r\n\t                    break;\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            statement = this.parseStatement();\r\n\t        }\r\n\t        return statement;\r\n\t    };\r\n\t    Parser.prototype.parseBlock = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expect('{');\r\n\t        var block = [];\r\n\t        while (true) {\r\n\t            if (this.match('}')) {\r\n\t                break;\r\n\t            }\r\n\t            block.push(this.parseStatementListItem());\r\n\t        }\r\n\t        this.expect('}');\r\n\t        return this.finalize(node, new Node.BlockStatement(block));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-let-and-const-declarations\r\n\t    Parser.prototype.parseLexicalBinding = function (kind, options) {\r\n\t        var node = this.createNode();\r\n\t        var params = [];\r\n\t        var id = this.parsePattern(params, kind);\r\n\t        if (this.context.strict && id.type === syntax_1.Syntax.Identifier) {\r\n\t            if (this.scanner.isRestrictedWord(id.name)) {\r\n\t                this.tolerateError(messages_1.Messages.StrictVarName);\r\n\t            }\r\n\t        }\r\n\t        var init = null;\r\n\t        if (kind === 'const') {\r\n\t            if (!this.matchKeyword('in') && !this.matchContextualKeyword('of')) {\r\n\t                if (this.match('=')) {\r\n\t                    this.nextToken();\r\n\t                    init = this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t                }\r\n\t                else {\r\n\t                    this.throwError(messages_1.Messages.DeclarationMissingInitializer, 'const');\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        else if ((!options.inFor && id.type !== syntax_1.Syntax.Identifier) || this.match('=')) {\r\n\t            this.expect('=');\r\n\t            init = this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t        }\r\n\t        return this.finalize(node, new Node.VariableDeclarator(id, init));\r\n\t    };\r\n\t    Parser.prototype.parseBindingList = function (kind, options) {\r\n\t        var list = [this.parseLexicalBinding(kind, options)];\r\n\t        while (this.match(',')) {\r\n\t            this.nextToken();\r\n\t            list.push(this.parseLexicalBinding(kind, options));\r\n\t        }\r\n\t        return list;\r\n\t    };\r\n\t    Parser.prototype.isLexicalDeclaration = function () {\r\n\t        var state = this.scanner.saveState();\r\n\t        this.scanner.scanComments();\r\n\t        var next = this.scanner.lex();\r\n\t        this.scanner.restoreState(state);\r\n\t        return (next.type === 3 /* Identifier */) ||\r\n\t            (next.type === 7 /* Punctuator */ && next.value === '[') ||\r\n\t            (next.type === 7 /* Punctuator */ && next.value === '{') ||\r\n\t            (next.type === 4 /* Keyword */ && next.value === 'let') ||\r\n\t            (next.type === 4 /* Keyword */ && next.value === 'yield');\r\n\t    };\r\n\t    Parser.prototype.parseLexicalDeclaration = function (options) {\r\n\t        var node = this.createNode();\r\n\t        var kind = this.nextToken().value;\r\n\t        assert_1.assert(kind === 'let' || kind === 'const', 'Lexical declaration must be either let or const');\r\n\t        var declarations = this.parseBindingList(kind, options);\r\n\t        this.consumeSemicolon();\r\n\t        return this.finalize(node, new Node.VariableDeclaration(declarations, kind));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-destructuring-binding-patterns\r\n\t    Parser.prototype.parseBindingRestElement = function (params, kind) {\r\n\t        var node = this.createNode();\r\n\t        this.expect('...');\r\n\t        var arg = this.parsePattern(params, kind);\r\n\t        return this.finalize(node, new Node.RestElement(arg));\r\n\t    };\r\n\t    Parser.prototype.parseArrayPattern = function (params, kind) {\r\n\t        var node = this.createNode();\r\n\t        this.expect('[');\r\n\t        var elements = [];\r\n\t        while (!this.match(']')) {\r\n\t            if (this.match(',')) {\r\n\t                this.nextToken();\r\n\t                elements.push(null);\r\n\t            }\r\n\t            else {\r\n\t                if (this.match('...')) {\r\n\t                    elements.push(this.parseBindingRestElement(params, kind));\r\n\t                    break;\r\n\t                }\r\n\t                else {\r\n\t                    elements.push(this.parsePatternWithDefault(params, kind));\r\n\t                }\r\n\t                if (!this.match(']')) {\r\n\t                    this.expect(',');\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        this.expect(']');\r\n\t        return this.finalize(node, new Node.ArrayPattern(elements));\r\n\t    };\r\n\t    Parser.prototype.parsePropertyPattern = function (params, kind) {\r\n\t        var node = this.createNode();\r\n\t        var computed = false;\r\n\t        var shorthand = false;\r\n\t        var method = false;\r\n\t        var key;\r\n\t        var value;\r\n\t        if (this.lookahead.type === 3 /* Identifier */) {\r\n\t            var keyToken = this.lookahead;\r\n\t            key = this.parseVariableIdentifier();\r\n\t            var init = this.finalize(node, new Node.Identifier(keyToken.value));\r\n\t            if (this.match('=')) {\r\n\t                params.push(keyToken);\r\n\t                shorthand = true;\r\n\t                this.nextToken();\r\n\t                var expr = this.parseAssignmentExpression();\r\n\t                value = this.finalize(this.startNode(keyToken), new Node.AssignmentPattern(init, expr));\r\n\t            }\r\n\t            else if (!this.match(':')) {\r\n\t                params.push(keyToken);\r\n\t                shorthand = true;\r\n\t                value = init;\r\n\t            }\r\n\t            else {\r\n\t                this.expect(':');\r\n\t                value = this.parsePatternWithDefault(params, kind);\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            computed = this.match('[');\r\n\t            key = this.parseObjectPropertyKey();\r\n\t            this.expect(':');\r\n\t            value = this.parsePatternWithDefault(params, kind);\r\n\t        }\r\n\t        return this.finalize(node, new Node.Property('init', key, computed, value, method, shorthand));\r\n\t    };\r\n\t    Parser.prototype.parseRestProperty = function (params, kind) {\r\n\t        var node = this.createNode();\r\n\t        this.expect('...');\r\n\t        var arg = this.parsePattern(params);\r\n\t        if (this.match('=')) {\r\n\t            this.throwError(messages_1.Messages.DefaultRestProperty);\r\n\t        }\r\n\t        if (!this.match('}')) {\r\n\t            this.throwError(messages_1.Messages.PropertyAfterRestProperty);\r\n\t        }\r\n\t        return this.finalize(node, new Node.RestElement(arg));\r\n\t    };\r\n\t    Parser.prototype.parseObjectPattern = function (params, kind) {\r\n\t        var node = this.createNode();\r\n\t        var properties = [];\r\n\t        this.expect('{');\r\n\t        while (!this.match('}')) {\r\n\t            properties.push(this.match('...') ? this.parseRestProperty(params, kind) : this.parsePropertyPattern(params, kind));\r\n\t            if (!this.match('}')) {\r\n\t                this.expect(',');\r\n\t            }\r\n\t        }\r\n\t        this.expect('}');\r\n\t        return this.finalize(node, new Node.ObjectPattern(properties));\r\n\t    };\r\n\t    Parser.prototype.parsePattern = function (params, kind) {\r\n\t        var pattern;\r\n\t        if (this.match('[')) {\r\n\t            pattern = this.parseArrayPattern(params, kind);\r\n\t        }\r\n\t        else if (this.match('{')) {\r\n\t            pattern = this.parseObjectPattern(params, kind);\r\n\t        }\r\n\t        else {\r\n\t            if (this.matchKeyword('let') && (kind === 'const' || kind === 'let')) {\r\n\t                this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.LetInLexicalBinding);\r\n\t            }\r\n\t            params.push(this.lookahead);\r\n\t            pattern = this.parseVariableIdentifier(kind);\r\n\t        }\r\n\t        return pattern;\r\n\t    };\r\n\t    Parser.prototype.parsePatternWithDefault = function (params, kind) {\r\n\t        var startToken = this.lookahead;\r\n\t        var pattern = this.parsePattern(params, kind);\r\n\t        if (this.match('=')) {\r\n\t            this.nextToken();\r\n\t            var previousAllowYield = this.context.allowYield;\r\n\t            this.context.allowYield = true;\r\n\t            var right = this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t            this.context.allowYield = previousAllowYield;\r\n\t            pattern = this.finalize(this.startNode(startToken), new Node.AssignmentPattern(pattern, right));\r\n\t        }\r\n\t        return pattern;\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-variable-statement\r\n\t    Parser.prototype.parseVariableIdentifier = function (kind) {\r\n\t        var node = this.createNode();\r\n\t        var token = this.nextToken();\r\n\t        if (token.type === 4 /* Keyword */ && token.value === 'yield') {\r\n\t            if (this.context.strict) {\r\n\t                this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);\r\n\t            }\r\n\t            else if (!this.context.allowYield) {\r\n\t                this.throwUnexpectedToken(token);\r\n\t            }\r\n\t        }\r\n\t        else if (token.type !== 3 /* Identifier */) {\r\n\t            if (this.context.strict && token.type === 4 /* Keyword */ && this.scanner.isStrictModeReservedWord(token.value)) {\r\n\t                this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);\r\n\t            }\r\n\t            else {\r\n\t                if (this.context.strict || token.value !== 'let' || kind !== 'var') {\r\n\t                    this.throwUnexpectedToken(token);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        else if ((this.context.isModule || this.context.await) && token.type === 3 /* Identifier */ && token.value === 'await') {\r\n\t            this.tolerateUnexpectedToken(token);\r\n\t        }\r\n\t        return this.finalize(node, new Node.Identifier(token.value));\r\n\t    };\r\n\t    Parser.prototype.parseVariableDeclaration = function (options) {\r\n\t        var node = this.createNode();\r\n\t        var params = [];\r\n\t        var id = this.parsePattern(params, 'var');\r\n\t        if (this.context.strict && id.type === syntax_1.Syntax.Identifier) {\r\n\t            if (this.scanner.isRestrictedWord(id.name)) {\r\n\t                this.tolerateError(messages_1.Messages.StrictVarName);\r\n\t            }\r\n\t        }\r\n\t        var init = null;\r\n\t        if (this.match('=')) {\r\n\t            this.nextToken();\r\n\t            init = this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t        }\r\n\t        else if (id.type !== syntax_1.Syntax.Identifier && !options.inFor) {\r\n\t            this.expect('=');\r\n\t        }\r\n\t        return this.finalize(node, new Node.VariableDeclarator(id, init));\r\n\t    };\r\n\t    Parser.prototype.parseVariableDeclarationList = function (options) {\r\n\t        var opt = { inFor: options.inFor };\r\n\t        var list = [];\r\n\t        list.push(this.parseVariableDeclaration(opt));\r\n\t        while (this.match(',')) {\r\n\t            this.nextToken();\r\n\t            list.push(this.parseVariableDeclaration(opt));\r\n\t        }\r\n\t        return list;\r\n\t    };\r\n\t    Parser.prototype.parseVariableStatement = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('var');\r\n\t        var declarations = this.parseVariableDeclarationList({ inFor: false });\r\n\t        this.consumeSemicolon();\r\n\t        return this.finalize(node, new Node.VariableDeclaration(declarations, 'var'));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-empty-statement\r\n\t    Parser.prototype.parseEmptyStatement = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expect(';');\r\n\t        return this.finalize(node, new Node.EmptyStatement());\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-expression-statement\r\n\t    Parser.prototype.parseExpressionStatement = function () {\r\n\t        var node = this.createNode();\r\n\t        var expr = this.parseExpression();\r\n\t        this.consumeSemicolon();\r\n\t        return this.finalize(node, new Node.ExpressionStatement(expr));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-if-statement\r\n\t    Parser.prototype.parseIfClause = function () {\r\n\t        if (this.context.strict && this.matchKeyword('function')) {\r\n\t            this.tolerateError(messages_1.Messages.StrictFunction);\r\n\t        }\r\n\t        return this.parseStatement();\r\n\t    };\r\n\t    Parser.prototype.parseIfStatement = function () {\r\n\t        var node = this.createNode();\r\n\t        var consequent;\r\n\t        var alternate = null;\r\n\t        this.expectKeyword('if');\r\n\t        this.expect('(');\r\n\t        var test = this.parseExpression();\r\n\t        if (!this.match(')') && this.config.tolerant) {\r\n\t\t\t\tthis.tolerateUnexpectedToken(this.nextToken());\r\n\t            consequent = this.finalize(this.createNode(), new Node.EmptyStatement());\r\n\t        }\r\n\t        else {\r\n\t            this.expect(')');\r\n\t            consequent = this.parseIfClause();\r\n\t            if (this.matchKeyword('else')) {\r\n\t                this.nextToken();\r\n\t                alternate = this.parseIfClause();\r\n\t            }\r\n\t        }\r\n\t        return this.finalize(node, new Node.IfStatement(test, consequent, alternate));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-do-while-statement\r\n\t    Parser.prototype.parseDoWhileStatement = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('do');\r\n\t        var previousInIteration = this.context.inIteration;\r\n\t        this.context.inIteration = true;\r\n\t        var body = this.parseStatement();\r\n\t        this.context.inIteration = previousInIteration;\r\n\t        this.expectKeyword('while');\r\n\t        this.expect('(');\r\n\t        var test = this.parseExpression();\r\n\t        if (!this.match(')') && this.config.tolerant) {\r\n\t            this.tolerateUnexpectedToken(this.nextToken());\r\n\t        }\r\n\t        else {\r\n\t            this.expect(')');\r\n\t            if (this.match(';')) {\r\n\t                this.nextToken();\r\n\t            }\r\n\t        }\r\n\t        return this.finalize(node, new Node.DoWhileStatement(body, test));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-while-statement\r\n\t    Parser.prototype.parseWhileStatement = function () {\r\n\t        var node = this.createNode();\r\n\t        var body;\r\n\t        this.expectKeyword('while');\r\n\t        this.expect('(');\r\n\t        var test = this.parseExpression();\r\n\t        if (!this.match(')') && this.config.tolerant) {\r\n\t            this.tolerateUnexpectedToken(this.nextToken());\r\n\t            body = this.finalize(this.createNode(), new Node.EmptyStatement());\r\n\t        }\r\n\t        else {\r\n\t            this.expect(')');\r\n\t            var previousInIteration = this.context.inIteration;\r\n\t            this.context.inIteration = true;\r\n\t            body = this.parseStatement();\r\n\t            this.context.inIteration = previousInIteration;\r\n\t        }\r\n\t        return this.finalize(node, new Node.WhileStatement(test, body));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-for-statement\r\n\t    // https://tc39.github.io/ecma262/#sec-for-in-and-for-of-statements\r\n\t    Parser.prototype.parseForStatement = function () {\r\n\t        var init = null;\r\n\t        var test = null;\r\n\t        var update = null;\r\n\t        var forIn = true;\r\n\t        var left, right;\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('for');\r\n\t        this.expect('(');\r\n\t        if (this.match(';')) {\r\n\t            this.nextToken();\r\n\t        }\r\n\t        else {\r\n\t            if (this.matchKeyword('var')) {\r\n\t                init = this.createNode();\r\n\t                this.nextToken();\r\n\t                var previousAllowIn = this.context.allowIn;\r\n\t                this.context.allowIn = false;\r\n\t                var declarations = this.parseVariableDeclarationList({ inFor: true });\r\n\t                this.context.allowIn = previousAllowIn;\r\n\t                if (declarations.length === 1 && this.matchKeyword('in')) {\r\n\t                    var decl = declarations[0];\r\n\t                    if (decl.init && (decl.id.type === syntax_1.Syntax.ArrayPattern || decl.id.type === syntax_1.Syntax.ObjectPattern || this.context.strict)) {\r\n\t                        this.tolerateError(messages_1.Messages.ForInOfLoopInitializer, 'for-in');\r\n\t                    }\r\n\t                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));\r\n\t                    this.nextToken();\r\n\t                    left = init;\r\n\t                    right = this.parseExpression();\r\n\t                    init = null;\r\n\t                }\r\n\t                else if (declarations.length === 1 && declarations[0].init === null && this.matchContextualKeyword('of')) {\r\n\t                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));\r\n\t                    this.nextToken();\r\n\t                    left = init;\r\n\t                    right = this.parseAssignmentExpression();\r\n\t                    init = null;\r\n\t                    forIn = false;\r\n\t                }\r\n\t                else {\r\n\t                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));\r\n\t                    this.expect(';');\r\n\t                }\r\n\t            }\r\n\t            else if (this.matchKeyword('const') || this.matchKeyword('let')) {\r\n\t                init = this.createNode();\r\n\t                var kind = this.nextToken().value;\r\n\t                if (!this.context.strict && this.lookahead.value === 'in') {\r\n\t                    init = this.finalize(init, new Node.Identifier(kind));\r\n\t                    this.nextToken();\r\n\t                    left = init;\r\n\t                    right = this.parseExpression();\r\n\t                    init = null;\r\n\t                }\r\n\t                else {\r\n\t                    var previousAllowIn = this.context.allowIn;\r\n\t                    this.context.allowIn = false;\r\n\t                    var declarations = this.parseBindingList(kind, { inFor: true });\r\n\t                    this.context.allowIn = previousAllowIn;\r\n\t                    if (declarations.length === 1 && declarations[0].init === null && this.matchKeyword('in')) {\r\n\t                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));\r\n\t                        this.nextToken();\r\n\t                        left = init;\r\n\t                        right = this.parseExpression();\r\n\t                        init = null;\r\n\t                    }\r\n\t                    else if (declarations.length === 1 && declarations[0].init === null && this.matchContextualKeyword('of')) {\r\n\t                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));\r\n\t                        this.nextToken();\r\n\t                        left = init;\r\n\t                        right = this.parseAssignmentExpression();\r\n\t                        init = null;\r\n\t                        forIn = false;\r\n\t                    }\r\n\t                    else {\r\n\t                        this.consumeSemicolon();\r\n\t                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                var initStartToken = this.lookahead;\r\n\t                var previousIsBindingElement = this.context.isBindingElement;\r\n\t                var previousIsAssignmentTarget = this.context.isAssignmentTarget;\r\n\t                var previousFirstCoverInitializedNameError = this.context.firstCoverInitializedNameError;\r\n\t                var previousAllowIn = this.context.allowIn;\r\n\t                this.context.allowIn = false;\r\n\t                init = this.inheritCoverGrammar(this.parseAssignmentExpression);\r\n\t                this.context.allowIn = previousAllowIn;\r\n\t                if (this.matchKeyword('in')) {\r\n\t                    if (!this.context.isAssignmentTarget || init.type === syntax_1.Syntax.AssignmentExpression) {\r\n\t                        this.tolerateError(messages_1.Messages.InvalidLHSInForIn);\r\n\t                    }\r\n\t                    this.nextToken();\r\n\t                    this.reinterpretExpressionAsPattern(init);\r\n\t                    left = init;\r\n\t                    right = this.parseExpression();\r\n\t                    init = null;\r\n\t                }\r\n\t                else if (this.matchContextualKeyword('of')) {\r\n\t                    if (!this.context.isAssignmentTarget || init.type === syntax_1.Syntax.AssignmentExpression) {\r\n\t                        this.tolerateError(messages_1.Messages.InvalidLHSInForLoop);\r\n\t                    }\r\n\t                    this.nextToken();\r\n\t                    this.reinterpretExpressionAsPattern(init);\r\n\t                    left = init;\r\n\t                    right = this.parseAssignmentExpression();\r\n\t                    init = null;\r\n\t                    forIn = false;\r\n\t                }\r\n\t                else {\r\n\t                    // The `init` node was not parsed isolated, but we would have wanted it to.\r\n\t                    this.context.isBindingElement = previousIsBindingElement;\r\n\t                    this.context.isAssignmentTarget = previousIsAssignmentTarget;\r\n\t                    this.context.firstCoverInitializedNameError = previousFirstCoverInitializedNameError;\r\n\t                    if (this.match(',')) {\r\n\t                        var initSeq = [init];\r\n\t                        while (this.match(',')) {\r\n\t                            this.nextToken();\r\n\t                            initSeq.push(this.isolateCoverGrammar(this.parseAssignmentExpression));\r\n\t                        }\r\n\t                        init = this.finalize(this.startNode(initStartToken), new Node.SequenceExpression(initSeq));\r\n\t                    }\r\n\t                    this.expect(';');\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        if (typeof left === 'undefined') {\r\n\t            if (!this.match(';')) {\r\n\t                test = this.isolateCoverGrammar(this.parseExpression);\r\n\t            }\r\n\t            this.expect(';');\r\n\t            if (!this.match(')')) {\r\n\t                update = this.isolateCoverGrammar(this.parseExpression);\r\n\t            }\r\n\t        }\r\n\t        var body;\r\n\t        if (!this.match(')') && this.config.tolerant) {\r\n\t            this.tolerateUnexpectedToken(this.nextToken());\r\n\t            body = this.finalize(this.createNode(), new Node.EmptyStatement());\r\n\t        }\r\n\t        else {\r\n\t            this.expect(')');\r\n\t            var previousInIteration = this.context.inIteration;\r\n\t            this.context.inIteration = true;\r\n\t            body = this.isolateCoverGrammar(this.parseStatement);\r\n\t            this.context.inIteration = previousInIteration;\r\n\t        }\r\n\t        return (typeof left === 'undefined') ?\r\n\t            this.finalize(node, new Node.ForStatement(init, test, update, body)) :\r\n\t            forIn ? this.finalize(node, new Node.ForInStatement(left, right, body)) :\r\n\t                this.finalize(node, new Node.ForOfStatement(left, right, body));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-continue-statement\r\n\t    Parser.prototype.parseContinueStatement = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('continue');\r\n\t        var label = null;\r\n\t        if (this.lookahead.type === 3 /* Identifier */ && !this.hasLineTerminator) {\r\n\t            var id = this.parseVariableIdentifier();\r\n\t            label = id;\r\n\t            var key = '$' + id.name;\r\n\t            if (!Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {\r\n\t                this.throwError(messages_1.Messages.UnknownLabel, id.name);\r\n\t            }\r\n\t        }\r\n\t        this.consumeSemicolon();\r\n\t        if (label === null && !this.context.inIteration) {\r\n\t            this.throwError(messages_1.Messages.IllegalContinue);\r\n\t        }\r\n\t        return this.finalize(node, new Node.ContinueStatement(label));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-break-statement\r\n\t    Parser.prototype.parseBreakStatement = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('break');\r\n\t        var label = null;\r\n\t        if (this.lookahead.type === 3 /* Identifier */ && !this.hasLineTerminator) {\r\n\t            var id = this.parseVariableIdentifier();\r\n\t            var key = '$' + id.name;\r\n\t            if (!Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {\r\n\t                this.throwError(messages_1.Messages.UnknownLabel, id.name);\r\n\t            }\r\n\t            label = id;\r\n\t        }\r\n\t        this.consumeSemicolon();\r\n\t        if (label === null && !this.context.inIteration && !this.context.inSwitch) {\r\n\t            this.throwError(messages_1.Messages.IllegalBreak);\r\n\t        }\r\n\t        return this.finalize(node, new Node.BreakStatement(label));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-return-statement\r\n\t    Parser.prototype.parseReturnStatement = function () {\r\n\t        if (!this.context.inFunctionBody) {\r\n\t            this.tolerateError(messages_1.Messages.IllegalReturn);\r\n\t        }\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('return');\r\n\t        var hasArgument = (!this.match(';') && !this.match('}') &&\r\n\t            !this.hasLineTerminator && this.lookahead.type !== 2 /* EOF */) ||\r\n\t            this.lookahead.type === 8 /* StringLiteral */ ||\r\n\t            this.lookahead.type === 10 /* Template */;\r\n\t        var argument = hasArgument ? this.parseExpression() : null;\r\n\t        this.consumeSemicolon();\r\n\t        return this.finalize(node, new Node.ReturnStatement(argument));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-with-statement\r\n\t    Parser.prototype.parseWithStatement = function () {\r\n\t        if (this.context.strict) {\r\n\t            this.tolerateError(messages_1.Messages.StrictModeWith);\r\n\t        }\r\n\t        var node = this.createNode();\r\n\t        var body;\r\n\t        this.expectKeyword('with');\r\n\t        this.expect('(');\r\n\t        var object = this.parseExpression();\r\n\t        if (!this.match(')') && this.config.tolerant) {\r\n\t            this.tolerateUnexpectedToken(this.nextToken());\r\n\t            body = this.finalize(this.createNode(), new Node.EmptyStatement());\r\n\t        }\r\n\t        else {\r\n\t            this.expect(')');\r\n\t            body = this.parseStatement();\r\n\t        }\r\n\t        return this.finalize(node, new Node.WithStatement(object, body));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-switch-statement\r\n\t    Parser.prototype.parseSwitchCase = function () {\r\n\t        var node = this.createNode();\r\n\t        var test;\r\n\t        if (this.matchKeyword('default')) {\r\n\t            this.nextToken();\r\n\t            test = null;\r\n\t        }\r\n\t        else {\r\n\t            this.expectKeyword('case');\r\n\t            test = this.parseExpression();\r\n\t        }\r\n\t        this.expect(':');\r\n\t        var consequent = [];\r\n\t        while (true) {\r\n\t            if (this.match('}') || this.matchKeyword('default') || this.matchKeyword('case')) {\r\n\t                break;\r\n\t            }\r\n\t            consequent.push(this.parseStatementListItem());\r\n\t        }\r\n\t        return this.finalize(node, new Node.SwitchCase(test, consequent));\r\n\t    };\r\n\t    Parser.prototype.parseSwitchStatement = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('switch');\r\n\t        this.expect('(');\r\n\t        var discriminant = this.parseExpression();\r\n\t        this.expect(')');\r\n\t        var previousInSwitch = this.context.inSwitch;\r\n\t        this.context.inSwitch = true;\r\n\t        var cases = [];\r\n\t        var defaultFound = false;\r\n\t        this.expect('{');\r\n\t        while (true) {\r\n\t            if (this.match('}')) {\r\n\t                break;\r\n\t            }\r\n\t            var clause = this.parseSwitchCase();\r\n\t            if (clause.test === null) {\r\n\t                if (defaultFound) {\r\n\t                    this.throwError(messages_1.Messages.MultipleDefaultsInSwitch);\r\n\t                }\r\n\t                defaultFound = true;\r\n\t            }\r\n\t            cases.push(clause);\r\n\t        }\r\n\t        this.expect('}');\r\n\t        this.context.inSwitch = previousInSwitch;\r\n\t        return this.finalize(node, new Node.SwitchStatement(discriminant, cases));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-labelled-statements\r\n\t    Parser.prototype.parseLabelledStatement = function () {\r\n\t        var node = this.createNode();\r\n\t        var expr = this.parseExpression();\r\n\t        var statement;\r\n\t        if ((expr.type === syntax_1.Syntax.Identifier) && this.match(':')) {\r\n\t            this.nextToken();\r\n\t            var id = expr;\r\n\t            var key = '$' + id.name;\r\n\t            if (Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {\r\n\t                this.throwError(messages_1.Messages.Redeclaration, 'Label', id.name);\r\n\t            }\r\n\t            this.context.labelSet[key] = true;\r\n\t            var body = void 0;\r\n\t            if (this.matchKeyword('class')) {\r\n\t                this.tolerateUnexpectedToken(this.lookahead);\r\n\t                body = this.parseClassDeclaration();\r\n\t            }\r\n\t            else if (this.matchKeyword('function')) {\r\n\t                var token = this.lookahead;\r\n\t                var declaration = this.parseFunctionDeclaration();\r\n\t                if (this.context.strict) {\r\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunction);\r\n\t                }\r\n\t                else if (declaration.generator) {\r\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.GeneratorInLegacyContext);\r\n\t                }\r\n\t                body = declaration;\r\n\t            }\r\n\t            else {\r\n\t                body = this.parseStatement();\r\n\t            }\r\n\t            delete this.context.labelSet[key];\r\n\t            statement = new Node.LabeledStatement(id, body);\r\n\t        }\r\n\t        else {\r\n\t            this.consumeSemicolon();\r\n\t            statement = new Node.ExpressionStatement(expr);\r\n\t        }\r\n\t        return this.finalize(node, statement);\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-throw-statement\r\n\t    Parser.prototype.parseThrowStatement = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('throw');\r\n\t        if (this.hasLineTerminator) {\r\n\t            this.throwError(messages_1.Messages.NewlineAfterThrow);\r\n\t        }\r\n\t        var argument = this.parseExpression();\r\n\t        this.consumeSemicolon();\r\n\t        return this.finalize(node, new Node.ThrowStatement(argument));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-try-statement\r\n\t    Parser.prototype.parseCatchClause = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('catch');\r\n\t        this.expect('(');\r\n\t        if (this.match(')')) {\r\n\t            this.throwUnexpectedToken(this.lookahead);\r\n\t        }\r\n\t        var params = [];\r\n\t        var param = this.parsePattern(params);\r\n\t        var paramMap = {};\r\n\t        for (var i = 0; i < params.length; i++) {\r\n\t            var key = '$' + params[i].value;\r\n\t            if (Object.prototype.hasOwnProperty.call(paramMap, key)) {\r\n\t                this.tolerateError(messages_1.Messages.DuplicateBinding, params[i].value);\r\n\t            }\r\n\t            paramMap[key] = true;\r\n\t        }\r\n\t        if (this.context.strict && param.type === syntax_1.Syntax.Identifier) {\r\n\t            if (this.scanner.isRestrictedWord(param.name)) {\r\n\t                this.tolerateError(messages_1.Messages.StrictCatchVariable);\r\n\t            }\r\n\t        }\r\n\t        this.expect(')');\r\n\t        var body = this.parseBlock();\r\n\t        return this.finalize(node, new Node.CatchClause(param, body));\r\n\t    };\r\n\t    Parser.prototype.parseFinallyClause = function () {\r\n\t        this.expectKeyword('finally');\r\n\t        return this.parseBlock();\r\n\t    };\r\n\t    Parser.prototype.parseTryStatement = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('try');\r\n\t        var block = this.parseBlock();\r\n\t        var handler = this.matchKeyword('catch') ? this.parseCatchClause() : null;\r\n\t        var finalizer = this.matchKeyword('finally') ? this.parseFinallyClause() : null;\r\n\t        if (!handler && !finalizer) {\r\n\t            this.throwError(messages_1.Messages.NoCatchOrFinally);\r\n\t        }\r\n\t        return this.finalize(node, new Node.TryStatement(block, handler, finalizer));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-debugger-statement\r\n\t    Parser.prototype.parseDebuggerStatement = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('debugger');\r\n\t        this.consumeSemicolon();\r\n\t        return this.finalize(node, new Node.DebuggerStatement());\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-ecmascript-language-statements-and-declarations\r\n\t    Parser.prototype.parseStatement = function () {\r\n\t        var statement;\r\n\t        switch (this.lookahead.type) {\r\n\t            case 1 /* BooleanLiteral */:\r\n\t            case 5 /* NullLiteral */:\r\n\t            case 6 /* NumericLiteral */:\r\n\t            case 8 /* StringLiteral */:\r\n\t            case 10 /* Template */:\r\n\t            case 9 /* RegularExpression */:\r\n\t                statement = this.parseExpressionStatement();\r\n\t                break;\r\n\t            case 7 /* Punctuator */:\r\n\t                var value = this.lookahead.value;\r\n\t                if (value === '{') {\r\n\t                    statement = this.parseBlock();\r\n\t                }\r\n\t                else if (value === '(') {\r\n\t                    statement = this.parseExpressionStatement();\r\n\t                }\r\n\t                else if (value === ';') {\r\n\t                    statement = this.parseEmptyStatement();\r\n\t                }\r\n\t                else {\r\n\t                    statement = this.parseExpressionStatement();\r\n\t                }\r\n\t                break;\r\n\t            case 3 /* Identifier */:\r\n\t                statement = this.matchAsyncFunction() ? this.parseFunctionDeclaration() : this.parseLabelledStatement();\r\n\t                break;\r\n\t            case 4 /* Keyword */:\r\n\t                switch (this.lookahead.value) {\r\n\t                    case 'break':\r\n\t                        statement = this.parseBreakStatement();\r\n\t                        break;\r\n\t                    case 'continue':\r\n\t                        statement = this.parseContinueStatement();\r\n\t                        break;\r\n\t                    case 'debugger':\r\n\t                        statement = this.parseDebuggerStatement();\r\n\t                        break;\r\n\t                    case 'do':\r\n\t                        statement = this.parseDoWhileStatement();\r\n\t                        break;\r\n\t                    case 'for':\r\n\t                        statement = this.parseForStatement();\r\n\t                        break;\r\n\t                    case 'function':\r\n\t                        statement = this.parseFunctionDeclaration();\r\n\t                        break;\r\n\t                    case 'if':\r\n\t                        statement = this.parseIfStatement();\r\n\t                        break;\r\n\t                    case 'return':\r\n\t                        statement = this.parseReturnStatement();\r\n\t                        break;\r\n\t                    case 'switch':\r\n\t                        statement = this.parseSwitchStatement();\r\n\t                        break;\r\n\t                    case 'throw':\r\n\t                        statement = this.parseThrowStatement();\r\n\t                        break;\r\n\t                    case 'try':\r\n\t                        statement = this.parseTryStatement();\r\n\t                        break;\r\n\t                    case 'var':\r\n\t                        statement = this.parseVariableStatement();\r\n\t                        break;\r\n\t                    case 'while':\r\n\t                        statement = this.parseWhileStatement();\r\n\t                        break;\r\n\t                    case 'with':\r\n\t                        statement = this.parseWithStatement();\r\n\t                        break;\r\n\t                    default:\r\n\t                        statement = this.parseExpressionStatement();\r\n\t                        break;\r\n\t                }\r\n\t                break;\r\n\t            default:\r\n\t                statement = this.throwUnexpectedToken(this.lookahead);\r\n\t        }\r\n\t        return statement;\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-function-definitions\r\n\t    Parser.prototype.parseFunctionSourceElements = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expect('{');\r\n\t        var body = this.parseDirectivePrologues();\r\n\t        var previousLabelSet = this.context.labelSet;\r\n\t        var previousInIteration = this.context.inIteration;\r\n\t        var previousInSwitch = this.context.inSwitch;\r\n\t        var previousInFunctionBody = this.context.inFunctionBody;\r\n\t        this.context.labelSet = {};\r\n\t        this.context.inIteration = false;\r\n\t        this.context.inSwitch = false;\r\n\t        this.context.inFunctionBody = true;\r\n\t        while (this.lookahead.type !== 2 /* EOF */) {\r\n\t            if (this.match('}')) {\r\n\t                break;\r\n\t            }\r\n\t            body.push(this.parseStatementListItem());\r\n\t        }\r\n\t        this.expect('}');\r\n\t        this.context.labelSet = previousLabelSet;\r\n\t        this.context.inIteration = previousInIteration;\r\n\t        this.context.inSwitch = previousInSwitch;\r\n\t        this.context.inFunctionBody = previousInFunctionBody;\r\n\t        return this.finalize(node, new Node.BlockStatement(body));\r\n\t    };\r\n\t    Parser.prototype.validateParam = function (options, param, name) {\r\n\t        var key = '$' + name;\r\n\t        if (this.context.strict) {\r\n\t            if (this.scanner.isRestrictedWord(name)) {\r\n\t                options.stricted = param;\r\n\t                options.message = messages_1.Messages.StrictParamName;\r\n\t            }\r\n\t            if (Object.prototype.hasOwnProperty.call(options.paramSet, key)) {\r\n\t                options.stricted = param;\r\n\t                options.message = messages_1.Messages.StrictParamDupe;\r\n\t            }\r\n\t        }\r\n\t        else if (!options.firstRestricted) {\r\n\t            if (this.scanner.isRestrictedWord(name)) {\r\n\t                options.firstRestricted = param;\r\n\t                options.message = messages_1.Messages.StrictParamName;\r\n\t            }\r\n\t            else if (this.scanner.isStrictModeReservedWord(name)) {\r\n\t                options.firstRestricted = param;\r\n\t                options.message = messages_1.Messages.StrictReservedWord;\r\n\t            }\r\n\t            else if (Object.prototype.hasOwnProperty.call(options.paramSet, key)) {\r\n\t                options.stricted = param;\r\n\t                options.message = messages_1.Messages.StrictParamDupe;\r\n\t            }\r\n\t        }\r\n\t        /* istanbul ignore next */\r\n\t        if (typeof Object.defineProperty === 'function') {\r\n\t            Object.defineProperty(options.paramSet, key, { value: true, enumerable: true, writable: true, configurable: true });\r\n\t        }\r\n\t        else {\r\n\t            options.paramSet[key] = true;\r\n\t        }\r\n\t    };\r\n\t    Parser.prototype.parseRestElement = function (params) {\r\n\t        var node = this.createNode();\r\n\t        this.expect('...');\r\n\t        var arg = this.parsePattern(params);\r\n\t        if (this.match('=')) {\r\n\t            this.throwError(messages_1.Messages.DefaultRestParameter);\r\n\t        }\r\n\t        if (!this.match(')')) {\r\n\t            this.throwError(messages_1.Messages.ParameterAfterRestParameter);\r\n\t\t\t}\r\n\t        return this.finalize(node, new Node.RestElement(arg));\r\n\t    };\r\n\t    Parser.prototype.parseFormalParameter = function (options) {\r\n\t        var params = [];\r\n\t        var param = this.match('...') ? this.parseRestElement(params) : this.parsePatternWithDefault(params);\r\n\t\t\t\r\n\t\t\tfor (var i = 0; i < params.length; i++) {\r\n\t            this.validateParam(options, params[i], params[i].value);\r\n\t        }\r\n\t        options.simple = options.simple && (param instanceof Node.Identifier);\r\n\t        options.params.push(param);\r\n\t    };\r\n\t    Parser.prototype.parseFormalParameters = function (firstRestricted) {\r\n\t        var options = {\r\n\t            simple: true,\r\n\t            params: [],\r\n\t            firstRestricted: firstRestricted\r\n\t        };\r\n\t        this.expect('(');\r\n\t        if (!this.match(')')) {\r\n\t            options.paramSet = {};\r\n\t            while (this.lookahead.type !== 2 /* EOF */) {\r\n\t                this.parseFormalParameter(options);\r\n\t                if (this.match(')')) {\r\n\t                    break;\r\n\t                }\r\n\t                this.expect(',');\r\n\t                if (this.match(')')) {\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        this.expect(')');\r\n\t        return {\r\n\t            simple: options.simple,\r\n\t            params: options.params,\r\n\t            stricted: options.stricted,\r\n\t            firstRestricted: options.firstRestricted,\r\n\t            message: options.message\r\n\t        };\r\n\t    };\r\n\t    Parser.prototype.matchAsyncFunction = function () {\r\n\t        var match = this.matchContextualKeyword('async');\r\n\t        if (match) {\r\n\t            var state = this.scanner.saveState();\r\n\t            this.scanner.scanComments();\r\n\t            var next = this.scanner.lex();\r\n\t            this.scanner.restoreState(state);\r\n\t            match = (state.lineNumber === next.lineNumber) && (next.type === 4 /* Keyword */) && (next.value === 'function');\r\n\t        }\r\n\t        return match;\r\n\t    };\r\n\t    Parser.prototype.parseFunctionDeclaration = function (identifierIsOptional) {\r\n\t        var node = this.createNode();\r\n\t        var isAsync = this.matchContextualKeyword('async');\r\n\t        if (isAsync) {\r\n\t            this.nextToken();\r\n\t        }\r\n\t        this.expectKeyword('function');\r\n\t        var isGenerator = isAsync ? false : this.match('*');\r\n\t        if (isGenerator) {\r\n\t            this.nextToken();\r\n\t        }\r\n\t        var message;\r\n\t        var id = null;\r\n\t        var firstRestricted = null;\r\n\t        if (!identifierIsOptional || !this.match('(')) {\r\n\t            var token = this.lookahead;\r\n\t            id = this.parseVariableIdentifier();\r\n\t            if (this.context.strict) {\r\n\t                if (this.scanner.isRestrictedWord(token.value)) {\r\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunctionName);\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                if (this.scanner.isRestrictedWord(token.value)) {\r\n\t                    firstRestricted = token;\r\n\t                    message = messages_1.Messages.StrictFunctionName;\r\n\t                }\r\n\t                else if (this.scanner.isStrictModeReservedWord(token.value)) {\r\n\t                    firstRestricted = token;\r\n\t                    message = messages_1.Messages.StrictReservedWord;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        var previousAllowAwait = this.context.await;\r\n\t        var previousAllowYield = this.context.allowYield;\r\n\t        this.context.await = isAsync;\r\n\t        this.context.allowYield = !isGenerator;\r\n\t        var formalParameters = this.parseFormalParameters(firstRestricted);\r\n\t        var params = formalParameters.params;\r\n\t        var stricted = formalParameters.stricted;\r\n\t        firstRestricted = formalParameters.firstRestricted;\r\n\t        if (formalParameters.message) {\r\n\t            message = formalParameters.message;\r\n\t        }\r\n\t        var previousStrict = this.context.strict;\r\n\t        var previousAllowStrictDirective = this.context.allowStrictDirective;\r\n\t        this.context.allowStrictDirective = formalParameters.simple;\r\n\t        var body = this.parseFunctionSourceElements();\r\n\t        if (this.context.strict && firstRestricted) {\r\n\t            this.throwUnexpectedToken(firstRestricted, message);\r\n\t        }\r\n\t        if (this.context.strict && stricted) {\r\n\t            this.tolerateUnexpectedToken(stricted, message);\r\n\t        }\r\n\t        this.context.strict = previousStrict;\r\n\t        this.context.allowStrictDirective = previousAllowStrictDirective;\r\n\t        this.context.await = previousAllowAwait;\r\n\t        this.context.allowYield = previousAllowYield;\r\n\t        return isAsync ? this.finalize(node, new Node.AsyncFunctionDeclaration(id, params, body)) :\r\n\t            this.finalize(node, new Node.FunctionDeclaration(id, params, body, isGenerator));\r\n\t    };\r\n\t    Parser.prototype.parseFunctionExpression = function () {\r\n\t        var node = this.createNode();\r\n\t        var isAsync = this.matchContextualKeyword('async');\r\n\t        if (isAsync) {\r\n\t            this.nextToken();\r\n\t        }\r\n\t        this.expectKeyword('function');\r\n\t        var isGenerator = isAsync ? false : this.match('*');\r\n\t        if (isGenerator) {\r\n\t            this.nextToken();\r\n\t        }\r\n\t        var message;\r\n\t        var id = null;\r\n\t        var firstRestricted;\r\n\t        var previousAllowAwait = this.context.await;\r\n\t        var previousAllowYield = this.context.allowYield;\r\n\t        this.context.await = isAsync;\r\n\t        this.context.allowYield = !isGenerator;\r\n\t        if (!this.match('(')) {\r\n\t            var token = this.lookahead;\r\n\t            id = (!this.context.strict && !isGenerator && this.matchKeyword('yield')) ? this.parseIdentifierName() : this.parseVariableIdentifier();\r\n\t            if (this.context.strict) {\r\n\t                if (this.scanner.isRestrictedWord(token.value)) {\r\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunctionName);\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                if (this.scanner.isRestrictedWord(token.value)) {\r\n\t                    firstRestricted = token;\r\n\t                    message = messages_1.Messages.StrictFunctionName;\r\n\t                }\r\n\t                else if (this.scanner.isStrictModeReservedWord(token.value)) {\r\n\t                    firstRestricted = token;\r\n\t                    message = messages_1.Messages.StrictReservedWord;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        var formalParameters = this.parseFormalParameters(firstRestricted);\r\n\t        var params = formalParameters.params;\r\n\t        var stricted = formalParameters.stricted;\r\n\t        firstRestricted = formalParameters.firstRestricted;\r\n\t        if (formalParameters.message) {\r\n\t            message = formalParameters.message;\r\n\t        }\r\n\t        var previousStrict = this.context.strict;\r\n\t        var previousAllowStrictDirective = this.context.allowStrictDirective;\r\n\t        this.context.allowStrictDirective = formalParameters.simple;\r\n\t        var body = this.parseFunctionSourceElements();\r\n\t        if (this.context.strict && firstRestricted) {\r\n\t            this.throwUnexpectedToken(firstRestricted, message);\r\n\t        }\r\n\t        if (this.context.strict && stricted) {\r\n\t            this.tolerateUnexpectedToken(stricted, message);\r\n\t        }\r\n\t        this.context.strict = previousStrict;\r\n\t        this.context.allowStrictDirective = previousAllowStrictDirective;\r\n\t        this.context.await = previousAllowAwait;\r\n\t        this.context.allowYield = previousAllowYield;\r\n\t        return isAsync ? this.finalize(node, new Node.AsyncFunctionExpression(id, params, body)) :\r\n\t            this.finalize(node, new Node.FunctionExpression(id, params, body, isGenerator));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-directive-prologues-and-the-use-strict-directive\r\n\t    Parser.prototype.parseDirective = function () {\r\n\t        var token = this.lookahead;\r\n\t        var node = this.createNode();\r\n\t        var expr = this.parseExpression();\r\n\t        var directive = (expr.type === syntax_1.Syntax.Literal) ? this.getTokenRaw(token).slice(1, -1) : null;\r\n\t        this.consumeSemicolon();\r\n\t        return this.finalize(node, directive ? new Node.Directive(expr, directive) : new Node.ExpressionStatement(expr));\r\n\t    };\r\n\t    Parser.prototype.parseDirectivePrologues = function () {\r\n\t        var firstRestricted = null;\r\n\t        var body = [];\r\n\t        while (true) {\r\n\t            var token = this.lookahead;\r\n\t            if (token.type !== 8 /* StringLiteral */) {\r\n\t                break;\r\n\t            }\r\n\t            var statement = this.parseDirective();\r\n\t            body.push(statement);\r\n\t            var directive = statement.directive;\r\n\t            if (typeof directive !== 'string') {\r\n\t                break;\r\n\t            }\r\n\t            if (directive === 'use strict') {\r\n\t                this.context.strict = true;\r\n\t                if (firstRestricted) {\r\n\t                    this.tolerateUnexpectedToken(firstRestricted, messages_1.Messages.StrictOctalLiteral);\r\n\t                }\r\n\t                if (!this.context.allowStrictDirective) {\r\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.IllegalLanguageModeDirective);\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                if (!firstRestricted && token.octal) {\r\n\t                    firstRestricted = token;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        return body;\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-method-definitions\r\n\t    Parser.prototype.qualifiedPropertyName = function (token) {\r\n\t        switch (token.type) {\r\n\t            case 3 /* Identifier */:\r\n\t            case 8 /* StringLiteral */:\r\n\t            case 1 /* BooleanLiteral */:\r\n\t            case 5 /* NullLiteral */:\r\n\t            case 6 /* NumericLiteral */:\r\n\t            case 4 /* Keyword */:\r\n\t                return true;\r\n\t            case 7 /* Punctuator */:\r\n\t                return token.value === '[';\r\n\t            default:\r\n\t                break;\r\n\t        }\r\n\t        return false;\r\n\t    };\r\n\t    Parser.prototype.parseGetterMethod = function () {\r\n\t        var node = this.createNode();\r\n\t        var isGenerator = false;\r\n\t        var previousAllowYield = this.context.allowYield;\r\n\t        this.context.allowYield = !isGenerator;\r\n\t        var formalParameters = this.parseFormalParameters();\r\n\t        if (formalParameters.params.length > 0) {\r\n\t            this.tolerateError(messages_1.Messages.BadGetterArity);\r\n\t        }\r\n\t        var method = this.parsePropertyMethod(formalParameters);\r\n\t        this.context.allowYield = previousAllowYield;\r\n\t        return this.finalize(node, new Node.FunctionExpression(null, formalParameters.params, method, isGenerator));\r\n\t    };\r\n\t    Parser.prototype.parseSetterMethod = function () {\r\n\t        var node = this.createNode();\r\n\t        var isGenerator = false;\r\n\t        var previousAllowYield = this.context.allowYield;\r\n\t        this.context.allowYield = !isGenerator;\r\n\t        var formalParameters = this.parseFormalParameters();\r\n\t        if (formalParameters.params.length !== 1) {\r\n\t            this.tolerateError(messages_1.Messages.BadSetterArity);\r\n\t        }\r\n\t        else if (formalParameters.params[0] instanceof Node.RestElement) {\r\n\t            this.tolerateError(messages_1.Messages.BadSetterRestParameter);\r\n\t        }\r\n\t        var method = this.parsePropertyMethod(formalParameters);\r\n\t        this.context.allowYield = previousAllowYield;\r\n\t        return this.finalize(node, new Node.FunctionExpression(null, formalParameters.params, method, isGenerator));\r\n\t    };\r\n\t    Parser.prototype.parseGeneratorMethod = function () {\r\n\t        var node = this.createNode();\r\n\t        var isGenerator = true;\r\n\t        var previousAllowYield = this.context.allowYield;\r\n\t        this.context.allowYield = true;\r\n\t        var params = this.parseFormalParameters();\r\n\t        this.context.allowYield = false;\r\n\t        var method = this.parsePropertyMethod(params);\r\n\t        this.context.allowYield = previousAllowYield;\r\n\t        return this.finalize(node, new Node.FunctionExpression(null, params.params, method, isGenerator));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-generator-function-definitions\r\n\t    Parser.prototype.isStartOfExpression = function () {\r\n\t        var start = true;\r\n\t        var value = this.lookahead.value;\r\n\t        switch (this.lookahead.type) {\r\n\t            case 7 /* Punctuator */:\r\n\t                start = (value === '[') || (value === '(') || (value === '{') ||\r\n\t                    (value === '+') || (value === '-') ||\r\n\t                    (value === '!') || (value === '~') ||\r\n\t                    (value === '++') || (value === '--') ||\r\n\t                    (value === '/') || (value === '/='); // regular expression literal\r\n\t                break;\r\n\t            case 4 /* Keyword */:\r\n\t                start = (value === 'class') || (value === 'delete') ||\r\n\t                    (value === 'function') || (value === 'let') || (value === 'new') ||\r\n\t                    (value === 'super') || (value === 'this') || (value === 'typeof') ||\r\n\t                    (value === 'void') || (value === 'yield');\r\n\t                break;\r\n\t            default:\r\n\t                break;\r\n\t        }\r\n\t        return start;\r\n\t    };\r\n\t    Parser.prototype.parseYieldExpression = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('yield');\r\n\t        var argument = null;\r\n\t        var delegate = false;\r\n\t        if (!this.hasLineTerminator) {\r\n\t            var previousAllowYield = this.context.allowYield;\r\n\t            this.context.allowYield = false;\r\n\t            delegate = this.match('*');\r\n\t            if (delegate) {\r\n\t                this.nextToken();\r\n\t                argument = this.parseAssignmentExpression();\r\n\t            }\r\n\t            else if (this.isStartOfExpression()) {\r\n\t                argument = this.parseAssignmentExpression();\r\n\t            }\r\n\t            this.context.allowYield = previousAllowYield;\r\n\t        }\r\n\t        return this.finalize(node, new Node.YieldExpression(argument, delegate));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-class-definitions\r\n\t    Parser.prototype.parseClassElement = function (hasConstructor) {\r\n\t        var token = this.lookahead;\r\n\t        var node = this.createNode();\r\n\t        var kind = '';\r\n\t        var key = null;\r\n\t        var value = null;\r\n\t        var computed = false;\r\n\t        var method = false;\r\n\t        var isStatic = false;\r\n\t        var isAsync = false;\r\n\t        if (this.match('*')) {\r\n\t            this.nextToken();\r\n\t        }\r\n\t        else {\r\n\t            computed = this.match('[');\r\n\t            key = this.parseObjectPropertyKey();\r\n\t            var id = key;\r\n\t            if (id.name === 'static' && (this.qualifiedPropertyName(this.lookahead) || this.match('*'))) {\r\n\t                token = this.lookahead;\r\n\t                isStatic = true;\r\n\t                computed = this.match('[');\r\n\t                if (this.match('*')) {\r\n\t                    this.nextToken();\r\n\t                }\r\n\t                else {\r\n\t                    key = this.parseObjectPropertyKey();\r\n\t                }\r\n\t            }\r\n\t            if ((token.type === 3 /* Identifier */) && !this.hasLineTerminator && (token.value === 'async')) {\r\n\t                var punctuator = this.lookahead.value;\r\n\t                if (punctuator !== ':' && punctuator !== '(' && punctuator !== '*') {\r\n\t                    isAsync = true;\r\n\t                    token = this.lookahead;\r\n\t                    key = this.parseObjectPropertyKey();\r\n\t                    if (token.type === 3 /* Identifier */ && token.value === 'constructor') {\r\n\t                        this.tolerateUnexpectedToken(token, messages_1.Messages.ConstructorIsAsync);\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        var lookaheadPropertyKey = this.qualifiedPropertyName(this.lookahead);\r\n\t        if (token.type === 3 /* Identifier */) {\r\n\t            if (token.value === 'get' && lookaheadPropertyKey) {\r\n\t                kind = 'get';\r\n\t                computed = this.match('[');\r\n\t                key = this.parseObjectPropertyKey();\r\n\t                this.context.allowYield = false;\r\n\t                value = this.parseGetterMethod();\r\n\t            }\r\n\t            else if (token.value === 'set' && lookaheadPropertyKey) {\r\n\t                kind = 'set';\r\n\t                computed = this.match('[');\r\n\t                key = this.parseObjectPropertyKey();\r\n\t                value = this.parseSetterMethod();\r\n\t            }\r\n\t        }\r\n\t        else if (token.type === 7 /* Punctuator */ && token.value === '*' && lookaheadPropertyKey) {\r\n\t            kind = 'init';\r\n\t            computed = this.match('[');\r\n\t            key = this.parseObjectPropertyKey();\r\n\t            value = this.parseGeneratorMethod();\r\n\t            method = true;\r\n\t        }\r\n\t        if (!kind && key && this.match('(')) {\r\n\t            kind = 'init';\r\n\t            value = isAsync ? this.parsePropertyMethodAsyncFunction() : this.parsePropertyMethodFunction();\r\n\t            method = true;\r\n\t        }\r\n\t        if (!kind) {\r\n\t            this.throwUnexpectedToken(this.lookahead);\r\n\t        }\r\n\t        if (kind === 'init') {\r\n\t            kind = 'method';\r\n\t        }\r\n\t        if (!computed) {\r\n\t            if (isStatic && this.isPropertyKey(key, 'prototype')) {\r\n\t                this.throwUnexpectedToken(token, messages_1.Messages.StaticPrototype);\r\n\t            }\r\n\t            if (!isStatic && this.isPropertyKey(key, 'constructor')) {\r\n\t                if (kind !== 'method' || !method || (value && value.generator)) {\r\n\t                    this.throwUnexpectedToken(token, messages_1.Messages.ConstructorSpecialMethod);\r\n\t                }\r\n\t                if (hasConstructor.value) {\r\n\t                    this.throwUnexpectedToken(token, messages_1.Messages.DuplicateConstructor);\r\n\t                }\r\n\t                else {\r\n\t                    hasConstructor.value = true;\r\n\t                }\r\n\t                kind = 'constructor';\r\n\t            }\r\n\t        }\r\n\t        return this.finalize(node, new Node.MethodDefinition(key, computed, value, kind, isStatic));\r\n\t    };\r\n\t    Parser.prototype.parseClassElementList = function () {\r\n\t        var body = [];\r\n\t        var hasConstructor = { value: false };\r\n\t        this.expect('{');\r\n\t        while (!this.match('}')) {\r\n\t            if (this.match(';')) {\r\n\t                this.nextToken();\r\n\t            }\r\n\t            else {\r\n\t                body.push(this.parseClassElement(hasConstructor));\r\n\t            }\r\n\t        }\r\n\t        this.expect('}');\r\n\t        return body;\r\n\t    };\r\n\t    Parser.prototype.parseClassBody = function () {\r\n\t        var node = this.createNode();\r\n\t        var elementList = this.parseClassElementList();\r\n\t        return this.finalize(node, new Node.ClassBody(elementList));\r\n\t    };\r\n\t    Parser.prototype.parseClassDeclaration = function (identifierIsOptional) {\r\n\t        var node = this.createNode();\r\n\t        var previousStrict = this.context.strict;\r\n\t        this.context.strict = true;\r\n\t        this.expectKeyword('class');\r\n\t        var id = (identifierIsOptional && (this.lookahead.type !== 3 /* Identifier */)) ? null : this.parseVariableIdentifier();\r\n\t        var superClass = null;\r\n\t        if (this.matchKeyword('extends')) {\r\n\t            this.nextToken();\r\n\t            superClass = this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall);\r\n\t        }\r\n\t        var classBody = this.parseClassBody();\r\n\t        this.context.strict = previousStrict;\r\n\t        return this.finalize(node, new Node.ClassDeclaration(id, superClass, classBody));\r\n\t    };\r\n\t    Parser.prototype.parseClassExpression = function () {\r\n\t        var node = this.createNode();\r\n\t        var previousStrict = this.context.strict;\r\n\t        this.context.strict = true;\r\n\t        this.expectKeyword('class');\r\n\t        var id = (this.lookahead.type === 3 /* Identifier */) ? this.parseVariableIdentifier() : null;\r\n\t        var superClass = null;\r\n\t        if (this.matchKeyword('extends')) {\r\n\t            this.nextToken();\r\n\t            superClass = this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall);\r\n\t        }\r\n\t        var classBody = this.parseClassBody();\r\n\t        this.context.strict = previousStrict;\r\n\t        return this.finalize(node, new Node.ClassExpression(id, superClass, classBody));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-scripts\r\n\t    // https://tc39.github.io/ecma262/#sec-modules\r\n\t    Parser.prototype.parseModule = function () {\r\n\t        this.context.strict = true;\r\n\t        this.context.isModule = true;\r\n\t        this.scanner.isModule = true;\r\n\t        var node = this.createNode();\r\n\t        var body = this.parseDirectivePrologues();\r\n\t        while (this.lookahead.type !== 2 /* EOF */) {\r\n\t            body.push(this.parseStatementListItem());\r\n\t        }\r\n\t        return this.finalize(node, new Node.Module(body));\r\n\t    };\r\n\t    Parser.prototype.parseScript = function () {\r\n\t        var node = this.createNode();\r\n\t        var body = this.parseDirectivePrologues();\r\n\t        while (this.lookahead.type !== 2 /* EOF */) {\r\n\t            body.push(this.parseStatementListItem());\r\n\t        }\r\n\t        return this.finalize(node, new Node.Script(body));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-imports\r\n\t    Parser.prototype.parseModuleSpecifier = function () {\r\n\t        var node = this.createNode();\r\n\t        if (this.lookahead.type !== 8 /* StringLiteral */) {\r\n\t            this.throwError(messages_1.Messages.InvalidModuleSpecifier);\r\n\t        }\r\n\t        var token = this.nextToken();\r\n\t        var raw = this.getTokenRaw(token);\r\n\t        return this.finalize(node, new Node.Literal(token.value, raw));\r\n\t    };\r\n\t    // import {<foo as bar>} ...;\r\n\t    Parser.prototype.parseImportSpecifier = function () {\r\n\t        var node = this.createNode();\r\n\t        var imported;\r\n\t        var local;\r\n\t        if (this.lookahead.type === 3 /* Identifier */) {\r\n\t            imported = this.parseVariableIdentifier();\r\n\t            local = imported;\r\n\t            if (this.matchContextualKeyword('as')) {\r\n\t                this.nextToken();\r\n\t                local = this.parseVariableIdentifier();\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            imported = this.parseIdentifierName();\r\n\t            local = imported;\r\n\t            if (this.matchContextualKeyword('as')) {\r\n\t                this.nextToken();\r\n\t                local = this.parseVariableIdentifier();\r\n\t            }\r\n\t            else {\r\n\t                this.throwUnexpectedToken(this.nextToken());\r\n\t            }\r\n\t        }\r\n\t        return this.finalize(node, new Node.ImportSpecifier(local, imported));\r\n\t    };\r\n\t    // {foo, bar as bas}\r\n\t    Parser.prototype.parseNamedImports = function () {\r\n\t        this.expect('{');\r\n\t        var specifiers = [];\r\n\t        while (!this.match('}')) {\r\n\t            specifiers.push(this.parseImportSpecifier());\r\n\t            if (!this.match('}')) {\r\n\t                this.expect(',');\r\n\t            }\r\n\t        }\r\n\t        this.expect('}');\r\n\t        return specifiers;\r\n\t    };\r\n\t    // import <foo> ...;\r\n\t    Parser.prototype.parseImportDefaultSpecifier = function () {\r\n\t        var node = this.createNode();\r\n\t        var local = this.parseIdentifierName();\r\n\t        return this.finalize(node, new Node.ImportDefaultSpecifier(local));\r\n\t    };\r\n\t    // import <* as foo> ...;\r\n\t    Parser.prototype.parseImportNamespaceSpecifier = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expect('*');\r\n\t        if (!this.matchContextualKeyword('as')) {\r\n\t            this.throwError(messages_1.Messages.NoAsAfterImportNamespace);\r\n\t        }\r\n\t        this.nextToken();\r\n\t        var local = this.parseIdentifierName();\r\n\t        return this.finalize(node, new Node.ImportNamespaceSpecifier(local));\r\n\t    };\r\n\t    Parser.prototype.parseImportDeclaration = function () {\r\n\t        if (this.context.inFunctionBody) {\r\n\t            this.throwError(messages_1.Messages.IllegalImportDeclaration);\r\n\t        }\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('import');\r\n\t        var src;\r\n\t        var specifiers = [];\r\n\t        if (this.lookahead.type === 8 /* StringLiteral */) {\r\n\t            // import 'foo';\r\n\t            src = this.parseModuleSpecifier();\r\n\t        }\r\n\t        else {\r\n\t            if (this.match('{')) {\r\n\t                // import {bar}\r\n\t                specifiers = specifiers.concat(this.parseNamedImports());\r\n\t            }\r\n\t            else if (this.match('*')) {\r\n\t                // import * as foo\r\n\t                specifiers.push(this.parseImportNamespaceSpecifier());\r\n\t            }\r\n\t            else if (this.isIdentifierName(this.lookahead) && !this.matchKeyword('default')) {\r\n\t                // import foo\r\n\t                specifiers.push(this.parseImportDefaultSpecifier());\r\n\t                if (this.match(',')) {\r\n\t                    this.nextToken();\r\n\t                    if (this.match('*')) {\r\n\t                        // import foo, * as foo\r\n\t                        specifiers.push(this.parseImportNamespaceSpecifier());\r\n\t                    }\r\n\t                    else if (this.match('{')) {\r\n\t                        // import foo, {bar}\r\n\t                        specifiers = specifiers.concat(this.parseNamedImports());\r\n\t                    }\r\n\t                    else {\r\n\t                        this.throwUnexpectedToken(this.lookahead);\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                this.throwUnexpectedToken(this.nextToken());\r\n\t            }\r\n\t            if (!this.matchContextualKeyword('from')) {\r\n\t                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;\r\n\t                this.throwError(message, this.lookahead.value);\r\n\t            }\r\n\t            this.nextToken();\r\n\t            src = this.parseModuleSpecifier();\r\n\t        }\r\n\t        this.consumeSemicolon();\r\n\t        return this.finalize(node, new Node.ImportDeclaration(specifiers, src));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-exports\r\n\t    Parser.prototype.parseExportSpecifier = function () {\r\n\t        var node = this.createNode();\r\n\t        var local = this.parseIdentifierName();\r\n\t        var exported = local;\r\n\t        if (this.matchContextualKeyword('as')) {\r\n\t            this.nextToken();\r\n\t            exported = this.parseIdentifierName();\r\n\t        }\r\n\t        return this.finalize(node, new Node.ExportSpecifier(local, exported));\r\n\t    };\r\n\t    Parser.prototype.parseExportDeclaration = function () {\r\n\t        if (this.context.inFunctionBody) {\r\n\t            this.throwError(messages_1.Messages.IllegalExportDeclaration);\r\n\t        }\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('export');\r\n\t        var exportDeclaration;\r\n\t        if (this.matchKeyword('default')) {\r\n\t            // export default ...\r\n\t            this.nextToken();\r\n\t            if (this.matchKeyword('function')) {\r\n\t                // export default function foo () {}\r\n\t                // export default function () {}\r\n\t                var declaration = this.parseFunctionDeclaration(true);\r\n\t                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\r\n\t            }\r\n\t            else if (this.matchKeyword('class')) {\r\n\t                // export default class foo {}\r\n\t                var declaration = this.parseClassDeclaration(true);\r\n\t                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\r\n\t            }\r\n\t            else if (this.matchContextualKeyword('async')) {\r\n\t                // export default async function f () {}\r\n\t                // export default async function () {}\r\n\t                // export default async x => x\r\n\t                var declaration = this.matchAsyncFunction() ? this.parseFunctionDeclaration(true) : this.parseAssignmentExpression();\r\n\t                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\r\n\t            }\r\n\t            else {\r\n\t                if (this.matchContextualKeyword('from')) {\r\n\t                    this.throwError(messages_1.Messages.UnexpectedToken, this.lookahead.value);\r\n\t                }\r\n\t                // export default {};\r\n\t                // export default [];\r\n\t                // export default (1 + 2);\r\n\t                var declaration = this.match('{') ? this.parseObjectInitializer() :\r\n\t                    this.match('[') ? this.parseArrayInitializer() : this.parseAssignmentExpression();\r\n\t                this.consumeSemicolon();\r\n\t                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\r\n\t            }\r\n\t        }\r\n\t        else if (this.match('*')) {\r\n\t            // export * from 'foo';\r\n\t            this.nextToken();\r\n\t            if (!this.matchContextualKeyword('from')) {\r\n\t                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;\r\n\t                this.throwError(message, this.lookahead.value);\r\n\t            }\r\n\t            this.nextToken();\r\n\t            var src = this.parseModuleSpecifier();\r\n\t            this.consumeSemicolon();\r\n\t            exportDeclaration = this.finalize(node, new Node.ExportAllDeclaration(src));\r\n\t        }\r\n\t        else if (this.lookahead.type === 4 /* Keyword */) {\r\n\t            // export var f = 1;\r\n\t            var declaration = void 0;\r\n\t            switch (this.lookahead.value) {\r\n\t                case 'let':\r\n\t                case 'const':\r\n\t                    declaration = this.parseLexicalDeclaration({ inFor: false });\r\n\t                    break;\r\n\t                case 'var':\r\n\t                case 'class':\r\n\t                case 'function':\r\n\t                    declaration = this.parseStatementListItem();\r\n\t                    break;\r\n\t                default:\r\n\t                    this.throwUnexpectedToken(this.lookahead);\r\n\t            }\r\n\t            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(declaration, [], null));\r\n\t        }\r\n\t        else if (this.matchAsyncFunction()) {\r\n\t            var declaration = this.parseFunctionDeclaration();\r\n\t            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(declaration, [], null));\r\n\t        }\r\n\t        else {\r\n\t            var specifiers = [];\r\n\t            var source = null;\r\n\t            var isExportFromIdentifier = false;\r\n\t            this.expect('{');\r\n\t            while (!this.match('}')) {\r\n\t                isExportFromIdentifier = isExportFromIdentifier || this.matchKeyword('default');\r\n\t                specifiers.push(this.parseExportSpecifier());\r\n\t                if (!this.match('}')) {\r\n\t                    this.expect(',');\r\n\t                }\r\n\t            }\r\n\t            this.expect('}');\r\n\t            if (this.matchContextualKeyword('from')) {\r\n\t                // export {default} from 'foo';\r\n\t                // export {foo} from 'foo';\r\n\t                this.nextToken();\r\n\t                source = this.parseModuleSpecifier();\r\n\t                this.consumeSemicolon();\r\n\t            }\r\n\t            else if (isExportFromIdentifier) {\r\n\t                // export {default}; // missing fromClause\r\n\t                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;\r\n\t                this.throwError(message, this.lookahead.value);\r\n\t            }\r\n\t            else {\r\n\t                // export {foo};\r\n\t                this.consumeSemicolon();\r\n\t            }\r\n\t            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(null, specifiers, source));\r\n\t        }\r\n\t        return exportDeclaration;\r\n\t    };\r\n\t    return Parser;\r\n\t}());\r\n\texports.Parser = Parser;\r\n\r\n\r\n/***/ },\r\n/* 9 */\r\n/***/ function(module, exports) {\r\n\r\n\t\"use strict\";\r\n\t// Ensure the condition is true, otherwise throw an error.\r\n\t// This is only to have a better contract semantic, i.e. another safety net\r\n\t// to catch a logic error. The condition shall be fulfilled in normal case.\r\n\t// Do NOT use this to enforce a certain condition on any user input.\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tfunction assert(condition, message) {\r\n\t    /* istanbul ignore if */\r\n\t    if (!condition) {\r\n\t        throw new Error('ASSERT: ' + message);\r\n\t    }\r\n\t}\r\n\texports.assert = assert;\r\n\r\n\r\n/***/ },\r\n/* 10 */\r\n/***/ function(module, exports) {\r\n\r\n\t\"use strict\";\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar ErrorHandler = /** @class */ (function () {\r\n\t    function ErrorHandler() {\r\n\t        this.errors = [];\r\n\t        this.tolerant = false;\r\n\t    }\r\n\t    ErrorHandler.prototype.recordError = function (error) {\r\n\t        this.errors.push(error);\r\n\t    };\r\n\t    ErrorHandler.prototype.tolerate = function (error) {\r\n\t        if (this.tolerant) {\r\n\t            this.recordError(error);\r\n\t        }\r\n\t        else {\r\n\t            throw error;\r\n\t        }\r\n\t    };\r\n\t    ErrorHandler.prototype.constructError = function (msg, column) {\r\n\t        var error = new Error(msg);\r\n\t        try {\r\n\t            throw error;\r\n\t        }\r\n\t        catch (base) {\r\n\t            /* istanbul ignore else */\r\n\t            if (Object.create && Object.defineProperty) {\r\n\t                error = Object.create(base);\r\n\t                Object.defineProperty(error, 'column', { value: column });\r\n\t            }\r\n\t        }\r\n\t        /* istanbul ignore next */\r\n\t        return error;\r\n\t    };\r\n\t    ErrorHandler.prototype.createError = function (index, line, col, description) {\r\n\t        var msg = 'Line ' + line + ': ' + description;\r\n\t        var error = this.constructError(msg, col);\r\n\t        error.index = index;\r\n\t        error.lineNumber = line;\r\n\t        error.description = description;\r\n\t        return error;\r\n\t    };\r\n\t    ErrorHandler.prototype.throwError = function (index, line, col, description) {\r\n\t        throw this.createError(index, line, col, description);\r\n\t    };\r\n\t    ErrorHandler.prototype.tolerateError = function (index, line, col, description) {\r\n\t        var error = this.createError(index, line, col, description);\r\n\t        if (this.tolerant) {\r\n\t            this.recordError(error);\r\n\t        }\r\n\t        else {\r\n\t            throw error;\r\n\t        }\r\n\t    };\r\n\t    return ErrorHandler;\r\n\t}());\r\n\texports.ErrorHandler = ErrorHandler;\r\n\r\n\r\n/***/ },\r\n/* 11 */\r\n/***/ function(module, exports) {\r\n\r\n\t\"use strict\";\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t// Error messages should be identical to V8.\r\n\texports.Messages = {\r\n\t    BadImportCallArity: 'Unexpected token',\r\n\t    BadGetterArity: 'Getter must not have any formal parameters',\r\n\t    BadSetterArity: 'Setter must have exactly one formal parameter',\r\n\t    BadSetterRestParameter: 'Setter function argument must not be a rest parameter',\r\n\t    ConstructorIsAsync: 'Class constructor may not be an async method',\r\n\t    ConstructorSpecialMethod: 'Class constructor may not be an accessor',\r\n\t    DeclarationMissingInitializer: 'Missing initializer in %0 declaration',\r\n\t    DefaultRestParameter: 'Unexpected token =',\r\n\t    DefaultRestProperty: 'Unexpected token =',\r\n\t    DuplicateBinding: 'Duplicate binding %0',\r\n\t    DuplicateConstructor: 'A class may only have one constructor',\r\n\t    DuplicateProtoProperty: 'Duplicate __proto__ fields are not allowed in object literals',\r\n\t    ForInOfLoopInitializer: '%0 loop variable declaration may not have an initializer',\r\n\t    GeneratorInLegacyContext: 'Generator declarations are not allowed in legacy contexts',\r\n\t    IllegalBreak: 'Illegal break statement',\r\n\t    IllegalContinue: 'Illegal continue statement',\r\n\t    IllegalExportDeclaration: 'Unexpected token',\r\n\t    IllegalImportDeclaration: 'Unexpected token',\r\n\t    IllegalLanguageModeDirective: 'Illegal \\'use strict\\' directive in function with non-simple parameter list',\r\n\t    IllegalReturn: 'Illegal return statement',\r\n\t    InvalidEscapedReservedWord: 'Keyword must not contain escaped characters',\r\n\t    InvalidHexEscapeSequence: 'Invalid hexadecimal escape sequence',\r\n\t    InvalidLHSInAssignment: 'Invalid left-hand side in assignment',\r\n\t    InvalidLHSInForIn: 'Invalid left-hand side in for-in',\r\n\t    InvalidLHSInForLoop: 'Invalid left-hand side in for-loop',\r\n\t    InvalidModuleSpecifier: 'Unexpected token',\r\n\t    InvalidRegExp: 'Invalid regular expression',\r\n\t    LetInLexicalBinding: 'let is disallowed as a lexically bound name',\r\n\t    MissingFromClause: 'Unexpected token',\r\n\t    MultipleDefaultsInSwitch: 'More than one default clause in switch statement',\r\n\t    NewlineAfterThrow: 'Illegal newline after throw',\r\n\t    NoAsAfterImportNamespace: 'Unexpected token',\r\n\t    NoCatchOrFinally: 'Missing catch or finally after try',\r\n\t    ParameterAfterRestParameter: 'Rest parameter must be last formal parameter',\r\n\t    PropertyAfterRestProperty: 'Unexpected token',\r\n\t    Redeclaration: '%0 \\'%1\\' has already been declared',\r\n\t    StaticPrototype: 'Classes may not have static property named prototype',\r\n\t    StrictCatchVariable: 'Catch variable may not be eval or arguments in strict mode',\r\n\t    StrictDelete: 'Delete of an unqualified identifier in strict mode.',\r\n\t    StrictFunction: 'In strict mode code, functions can only be declared at top level or inside a block',\r\n\t    StrictFunctionName: 'Function name may not be eval or arguments in strict mode',\r\n\t    StrictLHSAssignment: 'Assignment to eval or arguments is not allowed in strict mode',\r\n\t    StrictLHSPostfix: 'Postfix increment/decrement may not have eval or arguments operand in strict mode',\r\n\t    StrictLHSPrefix: 'Prefix increment/decrement may not have eval or arguments operand in strict mode',\r\n\t    StrictModeWith: 'Strict mode code may not include a with statement',\r\n\t    StrictOctalLiteral: 'Octal literals are not allowed in strict mode.',\r\n\t    StrictParamDupe: 'Strict mode function may not have duplicate parameter names',\r\n\t    StrictParamName: 'Parameter name eval or arguments is not allowed in strict mode',\r\n\t    StrictReservedWord: 'Use of future reserved word in strict mode',\r\n\t    StrictVarName: 'Variable name may not be eval or arguments in strict mode',\r\n\t    TemplateOctalLiteral: 'Octal literals are not allowed in template strings.',\r\n\t    UnexpectedEOS: 'Unexpected end of input',\r\n\t    UnexpectedIdentifier: 'Unexpected identifier',\r\n\t    UnexpectedNumber: 'Unexpected number',\r\n\t    UnexpectedReserved: 'Unexpected reserved word',\r\n\t    UnexpectedString: 'Unexpected string',\r\n\t    UnexpectedTemplate: 'Unexpected quasi %0',\r\n\t    UnexpectedToken: 'Unexpected token %0',\r\n\t    UnexpectedTokenIllegal: 'Unexpected token ILLEGAL',\r\n\t    UnknownLabel: 'Undefined label \\'%0\\'',\r\n\t    UnterminatedRegExp: 'Invalid regular expression: missing /'\r\n\t};\r\n\r\n\r\n/***/ },\r\n/* 12 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\"use strict\";\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar assert_1 = __webpack_require__(9);\r\n\tvar character_1 = __webpack_require__(4);\r\n\tvar messages_1 = __webpack_require__(11);\r\n\tfunction hexValue(ch) {\r\n\t    return '0123456789abcdef'.indexOf(ch.toLowerCase());\r\n\t}\r\n\tfunction octalValue(ch) {\r\n\t    return '01234567'.indexOf(ch);\r\n\t}\r\n\tvar Scanner = /** @class */ (function () {\r\n\t    function Scanner(code, handler) {\r\n\t        this.source = code;\r\n\t        this.errorHandler = handler;\r\n\t        this.trackComment = false;\r\n\t        this.isModule = false;\r\n\t        this.length = code.length;\r\n\t        this.index = 0;\r\n\t        this.lineNumber = (code.length > 0) ? 1 : 0;\r\n\t        this.lineStart = 0;\r\n\t        this.curlyStack = [];\r\n\t    }\r\n\t    Scanner.prototype.saveState = function () {\r\n\t        return {\r\n\t            index: this.index,\r\n\t            lineNumber: this.lineNumber,\r\n\t            lineStart: this.lineStart,\r\n\t            curlyStack: this.curlyStack.slice()\r\n\t        };\r\n\t    };\r\n\t    Scanner.prototype.restoreState = function (state) {\r\n\t        this.index = state.index;\r\n\t        this.lineNumber = state.lineNumber;\r\n\t        this.lineStart = state.lineStart;\r\n\t        this.curlyStack = state.curlyStack;\r\n\t    };\r\n\t    Scanner.prototype.eof = function () {\r\n\t        return this.index >= this.length;\r\n\t    };\r\n\t    Scanner.prototype.throwUnexpectedToken = function (message) {\r\n\t        if (message === void 0) { message = messages_1.Messages.UnexpectedTokenIllegal; }\r\n\t        return this.errorHandler.throwError(this.index, this.lineNumber, this.index - this.lineStart + 1, message);\r\n\t    };\r\n\t    Scanner.prototype.tolerateUnexpectedToken = function (message) {\r\n\t        if (message === void 0) { message = messages_1.Messages.UnexpectedTokenIllegal; }\r\n\t        this.errorHandler.tolerateError(this.index, this.lineNumber, this.index - this.lineStart + 1, message);\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-comments\r\n\t    Scanner.prototype.skipSingleLineComment = function (offset) {\r\n\t        var comments = [];\r\n\t        var start, loc;\r\n\t        if (this.trackComment) {\r\n\t            comments = [];\r\n\t            start = this.index - offset;\r\n\t            loc = {\r\n\t                start: {\r\n\t                    line: this.lineNumber,\r\n\t                    column: this.index - this.lineStart - offset\r\n\t                },\r\n\t                end: {}\r\n\t            };\r\n\t        }\r\n\t        while (!this.eof()) {\r\n\t            var ch = this.source.charCodeAt(this.index);\r\n\t            ++this.index;\r\n\t            if (character_1.Character.isLineTerminator(ch)) {\r\n\t                if (this.trackComment) {\r\n\t                    loc.end = {\r\n\t                        line: this.lineNumber,\r\n\t                        column: this.index - this.lineStart - 1\r\n\t                    };\r\n\t                    var entry = {\r\n\t                        multiLine: false,\r\n\t                        slice: [start + offset, this.index - 1],\r\n\t                        range: [start, this.index - 1],\r\n\t                        loc: loc\r\n\t                    };\r\n\t                    comments.push(entry);\r\n\t                }\r\n\t                if (ch === 13 && this.source.charCodeAt(this.index) === 10) {\r\n\t                    ++this.index;\r\n\t                }\r\n\t                ++this.lineNumber;\r\n\t                this.lineStart = this.index;\r\n\t                return comments;\r\n\t            }\r\n\t        }\r\n\t        if (this.trackComment) {\r\n\t            loc.end = {\r\n\t                line: this.lineNumber,\r\n\t                column: this.index - this.lineStart\r\n\t            };\r\n\t            var entry = {\r\n\t                multiLine: false,\r\n\t                slice: [start + offset, this.index],\r\n\t                range: [start, this.index],\r\n\t                loc: loc\r\n\t            };\r\n\t            comments.push(entry);\r\n\t        }\r\n\t        return comments;\r\n\t    };\r\n\t    Scanner.prototype.skipMultiLineComment = function () {\r\n\t        var comments = [];\r\n\t        var start, loc;\r\n\t        if (this.trackComment) {\r\n\t            comments = [];\r\n\t            start = this.index - 2;\r\n\t            loc = {\r\n\t                start: {\r\n\t                    line: this.lineNumber,\r\n\t                    column: this.index - this.lineStart - 2\r\n\t                },\r\n\t                end: {}\r\n\t            };\r\n\t        }\r\n\t        while (!this.eof()) {\r\n\t            var ch = this.source.charCodeAt(this.index);\r\n\t            if (character_1.Character.isLineTerminator(ch)) {\r\n\t                if (ch === 0x0D && this.source.charCodeAt(this.index + 1) === 0x0A) {\r\n\t                    ++this.index;\r\n\t                }\r\n\t                ++this.lineNumber;\r\n\t                ++this.index;\r\n\t                this.lineStart = this.index;\r\n\t            }\r\n\t            else if (ch === 0x2A) {\r\n\t                // Block comment ends with '*/'.\r\n\t                if (this.source.charCodeAt(this.index + 1) === 0x2F) {\r\n\t                    this.index += 2;\r\n\t                    if (this.trackComment) {\r\n\t                        loc.end = {\r\n\t                            line: this.lineNumber,\r\n\t                            column: this.index - this.lineStart\r\n\t                        };\r\n\t                        var entry = {\r\n\t                            multiLine: true,\r\n\t                            slice: [start + 2, this.index - 2],\r\n\t                            range: [start, this.index],\r\n\t                            loc: loc\r\n\t                        };\r\n\t                        comments.push(entry);\r\n\t                    }\r\n\t                    return comments;\r\n\t                }\r\n\t                ++this.index;\r\n\t            }\r\n\t            else {\r\n\t                ++this.index;\r\n\t            }\r\n\t        }\r\n\t        // Ran off the end of the file - the whole thing is a comment\r\n\t        if (this.trackComment) {\r\n\t            loc.end = {\r\n\t                line: this.lineNumber,\r\n\t                column: this.index - this.lineStart\r\n\t            };\r\n\t            var entry = {\r\n\t                multiLine: true,\r\n\t                slice: [start + 2, this.index],\r\n\t                range: [start, this.index],\r\n\t                loc: loc\r\n\t            };\r\n\t            comments.push(entry);\r\n\t        }\r\n\t        this.tolerateUnexpectedToken();\r\n\t        return comments;\r\n\t    };\r\n\t    Scanner.prototype.scanComments = function () {\r\n\t        var comments;\r\n\t        if (this.trackComment) {\r\n\t            comments = [];\r\n\t        }\r\n\t        var start = (this.index === 0);\r\n\t        while (!this.eof()) {\r\n\t            var ch = this.source.charCodeAt(this.index);\r\n\t            if (character_1.Character.isWhiteSpace(ch)) {\r\n\t                ++this.index;\r\n\t            }\r\n\t            else if (character_1.Character.isLineTerminator(ch)) {\r\n\t                ++this.index;\r\n\t                if (ch === 0x0D && this.source.charCodeAt(this.index) === 0x0A) {\r\n\t                    ++this.index;\r\n\t                }\r\n\t                ++this.lineNumber;\r\n\t                this.lineStart = this.index;\r\n\t                start = true;\r\n\t            }\r\n\t            else if (ch === 0x2F) { // U+002F is '/'\r\n\t                ch = this.source.charCodeAt(this.index + 1);\r\n\t                if (ch === 0x2F) {\r\n\t                    this.index += 2;\r\n\t                    var comment = this.skipSingleLineComment(2);\r\n\t                    if (this.trackComment) {\r\n\t                        comments = comments.concat(comment);\r\n\t                    }\r\n\t                    start = true;\r\n\t                }\r\n\t                else if (ch === 0x2A) { // U+002A is '*'\r\n\t                    this.index += 2;\r\n\t                    var comment = this.skipMultiLineComment();\r\n\t                    if (this.trackComment) {\r\n\t                        comments = comments.concat(comment);\r\n\t                    }\r\n\t                }\r\n\t                else {\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\t            else if (start && ch === 0x2D) { // U+002D is '-'\r\n\t                // U+003E is '>'\r\n\t                if ((this.source.charCodeAt(this.index + 1) === 0x2D) && (this.source.charCodeAt(this.index + 2) === 0x3E)) {\r\n\t                    // '-->' is a single-line comment\r\n\t                    this.index += 3;\r\n\t                    var comment = this.skipSingleLineComment(3);\r\n\t                    if (this.trackComment) {\r\n\t                        comments = comments.concat(comment);\r\n\t                    }\r\n\t                }\r\n\t                else {\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\t            else if (ch === 0x3C && !this.isModule) { // U+003C is '<'\r\n\t                if (this.source.slice(this.index + 1, this.index + 4) === '!--') {\r\n\t                    this.index += 4; // `<!--`\r\n\t                    var comment = this.skipSingleLineComment(4);\r\n\t                    if (this.trackComment) {\r\n\t                        comments = comments.concat(comment);\r\n\t                    }\r\n\t                }\r\n\t                else {\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                break;\r\n\t            }\r\n\t        }\r\n\t        return comments;\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-future-reserved-words\r\n\t    Scanner.prototype.isFutureReservedWord = function (id) {\r\n\t        switch (id) {\r\n\t            case 'enum':\r\n\t            case 'export':\r\n\t            case 'import':\r\n\t            case 'super':\r\n\t                return true;\r\n\t            default:\r\n\t                return false;\r\n\t        }\r\n\t    };\r\n\t    Scanner.prototype.isStrictModeReservedWord = function (id) {\r\n\t        switch (id) {\r\n\t            case 'implements':\r\n\t            case 'interface':\r\n\t            case 'package':\r\n\t            case 'private':\r\n\t            case 'protected':\r\n\t            case 'public':\r\n\t            case 'static':\r\n\t            case 'yield':\r\n\t            case 'let':\r\n\t                return true;\r\n\t            default:\r\n\t                return false;\r\n\t        }\r\n\t    };\r\n\t    Scanner.prototype.isRestrictedWord = function (id) {\r\n\t        return id === 'eval' || id === 'arguments';\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-keywords\r\n\t    Scanner.prototype.isKeyword = function (id) {\r\n\t        switch (id.length) {\r\n\t            case 2:\r\n\t                return (id === 'if') || (id === 'in') || (id === 'do');\r\n\t            case 3:\r\n\t                return (id === 'var') || (id === 'for') || (id === 'new') ||\r\n\t                    (id === 'try') || (id === 'let');\r\n\t            case 4:\r\n\t                return (id === 'this') || (id === 'else') || (id === 'case') ||\r\n\t                    (id === 'void') || (id === 'with') || (id === 'enum');\r\n\t            case 5:\r\n\t                return (id === 'while') || (id === 'break') || (id === 'catch') ||\r\n\t                    (id === 'throw') || (id === 'const') || (id === 'yield') ||\r\n\t                    (id === 'class') || (id === 'super');\r\n\t            case 6:\r\n\t                return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\r\n\t                    (id === 'switch') || (id === 'export') || (id === 'import');\r\n\t            case 7:\r\n\t                return (id === 'default') || (id === 'finally') || (id === 'extends');\r\n\t            case 8:\r\n\t                return (id === 'function') || (id === 'continue') || (id === 'debugger');\r\n\t            case 10:\r\n\t                return (id === 'instanceof');\r\n\t            default:\r\n\t                return false;\r\n\t        }\r\n\t    };\r\n\t    Scanner.prototype.codePointAt = function (i) {\r\n\t        var cp = this.source.charCodeAt(i);\r\n\t        if (cp >= 0xD800 && cp <= 0xDBFF) {\r\n\t            var second = this.source.charCodeAt(i + 1);\r\n\t            if (second >= 0xDC00 && second <= 0xDFFF) {\r\n\t                var first = cp;\r\n\t                cp = (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\r\n\t            }\r\n\t        }\r\n\t        return cp;\r\n\t    };\r\n\t    Scanner.prototype.scanHexEscape = function (prefix) {\r\n\t        var len = (prefix === 'u') ? 4 : 2;\r\n\t        var code = 0;\r\n\t        for (var i = 0; i < len; ++i) {\r\n\t            if (!this.eof() && character_1.Character.isHexDigit(this.source.charCodeAt(this.index))) {\r\n\t                code = code * 16 + hexValue(this.source[this.index++]);\r\n\t            }\r\n\t            else {\r\n\t                return null;\r\n\t            }\r\n\t        }\r\n\t        return String.fromCharCode(code);\r\n\t    };\r\n\t    Scanner.prototype.scanUnicodeCodePointEscape = function () {\r\n\t        var ch = this.source[this.index];\r\n\t        var code = 0;\r\n\t        // At least, one hex digit is required.\r\n\t        if (ch === '}') {\r\n\t            this.throwUnexpectedToken();\r\n\t        }\r\n\t        while (!this.eof()) {\r\n\t            ch = this.source[this.index++];\r\n\t            if (!character_1.Character.isHexDigit(ch.charCodeAt(0))) {\r\n\t                break;\r\n\t            }\r\n\t            code = code * 16 + hexValue(ch);\r\n\t        }\r\n\t        if (code > 0x10FFFF || ch !== '}') {\r\n\t            this.throwUnexpectedToken();\r\n\t        }\r\n\t        return character_1.Character.fromCodePoint(code);\r\n\t    };\r\n\t    Scanner.prototype.getIdentifier = function () {\r\n\t        var start = this.index++;\r\n\t        while (!this.eof()) {\r\n\t            var ch = this.source.charCodeAt(this.index);\r\n\t            if (ch === 0x5C) {\r\n\t                // Blackslash (U+005C) marks Unicode escape sequence.\r\n\t                this.index = start;\r\n\t                return this.getComplexIdentifier();\r\n\t            }\r\n\t            else if (ch >= 0xD800 && ch < 0xDFFF) {\r\n\t                // Need to handle surrogate pairs.\r\n\t                this.index = start;\r\n\t                return this.getComplexIdentifier();\r\n\t            }\r\n\t            if (character_1.Character.isIdentifierPart(ch)) {\r\n\t                ++this.index;\r\n\t            }\r\n\t            else {\r\n\t                break;\r\n\t            }\r\n\t        }\r\n\t        return this.source.slice(start, this.index);\r\n\t    };\r\n\t    Scanner.prototype.getComplexIdentifier = function () {\r\n\t        var cp = this.codePointAt(this.index);\r\n\t        var id = character_1.Character.fromCodePoint(cp);\r\n\t        this.index += id.length;\r\n\t        // '\\u' (U+005C, U+0075) denotes an escaped character.\r\n\t        var ch;\r\n\t        if (cp === 0x5C) {\r\n\t            if (this.source.charCodeAt(this.index) !== 0x75) {\r\n\t                this.throwUnexpectedToken();\r\n\t            }\r\n\t            ++this.index;\r\n\t            if (this.source[this.index] === '{') {\r\n\t                ++this.index;\r\n\t                ch = this.scanUnicodeCodePointEscape();\r\n\t            }\r\n\t            else {\r\n\t                ch = this.scanHexEscape('u');\r\n\t                if (ch === null || ch === '\\\\' || !character_1.Character.isIdentifierStart(ch.charCodeAt(0))) {\r\n\t                    this.throwUnexpectedToken();\r\n\t                }\r\n\t            }\r\n\t            id = ch;\r\n\t        }\r\n\t        while (!this.eof()) {\r\n\t            cp = this.codePointAt(this.index);\r\n\t            if (!character_1.Character.isIdentifierPart(cp)) {\r\n\t                break;\r\n\t            }\r\n\t            ch = character_1.Character.fromCodePoint(cp);\r\n\t            id += ch;\r\n\t            this.index += ch.length;\r\n\t            // '\\u' (U+005C, U+0075) denotes an escaped character.\r\n\t            if (cp === 0x5C) {\r\n\t                id = id.substr(0, id.length - 1);\r\n\t                if (this.source.charCodeAt(this.index) !== 0x75) {\r\n\t                    this.throwUnexpectedToken();\r\n\t                }\r\n\t                ++this.index;\r\n\t                if (this.source[this.index] === '{') {\r\n\t                    ++this.index;\r\n\t                    ch = this.scanUnicodeCodePointEscape();\r\n\t                }\r\n\t                else {\r\n\t                    ch = this.scanHexEscape('u');\r\n\t                    if (ch === null || ch === '\\\\' || !character_1.Character.isIdentifierPart(ch.charCodeAt(0))) {\r\n\t                        this.throwUnexpectedToken();\r\n\t                    }\r\n\t                }\r\n\t                id += ch;\r\n\t            }\r\n\t        }\r\n\t        return id;\r\n\t    };\r\n\t    Scanner.prototype.octalToDecimal = function (ch) {\r\n\t        // \\0 is not octal escape sequence\r\n\t        var octal = (ch !== '0');\r\n\t        var code = octalValue(ch);\r\n\t        if (!this.eof() && character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {\r\n\t            octal = true;\r\n\t            code = code * 8 + octalValue(this.source[this.index++]);\r\n\t            // 3 digits are only allowed when string starts\r\n\t            // with 0, 1, 2, 3\r\n\t            if ('0123'.indexOf(ch) >= 0 && !this.eof() && character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {\r\n\t                code = code * 8 + octalValue(this.source[this.index++]);\r\n\t            }\r\n\t        }\r\n\t        return {\r\n\t            code: code,\r\n\t            octal: octal\r\n\t        };\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-names-and-keywords\r\n\t    Scanner.prototype.scanIdentifier = function () {\r\n\t        var type;\r\n\t        var start = this.index;\r\n\t        // Backslash (U+005C) starts an escaped character.\r\n\t        var id = (this.source.charCodeAt(start) === 0x5C) ? this.getComplexIdentifier() : this.getIdentifier();\r\n\t        // There is no keyword or literal with only one character.\r\n\t        // Thus, it must be an identifier.\r\n\t        if (id.length === 1) {\r\n\t            type = 3 /* Identifier */;\r\n\t        }\r\n\t        else if (this.isKeyword(id)) {\r\n\t            type = 4 /* Keyword */;\r\n\t        }\r\n\t        else if (id === 'null') {\r\n\t            type = 5 /* NullLiteral */;\r\n\t        }\r\n\t        else if (id === 'true' || id === 'false') {\r\n\t            type = 1 /* BooleanLiteral */;\r\n\t        }\r\n\t        else {\r\n\t            type = 3 /* Identifier */;\r\n\t        }\r\n\t        if (type !== 3 /* Identifier */ && (start + id.length !== this.index)) {\r\n\t            var restore = this.index;\r\n\t            this.index = start;\r\n\t            this.tolerateUnexpectedToken(messages_1.Messages.InvalidEscapedReservedWord);\r\n\t            this.index = restore;\r\n\t        }\r\n\t        return {\r\n\t            type: type,\r\n\t            value: id,\r\n\t            lineNumber: this.lineNumber,\r\n\t            lineStart: this.lineStart,\r\n\t            start: start,\r\n\t            end: this.index\r\n\t        };\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-punctuators\r\n\t    Scanner.prototype.scanPunctuator = function () {\r\n\t        var start = this.index;\r\n\t        // Check for most common single-character punctuators.\r\n\t        var str = this.source[this.index];\r\n\t        switch (str) {\r\n\t            case '(':\r\n\t            case '{':\r\n\t                if (str === '{') {\r\n\t                    this.curlyStack.push('{');\r\n\t                }\r\n\t                ++this.index;\r\n\t                break;\r\n\t            case '.':\r\n\t                ++this.index;\r\n\t                if (this.source[this.index] === '.' && this.source[this.index + 1] === '.') {\r\n\t                    // Spread operator: ...\r\n\t                    this.index += 2;\r\n\t                    str = '...';\r\n\t                }\r\n\t                break;\r\n\t            case '}':\r\n\t                ++this.index;\r\n\t                this.curlyStack.pop();\r\n\t                break;\r\n\t            case ')':\r\n\t            case ';':\r\n\t            case ',':\r\n\t            case '[':\r\n\t            case ']':\r\n\t            case ':':\r\n\t            case '?':\r\n\t            case '~':\r\n\t                ++this.index;\r\n\t                break;\r\n\t            default:\r\n\t                // 4-character punctuator.\r\n\t                str = this.source.substr(this.index, 4);\r\n\t                if (str === '>>>=') {\r\n\t                    this.index += 4;\r\n\t                }\r\n\t                else {\r\n\t                    // 3-character punctuators.\r\n\t                    str = str.substr(0, 3);\r\n\t                    if (str === '===' || str === '!==' || str === '>>>' ||\r\n\t                        str === '<<=' || str === '>>=' || str === '**=') {\r\n\t                        this.index += 3;\r\n\t                    }\r\n\t                    else {\r\n\t                        // 2-character punctuators.\r\n\t                        str = str.substr(0, 2);\r\n\t                        if (str === '&&' || str === '||' || str === '==' || str === '!=' ||\r\n\t                            str === '+=' || str === '-=' || str === '*=' || str === '/=' ||\r\n\t                            str === '++' || str === '--' || str === '<<' || str === '>>' ||\r\n\t                            str === '&=' || str === '|=' || str === '^=' || str === '%=' ||\r\n\t                            str === '<=' || str === '>=' || str === '=>' || str === '**') {\r\n\t                            this.index += 2;\r\n\t                        }\r\n\t                        else {\r\n\t                            // 1-character punctuators.\r\n\t                            str = this.source[this.index];\r\n\t                            if ('<>=!+-*%&|^/'.indexOf(str) >= 0) {\r\n\t                                ++this.index;\r\n\t                            }\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t        }\r\n\t        if (this.index === start) {\r\n\t            this.throwUnexpectedToken();\r\n\t        }\r\n\t        return {\r\n\t            type: 7 /* Punctuator */,\r\n\t            value: str,\r\n\t            lineNumber: this.lineNumber,\r\n\t            lineStart: this.lineStart,\r\n\t            start: start,\r\n\t            end: this.index\r\n\t        };\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-literals-numeric-literals\r\n\t    Scanner.prototype.scanHexLiteral = function (start) {\r\n\t        var num = '';\r\n\t        while (!this.eof()) {\r\n\t            if (!character_1.Character.isHexDigit(this.source.charCodeAt(this.index))) {\r\n\t                break;\r\n\t            }\r\n\t            num += this.source[this.index++];\r\n\t        }\r\n\t        if (num.length === 0) {\r\n\t            this.throwUnexpectedToken();\r\n\t        }\r\n\t        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index))) {\r\n\t            this.throwUnexpectedToken();\r\n\t        }\r\n\t        return {\r\n\t            type: 6 /* NumericLiteral */,\r\n\t            value: parseInt('0x' + num, 16),\r\n\t            lineNumber: this.lineNumber,\r\n\t            lineStart: this.lineStart,\r\n\t            start: start,\r\n\t            end: this.index\r\n\t        };\r\n\t    };\r\n\t    Scanner.prototype.scanBinaryLiteral = function (start) {\r\n\t        var num = '';\r\n\t        var ch;\r\n\t        while (!this.eof()) {\r\n\t            ch = this.source[this.index];\r\n\t            if (ch !== '0' && ch !== '1') {\r\n\t                break;\r\n\t            }\r\n\t            num += this.source[this.index++];\r\n\t        }\r\n\t        if (num.length === 0) {\r\n\t            // only 0b or 0B\r\n\t            this.throwUnexpectedToken();\r\n\t        }\r\n\t        if (!this.eof()) {\r\n\t            ch = this.source.charCodeAt(this.index);\r\n\t            /* istanbul ignore else */\r\n\t            if (character_1.Character.isIdentifierStart(ch) || character_1.Character.isDecimalDigit(ch)) {\r\n\t                this.throwUnexpectedToken();\r\n\t            }\r\n\t        }\r\n\t        return {\r\n\t            type: 6 /* NumericLiteral */,\r\n\t            value: parseInt(num, 2),\r\n\t            lineNumber: this.lineNumber,\r\n\t            lineStart: this.lineStart,\r\n\t            start: start,\r\n\t            end: this.index\r\n\t        };\r\n\t    };\r\n\t    Scanner.prototype.scanOctalLiteral = function (prefix, start) {\r\n\t        var num = '';\r\n\t        var octal = false;\r\n\t        if (character_1.Character.isOctalDigit(prefix.charCodeAt(0))) {\r\n\t            octal = true;\r\n\t            num = '0' + this.source[this.index++];\r\n\t        }\r\n\t        else {\r\n\t            ++this.index;\r\n\t        }\r\n\t        while (!this.eof()) {\r\n\t            if (!character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {\r\n\t                break;\r\n\t            }\r\n\t            num += this.source[this.index++];\r\n\t        }\r\n\t        if (!octal && num.length === 0) {\r\n\t            // only 0o or 0O\r\n\t            this.throwUnexpectedToken();\r\n\t        }\r\n\t        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index)) || character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\r\n\t            this.throwUnexpectedToken();\r\n\t        }\r\n\t        return {\r\n\t            type: 6 /* NumericLiteral */,\r\n\t            value: parseInt(num, 8),\r\n\t            octal: octal,\r\n\t            lineNumber: this.lineNumber,\r\n\t            lineStart: this.lineStart,\r\n\t            start: start,\r\n\t            end: this.index\r\n\t        };\r\n\t    };\r\n\t    Scanner.prototype.isImplicitOctalLiteral = function () {\r\n\t        // Implicit octal, unless there is a non-octal digit.\r\n\t        // (Annex B.1.1 on Numeric Literals)\r\n\t        for (var i = this.index + 1; i < this.length; ++i) {\r\n\t            var ch = this.source[i];\r\n\t            if (ch === '8' || ch === '9') {\r\n\t                return false;\r\n\t            }\r\n\t            if (!character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\r\n\t                return true;\r\n\t            }\r\n\t        }\r\n\t        return true;\r\n\t    };\r\n\t    Scanner.prototype.scanNumericLiteral = function () {\r\n\t        var start = this.index;\r\n\t        var ch = this.source[start];\r\n\t        assert_1.assert(character_1.Character.isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'), 'Numeric literal must start with a decimal digit or a decimal point');\r\n\t        var num = '';\r\n\t        if (ch !== '.') {\r\n\t            num = this.source[this.index++];\r\n\t            ch = this.source[this.index];\r\n\t            // Hex number starts with '0x'.\r\n\t            // Octal number starts with '0'.\r\n\t            // Octal number in ES6 starts with '0o'.\r\n\t            // Binary number in ES6 starts with '0b'.\r\n\t            if (num === '0') {\r\n\t                if (ch === 'x' || ch === 'X') {\r\n\t                    ++this.index;\r\n\t                    return this.scanHexLiteral(start);\r\n\t                }\r\n\t                if (ch === 'b' || ch === 'B') {\r\n\t                    ++this.index;\r\n\t                    return this.scanBinaryLiteral(start);\r\n\t                }\r\n\t                if (ch === 'o' || ch === 'O') {\r\n\t                    return this.scanOctalLiteral(ch, start);\r\n\t                }\r\n\t                if (ch && character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\r\n\t                    if (this.isImplicitOctalLiteral()) {\r\n\t                        return this.scanOctalLiteral(ch, start);\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\r\n\t                num += this.source[this.index++];\r\n\t            }\r\n\t            ch = this.source[this.index];\r\n\t        }\r\n\t        if (ch === '.') {\r\n\t            num += this.source[this.index++];\r\n\t            while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\r\n\t                num += this.source[this.index++];\r\n\t            }\r\n\t            ch = this.source[this.index];\r\n\t        }\r\n\t        if (ch === 'e' || ch === 'E') {\r\n\t            num += this.source[this.index++];\r\n\t            ch = this.source[this.index];\r\n\t            if (ch === '+' || ch === '-') {\r\n\t                num += this.source[this.index++];\r\n\t            }\r\n\t            if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\r\n\t                while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\r\n\t                    num += this.source[this.index++];\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                this.throwUnexpectedToken();\r\n\t            }\r\n\t        }\r\n\t        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index))) {\r\n\t            this.throwUnexpectedToken();\r\n\t        }\r\n\t        return {\r\n\t            type: 6 /* NumericLiteral */,\r\n\t            value: parseFloat(num),\r\n\t            lineNumber: this.lineNumber,\r\n\t            lineStart: this.lineStart,\r\n\t            start: start,\r\n\t            end: this.index\r\n\t        };\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-literals-string-literals\r\n\t    Scanner.prototype.scanStringLiteral = function () {\r\n\t        var start = this.index;\r\n\t        var quote = this.source[start];\r\n\t        assert_1.assert((quote === '\\'' || quote === '\"'), 'String literal must starts with a quote');\r\n\t        ++this.index;\r\n\t        var octal = false;\r\n\t        var str = '';\r\n\t        while (!this.eof()) {\r\n\t            var ch = this.source[this.index++];\r\n\t            if (ch === quote) {\r\n\t                quote = '';\r\n\t                break;\r\n\t            }\r\n\t            else if (ch === '\\\\') {\r\n\t                ch = this.source[this.index++];\r\n\t                if (!ch || !character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\r\n\t                    switch (ch) {\r\n\t                        case 'u':\r\n\t                            if (this.source[this.index] === '{') {\r\n\t                                ++this.index;\r\n\t                                str += this.scanUnicodeCodePointEscape();\r\n\t                            }\r\n\t                            else {\r\n\t                                var unescapedChar = this.scanHexEscape(ch);\r\n\t                                if (unescapedChar === null) {\r\n\t                                    this.throwUnexpectedToken();\r\n\t                                }\r\n\t                                str += unescapedChar;\r\n\t                            }\r\n\t                            break;\r\n\t                        case 'x':\r\n\t                            var unescaped = this.scanHexEscape(ch);\r\n\t                            if (unescaped === null) {\r\n\t                                this.throwUnexpectedToken(messages_1.Messages.InvalidHexEscapeSequence);\r\n\t                            }\r\n\t                            str += unescaped;\r\n\t                            break;\r\n\t                        case 'n':\r\n\t                            str += '\\n';\r\n\t                            break;\r\n\t                        case 'r':\r\n\t                            str += '\\r';\r\n\t                            break;\r\n\t                        case 't':\r\n\t                            str += '\\t';\r\n\t                            break;\r\n\t                        case 'b':\r\n\t                            str += '\\b';\r\n\t                            break;\r\n\t                        case 'f':\r\n\t                            str += '\\f';\r\n\t                            break;\r\n\t                        case 'v':\r\n\t                            str += '\\x0B';\r\n\t                            break;\r\n\t                        case '8':\r\n\t                        case '9':\r\n\t                            str += ch;\r\n\t                            this.tolerateUnexpectedToken();\r\n\t                            break;\r\n\t                        default:\r\n\t                            if (ch && character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\r\n\t                                var octToDec = this.octalToDecimal(ch);\r\n\t                                octal = octToDec.octal || octal;\r\n\t                                str += String.fromCharCode(octToDec.code);\r\n\t                            }\r\n\t                            else {\r\n\t                                str += ch;\r\n\t                            }\r\n\t                            break;\r\n\t                    }\r\n\t                }\r\n\t                else {\r\n\t                    ++this.lineNumber;\r\n\t                    if (ch === '\\r' && this.source[this.index] === '\\n') {\r\n\t                        ++this.index;\r\n\t                    }\r\n\t                    this.lineStart = this.index;\r\n\t                }\r\n\t            }\r\n\t            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\r\n\t                break;\r\n\t            }\r\n\t            else {\r\n\t                str += ch;\r\n\t            }\r\n\t        }\r\n\t        if (quote !== '') {\r\n\t            this.index = start;\r\n\t            this.throwUnexpectedToken();\r\n\t        }\r\n\t        return {\r\n\t            type: 8 /* StringLiteral */,\r\n\t            value: str,\r\n\t            octal: octal,\r\n\t            lineNumber: this.lineNumber,\r\n\t            lineStart: this.lineStart,\r\n\t            start: start,\r\n\t            end: this.index\r\n\t        };\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-template-literal-lexical-components\r\n\t    Scanner.prototype.scanTemplate = function () {\r\n\t        var cooked = '';\r\n\t        var terminated = false;\r\n\t        var start = this.index;\r\n\t        var head = (this.source[start] === '`');\r\n\t        var tail = false;\r\n\t        var rawOffset = 2;\r\n\t        ++this.index;\r\n\t        while (!this.eof()) {\r\n\t            var ch = this.source[this.index++];\r\n\t            if (ch === '`') {\r\n\t                rawOffset = 1;\r\n\t                tail = true;\r\n\t                terminated = true;\r\n\t                break;\r\n\t            }\r\n\t            else if (ch === '$') {\r\n\t                if (this.source[this.index] === '{') {\r\n\t                    this.curlyStack.push('${');\r\n\t                    ++this.index;\r\n\t                    terminated = true;\r\n\t                    break;\r\n\t                }\r\n\t                cooked += ch;\r\n\t            }\r\n\t            else if (ch === '\\\\') {\r\n\t                ch = this.source[this.index++];\r\n\t                if (!character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\r\n\t                    switch (ch) {\r\n\t                        case 'n':\r\n\t                            cooked += '\\n';\r\n\t                            break;\r\n\t                        case 'r':\r\n\t                            cooked += '\\r';\r\n\t                            break;\r\n\t                        case 't':\r\n\t                            cooked += '\\t';\r\n\t                            break;\r\n\t                        case 'u':\r\n\t                            if (this.source[this.index] === '{') {\r\n\t                                ++this.index;\r\n\t                                cooked += this.scanUnicodeCodePointEscape();\r\n\t                            }\r\n\t                            else {\r\n\t                                var restore = this.index;\r\n\t                                var unescapedChar = this.scanHexEscape(ch);\r\n\t                                if (unescapedChar !== null) {\r\n\t                                    cooked += unescapedChar;\r\n\t                                }\r\n\t                                else {\r\n\t                                    this.index = restore;\r\n\t                                    cooked += ch;\r\n\t                                }\r\n\t                            }\r\n\t                            break;\r\n\t                        case 'x':\r\n\t                            var unescaped = this.scanHexEscape(ch);\r\n\t                            if (unescaped === null) {\r\n\t                                this.throwUnexpectedToken(messages_1.Messages.InvalidHexEscapeSequence);\r\n\t                            }\r\n\t                            cooked += unescaped;\r\n\t                            break;\r\n\t                        case 'b':\r\n\t                            cooked += '\\b';\r\n\t                            break;\r\n\t                        case 'f':\r\n\t                            cooked += '\\f';\r\n\t                            break;\r\n\t                        case 'v':\r\n\t                            cooked += '\\v';\r\n\t                            break;\r\n\t                        default:\r\n\t                            if (ch === '0') {\r\n\t                                if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\r\n\t                                    // Illegal: \\01 \\02 and so on\r\n\t                                    this.throwUnexpectedToken(messages_1.Messages.TemplateOctalLiteral);\r\n\t                                }\r\n\t                                cooked += '\\0';\r\n\t                            }\r\n\t                            else if (character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\r\n\t                                // Illegal: \\1 \\2\r\n\t                                this.throwUnexpectedToken(messages_1.Messages.TemplateOctalLiteral);\r\n\t                            }\r\n\t                            else {\r\n\t                                cooked += ch;\r\n\t                            }\r\n\t                            break;\r\n\t                    }\r\n\t                }\r\n\t                else {\r\n\t                    ++this.lineNumber;\r\n\t                    if (ch === '\\r' && this.source[this.index] === '\\n') {\r\n\t                        ++this.index;\r\n\t                    }\r\n\t                    this.lineStart = this.index;\r\n\t                }\r\n\t            }\r\n\t            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\r\n\t                ++this.lineNumber;\r\n\t                if (ch === '\\r' && this.source[this.index] === '\\n') {\r\n\t                    ++this.index;\r\n\t                }\r\n\t                this.lineStart = this.index;\r\n\t                cooked += '\\n';\r\n\t            }\r\n\t            else {\r\n\t                cooked += ch;\r\n\t            }\r\n\t        }\r\n\t        if (!terminated) {\r\n\t            this.throwUnexpectedToken();\r\n\t        }\r\n\t        if (!head) {\r\n\t            this.curlyStack.pop();\r\n\t        }\r\n\t        return {\r\n\t            type: 10 /* Template */,\r\n\t            value: this.source.slice(start + 1, this.index - rawOffset),\r\n\t            cooked: cooked,\r\n\t            head: head,\r\n\t            tail: tail,\r\n\t            lineNumber: this.lineNumber,\r\n\t            lineStart: this.lineStart,\r\n\t            start: start,\r\n\t            end: this.index\r\n\t        };\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-literals-regular-expression-literals\r\n\t    Scanner.prototype.testRegExp = function (pattern, flags) {\r\n\t        var _this = this;\r\n\t        // The BMP character to use as a replacement for astral symbols when\r\n\t        // translating an ES6 \"u\"-flagged pattern to an ES5-compatible\r\n\t        // approximation.\r\n\t        // Note: replacing with '\\uFFFF' enables false positives in unlikely\r\n\t        // scenarios. For example, `[\\u{1044f}-\\u{10440}]` is an invalid\r\n\t        // pattern that would not be detected by this substitution.\r\n\t        var astralSubstitute = '\\uFFFF';\r\n\t        var tmp = pattern;\r\n\t        if (flags.indexOf('u') >= 0) {\r\n\t            tmp = tmp\r\n\t                // Replace every Unicode escape sequence with the equivalent\r\n\t                // BMP character or a constant ASCII code point in the case of\r\n\t                // astral symbols. (See the above note on `astralSubstitute`\r\n\t                // for more information.)\r\n\t                .replace(/\\\\u\\{([0-9a-fA-F]+)\\}|\\\\u([a-fA-F0-9]{4})/g, function ($0, $1, $2) {\r\n\t                var codePoint = parseInt($1 || $2, 16);\r\n\t                if (codePoint > 0x10FFFF) {\r\n\t                    _this.throwUnexpectedToken(messages_1.Messages.InvalidRegExp);\r\n\t                }\r\n\t                if (codePoint <= 0xFFFF) {\r\n\t                    return String.fromCharCode(codePoint);\r\n\t                }\r\n\t                return astralSubstitute;\r\n\t            })\r\n\t                // Replace each paired surrogate with a single ASCII symbol to\r\n\t                // avoid throwing on regular expressions that are only valid in\r\n\t                // combination with the \"u\" flag.\r\n\t                .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, astralSubstitute);\r\n\t        }\r\n\t        // First, detect invalid regular expressions.\r\n\t        try {\r\n\t            RegExp(tmp);\r\n\t        }\r\n\t        catch (e) {\r\n\t            this.throwUnexpectedToken(messages_1.Messages.InvalidRegExp);\r\n\t        }\r\n\t        // Return a regular expression object for this pattern-flag pair, or\r\n\t        // `null` in case the current environment doesn't support the flags it\r\n\t        // uses.\r\n\t        try {\r\n\t            return new RegExp(pattern, flags);\r\n\t        }\r\n\t        catch (exception) {\r\n\t            /* istanbul ignore next */\r\n\t            return null;\r\n\t        }\r\n\t    };\r\n\t    Scanner.prototype.scanRegExpBody = function () {\r\n\t        var ch = this.source[this.index];\r\n\t        assert_1.assert(ch === '/', 'Regular expression literal must start with a slash');\r\n\t        var str = this.source[this.index++];\r\n\t        var classMarker = false;\r\n\t        var terminated = false;\r\n\t        while (!this.eof()) {\r\n\t            ch = this.source[this.index++];\r\n\t            str += ch;\r\n\t            if (ch === '\\\\') {\r\n\t                ch = this.source[this.index++];\r\n\t                // https://tc39.github.io/ecma262/#sec-literals-regular-expression-literals\r\n\t                if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\r\n\t                    this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);\r\n\t                }\r\n\t                str += ch;\r\n\t            }\r\n\t            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\r\n\t                this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);\r\n\t            }\r\n\t            else if (classMarker) {\r\n\t                if (ch === ']') {\r\n\t                    classMarker = false;\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                if (ch === '/') {\r\n\t                    terminated = true;\r\n\t                    break;\r\n\t                }\r\n\t                else if (ch === '[') {\r\n\t                    classMarker = true;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        if (!terminated) {\r\n\t            this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);\r\n\t        }\r\n\t        // Exclude leading and trailing slash.\r\n\t        return str.substr(1, str.length - 2);\r\n\t    };\r\n\t    Scanner.prototype.scanRegExpFlags = function () {\r\n\t        var str = '';\r\n\t        var flags = '';\r\n\t        while (!this.eof()) {\r\n\t            var ch = this.source[this.index];\r\n\t            if (!character_1.Character.isIdentifierPart(ch.charCodeAt(0))) {\r\n\t                break;\r\n\t            }\r\n\t            ++this.index;\r\n\t            if (ch === '\\\\' && !this.eof()) {\r\n\t                ch = this.source[this.index];\r\n\t                if (ch === 'u') {\r\n\t                    ++this.index;\r\n\t                    var restore = this.index;\r\n\t                    var char = this.scanHexEscape('u');\r\n\t                    if (char !== null) {\r\n\t                        flags += char;\r\n\t                        for (str += '\\\\u'; restore < this.index; ++restore) {\r\n\t                            str += this.source[restore];\r\n\t                        }\r\n\t                    }\r\n\t                    else {\r\n\t                        this.index = restore;\r\n\t                        flags += 'u';\r\n\t                        str += '\\\\u';\r\n\t                    }\r\n\t                    this.tolerateUnexpectedToken();\r\n\t                }\r\n\t                else {\r\n\t                    str += '\\\\';\r\n\t                    this.tolerateUnexpectedToken();\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                flags += ch;\r\n\t                str += ch;\r\n\t            }\r\n\t        }\r\n\t        return flags;\r\n\t    };\r\n\t    Scanner.prototype.scanRegExp = function () {\r\n\t        var start = this.index;\r\n\t        var pattern = this.scanRegExpBody();\r\n\t        var flags = this.scanRegExpFlags();\r\n\t        var value = this.testRegExp(pattern, flags);\r\n\t        return {\r\n\t            type: 9 /* RegularExpression */,\r\n\t            value: '',\r\n\t            pattern: pattern,\r\n\t            flags: flags,\r\n\t            regex: value,\r\n\t            lineNumber: this.lineNumber,\r\n\t            lineStart: this.lineStart,\r\n\t            start: start,\r\n\t            end: this.index\r\n\t        };\r\n\t    };\r\n\t    Scanner.prototype.lex = function () {\r\n\t        if (this.eof()) {\r\n\t            return {\r\n\t                type: 2 /* EOF */,\r\n\t                value: '',\r\n\t                lineNumber: this.lineNumber,\r\n\t                lineStart: this.lineStart,\r\n\t                start: this.index,\r\n\t                end: this.index\r\n\t            };\r\n\t        }\r\n\t        var cp = this.source.charCodeAt(this.index);\r\n\t        if (character_1.Character.isIdentifierStart(cp)) {\r\n\t            return this.scanIdentifier();\r\n\t        }\r\n\t        // Very common: ( and ) and ;\r\n\t        if (cp === 0x28 || cp === 0x29 || cp === 0x3B) {\r\n\t            return this.scanPunctuator();\r\n\t        }\r\n\t        // String literal starts with single quote (U+0027) or double quote (U+0022).\r\n\t        if (cp === 0x27 || cp === 0x22) {\r\n\t            return this.scanStringLiteral();\r\n\t        }\r\n\t        // Dot (.) U+002E can also start a floating-point number, hence the need\r\n\t        // to check the next character.\r\n\t        if (cp === 0x2E) {\r\n\t            if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index + 1))) {\r\n\t                return this.scanNumericLiteral();\r\n\t            }\r\n\t            return this.scanPunctuator();\r\n\t        }\r\n\t        if (character_1.Character.isDecimalDigit(cp)) {\r\n\t            return this.scanNumericLiteral();\r\n\t        }\r\n\t        // Template literals start with ` (U+0060) for template head\r\n\t        // or } (U+007D) for template middle or template tail.\r\n\t        if (cp === 0x60 || (cp === 0x7D && this.curlyStack[this.curlyStack.length - 1] === '${')) {\r\n\t            return this.scanTemplate();\r\n\t        }\r\n\t        // Possible identifier start in a surrogate pair.\r\n\t        if (cp >= 0xD800 && cp < 0xDFFF) {\r\n\t            if (character_1.Character.isIdentifierStart(this.codePointAt(this.index))) {\r\n\t                return this.scanIdentifier();\r\n\t            }\r\n\t        }\r\n\t        return this.scanPunctuator();\r\n\t    };\r\n\t    return Scanner;\r\n\t}());\r\n\texports.Scanner = Scanner;\r\n\r\n\r\n/***/ },\r\n/* 13 */\r\n/***/ function(module, exports) {\r\n\r\n\t\"use strict\";\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\texports.TokenName = {};\r\n\texports.TokenName[1 /* BooleanLiteral */] = 'Boolean';\r\n\texports.TokenName[2 /* EOF */] = '<end>';\r\n\texports.TokenName[3 /* Identifier */] = 'Identifier';\r\n\texports.TokenName[4 /* Keyword */] = 'Keyword';\r\n\texports.TokenName[5 /* NullLiteral */] = 'Null';\r\n\texports.TokenName[6 /* NumericLiteral */] = 'Numeric';\r\n\texports.TokenName[7 /* Punctuator */] = 'Punctuator';\r\n\texports.TokenName[8 /* StringLiteral */] = 'String';\r\n\texports.TokenName[9 /* RegularExpression */] = 'RegularExpression';\r\n\texports.TokenName[10 /* Template */] = 'Template';\r\n\r\n\r\n/***/ },\r\n/* 14 */\r\n/***/ function(module, exports) {\r\n\r\n\t\"use strict\";\r\n\t// Generated by generate-xhtml-entities.js. DO NOT MODIFY!\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\texports.XHTMLEntities = {\r\n\t    quot: '\\u0022',\r\n\t    amp: '\\u0026',\r\n\t    apos: '\\u0027',\r\n\t    gt: '\\u003E',\r\n\t    nbsp: '\\u00A0',\r\n\t    iexcl: '\\u00A1',\r\n\t    cent: '\\u00A2',\r\n\t    pound: '\\u00A3',\r\n\t    curren: '\\u00A4',\r\n\t    yen: '\\u00A5',\r\n\t    brvbar: '\\u00A6',\r\n\t    sect: '\\u00A7',\r\n\t    uml: '\\u00A8',\r\n\t    copy: '\\u00A9',\r\n\t    ordf: '\\u00AA',\r\n\t    laquo: '\\u00AB',\r\n\t    not: '\\u00AC',\r\n\t    shy: '\\u00AD',\r\n\t    reg: '\\u00AE',\r\n\t    macr: '\\u00AF',\r\n\t    deg: '\\u00B0',\r\n\t    plusmn: '\\u00B1',\r\n\t    sup2: '\\u00B2',\r\n\t    sup3: '\\u00B3',\r\n\t    acute: '\\u00B4',\r\n\t    micro: '\\u00B5',\r\n\t    para: '\\u00B6',\r\n\t    middot: '\\u00B7',\r\n\t    cedil: '\\u00B8',\r\n\t    sup1: '\\u00B9',\r\n\t    ordm: '\\u00BA',\r\n\t    raquo: '\\u00BB',\r\n\t    frac14: '\\u00BC',\r\n\t    frac12: '\\u00BD',\r\n\t    frac34: '\\u00BE',\r\n\t    iquest: '\\u00BF',\r\n\t    Agrave: '\\u00C0',\r\n\t    Aacute: '\\u00C1',\r\n\t    Acirc: '\\u00C2',\r\n\t    Atilde: '\\u00C3',\r\n\t    Auml: '\\u00C4',\r\n\t    Aring: '\\u00C5',\r\n\t    AElig: '\\u00C6',\r\n\t    Ccedil: '\\u00C7',\r\n\t    Egrave: '\\u00C8',\r\n\t    Eacute: '\\u00C9',\r\n\t    Ecirc: '\\u00CA',\r\n\t    Euml: '\\u00CB',\r\n\t    Igrave: '\\u00CC',\r\n\t    Iacute: '\\u00CD',\r\n\t    Icirc: '\\u00CE',\r\n\t    Iuml: '\\u00CF',\r\n\t    ETH: '\\u00D0',\r\n\t    Ntilde: '\\u00D1',\r\n\t    Ograve: '\\u00D2',\r\n\t    Oacute: '\\u00D3',\r\n\t    Ocirc: '\\u00D4',\r\n\t    Otilde: '\\u00D5',\r\n\t    Ouml: '\\u00D6',\r\n\t    times: '\\u00D7',\r\n\t    Oslash: '\\u00D8',\r\n\t    Ugrave: '\\u00D9',\r\n\t    Uacute: '\\u00DA',\r\n\t    Ucirc: '\\u00DB',\r\n\t    Uuml: '\\u00DC',\r\n\t    Yacute: '\\u00DD',\r\n\t    THORN: '\\u00DE',\r\n\t    szlig: '\\u00DF',\r\n\t    agrave: '\\u00E0',\r\n\t    aacute: '\\u00E1',\r\n\t    acirc: '\\u00E2',\r\n\t    atilde: '\\u00E3',\r\n\t    auml: '\\u00E4',\r\n\t    aring: '\\u00E5',\r\n\t    aelig: '\\u00E6',\r\n\t    ccedil: '\\u00E7',\r\n\t    egrave: '\\u00E8',\r\n\t    eacute: '\\u00E9',\r\n\t    ecirc: '\\u00EA',\r\n\t    euml: '\\u00EB',\r\n\t    igrave: '\\u00EC',\r\n\t    iacute: '\\u00ED',\r\n\t    icirc: '\\u00EE',\r\n\t    iuml: '\\u00EF',\r\n\t    eth: '\\u00F0',\r\n\t    ntilde: '\\u00F1',\r\n\t    ograve: '\\u00F2',\r\n\t    oacute: '\\u00F3',\r\n\t    ocirc: '\\u00F4',\r\n\t    otilde: '\\u00F5',\r\n\t    ouml: '\\u00F6',\r\n\t    divide: '\\u00F7',\r\n\t    oslash: '\\u00F8',\r\n\t    ugrave: '\\u00F9',\r\n\t    uacute: '\\u00FA',\r\n\t    ucirc: '\\u00FB',\r\n\t    uuml: '\\u00FC',\r\n\t    yacute: '\\u00FD',\r\n\t    thorn: '\\u00FE',\r\n\t    yuml: '\\u00FF',\r\n\t    OElig: '\\u0152',\r\n\t    oelig: '\\u0153',\r\n\t    Scaron: '\\u0160',\r\n\t    scaron: '\\u0161',\r\n\t    Yuml: '\\u0178',\r\n\t    fnof: '\\u0192',\r\n\t    circ: '\\u02C6',\r\n\t    tilde: '\\u02DC',\r\n\t    Alpha: '\\u0391',\r\n\t    Beta: '\\u0392',\r\n\t    Gamma: '\\u0393',\r\n\t    Delta: '\\u0394',\r\n\t    Epsilon: '\\u0395',\r\n\t    Zeta: '\\u0396',\r\n\t    Eta: '\\u0397',\r\n\t    Theta: '\\u0398',\r\n\t    Iota: '\\u0399',\r\n\t    Kappa: '\\u039A',\r\n\t    Lambda: '\\u039B',\r\n\t    Mu: '\\u039C',\r\n\t    Nu: '\\u039D',\r\n\t    Xi: '\\u039E',\r\n\t    Omicron: '\\u039F',\r\n\t    Pi: '\\u03A0',\r\n\t    Rho: '\\u03A1',\r\n\t    Sigma: '\\u03A3',\r\n\t    Tau: '\\u03A4',\r\n\t    Upsilon: '\\u03A5',\r\n\t    Phi: '\\u03A6',\r\n\t    Chi: '\\u03A7',\r\n\t    Psi: '\\u03A8',\r\n\t    Omega: '\\u03A9',\r\n\t    alpha: '\\u03B1',\r\n\t    beta: '\\u03B2',\r\n\t    gamma: '\\u03B3',\r\n\t    delta: '\\u03B4',\r\n\t    epsilon: '\\u03B5',\r\n\t    zeta: '\\u03B6',\r\n\t    eta: '\\u03B7',\r\n\t    theta: '\\u03B8',\r\n\t    iota: '\\u03B9',\r\n\t    kappa: '\\u03BA',\r\n\t    lambda: '\\u03BB',\r\n\t    mu: '\\u03BC',\r\n\t    nu: '\\u03BD',\r\n\t    xi: '\\u03BE',\r\n\t    omicron: '\\u03BF',\r\n\t    pi: '\\u03C0',\r\n\t    rho: '\\u03C1',\r\n\t    sigmaf: '\\u03C2',\r\n\t    sigma: '\\u03C3',\r\n\t    tau: '\\u03C4',\r\n\t    upsilon: '\\u03C5',\r\n\t    phi: '\\u03C6',\r\n\t    chi: '\\u03C7',\r\n\t    psi: '\\u03C8',\r\n\t    omega: '\\u03C9',\r\n\t    thetasym: '\\u03D1',\r\n\t    upsih: '\\u03D2',\r\n\t    piv: '\\u03D6',\r\n\t    ensp: '\\u2002',\r\n\t    emsp: '\\u2003',\r\n\t    thinsp: '\\u2009',\r\n\t    zwnj: '\\u200C',\r\n\t    zwj: '\\u200D',\r\n\t    lrm: '\\u200E',\r\n\t    rlm: '\\u200F',\r\n\t    ndash: '\\u2013',\r\n\t    mdash: '\\u2014',\r\n\t    lsquo: '\\u2018',\r\n\t    rsquo: '\\u2019',\r\n\t    sbquo: '\\u201A',\r\n\t    ldquo: '\\u201C',\r\n\t    rdquo: '\\u201D',\r\n\t    bdquo: '\\u201E',\r\n\t    dagger: '\\u2020',\r\n\t    Dagger: '\\u2021',\r\n\t    bull: '\\u2022',\r\n\t    hellip: '\\u2026',\r\n\t    permil: '\\u2030',\r\n\t    prime: '\\u2032',\r\n\t    Prime: '\\u2033',\r\n\t    lsaquo: '\\u2039',\r\n\t    rsaquo: '\\u203A',\r\n\t    oline: '\\u203E',\r\n\t    frasl: '\\u2044',\r\n\t    euro: '\\u20AC',\r\n\t    image: '\\u2111',\r\n\t    weierp: '\\u2118',\r\n\t    real: '\\u211C',\r\n\t    trade: '\\u2122',\r\n\t    alefsym: '\\u2135',\r\n\t    larr: '\\u2190',\r\n\t    uarr: '\\u2191',\r\n\t    rarr: '\\u2192',\r\n\t    darr: '\\u2193',\r\n\t    harr: '\\u2194',\r\n\t    crarr: '\\u21B5',\r\n\t    lArr: '\\u21D0',\r\n\t    uArr: '\\u21D1',\r\n\t    rArr: '\\u21D2',\r\n\t    dArr: '\\u21D3',\r\n\t    hArr: '\\u21D4',\r\n\t    forall: '\\u2200',\r\n\t    part: '\\u2202',\r\n\t    exist: '\\u2203',\r\n\t    empty: '\\u2205',\r\n\t    nabla: '\\u2207',\r\n\t    isin: '\\u2208',\r\n\t    notin: '\\u2209',\r\n\t    ni: '\\u220B',\r\n\t    prod: '\\u220F',\r\n\t    sum: '\\u2211',\r\n\t    minus: '\\u2212',\r\n\t    lowast: '\\u2217',\r\n\t    radic: '\\u221A',\r\n\t    prop: '\\u221D',\r\n\t    infin: '\\u221E',\r\n\t    ang: '\\u2220',\r\n\t    and: '\\u2227',\r\n\t    or: '\\u2228',\r\n\t    cap: '\\u2229',\r\n\t    cup: '\\u222A',\r\n\t    int: '\\u222B',\r\n\t    there4: '\\u2234',\r\n\t    sim: '\\u223C',\r\n\t    cong: '\\u2245',\r\n\t    asymp: '\\u2248',\r\n\t    ne: '\\u2260',\r\n\t    equiv: '\\u2261',\r\n\t    le: '\\u2264',\r\n\t    ge: '\\u2265',\r\n\t    sub: '\\u2282',\r\n\t    sup: '\\u2283',\r\n\t    nsub: '\\u2284',\r\n\t    sube: '\\u2286',\r\n\t    supe: '\\u2287',\r\n\t    oplus: '\\u2295',\r\n\t    otimes: '\\u2297',\r\n\t    perp: '\\u22A5',\r\n\t    sdot: '\\u22C5',\r\n\t    lceil: '\\u2308',\r\n\t    rceil: '\\u2309',\r\n\t    lfloor: '\\u230A',\r\n\t    rfloor: '\\u230B',\r\n\t    loz: '\\u25CA',\r\n\t    spades: '\\u2660',\r\n\t    clubs: '\\u2663',\r\n\t    hearts: '\\u2665',\r\n\t    diams: '\\u2666',\r\n\t    lang: '\\u27E8',\r\n\t    rang: '\\u27E9'\r\n\t};\r\n\r\n\r\n/***/ },\r\n/* 15 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\"use strict\";\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar error_handler_1 = __webpack_require__(10);\r\n\tvar scanner_1 = __webpack_require__(12);\r\n\tvar token_1 = __webpack_require__(13);\r\n\tvar Reader = /** @class */ (function () {\r\n\t    function Reader() {\r\n\t        this.values = [];\r\n\t        this.curly = this.paren = -1;\r\n\t    }\r\n\t    // A function following one of those tokens is an expression.\r\n\t    Reader.prototype.beforeFunctionExpression = function (t) {\r\n\t        return ['(', '{', '[', 'in', 'typeof', 'instanceof', 'new',\r\n\t            'return', 'case', 'delete', 'throw', 'void',\r\n\t            // assignment operators\r\n\t            '=', '+=', '-=', '*=', '**=', '/=', '%=', '<<=', '>>=', '>>>=',\r\n\t            '&=', '|=', '^=', ',',\r\n\t            // binary/unary operators\r\n\t            '+', '-', '*', '**', '/', '%', '++', '--', '<<', '>>', '>>>', '&',\r\n\t            '|', '^', '!', '~', '&&', '||', '?', ':', '===', '==', '>=',\r\n\t            '<=', '<', '>', '!=', '!=='].indexOf(t) >= 0;\r\n\t    };\r\n\t    // Determine if forward slash (/) is an operator or part of a regular expression\r\n\t    // https://github.com/mozilla/sweet.js/wiki/design\r\n\t    Reader.prototype.isRegexStart = function () {\r\n\t        var previous = this.values[this.values.length - 1];\r\n\t        var regex = (previous !== null);\r\n\t        switch (previous) {\r\n\t            case 'this':\r\n\t            case ']':\r\n\t                regex = false;\r\n\t                break;\r\n\t            case ')':\r\n\t                var keyword = this.values[this.paren - 1];\r\n\t                regex = (keyword === 'if' || keyword === 'while' || keyword === 'for' || keyword === 'with');\r\n\t                break;\r\n\t            case '}':\r\n\t                // Dividing a function by anything makes little sense,\r\n\t                // but we have to check for that.\r\n\t                regex = true;\r\n\t                if (this.values[this.curly - 3] === 'function') {\r\n\t                    // Anonymous function, e.g. function(){} /42\r\n\t                    var check = this.values[this.curly - 4];\r\n\t                    regex = check ? !this.beforeFunctionExpression(check) : false;\r\n\t                }\r\n\t                else if (this.values[this.curly - 4] === 'function') {\r\n\t                    // Named function, e.g. function f(){} /42/\r\n\t                    var check = this.values[this.curly - 5];\r\n\t                    regex = check ? !this.beforeFunctionExpression(check) : true;\r\n\t                }\r\n\t                break;\r\n\t            default:\r\n\t                break;\r\n\t        }\r\n\t        return regex;\r\n\t    };\r\n\t    Reader.prototype.push = function (token) {\r\n\t        if (token.type === 7 /* Punctuator */ || token.type === 4 /* Keyword */) {\r\n\t            if (token.value === '{') {\r\n\t                this.curly = this.values.length;\r\n\t            }\r\n\t            else if (token.value === '(') {\r\n\t                this.paren = this.values.length;\r\n\t            }\r\n\t            this.values.push(token.value);\r\n\t        }\r\n\t        else {\r\n\t            this.values.push(null);\r\n\t        }\r\n\t    };\r\n\t    return Reader;\r\n\t}());\r\n\tvar Tokenizer = /** @class */ (function () {\r\n\t    function Tokenizer(code, config) {\r\n\t        this.errorHandler = new error_handler_1.ErrorHandler();\r\n\t        this.errorHandler.tolerant = config ? (typeof config.tolerant === 'boolean' && config.tolerant) : false;\r\n\t        this.scanner = new scanner_1.Scanner(code, this.errorHandler);\r\n\t        this.scanner.trackComment = config ? (typeof config.comment === 'boolean' && config.comment) : false;\r\n\t        this.trackRange = config ? (typeof config.range === 'boolean' && config.range) : false;\r\n\t        this.trackLoc = config ? (typeof config.loc === 'boolean' && config.loc) : false;\r\n\t        this.buffer = [];\r\n\t        this.reader = new Reader();\r\n\t    }\r\n\t    Tokenizer.prototype.errors = function () {\r\n\t        return this.errorHandler.errors;\r\n\t    };\r\n\t    Tokenizer.prototype.getNextToken = function () {\r\n\t        if (this.buffer.length === 0) {\r\n\t            var comments = this.scanner.scanComments();\r\n\t            if (this.scanner.trackComment) {\r\n\t                for (var i = 0; i < comments.length; ++i) {\r\n\t                    var e = comments[i];\r\n\t                    var value = this.scanner.source.slice(e.slice[0], e.slice[1]);\r\n\t                    var comment = {\r\n\t                        type: e.multiLine ? 'BlockComment' : 'LineComment',\r\n\t                        value: value\r\n\t                    };\r\n\t                    if (this.trackRange) {\r\n\t                        comment.range = e.range;\r\n\t                    }\r\n\t                    if (this.trackLoc) {\r\n\t                        comment.loc = e.loc;\r\n\t                    }\r\n\t                    this.buffer.push(comment);\r\n\t                }\r\n\t            }\r\n\t            if (!this.scanner.eof()) {\r\n\t                var loc = void 0;\r\n\t                if (this.trackLoc) {\r\n\t                    loc = {\r\n\t                        start: {\r\n\t                            line: this.scanner.lineNumber,\r\n\t                            column: this.scanner.index - this.scanner.lineStart\r\n\t                        },\r\n\t                        end: {}\r\n\t                    };\r\n\t                }\r\n\t                var maybeRegex = (this.scanner.source[this.scanner.index] === '/') && this.reader.isRegexStart();\r\n\t                var token = void 0;\r\n\t                if (maybeRegex) {\r\n\t                    var state = this.scanner.saveState();\r\n\t                    try {\r\n\t                        token = this.scanner.scanRegExp();\r\n\t                    }\r\n\t                    catch (e) {\r\n\t                        this.scanner.restoreState(state);\r\n\t                        token = this.scanner.lex();\r\n\t                    }\r\n\t                }\r\n\t                else {\r\n\t                    token = this.scanner.lex();\r\n\t                }\r\n\t                this.reader.push(token);\r\n\t                var entry = {\r\n\t                    type: token_1.TokenName[token.type],\r\n\t                    value: this.scanner.source.slice(token.start, token.end)\r\n\t                };\r\n\t                if (this.trackRange) {\r\n\t                    entry.range = [token.start, token.end];\r\n\t                }\r\n\t                if (this.trackLoc) {\r\n\t                    loc.end = {\r\n\t                        line: this.scanner.lineNumber,\r\n\t                        column: this.scanner.index - this.scanner.lineStart\r\n\t                    };\r\n\t                    entry.loc = loc;\r\n\t                }\r\n\t                if (token.type === 9 /* RegularExpression */) {\r\n\t                    var pattern = token.pattern;\r\n\t                    var flags = token.flags;\r\n\t                    entry.regex = { pattern: pattern, flags: flags };\r\n\t                }\r\n\t                this.buffer.push(entry);\r\n\t            }\r\n\t        }\r\n\t        return this.buffer.shift();\r\n\t    };\r\n\t    return Tokenizer;\r\n\t}());\r\n\texports.Tokenizer = Tokenizer;\r\n\r\n\r\n/***/ }\r\n/******/ ])\r\n});\r\n;","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","export default (function a(){\n!function(t,e){if(\"object\"==typeof exports&&\"object\"==typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var r=e();for(var o in r)(\"object\"==typeof exports?exports:t)[o]=r[o]}}(this,(function(){return function(t){var e={};function r(o){if(e[o])return e[o].exports;var n=e[o]={i:o,l:!1,exports:{}};return t[o].call(n.exports,n,n.exports,r),n.l=!0,n.exports}return r.m=t,r.c=e,r.d=function(t,e,o){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},r.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(r.r(o),Object.defineProperty(o,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var n in t)r.d(o,n,function(e){return t[e]}.bind(null,n));return o},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,\"a\",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p=\"\",r(r.s=10)}([function(t,e,r){\"use strict\";function o(){return[{left:0,top:0,width:0,height:0,colspan:8,rowspan:3,innerHTML:\"\\n    可以在初始化中指定默认参数\\n<code>\\n{\\n    //指定容器横向被分为多少格（默认值为足够初始化的最小值）\\n    ncols: 16,\\n    //指定默认空白区域（默认全0）\\n    space: { left: 2, right: 2, top: 4, bottom: 0 }, \\n    //指定默认拖拽捕获区域（默认全0，表示除了空白外的区域可拖拽）\\n    capture: { top: 0, right: 0, bottom: 0, left: 0 }\\n}\\n</code>\\n    \"},{left:0,top:0,width:0,height:0,col:9,row:0,colspan:7,rowspan:3,innerHTML:'\\n                <br><button style=\"color:white;background-color:black;\">只允许从该按钮上方拖拽</button>\\n<code>\\n{\\n    col: 9,\\n    row: 0,\\n    colspan: 7,\\n    rowspan: 4,\\n    capture: (e, t) => t.target.tagName === \"BUTTON\"\\n}\\n</code>\\n    ',capture:function(t,e){return\"BUTTON\"===e.target.tagName}},{left:0,top:0,width:0,height:0,colspan:4,rowspan:7,innerHTML:'\\n                <span style=\"\\n                display:block;\\n                width:0;height:0;\\n                z-index: 1000;\\n                border: 20px solid;\\n                border-color: aqua blue red green;\\n                \"></span>\\n                （类似上图的区域划分）<br>\\n                只能在以下区域拖拽<br>\\n                (1):容器中心点和顶边做三角形<br>\\n                (2):容器右侧边和距离右侧边 10px 的平行线做四边形<br>\\n                (3):容器中心点和距离底部 10px 的平行线做三角形<br>\\n                (3):容器左侧边和距离左侧边 10px 的平行线做四边形<br>\\n<code>\\n{\\n    colspan: 4,\\n    rowspan: 6,\\n    capture: {\\n        top: 0,\\n        right: -10,\\n        bottom: 10,\\n        left: -10\\n    }\\n}\\n</code>\\n    ',capture:{top:0,right:-10,bottom:10,left:-10}},{left:0,top:0,width:0,height:0,colspan:4,rowspan:4,style:{border:\"solid black\",borderWidth:\"10px 20px\"},innerHTML:\"\\n    只能从该容器边框部分拖拽\\n<code>\\n{\\n    colspan: 4,\\n    rowspan: 4,\\n    capture: {\\n        top: -10,\\n        right: -20,\\n        bottom: -10,\\n        left: -20\\n    }\\n}\\n</code>\\n    \",capture:{top:-10,right:-20,bottom:-10,left:-20}},{left:0,top:0,width:0,height:0,colspan:4,rowspan:5,innerHTML:\"\\n                单独指定空白区域:<br>\\n                (1)顶部 20px ,底部 30px 为空白<br>\\n                (2)左右两侧溢出贴合 space-right space-left 值为 2 的容器\\n<code>\\n{\\n    colspan: 4,\\n    rowspan: 5,\\n    space: {\\n        top: 20,\\n        right: -2,\\n        bottom: 30,\\n        left: -2\\n    }\\n}\\n</code>\\n    \",space:{top:20,right:-2,bottom:30,left:-2}},{left:0,top:0,width:0,height:0,col:8,row:0,colspan:4,rowspan:3,innerHTML:'\\n                不指定 \"col\" \"row\" 或指定了非法值会自动根据现有摆放状态自动选择合适位置放置\\n<code>\\n{\\n    col:8,\\n    row:0,\\n    colspan: 4,\\n    rowspan: 3\\n}\\n</code>\\n    '}]}function n(){return{ncols:Math.min(window.innerWidth/70|0,16),space:{left:2,right:2,top:4,bottom:0},capture:{top:0,right:0,bottom:0,left:0}}}r.r(e),r.d(e,\"get_models\",(function(){return o})),r.d(e,\"get_option\",(function(){return n}))},function(t,e,r){\"use strict\";var o,n=this&&this.__assign||function(){return(n=Object.assign||function(t){for(var e,r=1,o=arguments.length;r<o;r++)for(var n in e=arguments[r])Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t}).apply(this,arguments)};Object.defineProperty(e,\"__esModule\",{value:!0}),function(t){t[t.USE_CHECK=1]=\"USE_CHECK\",t[t.FILL_EACHMODEL=16]=\"FILL_EACHMODEL\",t[t.USE_OFFSET=256]=\"USE_OFFSET\",t[t.USE_EACHOFFSET=4096]=\"USE_EACHOFFSET\"}(o||(o={}));var i=function(){function t(e,r){void 0===e&&(e=[]),void 0===r&&(r={}),this.options=r,this.model_map=new Array,this.model_list=new Array,this.options.ncols>0||(this.options.ncols=e.reduce((function(t,e){return Math.max(t,(e.col||0)+(e.colspan||1))}),1));var o=this._fill(e,t.FLAGS.USE_CHECK|t.FLAGS.FILL_EACHMODEL);this.append(o)}return Object.defineProperty(t.prototype,\"ncols\",{get:function(){return this.options.ncols},set:function(t){this.setNCols(t)},enumerable:!0,configurable:!0}),t.prototype.setNCols=function(e,r){if(e!==this.options.ncols){this.model_map.splice(0,this.model_map.length);var o=this.model_list.splice(0,this.model_list.length);if(r&&1!==r)for(var n=e-this.options.ncols,i=0,s=o;i<s.length;i++){(u=s[i]).col+=n}this.options.ncols=e;for(var a=0,c=o;a<c.length;a++){(u=c[a]).colspan>e&&(u.colspan=e),u.colspan+u.col>e&&(u.col=e-u.colspan)}for(var l=0,p=this._fill(o,t.FLAGS.USE_CHECK|t.FLAGS.FILL_EACHMODEL);l<p.length;l++){var u=p[l];this.alloc(u),this.fill(u)}}},t.prototype.fill=function(e){e instanceof Array||(e=[e]),this._fill(e,t.FLAGS.FILL_EACHMODEL)},t.prototype.clear=function(t){var e=this.model_list.indexOf(t),r=0;for(~e&&this.model_list.splice(e,1);~(e=this.model_map.indexOf(t));)r++,this.model_map[e]=void 0;return r},t.prototype.remove=function(t){t instanceof Array||(t=[t]),this._fill(t)},t.prototype.move=function(e,r,o){return void 0===o&&(o=0),e instanceof Array||(e=[e]),this.remove(e),this._fill(e,o|t.FLAGS.FILL_EACHMODEL|t.FLAGS.USE_OFFSET,r)},t.prototype.getModel=function(t,e){if(t>=0&&e>=0&&t<this.ncols)return this.model_map[t+e*this.ncols]},t.prototype.format=function(t,e,r){return void 0===e&&(e=t.col),void 0===r&&(r=t.row),t.col=Math.round(Math.max(Math.min(e,this.ncols-t.colspan),0)),t.row=Math.round(Math.max(r,0)),t},t.prototype.trim=function(){for(var t=Math.ceil(this.model_map.length/this.ncols),e=[],r=1;r<t;r++)for(var o=0;o<this.ncols;o++){var n=r*this.ncols+o,i=this.model_map[n];if(i&&i.row===r){var s=this._pathTest([i],[0,-r-1],i);s>0&&(e.push(i),this.move([i],[0,-s])),o+=i.colspan-1}}return e},t.prototype.append=function(e){e instanceof Array||(e=[e]);for(var r=0,o=e;r<o.length;r++){var n=o[r];n.colspan>this.ncols&&(n.colspan=this.ncols);for(var i=Math.ceil(this.model_map.length/this.ncols),s=0,a=0,c={col:0,row:i,colspan:n.colspan,rowspan:n.rowspan},l=0,p=this.ncols-n.colspan;l<=p;l++){c.col=l;var u=this._pathTest([c],[0,-i-1],c);s<u&&(s=u,a=l)}n.col=a,n.row=i-s,this._fill([n],t.FLAGS.FILL_EACHMODEL)}},t.prototype.alloc=function(e,r,o,i){void 0===r&&(r=this.format({col:e.col,row:e.row,colspan:e.colspan,rowspan:e.rowspan})),void 0===o&&(o=this.cover(r));var s=o.slice();if(0===o.length)return s;if(i||(i=this.calcWrap(o)),i.colspan+i.rowspan>1.6*(r.colspan+r.rowspan)||!this._compress(r,o,i,e)){o.sort((function(t,e){return t.row-e.row}));for(var a=n({},r),c=0;c<o.length;c++){var l=o[c];this._compress(a,[l],l,void 0,!1)?o.splice(c--,1):(a.col>l.col&&(a.colspan+=a.col-l.col,a.col=l.col),a.col+a.colspan<l.col+l.colspan&&(a.colspan=l.col+l.colspan-a.col))}if(0===o.length)return s;var p=[],u=[];i=this.calcWrap(o);for(var f=r.colspan-Math.max(i.col-r.col,0)-Math.max(r.col+r.colspan-i.colspan-i.col,0),_=[{col:Math.max(r.col,i.col),row:r.row,colspan:f,rowspan:0}],h={},d=[new Array(f).fill(r.rowspan)];_.length;){var v=[],y={},m=[];for(var g in h)h[g].sort((function(t,e){return t.row-e.row}));for(c=0;c<_.length;c++){for(var b=_[c],w=d[c],E=(T=b.col)+b.colspan;T<E;T++){if(C=h[T]){for(var O=0,M=0;M<C.length-1;M++){var S=C[M];if(!(S.row<b.row))break;O+=C[M+1].row-(S.row+S.rowspan)}w[T-b.col]-=O}}if((k=Math.max.apply(Number,w))>0)if(d[c]=k,-1===(M=p.indexOf(b)))M=p.length,p.push(b),u.push(k);else{if(u[M]>=k)continue;u[M]=k}else _.splice(c,1),d.splice(c,1),c--}for(M=0;M<_.length;M++){b=_[M];var k=d[M];var T=b.col;t:for(E=T+b.colspan;T<E;T++)for(var x=b.row+b.rowspan,L=x+k;x<L;x++){var P=this.model_map[T+x*this.ncols];if(P){var A=v.indexOf(P),U=(w=void 0,L-x+Math.max(b.row-P.row,0));if(-1===A){var C,D=p.indexOf(P);if(D>=0&&u[D]>=U)continue t;v.push(P),m.push(w=new Array(P.colspan).fill(0)),(C=y[T]||(y[T]=[])).push({row:P.row,rowspan:P.rowspan})}else w=m[A];w[T-P.col]=Math.max(w[T-P.col],U);break}}}_=v,h=y,d=m}p.splice(0,1),u.splice(0,1),this.move(p,u.map((function(t){return[0,t]})),t.FLAGS.USE_EACHOFFSET),s=s.concat(p)}return s},t.prototype.cover=function(t){for(var e=[],r=t.col,o=t.row,n=0;n<t.rowspan;n++)for(var i=0;i<t.colspan;i++){var s=this.model_map[i+r+(n+o)*this.ncols];if(void 0!==s){~e.indexOf(s)||e.push(s);var a=s.colspan+s.col-1;i+r<a&&(i=a-r)}}return e},t.prototype.calcWrap=function(t){for(var e={col:t[0].col,row:t[0].row,colspan:t[0].colspan,rowspan:t[0].rowspan},r=1;r<t.length;r++){var o=t[r];e.col>o.col&&(e.colspan+=e.col-o.col,e.col=o.col),e.row>o.row&&(e.rowspan+=e.row-o.row,e.row=o.row),e.colspan+e.col<o.col+o.colspan&&(e.colspan+=o.col+o.colspan-e.col-e.colspan),e.rowspan+e.row<o.row+o.rowspan&&(e.rowspan+=o.row+o.rowspan-e.row-e.rowspan)}return e},t.prototype.calcOffset=function(t,e){return{l:t.col-(e.col+e.colspan),r:t.col+t.colspan-e.col,t:t.row-(e.row+e.rowspan),b:t.row+t.rowspan-e.row}},t.prototype._fill=function(e,r,o){void 0===r&&(r=0);var n=t.FLAGS,i=r&n.USE_CHECK?[]:void 0,s=this.model_map,a=this.model_list,c=this.ncols;t:for(var l=0;l<e.length;l++){var p=e[l];if(r&n.USE_CHECK&&(isFinite(p.colspan)||(p.colspan=1),isFinite(p.rowspan)||(p.rowspan=1),isNaN(p.col+p.row)||p.col<0||p.col+p.colspan>c))i.push(p);else{var u=a.indexOf(p);if(r&n.FILL_EACHMODEL){if(-1!==u)continue;a.push(p)}else u>=0&&a.splice(u,1);r&n.USE_EACHOFFSET?(p.col+=o[l][0],p.row+=o[l][1]):r&n.USE_OFFSET&&(p.col+=o[0],p.row+=o[1]);for(var f=p.col,_=p.row,h=p.colspan,d=p.rowspan,v=0;v<d;v++)for(var y=0;y<h;y++){var m=y+f+(v+_)*c;if(r&n.USE_CHECK&&void 0!==s[m]){do{for(;y--;)s[y+f+(v+_)*c]=void 0;y=h}while(v--);r&n.FILL_EACHMODEL&&a.pop(),i.push(p);continue t}s[m]=r&n.FILL_EACHMODEL?p:o}}}return i},t.prototype._pathTest=function(t,e,r){void 0===r&&(r=this.calcWrap(t));for(var o=0|e[0],n=0|e[1],i=0,s=0,a=0,c=o&&o/Math.abs(o),l=n&&n/Math.abs(n);i!==o||s!==n;){if(i!==o?i+=c:s+=l,r.col+i<0||r.col+i+r.colspan>this.ncols||r.row+s<0)return a;for(var p=0,u=t;p<u.length;p++)for(var f=u[p],_=f.row,h=_+f.rowspan;_<h;_++)for(var d=f.col,v=d+f.colspan;d<v;d++){var y=d+i+(_+s)*this.ncols;if(this.model_map[y]&&-1===t.indexOf(this.model_map[y]))return a}a+=1}return!0},t.prototype._compress=function(t,e,r,o,n){void 0===e&&(e=this.cover(t)),void 0===r&&(r=this.calcWrap(e)),void 0===n&&(n=!0);var i=r.colspan/r.rowspan,s=t.rowspan/t.colspan,a=(i+s)/4;i=a+i/2,s=a+s/2;var c=this.calcOffset(t,r),l=o?this.calcOffset(o,r):c,p=[Math.abs(s*l.l),[c.l,0]],u=[Math.abs(s*l.r),[c.r,0],p];p.push(u),u.push(p);var f,_=[Math.abs(i*l.t),[0,c.t]];n&&(f=[Math.abs(i*l.b),[0,c.b]],_.push(f),f.push(_));for(var h=(n?[p,u,_,f]:[p,u,_]).sort((function(t,e){return t[0]-e[0]})),d=0;d<h.length;d++){var v=h.lastIndexOf(h[d][2]);if(v>d&&(h.splice(v,1),h.splice(d+1,0,h[d][2])),!0===this._pathTest(e,h[d][1],r))return this.move(e,h[d][1]),!0}return!1},t.FLAGS=o,t}();e.default=i},,function(t,e,r){\"use strict\";var o,n=this&&this.__extends||(o=function(t,e){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])})(t,e)},function(t,e){function r(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}),i=this&&this.__assign||function(){return(i=Object.assign||function(t){for(var e,r=1,o=arguments.length;r<o;r++)for(var n in e=arguments[r])Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t}).apply(this,arguments)};Object.defineProperty(e,\"__esModule\",{value:!0});var s=r(1);e.MutexModel=s.default;var a=r(4);e.InputListener=a;var c=function(t){function e(e,r,o){void 0===o&&(o={});var n=t.call(this,r,o)||this;return n.vessel=e,n.inputListener=null,n._client_width=0,n.resize=function(t,e){void 0===t&&(t=n.options.ncols);var r=n.clientWidth;t===n.ncols&&n._client_width===r||(n.setNCols(t,e),n._client_width=r,n._update(n.model_list))},n.dragStart=function(t,e){var r=n.vessel.getBoundingClientRect(),o=e.clientX-r.left,i=e.clientY-r.top;return n.target_box=n._get_box(o,i,t,e),!!(!n.target_box||n.options.onPick&&n.options.onPick(t,e,n.target_box))||(t.preventDefault(),n.target_box.dragging=!0,void n.remove(n.target_box))},n.dragMove=function(t,e,r){if(n.target_box.left+=e[0],n.target_box.top+=e[1],n._stay_timeout&&(window.clearTimeout(n._stay_timeout),n._stay_timeout=null),n.options.onMove&&n.options.onMove(t,r,n.target_box))return n.inputListener.break(),void(n.target_box=null);n._e=t,n._t=r,n._stay_timeout=window.setTimeout(n.put,300)},n.dragEnd=function(t,e){n._stay_timeout&&window.clearTimeout(n._stay_timeout),n._e=t,n._t=e,n.put(!0)},n.put=function(t,e,r,o){void 0===e&&(e=n.target_box),void 0===r&&(r=n._e),void 0===o&&(o=n._t),n._stay_timeout=void 0;var s=n.cellSize,a=e.space||n.space,c=(e.left-a.left)/s,l=(e.top-a.top)/s,p={col:c,row:l,colspan:e.colspan,rowspan:e.rowspan},u=n.format(i({},p)),f=n.cover(u),_=t?n.options.onDrop:n.options.onStay;if(_&&_(r,o,e,f))return t||n.inputListener.break(),void(n.target_box=null);if(f.length){var h=n.calcWrap(f);u.col===h.col&&u.row===h.row&&e.colspan===h.colspan&&e.rowspan===h.rowspan&&Math.abs(p.col-h.col)+Math.abs(p.row-h.row)<.1/Math.sqrt(s/60)&&Math.abs(e.col-h.col)/e.colspan+Math.abs(e.row-h.row)/e.rowspan>1?n.move(f,[e.col-h.col,e.row-h.row]):n.alloc(p,u,f,h)}n.format(e,c,l),!0===t&&(e.dragging=!1,n.fill(e),n._update([e]),n.target_box=null)},n.vessel=e,n.inputListener=new a(e,{dragStart:n.dragStart,dragMove:n.dragMove,dragEnd:n.dragEnd}),n.activate(),n}return n(e,t),e.prototype.disable=function(){this.inputListener.disable()},Object.defineProperty(e.prototype,\"capture\",{get:function(){return this.options.capture||e.capture},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\"space\",{get:function(){return this.options.space||e.space},enumerable:!0,configurable:!0}),e.prototype.activate=function(){this.resize(),this.inputListener.activate()},e.prototype.remove=function(e){t.prototype.remove.call(this,e)},e.prototype.add=function(t){t instanceof Array||(t=[t]);for(var e=0,r=t;e<r.length;e++){var o=r[e];o.col>=0&&o.col+o.colspan<=this.ncols&&o.row>=0?(this.alloc(o),this.fill(o)):this.append(o)}this._update(t)},Object.defineProperty(e.prototype,\"clientWidth\",{get:function(){return isFinite(this.options.client_width)?this.options.client_width:this.vessel.clientWidth},enumerable:!0,configurable:!0}),e.prototype.update=function(e,r){if(e){if(t.prototype.clear.call(this,e),r instanceof Object)for(var o in r)e[o]=r[o];this.alloc(e),this.fill(e),this._update(e)}else this._update(this.model_list)},e.prototype._update=function(t){t instanceof Array||(t=[t]);for(var e,r,o,n,i=this.cellSize,s=0,a=t;s<a.length;s++){var c=a[s],l=c.space||this.space,p=l.left,u=void 0===p?0:p,f=l.right,_=void 0===f?0:f,h=l.top,d=void 0===h?0:h,v=l.bottom,y=void 0===v?0:v;e=i*c.col+u,r=i*c.row+d,o=i*c.colspan-u-_,n=i*c.rowspan-d-y,e!==c.left&&(c.left=e),r!==c.top&&(c.top=r),o!==c.width&&(c.width=o),n!==c.height&&(c.height=n)}},Object.defineProperty(e.prototype,\"cellSize\",{get:function(){return this.clientWidth/this.ncols},enumerable:!0,configurable:!0}),e.prototype._get_box=function(t,e,r,o){var n=this.cellSize,i=this.getModel(t/n|0,e/n|0);function s(t,e,r){return r>=0?e<t-r:e>=t+r&&e<t}if(i){var a=i.capture||this.capture;if(a instanceof Function){var c=a(r,o,i);return!0===c?i:!1===c?void 0:c}var l=i.space||this.space,p=l.top,u=void 0===p?0:p,f=l.right,_=void 0===f?0:f,h=l.bottom,d=void 0===h?0:h,v=l.left,y=void 0===v?0:v,m=a.top,g=void 0===m?0:m,b=a.right,w=void 0===b?0:b,E=a.bottom,O=void 0===E?0:E,M=a.left,S=void 0===M?0:M,k=i.col*n+y,T=i.row*n+u,x=i.colspan*n-_-y,L=i.rowspan*n-u-d,P=t-k-x/2,A=e-T-L/2,U=Math.sqrt(Math.pow(P,2)+Math.pow(A,2)),C=Math.atan2(A,P),D=2*Math.atan(x/L),H=(Math.PI-D)/2,N=Math.PI/2;switch(!0){case C<-H&&C>-D-H:return s(L/2,U*Math.cos(N+C),g)&&i;case Math.abs(C)<=H:return s(x/2,U*Math.cos(C),w)&&i;case C>H&&C<H+D:return s(L/2,Math.abs(U*Math.cos(N+C)),O)&&i;case Math.abs(C)>=D+H:return s(x/2,Math.abs(U*Math.cos(C)),S)&&i}}},e.prototype.receive=function(t,e,r){this.target_box&&(window.clearTimeout(this._stay_timeout),this.put(!0),this.inputListener.break()),this.target_box=r,t&&e?(this.inputListener.addPoint(e),this._stay_timeout=window.setTimeout(this.put,300)):this.put(!0)},e.prototype.move=function(e,r,o){void 0===o&&(o=0);var n=t.prototype.move.call(this,e,r,o);return this._update(e),n},e.space={top:0,right:0,bottom:0,left:0},e.capture={top:0,right:0,bottom:0,left:0},e.InputListener=a,e.MutexModel=s.default,e}(s.default);e.MutexBox=c;try{window.MutexBox=c}catch(t){}e.default=c},function(t,e,r){window,t.exports=function(t){var e={};function r(o){if(e[o])return e[o].exports;var n=e[o]={i:o,l:!1,exports:{}};return t[o].call(n.exports,n,n.exports,r),n.l=!0,n.exports}return r.m=t,r.c=e,r.d=function(t,e,o){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},r.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(r.r(o),Object.defineProperty(o,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var n in t)r.d(o,n,function(e){return t[e]}.bind(null,n));return o},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,\"a\",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p=\"\",r(r.s=0)}([function(t,e,r){\"use strict\";function o(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,o)}return r}function n(t){return(n=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}function i(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function s(t,e){return!e||\"object\"!==n(e)&&\"function\"!=typeof e?function(t){if(void 0===t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return t}(t):e}function a(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}function c(t){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function l(t,e){return(l=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function p(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function u(t,e){for(var r=0;r<e.length;r++){var o=e[r];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function f(t,e,r){return e&&u(t.prototype,e),r&&u(t,r),t}var _={rotate:/^rotate$/,pinch:/^pinch$/,dragMove2:/^dragMove2$/,dragStart:/^dragStart$/,dragMove:/^dragMove$/,dragEnd:/^dragEnd$/,click:/^click$/},h=function(){function t(e,r){var o=this;p(this,t),this._activated_listener={},this._registered_listener={rotate:null,pinch:null,dragMove:null,dragStart:null,dragEnd:null,dragMove2:null,click:null,keyDown:{_parts:[],_reference:0},keyUp:{_reference:0},keyPress:{_reference:0}},this.mouse_mask=1,this.target=null,this.pointX=\"pageX\",this.pointY=\"pageY\",this._listener_status={},this._points=[],this._identifiers=[];var n=!1;this.target=e,r&&(!0===r?n=!0:(n=[\"capture\",\"passive\",\"passive\"].forEach((function(t){void 0!==r[t]&&((n||(n={}))[t]=r[t])})),[\"pointX\",\"pointY\",\"mouse_mask\"].forEach((function(t){void 0!==r[t]&&(o[t]=r[t])})))),this._listener_options=n}return f(t,[{key:\"setListener\",value:function(t){for(var e in t)if(!this._listener_status[e]!=!t[e]){var r=d.EVENT_CONFIG[e],o=r[0],n=r[1],i=r[2]||this.target;t[e]?i.addEventListener(o,this[n],this._listener_options):i.removeEventListener(o,this[n],this._listener_options),this._listener_status[e]=!!t[e]}}},{key:\"eventDispenser\",value:function(t,e){if(this._identifiers[0]===d.MOUSE_EVENT_ID)Math.pow(2,t.button)&this.mouse_mask&&e(t,t,0);else if(t.changedTouches)for(var r=0;r<t.changedTouches.length;r++){var o=this._identifiers.indexOf(t.changedTouches[r].identifier);-1!==o&&e(t,t.changedTouches[r],o)}}},{key:\"_is_mouse_event\",get:function(){return this._identifiers[0]===d.MOUSE_EVENT_ID}}]),t}();h.EVENT_CONFIG={MOUSE_DOWN:[\"mousedown\",\"cursorDown\"],MOUSE_MOVE:[\"mousemove\",\"cursorMove\",window],MOUSE_UP:[\"mouseup\",\"cursorUp\",window],TOUCH_START:[\"touchstart\",\"cursorDown\"],TOUCH_MOVE:[\"touchmove\",\"cursorMove\",window],TOUCH_END:[\"touchend\",\"cursorUp\",window],TOUCH_CANCEL:[\"touchcancel\",\"cursorUp\",window],KEY_DOWN:[\"keydown\",\"keyDown\"],KEY_UP:[\"keyup\",\"keyUp\"],KEY_PRESS:[\"keypress\",\"keyPress\"]},h.CURSOR_EVENT_HANDLES=Object.keys(_),h.STATES={IS_DRAG:1,IS_ROTATE:2,IS_PINCH:4,MOUSE_DOWN:\"MOUSE_DOWN\",MOUSE_MOVE:\"MOUSE_MOVE\",MOUSE_UP:\"MOUSE_UP\",TOUCH_START:\"TOUCH_START\",TOUCH_MOVE:\"TOUCH_MOVE\",TOUCH_END:\"TOUCH_END\",TOUCH_CANCEL:\"TOUCH_CANCEL\",KEY_DOWN:\"KEY_DOWN\",KEY_UP:\"KEY_UP\",KEY_PRESS:\"KEY_PRESS\"},h.PATTERN_MAP=function(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?o(Object(r),!0).forEach((function(e){i(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}({},_,{},{keyDown:/^\\S+_keyDown$/,keyUp:/^\\S+_keyUp$/,keyPress:/^\\S+_keyPress$/}),h.MOUSE_EVENT_ID=-9007199254740991,h._PRIVATE_METHODS={update_key_listener:function(t,e,r,o){d._PRIVATE_METHODS.match_keys(e,(function(e){var n=t[e];n||(n=t[e]=[]);var i=n.indexOf(r);o?i>=0&&(t._reference--,n.length>1?n.splice(i,1):delete t[e]):(t._reference++,~i||n.push(r))}))},match_keys:function(t,e){var r=t.match(/(\\w+?| )(?=$|\\||,|\\+)/g);if(r=r?r.map((function(t){return t.toLocaleLowerCase()})):[],!e)return r;var o=r,n=Array.isArray(o),i=0;for(o=n?o:o[Symbol.iterator]();;){var s;if(n){if(i>=o.length)break;s=o[i++]}else{if((i=o.next()).done)break;s=i.value}if(e(s))break}},get_keys:function(t){return t.code&&t.key!==t.code?[t.key.toLocaleLowerCase(),t.code.toLocaleLowerCase()]:[t.key.toLocaleLowerCase()]}},h._LISTENER_PREPROCESSOR={keyDown:function(t,e,r){var o,n=t.slice(0,-8).split(\",\"),i=r?function(t,r,o){if(o){var n=t[r];if(n){var i=n._listeners.indexOf(e);-1!==i&&(n._listeners.splice(i,1),function t(e){var r=e._parent;--e._reference<=0&&r&&(delete r[e._key],t(r))}(n))}}}:function(t,r,n){var i=t[r];i||((i=t[r]={_parent:t,_key:r,_reference:0,_parts:t._parts.concat(r)})._path=i._parts.join(\"+\"),t._reference++),o.push(i),n&&(i._reference++,i._listeners?-1===i._listeners.indexOf(e)&&i._listeners.push(e):i._listeners=[e])};n.forEach((function(t){o=[this._registered_listener.keyDown],t.split(\"+\").forEach((function(t,e,r){var n=o,s=d._PRIVATE_METHODS.match_keys(t),a=r.length===e+1;o=[];var c=n,l=Array.isArray(c),p=0;for(c=l?c:c[Symbol.iterator]();;){var u;if(l){if(p>=c.length)break;u=c[p++]}else{if((p=c.next()).done)break;u=p.value}var f=u,_=s,h=Array.isArray(_),v=0;for(_=h?_:_[Symbol.iterator]();;){var y;if(h){if(v>=_.length)break;y=_[v++]}else{if((v=_.next()).done)break;y=v.value}i(f,y,a)}}}),this)}),this)},keyUp:function(t,e,r){d._PRIVATE_METHODS.update_key_listener(this._registered_listener.keyUp,t,e,r)},keyPress:function(t,e,r){d._PRIVATE_METHODS.update_key_listener(this._registered_listener.keyPress,t,e,r)}};var d=function(t){!function(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function\");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&l(t,e)}(o,t);var e,r=(e=o,function(){var t,r=c(e);if(a()){var o=c(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return s(this,t)});function o(t,e,n){var s;return p(this,o),(s=r.call(this,t,n))._mesh_value=4,s._process_status=0,s._process_values={kd_tasks:[]},s.cursorDown=function(t){var e,r=s._points;if(s._identifiers[0]!==o.MOUSE_EVENT_ID)if(t.changedTouches&&r.length<s._max_points){var n=t.changedTouches,i=Array.isArray(n),a=0;for(n=i?n:n[Symbol.iterator]();;){var c;if(i){if(a>=n.length)break;c=n[a++]}else{if((a=n.next()).done)break;c=a.value}var l=c;if(-1===s._identifiers.indexOf(l.identifier)){e=l;break}}}else 0===r.length&&Math.pow(2,t.button)&s.mouse_mask&&(e=t);e&&s.addPoint(e,t)},s._move=function(t,e,r){var o=s._activated_listener,n=s._points[r],i=e[s.pointX],a=e[s.pointY];if(o.dragMove){var c=[i-n.mx,a-n.my];o.dragMove(t,c,e)?(n.mx=i-c[0],n.my=a-c[1]):(n.mx=i,n.my=a)}o.click&&Math.abs(i-n.dx)+Math.abs(a-n.dy)>s._mesh_value&&(o.click=!1)},s._move2=function(t,e,r){var n=o.STATES,i=s._activated_listener,a=s._process_values,c=s._points,l=c[r],p=c[1===r?0:1],u=e[s.pointX]-l.mx,f=e[s.pointY]-l.my;if(i.dragMove2){var _=[u/2,f/2];i.dragMove2(t,_,e)&&(u-=2*_[0],f-=2*_[1])}l.mx=l.mx+u,l.my=l.my+f;var h=(l.mx+p.mx)/2,d=(l.my+p.my)/2;if(i.pinch){var v=Math.sqrt(Math.pow(l.mx-p.mx,2)+Math.pow(l.my-p.my,2));s._process_status&n.IS_PINCH?i.pinch(t,-(a.sd-(a.sd=v))):Math.abs(v-a.sd)>s._mesh_value&&(s._process_status|=n.IS_PINCH,i.pinch(t,-(a.sd-(a.sd=v)),[h,d]))}if(i.rotate){var y=0===r?1:r,m=c[0].mx-c[y].mx,g=c[0].my-c[y].my,b=Math.atan2(g,m);b*a.ra<=0&&(a.ra=-a.ra),s._process_status&n.IS_ROTATE?(i.rotate(t,b-a.ra),a.ra=b):Math.abs(b-a.ra)>.01*Math.PI&&(s._process_status|=n.IS_ROTATE,i.rotate(t,b-a.ra,[h,d]),a.ra=b)}},s.cursorMove=function(t){s.eventDispenser(t,s._points.length<2?s._move:s._move2)},s._leave=function(t,e,r){var n;s._identifiers.splice(r,1),s._points.splice(r,1);var a=o.STATES,c=s._identifiers.length,l=s._activated_listener;switch(!0){case c<1:s.setListener((i(n={},a.MOUSE_DOWN,!0),i(n,a.MOUSE_MOVE,!1),i(n,a.MOUSE_UP,!1),i(n,a.TOUCH_MOVE,!1),i(n,a.TOUCH_END,!1),i(n,a.TOUCH_CANCEL,!1),n)),s._process_status=0,t&&(l.dragEnd&&l.dragEnd(t,e),l.click&&l.click(t,e));break;case t&&c<s._max_points:if(s._process_status=a.IS_DRAG,t.targetTouches&&t.targetTouches.length>=s._max_points){var p=t.targetTouches,u=Array.isArray(p),f=0;for(p=u?p:p[Symbol.iterator]();;){var _;if(u){if(f>=p.length)break;_=p[f++]}else{if((f=p.next()).done)break;_=f.value}var h=_;if(-1===s._identifiers.indexOf(h.identifier)){s.registPoint(t,h);break}}}}},s.cursorUp=function(t){s.eventDispenser(t,s._leave)},s.keyDown=function(t){var e=s._process_values.kd_tasks;function r(r){if(r){for(var o=r._listeners?r._listeners.length:0,n=0;n<o;n++)if(!0===r._listeners[n](t,r._path))return!0;r._reference>o&&-1===e.indexOf(r)&&e.push(r)}}var n=o._PRIVATE_METHODS.get_keys(t);if(!e.some((function(t){return n.some((function(e){return r(t[e])}))}))){var i=n,a=Array.isArray(i),c=0;for(i=a?i:i[Symbol.iterator]();;){var l;if(a){if(c>=i.length)break;l=i[c++]}else{if((c=i.next()).done)break;l=c.value}var p=l;if(r(s._registered_listener.keyDown[p]))break}}},s.keyUp=function(t){for(var e=o._PRIVATE_METHODS.get_keys(t),r=s._process_values.kd_tasks,n=function(t){e.some((function(e){return-1!==r[t]._parts.indexOf(e)}))&&r.splice(t--,1),i=t},i=0;i<r.length;i++)n(i);var a=s._registered_listener.keyUp,c=e,l=Array.isArray(c),p=0;for(c=l?c:c[Symbol.iterator]();;){var u;if(l){if(p>=c.length)break;u=c[p++]}else{if((p=c.next()).done)break;u=p.value}var f=u;a[f]&&a[f].some((function(e){return e(t)}))}},s.keyPress=function(t){var e=o._PRIVATE_METHODS.get_keys(t),r=s._registered_listener.keyPress,n=e,i=Array.isArray(n),a=0;for(n=i?n:n[Symbol.iterator]();;){var c;if(i){if(a>=n.length)break;c=n[a++]}else{if((a=n.next()).done)break;c=a.value}var l=c;r[l]&&r[l].some((function(e){return e(t)}))}},s.registListener(e),s}return f(o,[{key:\"on\",value:function(t,e){return this.updateListener(i({},t,e))}},{key:\"off\",value:function(t,e){return this.updateListener(i({},t,e),!0)}},{key:\"activate\",value:function(){this.updateListener()}},{key:\"disable\",value:function(){var t=this;this.setListener(Object.keys(this._listener_status).reduce((function(e,r){return t._listener_status[r]&&(e[r]=!1),e}),{}))}},{key:\"updateListener\",value:function(t,e){var r,n=this._registered_listener,s=o.STATES;if(t)for(var a in t)for(var c in o.PATTERN_MAP)o.PATTERN_MAP[c].test(a)&&(o._LISTENER_PREPROCESSOR[c]?t[a]&&o._LISTENER_PREPROCESSOR[c].call(this,a,t[a],e):n[c]=e?null:t[a]);this._max_points=n.pinch||n.rotate||n.dragMove2?2:1;var l=!!(n.dragStart||n.dragMove||n.dragMove2||n.dragEnd||n.click||n.pinch||n.rotate);return this.setListener((i(r={},s.MOUSE_DOWN,l),i(r,s.TOUCH_START,l),i(r,s.KEY_DOWN,n.keyDown._reference>0),i(r,s.KEY_UP,n.keyDown._reference>0||n.keyUp._reference>0),i(r,s.KEY_PRESS,n.keyPress._reference>0),r)),this}},{key:\"break\",value:function(){for(var t=this._identifiers.length;--t>=0;)this._leave(void 0,void 0,t)}},{key:\"removePoint\",value:function(t){isNaN(t)&&(t=t?this._identifiers.indexOf(t.identifier||o.MOUSE_EVENT_ID):0),this._leave(void 0,void 0,t)}},{key:\"addPoint\",value:function(t,e){var r=this._points,n=o.CURSOR_EVENT_HANDLES.length;if(0===r.length){var i=this._registered_listener,s=e&&i.dragStart&&i.dragStart(e,t)||!1;if(!0===s)return;n=0,o.CURSOR_EVENT_HANDLES.reduce((function(t,e){return i[e]&&(!1===s||~s.indexOf(e))?(n++,t[e]=i[e]):delete t[e],t}),this._activated_listener)}(n>1||n>0&&!this._activated_listener.dragStart)&&this.registPoint(e,t)}},{key:\"registPoint\",value:function(t){var e,r,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t,s=o.STATES,a=this._points,c=this._activated_listener,l=n[this.pointX],p=n[this.pointY];switch(a.push({dx:l,dy:p,mx:l,my:p}),this._identifiers.push(isNaN(n.identifier)?o.MOUSE_EVENT_ID:n.identifier),a.length){case 1:this._process_status=s.IS_DRAG,r=this._is_mouse_event,this.setListener((i(e={},s.MOUSE_DOWN,r),i(e,s.MOUSE_MOVE,r),i(e,s.MOUSE_UP,r),i(e,s.TOUCH_MOVE,!r),i(e,s.TOUCH_END,!r),i(e,s.TOUCH_CANCEL,!r),e));break;case 2:this._process_values.sd=Math.sqrt(Math.pow(a[0].mx-a[1].mx,2)+Math.pow(a[0].my-a[1].my,2)),this._process_values.ra=Math.atan2(a[0].my-a[1].my,a[0].mx-a[1].mx),c.click&&(c.click=!1)}}},{key:\"registListener\",value:function(t){this.updateListener(t)}},{key:\"removeListener\",value:function(t){t&&this.updateListener(t,!0)}}]),o}(h);try{window.InputListener=d}catch(t){}t.exports=d}])},,,,,,function(t,e,r){\"use strict\";r.r(e);var o=r(0),n=r(3).default,i=document.createElement(\"ul\");i.className=\"mutex-box\",document.body.appendChild(i);var s=0,a=Object(o.get_option)(),c=Array.prototype.concat.apply([],new Array(10).fill(0).map(o.get_models));p(c);var l=new n(i,c,a);function p(t){var e=function(){if(o){if(n>=r.length)return\"break\";a=r[n++]}else{if((n=r.next()).done)return\"break\";a=n.value}var t,e=a,c=e.element?e.element():((t=document.createElement(\"li\")).className=\"mb-item\",e.innerHTML&&(t.innerHTML=e.innerHTML),t);if(e.style)for(var l in e.style)c.style[l]=e.style[l];i.appendChild(c);var p=e.left,u=e.top,f=e.width,_=e.height,h=e.dragging;Object.defineProperties(e,{left:{get:function(){return p},set:function(t){p=t,c.style.left=p+\"px\"}},top:{get:function(){return u},set:function(t){u=t,c.style.top=u+\"px\"}},width:{get:function(){return f},set:function(t){f=t,c.style.width=f+\"px\"}},height:{get:function(){return _},set:function(t){_=t,c.style.height=_+\"px\"}},dragging:{get:function(){return h},set:function(t){h=t,c.style.zIndex=++s,c.className=h?\"mb-item dragging\":\"mb-item\"}}})},r=t,o=Array.isArray(r),n=0;for(r=o?r:r[Symbol.iterator]();;){var a;if(\"break\"===e())break}return t}btn_col_inc.onclick=function(){l.resize(a.ncols+1)},btn_col_dec.onclick=function(){l.resize(a.ncols-1)},btn_trim.onclick=function(){l.trim()},btn_add.onclick=function(){l.add(p(Object(o.get_models)().map((function(t){return t.col=void 0,t}))))},console.log(l)}])}));\n//# sourceMappingURL=test.js.map\n}).toString()","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n"],"sourceRoot":""}