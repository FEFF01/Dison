{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/syntax/head.ts","webpack:///./js/character.ts","webpack:///./js/tokenizer.ts","webpack:///./js/interfaces.ts","webpack:///./js/lexical/head.ts","webpack:///./js/lexical/index.ts","webpack:///(webpack)/buildin/module.js","webpack:///./js/parser.ts","webpack:///./js/syntax/expression.ts","webpack:///./js/syntax/declaration.ts","webpack:///./js/index.ts","webpack:///./js/syntax/pattern.ts","webpack:///./js/syntax/statement.ts","webpack:///./js/syntax/module_declaration.ts","webpack:///./js/test.ts","webpack:///./js/test/esprima.js","webpack:///./js/test/test_data1.js","webpack:///(webpack)/buildin/harmony-module.js","webpack:///(webpack)/buildin/amd-options.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","type_punctuator","TYPE_ENUMS","Punctuator","type_keyword","Keyword","type_identifier","Identifier","_Punctuator","values","unshift","_Or","_Keyword","_Identifier","_Pattern","args","OPERATOR_ID","_calc_nth","props","nth","Cover","length","Mark","prop","_key","undefined","data","origin","operands","sub_operators","pipe","this","_pipes","push","walk","walker","bind_env","_walker","_bind_env","_factors","operand","Operator","parts","replace","split","slice","map","parents","factor","pipes","result","concat","attach","type","prev_item","root","getNode","reduce","res","value_node","console","warn","parent","child","setWrap","records","getDeepNodes","children","factors","getNextNodes","Array","apply","context","index","MATCHED_RECORD","_get_wrapper_function","_Option","Option","some","Or","_Series","Series","_NonCapturing","NonCapturing","_NonCollecting","NonCollecting","_Loop","Loop","_Mark","NODES","Grouping","node","grouping","range","loc","Directive","expression","directive","Script","body","sourceType","Module","_get_adapt","eval","createMatchTree","block_list","prevent_update","item","wrapper","collectors","handlers","overload","precedences","filters","validators","indexOf","filter","handler","validator","collector","precedence","Number","_collector","nodes","operator","last_node","matched_record","_Context","parser","state_stack","wrap","unwrap","store","restore_point","arguments","restore","point","getToken","tokens","pop","FutureReservedWord","StrictModeReservedWord","RestrictedWord","isFutureReservedWord","id","isStrictModeReservedWord","isRestrictedWord","_if_strict_throw_err","token","err","_if_reserved_throw_err","validateIdentifier","THROW_RESTRICT_WORDS_PATTERN","THROW_STRICT_RESERVED_WORDS_PATTERN","IDENTIFIER_OR_THROW_STRICT_RESERVED_WORDS_PATTERN","EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN","IDENTIFIER_OR_VALIDATE_STRICT_RESERVED_WORDS_PATTERN","EXPRESSION_OR_VALIDATE_STRICT_RESERVED_WORDS_PATTERN","validateAssignment","validateBinding","binding_set","validateLineTerminator","collected","right","_next","next_token","start","line","end","_SuccessCollector","pattern","Success","join_content","success","content","TYPE_ALIAS","ASSIGNMENT_PUNCTUATORS_PATTERN","MODULE_ITEM_PATTERN","STATEMANT_LIST_ITEM_PATTERN","RIGHT_SIDE_TOPLEVEL_ITEM_PATTERN","TOPLEVEL_ITEM_PATTERN","isAligned","left","attachLocation","source","start_loc","end_loc","column","reinterpretKeywordAsIdentifier","tokenizer","_volatility","identifier","configurable","reinterpretIdentifierAsKeyword","_Validate","is_right_parentheses","is_right_brackets","is_right_braces","extract_success","parse_and_extract","match_tree","parseCustom","get_inner_group","parse_next_statement","SYNTAX_TREE","isStatementListItem","token_hooks","AsyncGetter","await_tasks","async_data","is_open","async_mapper","open","tasks","task","callback","set","cbfun","async_getter","IdentifierStart","IdentifierPart","testCodePoint","regexp","input","charCodeAt","test","testUnicodeEscape","code","cp","hexValue","len","fromCodePoint","scanHex","ch","decimalValue","octalValue","binaryValue","isWhiteSpace","isLineTerminator","String","fromCharCode","inIdentifierStart","inIdentifierPart","options","save_comments","error_logs","init","line_number","line_start","terminator_stack","curly_stack","tokenize","nextToken","_nextToken","hook","Comments","createToken","match","prev_node","target","scanner","nextIdentifier","str","TOKEN_TYPE_MAPPERS","isPrimaryExprStart","nextPunctuator","PRIMARY_EXPR_START_PUNCTUATORS_TREE","PUNCTUATORS_TREE","nextNumeric","number","flags","_get_token","Numeric","_get_error","message","error","NUMERIC_KEYWORD_MAPPINGS","skipNonsenses","createSearchTree","part","_Scanner","use_escape_mode","char","scan_tree","backslash_count","self","has_escape","_finally","splice","end_index","_scopes","TOKEN_TYPE_SET","octal_escape","octal","octal_escape_tree","strbase_scan_tree","not_allow_octal_escape","template_base","shift","PUNCTUATORS","escape_scan","bound","REGEXP_DESCRIPTOR","class_marker","regex","Boolean","RegularExpression","Template","TemplateElement","Null","webpackPolyfill","deprecate","paths","padding_token","parse","parseScript","parseModule","_parse","script","parseExpression","parseNode","EXPRESSION_TREE","isExpression","parseRangeAsNode","lexcal_terminator","parseRange","parseRangeAsExpression","parseRangeAsBlock","match_tree_stack","context_stack","environments","begin","extreme","state","cursor","backflow_tape","finallize","longest","longest_precedence","extreme_precedence","before_token","after_token","next","minimum","explore","matched","get_records","matched_node","has_backflow","type_node","alias","createNode","offset","restore_volatility","start_token","end_token","record","parseArrayPattern","parseObjectPattern","walk_primary_expression","PRIMARY_EXPRESSION_TREE","getLiteral","parse_value","raw","getStringLiteral","getRegularLiteral","RegExp","e","init_token_hooks","ARGUMENTS_PATTERN","ARGUMENTS_TREE","PARAMS_PATTERN","PARAMS_TREE","kind","params","params_count","BODY_PATTERN","generator","async","body_context","block","BlockStatement","FUNCTION_BODY_PATTERN","PrimaryExpressions","PROPERTIES_TREE","_","expressions","quasis","tail","cooked","__","parse_params","superClass","METHOD_DEFINITIONS_TREE","Expressions","elements","ARRAY_ELEMENTS_TREE","properties","OBJECT_PROPERTIES_TREE","tag","quasi","computed","meta","callee","first_token","first_token_type","argument","prefix","delegate","expr","SequenceExpression","COMPUTED_PROPERTY_NAME_PATTERN","LITERAL_PROPERTY_NAME_PATTERN","PROPERTY_NAME_PATTERN","MethodDefinitions","MethodDefinition","_prev","static","_static","FunctionExpression","Arguments","validateParamDeclarator","validate","element","Params","ArrayElements","UNIT_EXPRESSION_TREE","Properties","method","shorthand","ObjectProperties","Patterns","type_name","get_variable_declarator","VARIABLE_DECLARATOR_TREE","VariableDeclarators","reinterpreat_expression_as_declaration","Declarations","declarations","EXPRESSION_ITEM_PATTERN","DECLARATION_ITEM_PATTERN","STATEMENT_ITEM_PATTERN","STATEMENT_LIST_ITEM_PATTERN","descriptor","patterns","isDeclaration","isStatement","isModuleItem","Tokenizer","Parser","Dison","PETTERN_ELEMENTS_TREE","PATTERN_PROPERTIES_TREE","PatternElements","PatternProperties","ArrayPattern","is_binding","ObjectPattern","AssignmentPattern","Property","_value","STATEMANT_LIST_ITEM_AND_VALIDATE_DECLARATION_PATTERN","BLOCK_STATEMENT_PATTERN","GROUPING_EXPRESSION","Statements","label","keyword","iterator","FOR_ITERATOR_TREE","consequent","alternate","label_name","label_set","discriminant","cases","has_default","param","finalizer","statements","ForIterator","VariableDeclaration","ForStatement","update","STRING_LITERAL_PATTERN","ImportSpecifiers","ImportSpecifier","imported","local","IMPORT_SPECIFIERS_TREE","EXPORT_SPECIFIERS_TREE","ExportSpecifier","exported","ModuleDeclarations","specifiers","declaration","a","b","esprima","data0","window","innerHTML","test_data","time","log","timeEnd","weakEqual","table","control","output","equal","keys","Set","from","factory","loaded","comment_handler_1","jsx_parser_1","parser_1","tokenizer_1","commentHandler","proxyDelegate","metadata","visit","parserDelegate","collectComment","comment","attachComment","CommentHandler","isModule","jsx","JSXParser","ast","comments","config","tolerant","errors","errorHandler","parsingOptions","getNextToken","tolerate","syntax_1","Syntax","version","stack","leading","trailing","insertInnerComments","innerComments","entry","findTrailingComments","trailingComments","last","firstComment","findLeadingComments","leadingComments","visitNode","Program","visitComment","AssignmentExpression","ArrayExpression","ArrowFunctionExpression","AwaitExpression","BinaryExpression","BreakStatement","CallExpression","CatchClause","ClassBody","ClassDeclaration","ClassExpression","ConditionalExpression","ContinueStatement","DoWhileStatement","DebuggerStatement","EmptyStatement","ExportAllDeclaration","ExportDefaultDeclaration","ExportNamedDeclaration","ExpressionStatement","ForOfStatement","ForInStatement","FunctionDeclaration","IfStatement","Import","ImportDeclaration","ImportDefaultSpecifier","ImportNamespaceSpecifier","Literal","LabeledStatement","LogicalExpression","MemberExpression","MetaProperty","NewExpression","ObjectExpression","RestElement","ReturnStatement","SpreadElement","Super","SwitchCase","SwitchStatement","TaggedTemplateExpression","TemplateLiteral","ThisExpression","ThrowStatement","TryStatement","UnaryExpression","UpdateExpression","VariableDeclarator","WhileStatement","WithStatement","YieldExpression","extendStatics","__extends","setPrototypeOf","__proto__","constructor","character_1","JSXNode","jsx_syntax_1","Node","token_1","xhtml_entities_1","getQualifiedElementName","elementName","qualifiedName","JSXSyntax","JSXIdentifier","JSXNamespacedName","namespace","JSXMemberExpression","TokenName","_super","parsePrimaryExpression","parseJSXRoot","startJSX","startMarker","lineNumber","lineStart","finishJSX","reenterJSX","expectJSX","createJSXNode","collectComments","createJSXChildNode","scanXHTMLEntity","quote","valid","terminated","numeric","hex","eof","Character","isDecimalDigit","isHexDigit","substr","parseInt","XHTMLEntities","lexJSX","n1","n2","isIdentifierStart","isIdentifierPart","lex","nextJSXToken","lastMarker","convertToken","nextJSXText","text","peekJSXToken","saveState","scanComments","restoreState","throwUnexpectedToken","matchJSX","parseJSXIdentifier","finalize","parseJSXElementName","name_1","parseJSXAttributeName","attributeName","name_2","parseJSXStringLiteralAttribute","getTokenRaw","parseJSXExpressionAttribute","tolerateError","parseAssignmentExpression","JSXExpressionContainer","parseJSXAttributeValue","parseJSXElement","parseJSXNameValueAttribute","JSXAttribute","parseJSXSpreadAttribute","JSXSpreadAttribute","parseJSXAttributes","attributes","attribute","parseJSXOpeningElement","selfClosing","JSXOpeningElement","parseJSXBoundaryElement","JSXClosingElement","parseJSXEmptyExpression","JSXEmptyExpression","parseJSXExpressionContainer","parseJSXChildren","JSXText","container","parseComplexJSXElement","el","opening","JSXElement","closing","open_1","isStartOfExpression","Regex","NonAsciiIdentifierStart","NonAsciiIdentifierPart","isOctalDigit","openingElement","closingElement","AsyncArrowFunctionExpression","AsyncFunctionDeclaration","AsyncFunctionExpression","logical","ComputedMemberExpression","each","isStatic","RegexLiteral","StaticMemberExpression","assert_1","error_handler_1","messages_1","scanner_1","ErrorHandler","Scanner","trackComment","operatorPrecedence","lookahead","hasLineTerminator","await","allowIn","allowStrictDirective","allowYield","firstCoverInitializedNameError","isAssignmentTarget","isBindingElement","inFunctionBody","inIteration","inSwitch","labelSet","strict","throwError","messageFormat","_i","msg","whole","idx","assert","createError","unexpectedTokenError","Messages","UnexpectedToken","UnexpectedEOS","UnexpectedIdentifier","UnexpectedNumber","UnexpectedString","UnexpectedTemplate","UnexpectedReserved","StrictReservedWord","lastMarkerLineStart","tolerateUnexpectedToken","multiLine","nextRegexToken","scanRegExp","startNode","lastLineStart","marker","expect","expectCommaSeparator","expectKeyword","matchKeyword","matchContextualKeyword","matchAssign","op","isolateCoverGrammar","parseFunction","previousIsBindingElement","previousIsAssignmentTarget","previousFirstCoverInitializedNameError","inheritCoverGrammar","consumeSemicolon","matchAsyncFunction","parseFunctionExpression","StrictOctalLiteral","parseTemplateLiteral","parseGroupExpression","parseArrayInitializer","parseObjectInitializer","parseIdentifierName","parseClassExpression","matchImportCall","parseImportCall","parseSpreadElement","arg","parsePropertyMethod","previousStrict","previousAllowStrictDirective","simple","parseFunctionSourceElements","firstRestricted","stricted","parsePropertyMethodFunction","previousAllowYield","parseFormalParameters","parsePropertyMethodAsyncFunction","previousAwait","parseObjectPropertyKey","isPropertyKey","parseObjectProperty","hasProto","isAsync","lookaheadPropertyKey","qualifiedPropertyName","parseGetterMethod","parseSetterMethod","parseGeneratorMethod","DuplicateProtoProperty","parseTemplateHead","head","parseTemplateElement","reinterpretExpressionAsPattern","startToken","parseRestElement","arrow","parseArguments","isIdentifierName","parseNewExpression","parseLeftHandSideExpression","parseAsyncArgument","parseAsyncArguments","parseLeftHandSideExpressionAllowCall","maybeAsync","previousAllowIn","asyncArrow","BadImportCallArity","parseSuper","parseUpdateExpression","parseUnaryExpression","StrictLHSPrefix","InvalidLHSInAssignment","StrictLHSPostfix","parseAwaitExpression","StrictDelete","parseExponentiationExpression","binaryPrecedence","parseBinaryExpression","prec","markers","parseConditionalExpression","checkPatternParam","validateParam","reinterpretAsCoverFormalsList","paramSet","StrictParamDupe","parseYieldExpression","list","StrictLHSAssignment","parseStatementListItem","statement","IllegalExportDeclaration","parseExportDeclaration","parseExpressionStatement","IllegalImportDeclaration","parseImportDeclaration","parseLexicalDeclaration","inFor","parseFunctionDeclaration","parseClassDeclaration","isLexicalDeclaration","parseStatement","parseBlock","parseLexicalBinding","parsePattern","StrictVarName","DeclarationMissingInitializer","parseBindingList","parseBindingRestElement","parsePatternWithDefault","parsePropertyPattern","keyToken","parseVariableIdentifier","parseRestProperty","DefaultRestProperty","PropertyAfterRestProperty","LetInLexicalBinding","parseVariableDeclaration","parseVariableDeclarationList","opt","parseVariableStatement","parseEmptyStatement","parseIfClause","StrictFunction","parseIfStatement","parseDoWhileStatement","previousInIteration","parseWhileStatement","parseForStatement","forIn","decl","ForInOfLoopInitializer","initStartToken","InvalidLHSInForIn","InvalidLHSInForLoop","initSeq","parseContinueStatement","UnknownLabel","IllegalContinue","parseBreakStatement","IllegalBreak","parseReturnStatement","IllegalReturn","parseWithStatement","StrictModeWith","parseSwitchCase","parseSwitchStatement","previousInSwitch","defaultFound","clause","MultipleDefaultsInSwitch","parseLabelledStatement","Redeclaration","GeneratorInLegacyContext","parseThrowStatement","NewlineAfterThrow","parseCatchClause","paramMap","DuplicateBinding","StrictCatchVariable","parseFinallyClause","parseTryStatement","NoCatchOrFinally","parseDebuggerStatement","parseDirectivePrologues","previousLabelSet","previousInFunctionBody","StrictParamName","writable","DefaultRestParameter","ParameterAfterRestParameter","parseFormalParameter","identifierIsOptional","isGenerator","StrictFunctionName","previousAllowAwait","formalParameters","parseDirective","IllegalLanguageModeDirective","BadGetterArity","BadSetterArity","BadSetterRestParameter","parseClassElement","hasConstructor","punctuator","ConstructorIsAsync","StaticPrototype","ConstructorSpecialMethod","DuplicateConstructor","parseClassElementList","parseClassBody","elementList","classBody","parseModuleSpecifier","InvalidModuleSpecifier","parseImportSpecifier","parseNamedImports","parseImportDefaultSpecifier","parseImportNamespaceSpecifier","NoAsAfterImportNamespace","src","MissingFromClause","parseExportSpecifier","exportDeclaration","isExportFromIdentifier","condition","Error","recordError","constructError","base","col","description","InvalidEscapedReservedWord","InvalidHexEscapeSequence","InvalidRegExp","TemplateOctalLiteral","UnexpectedTokenIllegal","UnterminatedRegExp","toLowerCase","curlyStack","skipSingleLineComment","skipMultiLineComment","isKeyword","codePointAt","second","scanHexEscape","scanUnicodeCodePointEscape","getIdentifier","getComplexIdentifier","octalToDecimal","scanIdentifier","scanPunctuator","scanHexLiteral","num","scanBinaryLiteral","scanOctalLiteral","isImplicitOctalLiteral","scanNumericLiteral","parseFloat","scanStringLiteral","unescapedChar","unescaped","octToDec","scanTemplate","rawOffset","testRegExp","_this","tmp","$0","$1","$2","codePoint","exception","scanRegExpBody","classMarker","scanRegExpFlags","quot","amp","apos","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","tilde","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","loz","spades","clubs","hearts","diams","lang","rang","Reader","curly","paren","beforeFunctionExpression","isRegexStart","previous","check","trackRange","trackLoc","buffer","reader","define","Raw","toString","originalModule","__webpack_amd_options__"],"mappings":"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","file":"js/test.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n","\r\n\r\n\r\nimport {\r\n    NodeProp,\r\n    Cover as CoverInterface,\r\n    Mark as MarkInterface,\r\n    Node, Pipe, Connector,\r\n    Matched, CONTEXT, Context, Token, SourceLocation,\r\n    MATCHED,\r\n    MARKS,\r\n    /*PRECEDENCE_FEATURES,*/ PRECEDENCE, Precedence as PrecedenceInterface, MATCHED_RECORDS, Validate\r\n} from '../interfaces';\r\n\r\n\r\nimport {\r\n    TYPE_ENUMS\r\n} from \"../lexical/index\";\r\n\r\nimport Tokenizer from \"../tokenizer\"\r\nlet type_punctuator = TYPE_ENUMS.Punctuator;\r\nlet type_keyword = TYPE_ENUMS.Keyword;\r\nlet type_identifier = TYPE_ENUMS.Identifier;\r\n\r\n\r\nfunction _Punctuator(...values: Array<string | number>) {\r\n    values.unshift(type_punctuator);\r\n    return _Or(values);\r\n}\r\nfunction _Keyword(...values: Array<string | number>) {\r\n    values.unshift(type_keyword);\r\n    return _Or(values);\r\n}\r\nfunction _Identifier(...values: Array<string | number>) {\r\n    values.unshift(type_identifier);\r\n    return _Or(values);\r\n}\r\nfunction _Pattern(...args: Array<string | number>) {\r\n    return _Or(args);\r\n}\r\n\r\nimport Parser from '../parser'\r\nlet OPERATOR_ID = 0;\r\n\r\nfunction _calc_nth(props: Array<NodeProp>, key: string | Mark | Cover) {\r\n    let nth = 0;\r\n    if (!(key instanceof Cover) && props.length) {\r\n        key instanceof Mark && (key = key.key);\r\n        for (let i = props.length - 1; i >= 0; i--) {\r\n            let prop = props[i], _key = prop[0];\r\n            if (\r\n                _key === key\r\n                || _key instanceof Mark\r\n                && _key.key === key\r\n                && (_key.value !== undefined || _key.data !== Mark.prototype.data)\r\n            ) {\r\n                if (prop[1] === 0) {\r\n                    prop = props[i] = [prop[0], 1, prop[2]];\r\n                }\r\n                nth = prop[1] + 1;\r\n            } else if (\r\n                !(_key instanceof Cover && _key.origin === key)\r\n            ) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return nth;\r\n}\r\n\r\nabstract class Operator {\r\n    private _factors: Array<[string | number, Array<string | number>] | Operator | Mark>;\r\n    private _pipes: Array<Pipe>;\r\n    private _walker: Connector;\r\n    private _bind_env: boolean;\r\n    public sub_operators = [];\r\n    public test: (token: Token, index?: number) => boolean;\r\n    constructor(public operands: Operands) { }\r\n    public pipe(pipe: Pipe) {\r\n        if (this._pipes) {\r\n            this._pipes.push(pipe);\r\n        } else {\r\n            this._pipes = [pipe];\r\n        }\r\n        return this;\r\n    }\r\n    public walk(walker: Connector, bind_env?: boolean) {\r\n        this._walker = walker;\r\n        this._bind_env = !!bind_env;\r\n        return this;\r\n    }\r\n    public get factors() {\r\n        if (!this._factors) {\r\n            this._factors = [];\r\n            for (const operand of this.operands) {\r\n                if (operand instanceof Operator || operand instanceof Mark) {\r\n                    this._factors.push(operand);\r\n                } else {\r\n\r\n                    let parts = typeof operand === \"string\" ?\r\n                        operand.replace(/^\\s+|\\s+$/g, \"\").split(/\\s+/) :\r\n                        operand;\r\n                    this._factors.push(\r\n                        [\r\n                            parts[0],\r\n                            parts.length > 1\r\n                                ? parts.slice(1)\r\n                                : [MARKS.TYPE_ONLY]\r\n                        ]);\r\n                }\r\n            }\r\n        }\r\n        return this._factors;\r\n    }\r\n    abstract attach(parents: IterationRecord, key: string | Cover, pipes?: Array<Pipe>): IterationRecord;\r\n\r\n    protected map(\r\n        parents: IterationRecord,\r\n        factor: [string | number, Array<string | number>] | Operator | Mark,\r\n        key: string | Cover,\r\n        pipes?: Array<Pipe>\r\n    ) {\r\n        let result: IterationRecord = [];\r\n        let _pipes = pipes\r\n            ? this._pipes ?\r\n                this._pipes.concat(pipes)\r\n                : pipes\r\n            : this._pipes;\r\n        if (factor instanceof Operator || factor instanceof Mark) {\r\n            return factor.attach(parents, key, _pipes);\r\n        } else {\r\n            let type = factor[0], values = factor[1];\r\n            for (const prev_item of parents) {\r\n                let [root, props] = prev_item;\r\n                props = props.slice();\r\n                props.push([key, _calc_nth(props, key), _pipes]);\r\n                let parent = this.getNode(root, type);\r\n\r\n                let walker = this._walker;\r\n                if (walker && this._bind_env) {\r\n                    walker = walker.bind(\r\n                        props.reduce((res, prop) => {\r\n                            let key = prop[0];\r\n                            if (key instanceof Mark) {\r\n                                res[key.key] = key.value;\r\n                            } else {\r\n                                res[key instanceof Cover ? key.origin : key] = true;\r\n                            }\r\n                            return res;\r\n                        }, {})\r\n                    );\r\n                }\r\n\r\n                for (const value of values) {\r\n                    let value_node = this.getNode(parent, value, root);\r\n                    if (\r\n                        value_node[MARKS.WALKER]\r\n                        && value_node[MARKS.WALKER] !== walker\r\n                    ) {\r\n                        console.warn(\r\n                            \"conflict:\",\r\n                            value_node,\r\n                            value_node[MARKS.WALKER],\r\n                            walker\r\n                        );\r\n                    }\r\n                    if (walker) {\r\n                        value_node[MARKS.WALKER] = walker;\r\n                    }\r\n                    result.push(\r\n                        [\r\n                            value_node,\r\n                            props,\r\n                            null/*[root, factor[0], value, prev_item]//Loop*/\r\n                        ]\r\n                    );\r\n                }\r\n            }\r\n\r\n        }\r\n        return result;\r\n    }\r\n    private getNode(parent: any, key: string | number, root?: any) {\r\n        let child = parent[key];\r\n        if (child) {\r\n            if (child[MARKS.IDENTIFIER] !== OPERATOR_ID) {\r\n                parent[key] = child = { ...child };\r\n                child[MARKS.IDENTIFIER] = OPERATOR_ID;\r\n            }\r\n            return child;\r\n        }\r\n\r\n        child = parent[key] = {\r\n            [MARKS.IDENTIFIER]: OPERATOR_ID\r\n        };\r\n        if (root) {\r\n            child[MARKS.DEEPTH] = root[MARKS.DEEPTH] + 1;\r\n            root[MARKS.TERMINAL] = false;\r\n            child[MARKS.TERMINAL] = true;\r\n            /*if (root[MATCH_MARKS.MATCH_END]) {\r\n                root[MATCH_MARKS.MATCH_END][MATCHED_RECORDS.precedence][PRECEDENCE.TERMINAL] = false;\r\n            }*/\r\n        }\r\n        return child;\r\n    }\r\n    protected setWrap(records: IterationRecord) {//Loop\r\n        throw 'not used';\r\n        for (const record of records) {\r\n            let prev_item = record, curr_item = prev_item;\r\n            while ((curr_item = prev_item[2] && prev_item[2][3]) && curr_item[2]) {\r\n                prev_item = curr_item;\r\n            }\r\n            if (prev_item[2]) {\r\n                let linked = prev_item[2];\r\n                let node = this.getNode(record[0], linked[1]);\r\n                if (node[linked[2]] && node[linked[2]] !== prev_item[0]) {\r\n                    throw node[linked[2]];\r\n                }\r\n                node[linked[2]] = prev_item[0];\r\n            }\r\n        }\r\n        return records;\r\n    }\r\n    protected getDeepNodes(parents: IterationRecord, key: string | Cover, pipes?: Array<Pipe>) {\r\n        let children = parents, factors = this.factors;\r\n        for (const factor of factors) {\r\n            children = this.map(children, factor, key, pipes);\r\n        }\r\n        return children;\r\n    }\r\n    protected getNextNodes(parents: IterationRecord, key: string | Cover, pipes?: Array<Pipe>) {\r\n        let children = [], factors = this.factors;\r\n        for (const factor of factors) {\r\n            Array.prototype.push.apply(children, this.map(parents, factor, key, pipes));\r\n        }\r\n        return children;\r\n    }\r\n}\r\n\r\ntype Operand = string | /*number |*/ Operator | Mark | Array<string | number>;\r\ntype Operands = Array<Operand>;\r\ntype IterationRecordItem = [\r\n    Record<string, any>,\r\n    Array<NodeProp>,\r\n    [Record<string, any>, string, string, IterationRecordItem] | null\r\n]\r\ntype IterationRecord = Array<IterationRecordItem>;\r\n\r\nclass Option extends Operator {\r\n    attach(parents: IterationRecord, key: string, pipes?: Array<Pipe>) {\r\n        let children = this.getNextNodes(parents, key, pipes).concat(parents);\r\n        return children;\r\n    }\r\n}\r\nclass Or extends Operator {\r\n    attach(parents: IterationRecord, key: string, pipes?: Array<Pipe>) {\r\n        return this.getNextNodes(parents, key, pipes);\r\n    }\r\n}\r\n\r\nclass Series extends Operator {\r\n    attach(parents: IterationRecord, key: string, pipes?: Array<Pipe>) {\r\n        return this.getDeepNodes(parents, key, pipes);\r\n    }\r\n}\r\n/*\r\nclass And extends Operator  {\r\n    attach(parents: IterationRecord, key: string) {\r\n        throw \"not used\";\r\n        return [];\r\n    }\r\n}\r\nclass Not extends Operator {\r\n    attach(parents: IterationRecord, key: string) {\r\n        throw \"not used\";\r\n        return [];\r\n        \r\n    }\r\n}*/\r\nclass Cover implements CoverInterface {\r\n    constructor(public origin: any, public value: any) {\r\n        if (origin instanceof Cover) {\r\n            this.origin = origin.origin;\r\n        }\r\n    }\r\n}\r\nclass NonCapturing extends Operator {\r\n    attach(parents: IterationRecord, key: string | Cover, pipes?: Array<Pipe>) {\r\n        return this.getNextNodes(parents, new Cover(key, null), pipes);\r\n    }\r\n}\r\n\r\nclass NonCollecting extends Operator {\r\n    attach(parents: IterationRecord, key: string | Cover, pipes?: Array<Pipe>) {\r\n        return this.getNextNodes(parents, new Cover(key, \"\"), pipes);\r\n    }\r\n}\r\n\r\nclass Loop extends Operator {\r\n    //Loop 内部的 Option 可能会导致 Loop 取值混乱(当前用不到这种情况，不处理这种情况能减少消耗)\r\n    attach(parents: IterationRecord, key: string) {\r\n        throw 'not used';\r\n        //有点耗费性能，不是很必要用这个，已在parser核心部分去除Loop的支持\r\n        let baks = [];\r\n        for (const parent of parents) {\r\n            baks.push(parent[2]);\r\n            parent[2] = null;\r\n        }\r\n        let res = this.setWrap(this.getNextNodes(parents, key));\r\n        for (const index in parents) {\r\n            parents[index][2] = baks[index];\r\n        }\r\n        return res;\r\n    }\r\n}\r\n\r\nclass Mark implements MarkInterface {\r\n    static MATCHED_RECORD: Matched;\r\n    public key: string;\r\n    public value: any;\r\n    constructor(value?: any) {\r\n        if (typeof value === \"function\") {\r\n            this.data = value;\r\n        } else {\r\n            this.value = value;\r\n        }\r\n    }\r\n    data(context: Context, index: number) {\r\n        return this.value;\r\n    }\r\n    attach(parents: IterationRecord, key: string | Cover, pipes?: Array<Pipe>) {\r\n        let value = this.value;\r\n        if (!(key instanceof Cover) && (value !== undefined || this.data !== Mark.prototype.data)) {\r\n            if (key === \"type\") {\r\n                Mark.MATCHED_RECORD[MATCHED.wrapper] = _get_wrapper_function(value);;\r\n            } else {\r\n                let result: IterationRecord = [];\r\n                this.key = key;\r\n                for (const parent of parents) {\r\n                    let props = parent[1].slice();\r\n                    props.push([this, _calc_nth(props, this), undefined]);\r\n                    result.push([parent[0], props, parent[2]]);\r\n                }\r\n                return result;\r\n            }\r\n        }\r\n        return parents;\r\n    }\r\n}\r\n\r\nfunction _Option(...some: Operands) {\r\n    return new Option(some);\r\n}\r\n/*\r\nfunction _Not(...some: Operands) {\r\n    return new Not(some);\r\n}\r\nfunction _And(...some: Operands) {\r\n    return new And(some);\r\n}*/\r\nfunction _Or(...some: Operands) {\r\n    return new Or(some);\r\n}\r\nfunction _Series(...some: Operands) {\r\n    return new Series(some);\r\n}\r\nfunction _NonCapturing(...some: Operands) {\r\n    return new NonCapturing(some);\r\n}\r\nfunction _NonCollecting(...some: Operands) {\r\n    return new NonCollecting(some);\r\n}\r\n\r\n\r\nfunction _Loop(...some: Operands) {\r\n    return new Loop(some);\r\n}\r\nfunction _Mark(some?: any) {\r\n    return new Mark(some);\r\n}\r\nlet NODES: Record<string, (...args: any) => void> = {\r\n    Grouping: function (node?: Record<string, any>, grouping?: Token) {\r\n        this.type = \"Grouping\";\r\n        for (const key in node) {\r\n            this[key] = node[key];\r\n        }\r\n        if (grouping) {\r\n            this.range = grouping.range;\r\n            this.loc = grouping.loc;\r\n        }\r\n    },\r\n    Directive: function (\r\n        type: string,\r\n        expression: Node,\r\n        directive: string,\r\n        range: [number, number],\r\n        loc: SourceLocation\r\n    ) {\r\n        this.type = type;\r\n        this.expression = expression;\r\n        this.directive = directive;\r\n        this.range = range;\r\n        this.loc = loc;\r\n    },\r\n    Script: function (body: Array<Node>) {\r\n        this.type = \"Program\";\r\n        this.sourceType = \"script\";\r\n        this.body = body;\r\n    },\r\n    Module: function (body: Array<Node>) {\r\n        this.type = \"Program\";\r\n        this.sourceType = \"module\";\r\n        this.body = body;\r\n    }\r\n};\r\nfunction _get_adapt(data: any, index: number) {\r\n    return data instanceof Array ? index < data.length\r\n        ? data[index]\r\n        : data[data.length - 1] : data;\r\n}\r\nfunction _get_wrapper_function(type: string) {\r\n    return NODES[type]\r\n        || (\r\n            NODES[type]\r\n            = type ? eval(`(function ${type}(){this.type=\"${type}\"})`) : function () { }\r\n        );\r\n}\r\nfunction createMatchTree(\r\n    data: Record<string, any> | Array<Record<string, any>>,\r\n    root?: Record<string, any>,\r\n    block_list: Array<string> = [],\r\n    prevent_update = false\r\n) {\r\n    prevent_update || (OPERATOR_ID += 1);\r\n    root = root ? prevent_update ? root : { ...root } : { [MARKS.DEEPTH]: -1 };\r\n\r\n    if (data instanceof Array) {\r\n        for (const item of data) {\r\n            root = createMatchTree(item, root, block_list, true);\r\n        }\r\n    } else {\r\n        for (const type in data) {\r\n            let wrapper = _get_wrapper_function(type);\r\n            for (let item of data[type] instanceof Array ? data[type] : [data[type]]) {\r\n                let {\r\n                    collector: collectors,\r\n                    handler: handlers,\r\n                    overload,\r\n                    precedence: precedences = true/*PRECEDENCE_FEATURES.IMMEDIATE*/,\r\n                    filter: filters,\r\n                    validator: validators\r\n                } = item;\r\n                if (!collectors || ~block_list.indexOf(type)) {\r\n                    continue;\r\n                }\r\n                typeof filters === \"string\" && (filters = data[filters].filter);\r\n                typeof handlers === \"string\" && (handlers = data[handlers].handler);\r\n                typeof validators === \"string\" && (validators = data[validators].validator);\r\n                collectors instanceof Array || (collectors = [collectors]);\r\n\r\n                for (let index = 0; index < collectors.length; index++) {\r\n                    let collector = collectors[index];\r\n\r\n                    let precedence: any = _get_adapt(precedences, index);\r\n                    let handler: Matched[MATCHED.handler] = _get_adapt(handlers, index);\r\n                    let filter: Matched[MATCHED.filter] = _get_adapt(filters, index);\r\n                    let validator: Matched[MATCHED.validator] = _get_adapt(validators, index);\r\n                    Mark.MATCHED_RECORD = [\r\n                        [precedence instanceof Number ? Number(precedence) : precedence, precedence],\r\n                        null,\r\n                        wrapper,\r\n                        handler,\r\n                        validator,\r\n                        filter\r\n                    ];\r\n                    if (collector instanceof Array) {\r\n                        let _collector = { ...collectors[index - 1] };\r\n                        collector[0] && !(collector[0] instanceof Array) && (collector = [collector]);\r\n                        for (const [key, value] of collector) {\r\n                            _collector[key] = value;\r\n                        }\r\n                        collectors[index] = collector = _collector;\r\n                    }\r\n\r\n                    let nodes: IterationRecord = [[root, [], null]];\r\n\r\n                    //保证所有 key 都是同类型字符开头(否则可能会出现遍历顺序与定义顺序不同)\r\n                    for (const key in collector) {\r\n                        let operator = collector[key];\r\n                        if (!(operator instanceof Operator || operator instanceof Mark)) {\r\n                            operator = _Or(operator);\r\n                        }\r\n                        nodes = operator.attach(nodes, key);\r\n                    }\r\n\r\n                    for (const [last_node, props] of nodes) {\r\n                        let matched_record = Mark.MATCHED_RECORD.slice();\r\n                        matched_record[MATCHED.props] = props;\r\n                        if (!overload && last_node[MARKS.END]) {\r\n                            console.warn(\r\n                                \"conflict:\",\r\n                                last_node,\r\n                                last_node[MARKS.END],\r\n                                matched_record\r\n                            );\r\n                        }\r\n                        last_node[MARKS.END] = matched_record\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n    return root;\r\n\r\n}\r\n\r\nfunction _Context(parser: Parser): Context {\r\n    let state_stack = [];\r\n    let context: any = new Array(CONTEXT.length);\r\n    context[CONTEXT.parser] = parser;\r\n    context[CONTEXT.labelSet] = [];\r\n    //context[CONTEXT.tokens] = tokens;\r\n    context.wrap = wrap;\r\n    context.unwrap = unwrap;\r\n    context.store = store;\r\n    context.restore = restore;\r\n    context.getToken = getToken;\r\n    Object.defineProperty(context, \"tokens\", {\r\n        get() {\r\n            return this[CONTEXT.tokens] || this[CONTEXT.parser].tokens;\r\n        }\r\n    })\r\n    return context;\r\n\r\n    function getToken(index: number) {\r\n        let tokens = this[CONTEXT.tokens];\r\n        return !tokens ? this[CONTEXT.parser].getToken(index) : tokens[index];\r\n        //return context[CONTEXT.tokens][index];\r\n    }\r\n    function wrap(key: CONTEXT, value: any) {\r\n        state_stack.push(context[key], key);\r\n        context[key] = value;\r\n        return context;\r\n    };\r\n    function unwrap() {\r\n        context[state_stack.pop()] = state_stack.pop();\r\n        return context;\r\n    };\r\n    function store() {\r\n        let restore_point = state_stack.length;\r\n        for (let index = 0; index < arguments.length; index += 2) {\r\n            wrap(arguments[index], arguments[index + 1]);\r\n        }\r\n        return restore_point;\r\n    }\r\n    function restore(point: number) {\r\n        while (state_stack.length > point) {\r\n            unwrap();\r\n        }\r\n        return state_stack.length;\r\n    }\r\n}\r\nconst FutureReservedWord = [\"enum\", \"export\", \"import\", \"super\"];\r\nconst StrictModeReservedWord = [\r\n    \"implements\", \"interface\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\", \"let\"\r\n];\r\nconst RestrictedWord = [\"eval\", \"arguments\"];\r\n\r\nfunction isFutureReservedWord(id: string) {\r\n    return FutureReservedWord.indexOf(id) >= 0;\r\n}\r\nfunction isStrictModeReservedWord(id: string) {\r\n    return StrictModeReservedWord.indexOf(id) >= 0;\r\n}\r\nfunction isRestrictedWord(id: string) {\r\n    return RestrictedWord.indexOf(id) >= 0;\r\n}\r\n\r\n\r\nfunction _if_strict_throw_err(context: Context, token: Token) {\r\n    if (context[CONTEXT.strict]) {\r\n        context[CONTEXT.parser].err(token);\r\n    }\r\n}\r\nfunction _if_reserved_throw_err(context: Context, token: Token) {\r\n    validateIdentifier(context, token);\r\n}\r\nconst THROW_RESTRICT_WORDS_PATTERN = _Or(\r\n    \"Identifier eval arguments\"\r\n).pipe(_if_strict_throw_err);\r\nconst THROW_STRICT_RESERVED_WORDS_PATTERN = _Or(\r\n    \"Identifier implements interface package private protected public static yield let\"\r\n).pipe(_if_strict_throw_err);\r\n\r\nconst IDENTIFIER_OR_THROW_STRICT_RESERVED_WORDS_PATTERN = _Or(\"Identifier\", THROW_STRICT_RESERVED_WORDS_PATTERN);\r\nconst EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN = _Or(\"[Expression]\", THROW_STRICT_RESERVED_WORDS_PATTERN);\r\n\r\nconst IDENTIFIER_OR_VALIDATE_STRICT_RESERVED_WORDS_PATTERN = _Or(\"Identifier\").pipe(_if_reserved_throw_err);\r\nconst EXPRESSION_OR_VALIDATE_STRICT_RESERVED_WORDS_PATTERN = _Or(\r\n    \"[Expression]\",\r\n    IDENTIFIER_OR_VALIDATE_STRICT_RESERVED_WORDS_PATTERN\r\n);\r\n\r\n\r\n/*const STRICT_RESERVED_WORDS = _Or(\r\n    \"Identifier implements interface package private protected public static yield let\"\r\n);*/\r\nfunction validateIdentifier(context: Context, node: Node) {\r\n    if (\r\n        context[CONTEXT.strict]\r\n    ) {\r\n        if (!isStrictModeReservedWord(node.name)) {\r\n            return true;\r\n        }\r\n        context[CONTEXT.parser].err(node);\r\n        return false;\r\n    }\r\n}\r\nfunction validateAssignment(context: Context, node: Node) {\r\n    if (\r\n        context[CONTEXT.strict]\r\n    ) {\r\n        if (!(\r\n            isRestrictedWord(node.name)\r\n            || isStrictModeReservedWord(node.name)\r\n        )) {\r\n            return true;\r\n        }\r\n        context[CONTEXT.parser].err(node);\r\n        return false;\r\n    }\r\n}\r\nfunction validateBinding(context: Context, node: Node) {\r\n    if (validateAssignment(context, node) === true) {\r\n        let binding_set = context[CONTEXT.bindingSet];\r\n        if (binding_set) {\r\n            binding_set.push(node.name);\r\n            if (binding_set.indexOf(node.name) !== binding_set.length - 1) {\r\n                context[CONTEXT.parser].err(node);\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}\r\nfunction validateLineTerminator(context: Context) {\r\n    let [collected, parser, , right] = context;\r\n    if (collected._next) {\r\n        delete collected._next;\r\n    } else {\r\n        let next_token = context.getToken(right + 1);\r\n        if (\r\n            next_token\r\n            && !(next_token.type === type_punctuator && next_token.value === \"}\")\r\n            && next_token.loc.start.line === collected.loc.end.line\r\n        ) {\r\n            parser.err(next_token);\r\n        }\r\n    }\r\n    return collected;\r\n}\r\n\r\nfunction _SuccessCollector(pattern: string | Operator) {\r\n    return {\r\n        Success: {\r\n            handler: join_content,\r\n            precedence: 0,\r\n            collector: [\r\n                {\r\n                    success: _Or(_NonCollecting(MARKS.BOUNDARY), \"Success\"),\r\n                    content: pattern,\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n}\r\n\r\nlet join_content = function ([collected]: Context) {\r\n    let { success, content } = collected;\r\n    if (success) {\r\n        success.content.push(content);\r\n        return success;\r\n    } else {\r\n        collected.content = [content];\r\n        return collected;\r\n    }\r\n};\r\n\r\nlet TYPE_ALIAS = {};\r\n\r\nconst ASSIGNMENT_PUNCTUATORS_PATTERN = _Or(\"Punctuator = += -= **= *= /= %= <<= >>= >>>= &= ^= |=\");\r\n\r\n\r\nconst MODULE_ITEM_PATTERN = _Or(\r\n    \"ImportDeclaration\",\r\n    \"ExportAllDeclaration\",\r\n    \"ExportNamedDeclaration\",\r\n    \"ExportDefaultDeclaration\"\r\n);\r\nconst STATEMANT_LIST_ITEM_PATTERN = _Or(\"[Declaration]\", \"[Statement]\");\r\n\r\nconst RIGHT_SIDE_TOPLEVEL_ITEM_PATTERN = _Or(\r\n    \"SwitchCase\",\r\n    MODULE_ITEM_PATTERN,\r\n    STATEMANT_LIST_ITEM_PATTERN\r\n);\r\nconst TOPLEVEL_ITEM_PATTERN = _Or(\r\n    MARKS.BOUNDARY,\r\n    \"SwitchCase\",\r\n    MODULE_ITEM_PATTERN,\r\n    STATEMANT_LIST_ITEM_PATTERN\r\n);\r\n\r\nfunction isAligned(context: Context, left: number, right: number) {\r\n    let tokens = context.tokens;\r\n    for (let index = left; index < right; index++) {\r\n        if (tokens[index].loc.end.line !== tokens[index + 1].loc.start.line) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction attachLocation(source: Node, start: Node, end: Node = start) {\r\n    let start_loc = start.loc.start;\r\n    let end_loc = end.loc.end;\r\n    source.range = [start.range[0], end.range[1]];\r\n    source.loc = {\r\n        start: { line: start_loc.line, column: start_loc.column },\r\n        end: { line: end_loc.line, column: end_loc.column }\r\n    };\r\n}\r\n\r\n\r\nfunction reinterpretKeywordAsIdentifier({ value, range, loc }: Token, tokenizer?: Tokenizer): Node {\r\n    let name = tokenizer ? tokenizer._volatility : value;\r\n    let identifier = {\r\n        type: \"Identifier\", name, range, loc\r\n    };\r\n    Object.defineProperty(identifier, \"value\", {\r\n        configurable: true,\r\n        enumerable: false,\r\n        value: name\r\n    });\r\n    return identifier;\r\n}\r\nfunction reinterpretIdentifierAsKeyword({ value, range, loc }: Token): Node {\r\n    return {\r\n        type: \"Keyword\",\r\n        value,\r\n        range,\r\n        loc\r\n    };\r\n}\r\n\r\nfunction _Validate(type: string | number, value: string): Validate {\r\n    return function (token: Token) {\r\n        return token.type === type && token.value === value;\r\n    }\r\n}\r\n\r\n\r\nlet is_right_parentheses = _Validate(type_punctuator, \")\");\r\nlet is_right_brackets = _Validate(type_punctuator, \"]\");\r\nlet is_right_braces = _Validate(type_punctuator, \"}\");\r\n\r\n\r\n\r\nfunction extract_success(parser: Parser, nodes: Array<Node>) {\r\n    let res: Array<Node> = nodes;\r\n    if (nodes.length) {\r\n        let index = 0;\r\n        if (nodes[0].type === \"Success\") {\r\n            index = 1;\r\n            res = nodes[0].content;\r\n        } else {\r\n            res = [];\r\n        }\r\n        if (nodes.length > index) {\r\n            parser.err(...nodes.slice(index));\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nfunction parse_and_extract(match_tree: Record<string, any>, context: Context, node: Node) {\r\n    let [, parser] = context;\r\n    let tokens = node.content;\r\n    if (tokens.length) {\r\n        context.wrap(CONTEXT.tokens, tokens)\r\n        //context[CONTEXT.tokens] = tokens;\r\n        parser.parseCustom(match_tree, context);\r\n        tokens = extract_success(parser, tokens)\r\n        context.unwrap();\r\n    }\r\n    return tokens;\r\n}\r\n\r\nfunction get_inner_group(token: Token) {\r\n    while (\r\n        token.content.length === 1\r\n        && token.content[0].value === \"()\"\r\n        && token.content[0].type === type_punctuator\r\n    ) {\r\n        token = token.content[0];\r\n    }\r\n    return token;\r\n}\r\n\r\nfunction parse_next_statement(context: Context, start = context[CONTEXT.right] + 1) {\r\n    let parser = context[CONTEXT.parser];\r\n    if (\r\n        parser.parseCustom(\r\n            parser.SYNTAX_TREE,\r\n            context,\r\n            start,\r\n            parser.isStatementListItem\r\n        )\r\n    ) {\r\n        return 0;\r\n    }\r\n}\r\nlet token_hooks: Record<string, (token: Token, tokenizer?: Tokenizer | Parser) => Token> = {};\r\nfunction AsyncGetter() {\r\n    let await_tasks = {};\r\n    let async_data = {};\r\n    let is_open = false;\r\n    let async_mapper: Record<string, any> = {\r\n        open() {\r\n            is_open = true;\r\n            let tasks = [];\r\n            for (const key in await_tasks) {\r\n                if (async_data.hasOwnProperty(key)) {\r\n                    let data = async_data[key];\r\n                    for (let task of await_tasks[key]) {\r\n                        tasks.push([task, data]);\r\n                    }\r\n                }\r\n            }\r\n            for (const task of tasks) {\r\n                task[0](task[1]);\r\n            }\r\n        },\r\n        get(key: string, callback: (data: any) => any) {\r\n            if (await_tasks[key]) {\r\n                await_tasks[key].push(callback);\r\n                if (is_open && async_data.hasOwnProperty(key)) {\r\n                    callback(async_data[key]);\r\n                }\r\n            } else {\r\n                if (async_mapper.hasOwnProperty(key)) {\r\n                    async_data[key] = async_mapper[key];\r\n                    is_open && callback(async_data[key]);\r\n                }\r\n                Object.defineProperty(async_mapper, key, {\r\n                    enumerable: true,\r\n                    configurable: true,\r\n                    set(data: any) {\r\n                        if (async_data.hasOwnProperty(key)) {\r\n                            debugger;\r\n                        }\r\n                        async_data[key] = data;\r\n                        if (is_open) {\r\n                            for (const cbfun of await_tasks[key]) {\r\n                                cbfun(data);\r\n                            }\r\n                        }\r\n                    },\r\n                    get() {\r\n                        return async_data[key];\r\n                    }\r\n                });\r\n                await_tasks[key] = [callback];\r\n            }\r\n        }\r\n    };\r\n    return async_mapper;\r\n}\r\nlet async_getter = AsyncGetter();\r\n\r\nexport {\r\n    Operator,\r\n    async_getter,\r\n    token_hooks,\r\n    parse_next_statement,\r\n    get_inner_group,\r\n    extract_success,\r\n    parse_and_extract,\r\n    _Punctuator,\r\n    _Keyword,\r\n    _Identifier,\r\n    _Pattern,\r\n    is_right_parentheses,\r\n    is_right_brackets,\r\n    is_right_braces,\r\n    _Validate,\r\n    reinterpretIdentifierAsKeyword,\r\n    reinterpretKeywordAsIdentifier,\r\n    attachLocation,\r\n    Cover,\r\n    Mark, isAligned,\r\n    STATEMANT_LIST_ITEM_PATTERN,\r\n    RIGHT_SIDE_TOPLEVEL_ITEM_PATTERN,\r\n    TOPLEVEL_ITEM_PATTERN,\r\n    _SuccessCollector,\r\n    join_content,\r\n    IDENTIFIER_OR_VALIDATE_STRICT_RESERVED_WORDS_PATTERN,\r\n    EXPRESSION_OR_VALIDATE_STRICT_RESERVED_WORDS_PATTERN,\r\n    IDENTIFIER_OR_THROW_STRICT_RESERVED_WORDS_PATTERN,\r\n    EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN,\r\n    ASSIGNMENT_PUNCTUATORS_PATTERN,\r\n    validateBinding, validateLineTerminator,\r\n    NODES,\r\n    TYPE_ALIAS,\r\n    createMatchTree,\r\n    isRestrictedWord,\r\n    isFutureReservedWord,\r\n    isStrictModeReservedWord,\r\n    validateIdentifier,\r\n    validateAssignment,\r\n    _Context,\r\n    _Option, _Or, _Series, _NonCapturing, _NonCollecting, _Mark, _Loop,\r\n}\r\n","//import { Token } from './interfaces'\r\nconst IdentifierStart = /[\\x24\\x5f\\x41-\\x5a\\x61-\\x7a]|[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEF\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7C6\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB67\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD23\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF45\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD44\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC5F\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDEB8\\uDF00-\\uDF1A]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCDF\\uDCFF\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDEE0-\\uDEF2]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE7F\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD4E\\uDEC0-\\uDEEB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43\\uDD4B]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]/;\r\nconst IdentifierPart = /[\\x24\\x5f\\x41-\\x5a\\x61-\\x7a\\x30-\\x39]|[\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u07FD\\u0800-\\u082D\\u0840-\\u085B\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D3-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u09FC\\u09FE\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9-\\u0AFF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D00-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CD0-\\u1CD2\\u1CD4-\\u1CFA\\u1D00-\\u1DF9\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEF\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7C6\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB67\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD27\\uDD30-\\uDD39\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF50\\uDFE0-\\uDFF6]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD44-\\uDD46\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDC9-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3B-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC5E\\uDC5F\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDC00-\\uDC3A\\uDCA0-\\uDCE9\\uDCFF\\uDDA0-\\uDDA7\\uDDAA-\\uDDD7\\uDDDA-\\uDDE1\\uDDE3\\uDDE4\\uDE00-\\uDE3E\\uDE47\\uDE50-\\uDE99\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC59\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD36\\uDD3A\\uDD3C\\uDD3D\\uDD3F-\\uDD47\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD8E\\uDD90\\uDD91\\uDD93-\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF6]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE7F\\uDF00-\\uDF4A\\uDF4F-\\uDF87\\uDF8F-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A\\uDD00-\\uDD2C\\uDD30-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDEC0-\\uDEF9]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6\\uDD00-\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/;\r\n\r\nexport default class {\r\n    public input: string;\r\n    public index: number;\r\n    public end: number;\r\n    public _volatility: any;\r\n    public _scopes: any;\r\n    private testCodePoint(regexp: RegExp) {\r\n        if (\r\n            (this.input.charCodeAt(this.index) & 0xfc00) === 0xd800\r\n            && (this.input.charCodeAt(this.index + 1) & 0xfc00) === 0xdc00\r\n        ) {\r\n            this._volatility = this.input[this.index] + this.input[this.index + 1];\r\n            return regexp.test(this._volatility) ? 2 : 0;\r\n        } else {\r\n            return regexp.test(this.input[this.index]) ? 1 : 0;\r\n        }\r\n    }\r\n    testUnicodeEscape(regexp: RegExp) {\r\n        let index = this.index + 1, code = 0;\r\n        if (this.input[index++] === \"u\") {\r\n            let cp = 0;\r\n            if (this.input[index] === \"{\") {\r\n                while (\r\n                    (code = this.hexValue(this.input.charCodeAt(++index))) >= 0\r\n                ) {\r\n                    cp = cp * 16 + code;\r\n                }\r\n                if (this.input[index++] !== \"}\") {/* || index < this.index + 5*/\r\n                    return 0;\r\n                }\r\n            } else {\r\n                let len = 4;\r\n                while (len--) {\r\n                    code = this.hexValue(this.input.charCodeAt(index++));\r\n                    if (code >= 0) {\r\n                        cp = cp * 16 + code;\r\n                    } else {\r\n                        return 0;\r\n                    }\r\n                }\r\n            }\r\n            return regexp.test(this.fromCodePoint(cp))\r\n                ? index - this.index\r\n                : -(index - this.index);\r\n        }\r\n        return 0;\r\n    }\r\n    scanHex(length: number = this.end): [number, number] {\r\n        let value = 0, code = 0, len = length;\r\n        while (len) {\r\n            code = this.hexValue(this.input.charCodeAt(this.index));\r\n            if (code >= 0) {\r\n                len--;\r\n                value = value * 16 + code;\r\n            } else {\r\n                break;\r\n            }\r\n            this.index++;\r\n        }\r\n        return [value, length - len];\r\n    }\r\n    hexValue(ch: number) {\r\n        return ch >= 0x30 && ch <= 0x39 ? ch - 0x30 :\r\n            ch >= 0x41 && ch <= 0x46 ? ch - 0x41 + 10 :\r\n                ch >= 0x61 && ch <= 0x66 ? ch - 0x61 + 10 : -1;\r\n    }\r\n    decimalValue(ch: number) {\r\n        return ch >= 0x30 && ch <= 0x39 ? ch - 0x30 : -1;\r\n    }\r\n    octalValue(ch: number) {\r\n        return ch >= 0x30 && ch <= 0x37 ? ch - 0x30 : -1;\r\n    }\r\n    binaryValue(ch: number) {\r\n        return ch === 0x30 || ch == 0x31 ? ch - 0x30 : -1;\r\n    }\r\n    //https://github.com/jquery/esprima/blob/master/src/character.ts\r\n    isWhiteSpace(ch: number) {\r\n        return (ch === 0x20) || (ch === 0x09) || (ch === 0x0B) || (ch === 0x0C) || (ch === 0xA0) ||\r\n            (ch >= 0x1680 && [0x1680, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(ch) >= 0);\r\n        /*return /^\\x20|\\x09|\\x0B|\\x0C|\\xA0|\\xfeff$/.test(char);*/\r\n    }\r\n    isLineTerminator(ch: number) {\r\n        return (ch === 0x0A) || (ch === 0x0D) || (ch === 0x2028) || (ch === 0x2029);\r\n        /*return /^\\x0A|\\x0D|\\x2028|\\x2029$/.test(char);*/\r\n    }\r\n    fromCodePoint(cp: number) {\r\n        return this._volatility = cp < 0x10000\r\n            ? String.fromCharCode(cp)\r\n            : String.fromCharCode(0xd800 + (cp - 0x10000) >> 10)\r\n            + String.fromCharCode(0xdc00 + (cp - 0x10000) & 1023);\r\n    }\r\n    inIdentifierStart() {\r\n        let ch = this.input.charCodeAt(this.index);\r\n        return (ch === 0x24) || (ch === 0x5F) ||\r\n            (ch >= 0x41 && ch <= 0x5A) ||\r\n            (ch >= 0x61 && ch <= 0x7A) ? 1 : (\r\n                ch >= 0x80\r\n                    ? this.testCodePoint(IdentifierStart)\r\n                    : (ch === 0x5c ? this.testUnicodeEscape(IdentifierStart) : 0)\r\n            );\r\n        /*return /^[_$a-zA-Z\\u0080-\\uffffff]$/.test(char);*/\r\n    }\r\n    inIdentifierPart() {\r\n        let ch = this.input.charCodeAt(this.index);\r\n        return (ch === 0x24) || (ch === 0x5F) ||\r\n            (ch >= 0x41 && ch <= 0x5A) ||\r\n            (ch >= 0x61 && ch <= 0x7A) ||\r\n            (ch >= 0x30 && ch <= 0x39) ? 1 : (\r\n                ch >= 0x80\r\n                    ? this.testCodePoint(IdentifierPart)\r\n                    : (ch === 0x5c ? this.testUnicodeEscape(IdentifierPart) : 0)\r\n            );\r\n        /*return /^[\\w$\\u0080-\\uffffff]$/.test(char);*/\r\n    }\r\n}","\r\n\r\nimport Character from './character'\r\nimport {\r\n    Position, SourceLocation, Token, SearchTree, NUMERIC_TYPE, Validate, NUMERIC_KEYWORD_MAPPINGS, MARKS\r\n} from \"./interfaces\";\r\n\r\n\r\nexport default class extends Character {\r\n    constructor(options?: Record<string, any>) {\r\n        super()\r\n        for (const key in options) {\r\n            this[key] = options[key];\r\n        }\r\n        //console.log(333, TOKEN_TYPES,TOKEN_TYPE_MAP);\r\n    }\r\n    tokens: Array<Token>;\r\n    curly_stack: Array<any>;\r\n    TYPE_ENUMS: Record<string, string | number>;\r\n    TOKEN_TYPE_MAPPERS: Record<string, string | number>;\r\n    PUNCTUATORS_TREE: SearchTree;\r\n    PRIMARY_EXPR_START_PUNCTUATORS_TREE: SearchTree;\r\n    public token_hooks: Record<string, (token: Token, tokenizer: this) => Token> = {};\r\n    public line_number: number;\r\n    public line_start: number;\r\n    public save_comments: boolean = true;\r\n    public error_logs: Array<any>;\r\n    public terminator_stack: Array<Validate>;\r\n    err(...args: any) {\r\n        //debugger;\r\n        this.error_logs.push.apply(this.error_logs, arguments);\r\n    }\r\n    init(input: string) {\r\n        this.line_number = 0;\r\n        this.line_start = 0;\r\n        this.index = 0;\r\n        this.input = input;\r\n        this.end = this.input.length;\r\n        this.error_logs = [];\r\n        this.tokens = [];\r\n        this.terminator_stack = [];\r\n        this.curly_stack = [];\r\n    }\r\n    tokenize(input: string): Array<Token> {\r\n        this.init(input);\r\n        while (this.nextToken());\r\n        return this.tokens;\r\n    }\r\n    nextToken() {\r\n        while (\r\n            this.index < this.end\r\n            && (\r\n                this.terminator_stack.length === 0\r\n                || this.tokens.length === 0\r\n                || !this.terminator_stack[0](this.tokens[this.tokens.length - 1])\r\n            )\r\n        ) {\r\n            let token = this._nextToken();\r\n            if (token) {\r\n                let hook = this.token_hooks[token.type];\r\n                hook && (token = hook(token, this));\r\n                if (this.save_comments || token.type !== this.TYPE_ENUMS.Comments) {\r\n                    this.tokens.push(token);\r\n                    return token;\r\n                }\r\n            } else if (this.index < this.end) {\r\n                this.err(this.createToken(\"error\", [this.index, ++this.index]))\r\n            }\r\n        }\r\n    }\r\n    createToken(\r\n        type: string | number,\r\n        range: [number, number],\r\n        value: any = this.input.slice(range[0], range[1]),\r\n        start: Position = {\r\n            line: this.line_number,\r\n            column: range[0] - this.line_start\r\n        },\r\n        end: Position = {\r\n            line: this.line_number,\r\n            column: range[1] - this.line_start\r\n        },\r\n    ): Token {\r\n        return {\r\n            type: type,\r\n            value,\r\n            range,\r\n            loc: {\r\n                start, end\r\n            }\r\n        };\r\n    }\r\n    match(node: SearchTree) {\r\n        let start = this.index, end = this.index;\r\n        let prev_node: Token;\r\n        do {\r\n            prev_node = node;\r\n            node = prev_node[this.input[end++]];\r\n        } while (node)\r\n        let target: any = prev_node[MARKS.END];\r\n        if (target && (target.type || (target = target(this)))) {\r\n            this.index = end - 1;\r\n            return target.scanner ?\r\n                target.scanner(this, start) :\r\n                this.createToken(\r\n                    this.TYPE_ENUMS[target.type] || target.type,\r\n                    [start, this.index],\r\n                    target.key\r\n                );\r\n        }\r\n    }\r\n    nextIdentifier(): Token | void {\r\n        let length = this.inIdentifierStart();\r\n        let token: Token;\r\n        if (length > 0) {\r\n            let start = this.index;\r\n            let str = \"\";\r\n            do {\r\n                str += length === 1 ? this.input[this.index] : this._volatility;\r\n                this.index += length;\r\n                length = this.inIdentifierPart();\r\n            } while (length > 0)\r\n            let type = this.TOKEN_TYPE_MAPPERS[\" \" + str];\r\n            token = this.createToken(\r\n                this.TYPE_ENUMS[type || \"Identifier\"],\r\n                [start, this.index]\r\n            );\r\n            this._volatility = str;\r\n            if (type && str.length !== this.index - start) {\r\n                this.err(token);\r\n            }\r\n        }\r\n        if (length < 0) {\r\n            this.err(this.createToken(\"error\", [this.index, this.index -= length]));\r\n        }\r\n        return token;\r\n    }\r\n    isPrimaryExprStart() {\r\n        if (this.tokens.length) {\r\n            let last_node: any = this.tokens[this.tokens.length - 1];\r\n            return last_node.type === this.TYPE_ENUMS.Keyword\r\n                || last_node.type === this.TYPE_ENUMS.Punctuator && last_node.content === undefined;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n    nextPunctuator(): Token | void {\r\n        return this.match(!this.isPrimaryExprStart() ? this.PUNCTUATORS_TREE : this.PRIMARY_EXPR_START_PUNCTUATORS_TREE);\r\n    }\r\n\r\n    nextNumeric(): Token | void {\r\n        let start = this.index;\r\n        let ch = this.input.charCodeAt(this.index);\r\n        let number: number;\r\n        let flags = NUMERIC_TYPE.DECIMAL;\r\n        let _get_token = () => {\r\n            this._volatility = flags & NUMERIC_TYPE.OCTAL ? (flags & ~NUMERIC_TYPE.DECIMAL) : flags;\r\n            return this.createToken(this.TYPE_ENUMS.Numeric, [start, this.index]);\r\n        }\r\n        let _get_error = (message: string = \"Invalid or unexpected token\") => {\r\n            let error = _get_token();\r\n            error.error = message;\r\n            error.input = this.input.slice(start, this.index + 1);\r\n            this.err(error);\r\n            return error;\r\n        }\r\n        let decimalValue = this.decimalValue;\r\n        switch (ch) {\r\n            case 0x2e://\".\"\r\n                if (decimalValue(this.input.charCodeAt(this.index + 1)) >= 0) {\r\n                    this.index += 1;\r\n                    flags |= NUMERIC_TYPE.FLOAT;\r\n                    break;\r\n                } else {\r\n                    return;\r\n                }\r\n            case 0x30://\"0\"\r\n                flags = NUMERIC_KEYWORD_MAPPINGS[this.input[++this.index]];\r\n                if (!flags) {\r\n                    number = decimalValue(this.input.charCodeAt(this.index));\r\n                    if (number >= 0) {\r\n                        flags = NUMERIC_TYPE.DECIMAL;\r\n                        number < 8 && (flags |= NUMERIC_TYPE.OCTAL);\r\n                    } else if (!this.inIdentifierStart()) {\r\n                        flags = NUMERIC_TYPE.DECIMAL;\r\n                        return _get_token();\r\n                    } else {\r\n                        return _get_error();\r\n                    }\r\n                }\r\n                break;\r\n            default:\r\n                if (decimalValue(ch) < 0) {\r\n                    return;\r\n                }\r\n        }\r\n        if (flags & NUMERIC_TYPE.DECIMAL) {\r\n            while ((ch = this.input.charCodeAt(++this.index))) {\r\n                number = decimalValue(ch)\r\n                if (number >= 0) {\r\n                    number < 8 || (flags &= ~NUMERIC_TYPE.OCTAL);\r\n                    continue;\r\n                }\r\n                switch (ch) {\r\n                    case 0x65://\"e\"\r\n                    case 0x45://\"E\"\r\n                        if (!(flags & (NUMERIC_TYPE.E | NUMERIC_TYPE.OCTAL))) {\r\n                            flags |= NUMERIC_TYPE.E;\r\n                            ch = this.input.charCodeAt(this.index + 1);\r\n                            if (ch === 0x2b || ch === 0x2d) {//+ -\r\n                                this.index += 1;\r\n                            }\r\n                            continue;\r\n                        } else {\r\n                            return _get_error();\r\n                        }\r\n                    case 0x2e://\".\"\r\n                        if (!(flags & (NUMERIC_TYPE.FLOAT | NUMERIC_TYPE.E | NUMERIC_TYPE.OCTAL))) {\r\n                            flags |= NUMERIC_TYPE.FLOAT;\r\n                            continue;\r\n                        }\r\n                    default:\r\n                        return this.inIdentifierStart()\r\n                            ? _get_error()\r\n                            : _get_token();\r\n                }\r\n            }\r\n            return _get_token();\r\n        } else {\r\n            let test = flags & NUMERIC_TYPE.HEX\r\n                ? this.hexValue : (\r\n                    flags & NUMERIC_TYPE.BINARY\r\n                        ? this.binaryValue\r\n                        : this.octalValue\r\n                );\r\n            while (test(this.input.charCodeAt(++this.index)) >= 0);\r\n            return this.index > start + 3 && !this.inIdentifierStart()\r\n                ? _get_token()\r\n                : _get_error();\r\n        }\r\n    }\r\n    skipNonsenses() {\r\n        for (let cp: number; this.index < this.end; this.index++) {\r\n            cp = this.input.charCodeAt(this.index);\r\n            switch (true) {\r\n                case this.isWhiteSpace(cp):\r\n                    break;\r\n                case this.isLineTerminator(cp):\r\n                    this.line_number++;\r\n                    this.line_start = this.index + 1;\r\n                    break;\r\n                default:\r\n                    return true;\r\n            }\r\n        }\r\n    }\r\n    private _nextToken() {\r\n        return this.skipNonsenses() && (\r\n            this.nextIdentifier() ||\r\n            this.nextNumeric() ||\r\n            this.nextPunctuator()\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n","import Parser from './parser'\r\n\r\ninterface Position {\r\n    line: number,// >=0\r\n    column: number// >=0\r\n}\r\ninterface SourceLocation {\r\n    start: Position,\r\n    end: Position\r\n}\r\n\r\ninterface Node {\r\n    type?: string | number,\r\n    range?: [number, number],\r\n    loc?: SourceLocation,\r\n    [propName: string]: any\r\n}\r\n\r\ninterface Token extends Node {\r\n    value?: any,\r\n    content?: any,\r\n    regex?: { pattern: string, flags: string },\r\n    [propName: string]: any\r\n}\r\ninterface Expression extends Node {\r\n    elements?: Array<Expression>,\r\n    expressions?: Array<Expression>\r\n}\r\n\r\ntype Program = Expression;\r\ntype MatchTree = Record<\r\n    string,\r\n    any\r\n//(...args: any) => any | { [propName: string]: MatchTree }\r\n>;\r\ntype SearchTree = MatchTree | Record<\r\n    string,\r\n    number | string | Array<string>\r\n>;\r\n\r\nconst enum NUMERIC_TYPE {\r\n    BINARY = 0b1 << 0,\r\n    OCTAL = 0b1 << 1,\r\n    DECIMAL = 0b1 << 2,\r\n    HEX = 0b1 << 3,\r\n    //INTEGER = 0b1 << 4,\r\n    FLOAT = 0b1 << 5,\r\n    E = 0b1 << 6,\r\n    NAN = 0b1 << 7,\r\n}\r\n\r\nconst enum CONTEXT {\r\n    collected,\r\n    parser,\r\n    left,\r\n    right,\r\n    start,\r\n    end,\r\n    begin,\r\n    tokens,\r\n    rightAssociativeNode,\r\n    matched,\r\n    bindingSet,\r\n    labelSet,\r\n    strict,\r\n    isModule,\r\n    isExpression,\r\n    inFunctionBody,\r\n    inIteration,\r\n    inSwitch,\r\n    bindingElement,\r\n    spreadElement,\r\n    allowAwait,\r\n    allowYield,\r\n    length\r\n}\r\ninterface Context extends Array<any> {\r\n    [CONTEXT.collected]?: Record<string, Node | string | any | Array<Node | string | any>>,\r\n    [CONTEXT.parser]: Parser,\r\n    [CONTEXT.left]?: number,\r\n    [CONTEXT.right]?: number,\r\n    [CONTEXT.start]?: number,\r\n    [CONTEXT.end]?: number,\r\n    [CONTEXT.begin]?: number,\r\n    [CONTEXT.tokens]?: Array<Node>,\r\n    [CONTEXT.rightAssociativeNode]?: Node,\r\n    [CONTEXT.matched]?: Matched,\r\n    [CONTEXT.bindingSet]?: Array<string>,\r\n    [CONTEXT.labelSet]?: Array<string>,\r\n    [CONTEXT.strict]?: boolean,\r\n    [CONTEXT.isModule]?: boolean,\r\n    [CONTEXT.isExpression]?: boolean,\r\n    [CONTEXT.inIteration]?: boolean,\r\n    [CONTEXT.inFunctionBody]?: number,\r\n    [CONTEXT.inSwitch]?: boolean,\r\n    [CONTEXT.bindingElement]?: boolean,\r\n    [CONTEXT.spreadElement]?: boolean,\r\n\r\n    [CONTEXT.allowAwait]?: boolean,\r\n    [CONTEXT.allowYield]?: boolean,\r\n\r\n    tokens: Array<Token>,\r\n    getToken(index: number): Token,\r\n    wrap(key: number, value: any): Context,\r\n    unwrap(): Context,\r\n    store(...args: Array<CONTEXT | any>): number,\r\n    restore(point: number): number,\r\n}\r\n/*\r\nconst enum MATCH_STATUS {\r\n    END = 1,\r\n    ERROR = -1,\r\n    NEXT = 2,\r\n    ATTACH = 3\r\n}*/\r\n\r\ninterface Wrapper {\r\n    (): void,\r\n    [propName: string]: any\r\n}\r\nconst enum MATCHED {\r\n    precedence,\r\n    props,\r\n    wrapper,\r\n    handler,\r\n    validator,\r\n    filter,\r\n}\r\ninterface Mark {\r\n    key: string,\r\n    value: string,\r\n    data: (context: Context, index: number) => any\r\n}\r\ninterface Cover {\r\n    origin: any,\r\n    value: any\r\n}\r\ntype Operation = null | 0 | undefined | false;\r\ntype NodeProp = [string | Cover | Mark, number, Array<Pipe> | undefined] /*| Mark*/;\r\ntype Pipe = (context: Context, token: Token | null, index: number) => any | undefined;\r\ntype Connector = (context: Context, index: number) => void;\r\ninterface Matched extends Array<any> {\r\n    [MATCHED.precedence]: Precedence,\r\n    [MATCHED.props]: Array<NodeProp>,\r\n    [MATCHED.wrapper]: Wrapper,\r\n    [MATCHED.handler]?: (context: Context) => Operation | Node | Array<Node>,\r\n    [MATCHED.validator]?: (context: Context) => Operation | true | Node | Array<Node>,\r\n    [MATCHED.filter]?: (context: Context, left?: number, right?: number) => boolean,\r\n}\r\n\r\nconst enum MATCHED_RECORDS {\r\n    precedence,\r\n    left,\r\n    right,\r\n    matched\r\n}\r\ninterface MatchedRecords extends Array<any> {\r\n    [MATCHED_RECORDS.precedence]: Precedence,\r\n    [MATCHED_RECORDS.left]: number,\r\n    [MATCHED_RECORDS.right]: number,\r\n    [MATCHED_RECORDS.matched]: Matched\r\n}\r\n\r\n\r\nconst enum PRECEDENCE {\r\n    VALUE,\r\n    RIGHT_ASSOCIATIVE\r\n}\r\ninterface Precedence extends Array<any> {\r\n    [PRECEDENCE.VALUE]: number | true,\r\n    [PRECEDENCE.RIGHT_ASSOCIATIVE]: number | Number\r\n}\r\ntype Validate = (token: Token) => boolean;\r\n\r\n\r\nconst enum MARKS {\r\n    BOUNDARY = \"\",\r\n    DEEPTH = \" DEEP\",\r\n    IDENTIFIER = \" ID\",\r\n    END = \" END\",\r\n    TYPE_ONLY = \" TYPE\",\r\n    WALKER = \" WAL\",\r\n    TERMINAL = \" TER\",\r\n\r\n    EOF = \"\",\r\n    ESCAPE = \"\\\\\",\r\n\r\n    ERROR = \" ERR\",\r\n    NEXT = \" NEXT\",\r\n    RESET = \" RESET\",\r\n    ATTACH = \" ATT\",\r\n    STRING = \" STR\"\r\n\r\n    /*\r\n    FOLLOW = \" FOLLOW\",\r\n    NOT = \" NOT\",\r\n    OR = \" OR\",\r\n    AND = \" AND\",*/\r\n}\r\n\r\n\r\nenum NUMERIC_KEYWORD_MAPPINGS {\r\n    \".\" = NUMERIC_TYPE.FLOAT | NUMERIC_TYPE.DECIMAL,\r\n    \"x\" = NUMERIC_TYPE.HEX,\r\n    \"b\" = NUMERIC_TYPE.BINARY,\r\n    \"o\" = NUMERIC_TYPE.OCTAL,\r\n\r\n    \"X\" = NUMERIC_TYPE.HEX,\r\n    \"B\" = NUMERIC_TYPE.BINARY,\r\n    \"O\" = NUMERIC_TYPE.OCTAL,\r\n};\r\nexport {\r\n    NUMERIC_KEYWORD_MAPPINGS,\r\n    MARKS,\r\n    Validate,\r\n    PRECEDENCE, Precedence,\r\n    NodeProp,\r\n    Mark, Cover,\r\n    Pipe,\r\n    Connector,\r\n    Position,\r\n    SourceLocation,\r\n    MATCHED_RECORDS,\r\n    MatchedRecords,\r\n    Matched,\r\n    MATCHED,\r\n    Token, Context,\r\n    CONTEXT, Expression,\r\n    Program, NUMERIC_TYPE, MatchTree, SearchTree,/* Tokenizer, Parser,*/ Node\r\n}","\r\nimport {\r\n    Token, SearchTree, MARKS\r\n} from '../interfaces';\r\n\r\nimport Tokenizer from '../tokenizer'\r\n\r\nfunction createSearchTree(\r\n    data: Array<string | string[] | Record<string, any>>,\r\n    root: Record<string, any> = {},\r\n    block_list: Array<string> = []\r\n): SearchTree {\r\n    for (let item of data as any) {\r\n        let node = root;\r\n        switch (true) {\r\n            case typeof item === \"string\":\r\n                item = {\r\n                    type: \"Punctuator\",\r\n                    key: item,\r\n                }\r\n                break;\r\n            default:\r\n                item.type === undefined && (item.type = \"Punctuator\");\r\n                break;\r\n        }\r\n        if (~block_list.indexOf(item.key)) {\r\n            continue;\r\n        }\r\n        for (const part of item.key) {\r\n            node = node[part] || (node[part] = {});\r\n        }\r\n        if (node[MARKS.END] && !item.overload) {\r\n            let next_item = node[MARKS.END];\r\n            let curr_item = item;\r\n            if (typeof next_item === \"function\") {\r\n                if (curr_item.filter) {\r\n                    node[MARKS.END] = function (tokenizer: Tokenizer) {\r\n                        return curr_item.filter(tokenizer) ? curr_item : next_item(tokenizer);\r\n                    }\r\n                } else {\r\n                    node[MARKS.END] = function (tokenizer: Tokenizer) {\r\n                        return next_item(tokenizer) || curr_item;\r\n                    }\r\n                }\r\n                continue;\r\n            } else if (curr_item.filter) {\r\n                node[MARKS.END] = function (tokenizer: Tokenizer) {\r\n                    return curr_item.filter(tokenizer) ? curr_item : next_item;\r\n                }\r\n                continue;\r\n            } else {\r\n                console.warn(\"conflict:\", node, node[MARKS.END], item);\r\n            }\r\n        }\r\n        node[MARKS.END] = item.filter ?\r\n            function (tokenizer: Tokenizer) { return item.filter(tokenizer) && item; } :\r\n            item;\r\n    }\r\n    return root;\r\n}\r\n\r\n\r\nfunction _Scanner(\r\n    use_escape_mode: boolean = false\r\n) {\r\n    return function (\r\n        tokenizer: Tokenizer,\r\n        start: number = tokenizer.index\r\n    ) {\r\n        let error: string;\r\n        let line_number = tokenizer.line_number;\r\n        let line_start = tokenizer.line_start;\r\n        let root = this.scan_tree;\r\n        let nodes: Array<any> = [];\r\n        let str = \"\";\r\n        let char: string;\r\n        let backslash_count = 0;\r\n        let token: Token;\r\n        let self = this;\r\n        if (use_escape_mode) {\r\n            let has_escape: number;\r\n            while (char = tokenizer.input[tokenizer.index++]) {\r\n                has_escape = backslash_count % 2;\r\n                if (char === MARKS.ESCAPE) {\r\n                    backslash_count += 1;\r\n                    if (has_escape) {\r\n                        str += char;\r\n                        token = _next(MARKS.ESCAPE);\r\n                        if (token) {\r\n                            return token;\r\n                        }\r\n                    }\r\n                } else {\r\n                    str += char;\r\n                    backslash_count = 0;\r\n                    if (tokenizer.isLineTerminator(char.charCodeAt(0))) {\r\n                        tokenizer.index -= 1;\r\n                        token = _next(has_escape ? `${MARKS.ESCAPE}\\n` : \"\\n\");\r\n                        if (token) {\r\n                            return token;\r\n                        }\r\n                        tokenizer.index += 1;\r\n                        tokenizer.line_number += 1;\r\n                        tokenizer.line_start = tokenizer.index;\r\n                    } else {\r\n                        token = _next(!has_escape ? char : MARKS.ESCAPE + char);\r\n                        if (token) {\r\n                            return token;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            while (char = tokenizer.input[tokenizer.index]) {\r\n                str += char;\r\n                backslash_count = 0;\r\n                if (tokenizer.isLineTerminator(char.charCodeAt(0))) {\r\n                    token = _next(\"\\n\");\r\n                    if (token) {\r\n                        return token;\r\n                    }\r\n                    tokenizer.index += 1;\r\n                    tokenizer.line_number += 1;\r\n                    tokenizer.line_start = tokenizer.index;\r\n                } else {\r\n                    tokenizer.index += 1;\r\n                    token = _next(char);\r\n                    if (token) {\r\n                        return token;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if ((token = _next(MARKS.EOF))) {\r\n            return token;\r\n        } else {\r\n            let token = _get_token(tokenizer.index);\r\n            tokenizer.err(token);\r\n            return token;\r\n        }\r\n\r\n        function _next(key: string) {\r\n            let index = 0, node: any, res: any;\r\n            for (; index < nodes.length; index += 2) {\r\n                node = nodes[index][key];\r\n                if (node) {\r\n                    if (res = _finally(node, nodes[index + 1])) {\r\n                        if (res === MARKS.RESET) {\r\n                            nodes.length = 0;\r\n                            return;\r\n                        }\r\n                        return res;\r\n                    }\r\n                    nodes[index] = node;\r\n                } else {\r\n                    nodes.splice(index, 2);\r\n                    index -= 2;\r\n                }\r\n            }\r\n            if (node = root[key]) {\r\n                if (res = _finally(node, str.length - 1)) {\r\n                    if (res == MARKS.RESET) {\r\n                        nodes.length = 0;\r\n                        return;\r\n                    }\r\n                    return res;\r\n                }\r\n                nodes.push(node, str.length - 1);\r\n            }\r\n        }\r\n        function _get_token(end_index: number) {\r\n            tokenizer._scopes = self;\r\n            tokenizer._volatility = str.slice(0, end_index);\r\n            return tokenizer.createToken(\r\n                self.type,\r\n                [start, tokenizer.index],\r\n                undefined,\r\n                { line: line_number, column: start - line_start }\r\n            );\r\n        }\r\n        function _finally(node: Record<string, any>, end_index: number) {\r\n            node[MARKS.ERROR] && (error = node[MARKS.ERROR]);\r\n            let part: string = node[MARKS.ATTACH] ? node[MARKS.ATTACH](tokenizer, self) : node[MARKS.STRING];\r\n            if (part !== undefined) {\r\n                str = str.slice(0, end_index) + part;\r\n            }\r\n            switch (true) {\r\n                case node[MARKS.END] && true:\r\n                    if (node[MARKS.END] === true || node[MARKS.END](tokenizer, self)) {\r\n                        let token = _get_token(end_index);\r\n                        if (error) {\r\n                            token.error = error;\r\n                            tokenizer.err(token);\r\n                        }\r\n                        return token;\r\n                    }\r\n                    break;\r\n                case node[MARKS.NEXT] && true:\r\n                    tokenizer._scopes = self;\r\n                    tokenizer._volatility = str.slice(0, end_index);\r\n                    return node[MARKS.NEXT](tokenizer, self);\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport {\r\n    createSearchTree, _Scanner\r\n}\r\n\r\n\r\n/**\r\nfunction createScanTree(data: Array<any>[]) {\r\n    let root: Record<string, any> = {};\r\n    for (let branch of data) {\r\n        let node = root;\r\n        for (let i = 0, limit = branch.length - 1, part: string; i < limit; i++) {\r\n            part = branch[i];\r\n            node = node[part] || (node[part] = {});\r\n        }\r\n        let actions = branch[branch.length - 1];\r\n        for (let i = 0; i < actions.length; i += 2) {\r\n            node[actions[i]] = actions[i + 1];\r\n        }\r\n    }\r\n    return root;\r\n}\r\n\r\n\r\n\r\n */","import {\r\n    Token, NUMERIC_TYPE, MARKS\r\n} from '../interfaces';\r\n\r\nimport Tokenizer from '../tokenizer'\r\nimport { _Scanner, createSearchTree } from './head'\r\n\r\n\r\nlet TOKEN_TYPE_SET = [\r\n    [\r\n        \"Keyword\",\r\n        [\r\n            \"void\",\r\n            \"delete\",\r\n            \"new\",\r\n            \"class\", \"extends\",\r\n            \"function\",\r\n            \"throw\",\r\n            \"with\",\r\n            \"yield\",\r\n            \"in\", \"instanceof\", \"typeof\",\r\n            \"this\", \"super\",\r\n            \"var\", \"const\",// \"let\",\r\n            \"break\", \"continue\", \"return\",\r\n            \"if\", \"else\",\r\n            \"switch\", \"case\", \"default\",\r\n            \"try\", \"catch\", \"finally\",\r\n            \"do\", \"while\", \"for\",\r\n            \"await\",/*\"async\",*/\r\n            \"import\", \"export\",\r\n            \"debugger\",\r\n\r\n            \"enum\"//用于错误检测\r\n        ]\r\n    ],\r\n    [\"Identifier\", [\"let\", \"async\"]],//使 UnicodeEscape 的情况能被检测到报错\r\n    [\"Boolean\", [\"true\", \"false\"]],\r\n    [\"Null\", [\"null\"]]\r\n];\r\n\r\n\r\nlet octal_escape = {\r\n    //_state: MATCH_STATUS.ATTACH,\r\n    [MARKS.ATTACH](tokenizer: Tokenizer, self: Record<string, any>) {\r\n        let code = tokenizer.octalValue(tokenizer.input.charCodeAt(tokenizer.index - 1));\r\n        let value = 0;\r\n        code && (self.octal = true);\r\n        let len = code <= 3 ? 2 : 1;\r\n        while (true) {\r\n            value = value * 8 + code;\r\n            code = tokenizer.octalValue(tokenizer.input.charCodeAt(tokenizer.index));\r\n            if (code < 0 || --len < 0) {\r\n                break;\r\n            }\r\n            self.octal = true;\r\n            tokenizer.index += 1;\r\n        }\r\n        return String.fromCharCode(value);\r\n    }\r\n};\r\nlet octal_escape_tree = {\r\n    \"\\\\0\": octal_escape,\r\n    \"\\\\1\": octal_escape,\r\n    \"\\\\2\": octal_escape,\r\n    \"\\\\3\": octal_escape,\r\n    \"\\\\4\": octal_escape,\r\n    \"\\\\5\": octal_escape,\r\n    \"\\\\6\": octal_escape,\r\n    \"\\\\7\": octal_escape,\r\n}\r\n\r\nlet strbase_scan_tree = {\r\n    [MARKS.ESCAPE + \"\\n\"]: { [MARKS.STRING]: \"\" },\r\n    \"\\\\n\": { [MARKS.STRING]: \"\\n\" },\r\n    \"\\\\r\": { [MARKS.STRING]: \"\\r\" },\r\n    \"\\\\t\": { [MARKS.STRING]: \"\\t\" },\r\n    \"\\\\b\": { [MARKS.STRING]: \"\\b\" },\r\n    \"\\\\f\": { [MARKS.STRING]: \"\\f\" },\r\n    \"\\\\v\": { [MARKS.STRING]: \"\\v\" },\r\n    \"\\\\u\": {\r\n        //_state: MATCH_STATUS.ATTACH,\r\n        [MARKS.ATTACH](tokenizer: Tokenizer) {\r\n            if (tokenizer.input[tokenizer.index] === \"{\") {\r\n                tokenizer.index++;\r\n                let [code] = tokenizer.scanHex();\r\n                if (tokenizer.input[tokenizer.index] === \"}\") {\r\n                    tokenizer.index++;\r\n                    if (code <= 0x10ffff) {\r\n                        return String.fromCharCode(code);\r\n                    }\r\n                }\r\n            } else {\r\n                let [code, len] = tokenizer.scanHex(4);\r\n                if (len === 4) {\r\n                    return String.fromCharCode(code);\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    },\r\n    \"\\\\x\": {\r\n        //_state: MATCH_STATUS.ATTACH,\r\n        [MARKS.ATTACH](tokenizer: Tokenizer) {\r\n            let [code, len] = tokenizer.scanHex(2);\r\n            if (len === 2) {\r\n                return String.fromCharCode(code);\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n};\r\n\r\nlet not_allow_octal_escape = {\r\n    //_state: MATCH_STATUS.ERROR,\r\n    [MARKS.ERROR]: \"Octal escape sequences are not allowed in template strings\"\r\n}\r\n\r\n//let template_curly_stack = [];\r\nlet template_base = {\r\n    type: \"Template\",\r\n    scan_tree: {\r\n        [MARKS.EOF]: {\r\n            //_state: MATCH_STATUS.END,\r\n            [MARKS.ERROR]: \"Unexpected token\",\r\n            [MARKS.END](tokenizer: Tokenizer) {\r\n                tokenizer.curly_stack.shift();\r\n                return true;\r\n            }\r\n        },\r\n        \"\\\\0\": { [MARKS.STRING]: \"\\0\" },\r\n        \"\\\\1\": not_allow_octal_escape,\r\n        \"\\\\2\": not_allow_octal_escape,\r\n        \"\\\\3\": not_allow_octal_escape,\r\n        \"\\\\4\": not_allow_octal_escape,\r\n        \"\\\\5\": not_allow_octal_escape,\r\n        \"\\\\6\": not_allow_octal_escape,\r\n        \"\\\\7\": not_allow_octal_escape,\r\n        \"`\": {\r\n            [MARKS.END](tokenizer: Tokenizer) {\r\n                tokenizer.curly_stack.shift();\r\n                return true;\r\n            }\r\n        },\r\n        \"$\": {\r\n            \"{\": {\r\n                [MARKS.END]: true\r\n            }\r\n        },\r\n        ...strbase_scan_tree\r\n    },\r\n    scanner: _Scanner(true)\r\n}\r\nconst PUNCTUATORS: Array<any> = [\r\n    {\r\n        key: `\"`, type: \"String\",\r\n        scan_tree: {\r\n            '\"': {\r\n                [MARKS.END]: true\r\n            },\r\n            \"\\n\": {\r\n                //_state: MATCH_STATUS.ERROR\r\n                [MARKS.ERROR]: \"Invalid or unexpected token\"\r\n            },\r\n            ...strbase_scan_tree,\r\n            ...octal_escape_tree\r\n        },\r\n        escape_scan: _Scanner(true),\r\n        octal: false,\r\n        scanner(tokenizer: Tokenizer, start: number) {\r\n            this.octal = false;\r\n            return this.escape_scan(tokenizer, start);\r\n        }\r\n    },\r\n    {\r\n        key: `'`, type: \"String\",\r\n        scan_tree: {\r\n            \"'\": {\r\n                [MARKS.END]: true\r\n            },\r\n            \"\\n\": {\r\n                //_state: MATCH_STATUS.ERROR\r\n                [MARKS.ERROR]: \"Invalid or unexpected token\"\r\n            },\r\n            ...strbase_scan_tree,\r\n            ...octal_escape_tree\r\n        },\r\n        escape_scan: _Scanner(true),\r\n        octal: false,\r\n        scanner(tokenizer: Tokenizer, start: number) {\r\n            this.octal = false;\r\n            return this.escape_scan(tokenizer, start);\r\n        }\r\n    },\r\n    {\r\n        key: \"`\",\r\n        ...template_base,\r\n        escape_scan: _Scanner(true),\r\n        scanner(tokenizer: Tokenizer, start: number) {\r\n            tokenizer.curly_stack.unshift(\"`\");\r\n            return this.escape_scan(tokenizer, start);\r\n        }\r\n    },\r\n    {\r\n        key: \"}\",\r\n        ...template_base,\r\n        filter(tokenizer: Tokenizer) {\r\n            return tokenizer.curly_stack[0] === \"`\";\r\n        }\r\n    },\r\n    {\r\n        key: '/*', bound: '*/', type: \"Comments\",\r\n        scan_tree: {\r\n            \"*\": {\r\n                \"/\": {\r\n                    //_state: MATCH_STATUS.END\r\n                    [MARKS.END]: true\r\n                }\r\n            },\r\n            [MARKS.EOF]: {\r\n                [MARKS.END]: true,\r\n                [MARKS.ERROR]: \"Unexpected token\"\r\n            }\r\n        },\r\n        scanner: _Scanner(false)\r\n    },\r\n    {\r\n        key: '//', bound: '\\n', type: \"Comments\",\r\n        scan_tree: {\r\n            \"\\n\": {\r\n                [MARKS.END]: true\r\n            },\r\n            [MARKS.EOF]: {\r\n                [MARKS.END]: true\r\n            }\r\n        },\r\n        scanner: _Scanner(false)\r\n    },\r\n\r\n    //[\"(\", \")\"], [\"[\", \"]\"], [\"{\", \"}\"],\r\n\r\n    \"(\", \")\", \"[\", \"]\", \"{\", \"}\",\r\n    ';', '.', '?.',\r\n    '++', '--', '~', '!',\r\n    '**', '*', '/', '%',\r\n    '+', '-',\r\n    '<<', '>>', '>>>',\r\n    '<', '>', '<=', '>=', '==', '!=', '===', '!==',\r\n    '&',\r\n    '^',\r\n    '|',\r\n    '&&',\r\n    '||',\r\n    '?', \":\",\r\n    '=', '+=', '-=', '*=', '/=', '%=', '**=', '<<=', '>>=', '>>>=', '&=', '|=', '^=',\r\n    '...',\r\n    ',',\r\n    '=>'\r\n];\r\n\r\nconst REGEXP_DESCRIPTOR = {\r\n    key: '/', type: \"RegularExpression\",\r\n    scan_tree: {\r\n        '/': {\r\n            [MARKS.END](tokenizer: Tokenizer, self: Record<string, any>) {\r\n                return !self.class_marker;\r\n            }\r\n        },\r\n        '[': {\r\n            [MARKS.ATTACH](tokenizer: Tokenizer, self: Record<string, any>) {\r\n                self.class_marker = true;\r\n            }\r\n        },\r\n        ']': {\r\n            [MARKS.ATTACH](tokenizer: Tokenizer, self: Record<string, any>) {\r\n                self.class_marker = false;\r\n            }\r\n        },\r\n        '\\n': {\r\n            [MARKS.ERROR]: \"Invalid or unexpected token\"\r\n        },\r\n        '\\\\\\n': {\r\n            [MARKS.ERROR]: \"Invalid or unexpected token\"\r\n        },\r\n        [MARKS.EOF]: {\r\n            [MARKS.END]: true,\r\n            [MARKS.ERROR]: \"Invalid or unexpected token\"\r\n        }\r\n    },\r\n    overload: true,\r\n    escape_scan: _Scanner(true),\r\n    class_marker: false,\r\n    scanner(tokenizer: Tokenizer, start: number) {\r\n        this.class_marker = false;\r\n        let token = this.escape_scan(tokenizer, start);\r\n        if (token) {\r\n            token.regex = {\r\n                pattern: token.value.slice(\r\n                    1, token.value[token.value.length - 1] !== \"/\" ? undefined : -1\r\n                ),\r\n                flags: \"\"\r\n            };\r\n            let start = tokenizer.index;\r\n            let length = 0;\r\n            do {\r\n                tokenizer.index += length;\r\n                length = tokenizer.inIdentifierPart();\r\n            } while (length)\r\n            if (start !== tokenizer.index) {\r\n                token.regex.flags = tokenizer.input.slice(start, tokenizer.index)\r\n                token.value += token.regex.flags;\r\n                token.range[1] += tokenizer.index - start;\r\n                token.loc.end.column += tokenizer.index - start;\r\n            }\r\n            return token;\r\n        }\r\n    }\r\n};\r\n\r\n\r\n//const IS_RADIX = NUMERIC_TYPE.BINARY | NUMERIC_TYPE.OCTAL | NUMERIC_TYPE.HEX;\r\n\r\n\r\nconst TYPE_ENUMS = {\r\n    Identifier: \"Identifier\",\r\n    Keyword: \"Keyword\",\r\n    String: \"String\",\r\n    Boolean: \"Boolean\",\r\n    Numeric: \"Numeric\",\r\n    Punctuator: \"Punctuator\",\r\n    RegularExpression: \"RegularExpression\",\r\n    Template: \"Template\",\r\n    TemplateElement: \"TemplateElement\",\r\n    Comments: \"Comments\",\r\n    Null: \"Null\"\r\n};\r\n\r\n\r\nexport {\r\n    TYPE_ENUMS,\r\n    PUNCTUATORS,\r\n    TOKEN_TYPE_SET,\r\n    REGEXP_DESCRIPTOR\r\n}\r\n\r\n\r\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","\r\nimport Tokenizer from \"./tokenizer\"\r\nimport {\r\n    NodeProp,\r\n    MATCHED,\r\n    Matched,\r\n    MATCHED_RECORDS,\r\n    MatchedRecords,\r\n    Token, Node, Pipe,\r\n    Mark as MarkInterface,\r\n    SearchTree, NUMERIC_TYPE, Context, CONTEXT,\r\n    SourceLocation,\r\n    PRECEDENCE, Precedence, Validate, MARKS, MatchTree\r\n} from \"./interfaces\";\r\n\r\nimport { _Context, TYPE_ALIAS, NODES, Mark, Cover, attachLocation, is_right_braces } from \"./syntax/head\";\r\n\r\ntype Extreme = MatchedRecords;\r\ntype Longest = MatchedRecords;\r\n\r\nconst { Script, Module } = NODES;\r\n\r\n\r\n\r\nexport default class extends Tokenizer {\r\n    SYNTAX_TREE: MatchTree;\r\n    EXPRESSION_TREE: MatchTree;\r\n    TYPE_ALIAS: Record<string, string[]> = TYPE_ALIAS;\r\n    padding_token: Token = {\r\n        type: MARKS.BOUNDARY,\r\n        value: MARKS.BOUNDARY\r\n    };\r\n    error_logs: Array<any>;\r\n    save_comments = false;\r\n    match_tree_stack: Array<MatchTree>;\r\n    context_stack: Array<Context>;\r\n    isExpression: (token: Token) => boolean;\r\n    isStatement: (token: Token) => boolean;\r\n    isStatementListItem: (token: Token) => boolean;\r\n    isPrimaryExprStart() {\r\n        if (this.tokens.length) {\r\n            let last_node: any = this.tokens[this.tokens.length - 1];\r\n\r\n            return this.isStatementListItem(last_node)\r\n                || last_node.type === this.TYPE_ENUMS.Keyword\r\n                || last_node.type === this.TYPE_ENUMS.Punctuator\r\n                && !(\r\n                    /^\\{\\}|\\[\\]$/.test(last_node.value)\r\n                    || last_node.value === \"()\"\r\n                    && !/^if|while|for|with$/.test(\r\n                        this.tokens[this.tokens.length - 2]?.value\r\n                    )\r\n                )\r\n\r\n            //!(/^\\{\\}|\\(\\)|\\[\\]$/.test(last_node.value));\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n    //token_hooks: Record<string, (token: Token, tokenizer?: Tokenizer) => Token> = token_hooks;\r\n    err(...args: any) {\r\n        debugger;\r\n        this.error_logs.push.apply(this.error_logs, args);\r\n    }\r\n    constructor() {\r\n        super();\r\n    }\r\n    parse(input: string) {\r\n        return this.parseScript(input);\r\n    }\r\n    parseModule(input: string) {\r\n        let tokens = this._parse(input, CONTEXT.isModule, true, CONTEXT.strict, true);\r\n        let module = new Module(tokens);\r\n        if (tokens.length) {\r\n            attachLocation(module, tokens[0], tokens[tokens.length - 1]);\r\n        }\r\n        return module;\r\n    }\r\n    parseScript(input: string) {\r\n        let tokens = this._parse(input);\r\n        let script = new Script(tokens);\r\n        if (tokens.length) {\r\n            attachLocation(module, tokens[0], tokens[tokens.length - 1]);\r\n        }\r\n        return script;\r\n    }\r\n    parseExpression(context: Context): Node {\r\n        context.wrap(CONTEXT.isExpression, true);\r\n        let res = this.parseNode(this.EXPRESSION_TREE, context, this.isExpression);\r\n        context.unwrap();\r\n        return res;\r\n    }\r\n    parseNode(\r\n        match_tree: MatchTree,\r\n        context: Context,\r\n        test: (node: Node) => boolean\r\n    ): Node {\r\n        let tokens = context.tokens;\r\n        this.parseCustom(match_tree, context);\r\n        let res: Node;\r\n        if (tokens.length) {\r\n            let index = 0;\r\n            if (test(tokens[0])) {\r\n                index = 1;\r\n                res = tokens[0];\r\n            }\r\n            if (tokens.length > index) {\r\n                this.err(...tokens.slice(index));\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    parseRangeAsNode(\r\n        match_tree: MatchTree,\r\n        context: Context,\r\n        left: number,\r\n        lexcal_terminator: Validate,\r\n        test: (node: Node) => boolean\r\n    ): Node {\r\n        let res = this.parseRange(match_tree, context, left, lexcal_terminator, test);\r\n        if (!res.content) {\r\n            this.err(res);\r\n        }\r\n        return res.content;\r\n    }\r\n    parseRangeAsExpression(\r\n        context: Context,\r\n        left: number,\r\n        lexcal_terminator: Validate,\r\n    ): Node {\r\n        context.wrap(CONTEXT.isExpression, true);\r\n        let res = this.parseRangeAsNode(this.EXPRESSION_TREE, context, left, lexcal_terminator, this.isExpression);\r\n        context.unwrap();\r\n        return res;\r\n    }\r\n    parseRangeAsBlock(\r\n        context: Context,\r\n        left: number,\r\n        lexcal_terminator: Validate = is_right_braces,\r\n    ) {\r\n        let res = this.parseRange(this.SYNTAX_TREE, context, left, lexcal_terminator);\r\n        res.type = \"Block\";\r\n        let tokens = res.content\r\n        if (tokens.length) {\r\n            if (!this.isStatementListItem(tokens[tokens.length - 1])) {\r\n                this.err(tokens.pop());\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    private _parse(input: string, ...environments: Array<number | any>) {\r\n        //this.logs = [];\r\n        this.match_tree_stack = [];\r\n        this.context_stack = [];\r\n        this.init(input);\r\n        let context = _Context(this);\r\n        environments.length && context.store(...environments);\r\n        //this.parseBlock(context);\r\n        let tokens = context.tokens;\r\n        this.parseCustom(\r\n            this.SYNTAX_TREE,\r\n            context\r\n        );\r\n        if (tokens.length) {\r\n            if (!this.isStatementListItem(tokens[tokens.length - 1])) {\r\n                this.err(tokens.pop());\r\n            }\r\n        }\r\n        if (this.error_logs.length) {\r\n            console.warn(\"error:\", this.error_logs);\r\n        }\r\n        //console.log(\"logs:\", this.logs);\r\n        return this.tokens;\r\n    }\r\n    parseCustom(\r\n        root: MatchTree,\r\n        context: Context,\r\n        begin: number = 0,\r\n        test?: Function\r\n    ) {\r\n        let point = context.store(CONTEXT.begin, begin);\r\n        let cursor: number = begin - 1;\r\n        let backflow_tape: Array<number> = new Array(begin);\r\n        backflow_tape.push(cursor);\r\n        let extreme: Extreme;\r\n        let state: number;\r\n        this.context_stack.unshift(context);\r\n        this.match_tree_stack.unshift(root);\r\n        while (true) {\r\n            if (cursor < begin || context.getToken(cursor)) {\r\n                if (\r\n                    !(\r\n                        extreme\r\n                        && (\r\n                            extreme[MATCHED_RECORDS.right] < cursor\r\n                            && backflow_tape.length <= 3 + extreme[MATCHED_RECORDS.right]\r\n                            //匹配边界断句\r\n                        )\r\n                        && (\r\n                            (state = this.finallize(context, extreme))\r\n                            || (extreme = undefined)\r\n                        )\r\n                    )\r\n                ) {\r\n                    let longest = this.walk(\r\n                        root,\r\n                        context,\r\n                        cursor,\r\n                        backflow_tape,\r\n                        extreme?.[MATCHED_RECORDS.right]\r\n                    );\r\n                    //longest && this.logs.push(\"walk\", longest[MATCHED_RECORDS.left], longest[MATCHED_RECORDS.right], longest[MATCHED_RECORDS.matched][MATCHED.wrapper].name);\r\n                    if (longest) {\r\n                        let longest_precedence = longest[MATCHED_RECORDS.precedence];\r\n                        let extreme_precedence = extreme && extreme[MATCHED_RECORDS.precedence];\r\n                        if (\r\n                            (//如果该记录优先级为true，则立即处理\r\n                                longest_precedence[PRECEDENCE.VALUE] !== true\r\n                                || (extreme = longest, false)\r\n                            ) && (\r\n                                !extreme_precedence\r\n                                || !(\r\n                                    extreme_precedence[PRECEDENCE.VALUE] > longest_precedence[PRECEDENCE.VALUE]\r\n                                    || extreme_precedence[PRECEDENCE.RIGHT_ASSOCIATIVE] === longest_precedence[PRECEDENCE.VALUE] //左结合\r\n                                )\r\n                            ) || !(state = this.finallize(context, extreme))\r\n                        ) {\r\n\r\n                            extreme = longest;\r\n                            //cursor += 1;\r\n                            //也可以单步步进，不过这样更效率一些也和当前收集器无冲突\r\n                            cursor += longest[MATCHED_RECORDS.right] - longest[MATCHED_RECORDS.left] || 1;\r\n                            continue;\r\n                        }\r\n                    } else {\r\n                        cursor += 1;\r\n                        continue;\r\n                    }\r\n                }\r\n            } else if (\r\n                !(\r\n                    extreme\r\n                    && (state = this.finallize(context, extreme))\r\n                )\r\n            ) {\r\n                break;\r\n            }\r\n            if (extreme) {\r\n                if (\r\n                    test\r\n                    && extreme[MATCHED_RECORDS.left] <= begin\r\n                    && test(context.getToken(begin))\r\n                ) {\r\n                    context.restore(point);\r\n                    this.context_stack.shift();\r\n                    this.match_tree_stack.shift();\r\n                    return context.getToken(begin);\r\n                }\r\n                cursor = extreme[MATCHED_RECORDS.left];\r\n            }\r\n            cursor >= begin && state !== -1 && (cursor = backflow_tape[cursor]);\r\n            state = 0;\r\n            extreme = undefined;\r\n            backflow_tape.splice(cursor + 1, backflow_tape.length - (cursor + 1));\r\n        }\r\n        this.context_stack.shift();\r\n        this.match_tree_stack.shift();\r\n        context.restore(point);\r\n    }\r\n    parseRange(\r\n        match_tree: MatchTree,\r\n        context: Context,\r\n        left: number,\r\n        lexcal_terminator: Validate,\r\n        test?: (node: Node) => boolean,\r\n    ) {\r\n        let tokens = context.tokens;\r\n        this.terminator_stack.unshift(lexcal_terminator);\r\n        this.parseCustom(\r\n            match_tree,\r\n            context,\r\n            left + 1\r\n        );\r\n        this.terminator_stack.shift();\r\n        let before_token = tokens[left];\r\n        let after_token = tokens[tokens.length - 1];\r\n        let value = before_token.value;\r\n        let end = tokens.length - 1;\r\n        if (lexcal_terminator(after_token)) {\r\n            value += after_token.value;\r\n        } else {\r\n            end += 1;\r\n            this.err(before_token);\r\n        }\r\n        let content: any = null, next = left + 1;\r\n        if (test) {\r\n            if (test(tokens[next])) {\r\n                content = tokens[next];\r\n                next += 1;\r\n            }\r\n            if (next < end) {\r\n                this.err(...this.tokens.splice(next, end - next));\r\n            }\r\n        } else {\r\n            content = tokens.splice(next, end - next);\r\n        }\r\n        let res: Token = {\r\n            type: this.TYPE_ENUMS.Punctuator,\r\n            value,\r\n            content\r\n        };\r\n        attachLocation(res, before_token, after_token);\r\n        tokens.splice(left, tokens.length - left, res);\r\n        return res;\r\n    }\r\n    walk(\r\n        root: MatchTree,\r\n        context: Context,\r\n        start: number,\r\n        backflow_tape: Array<number>,\r\n        minimum: number\r\n    ): Longest {\r\n        let padding_token = this.padding_token;\r\n        let TYPE_ALIAS = this.TYPE_ALIAS;\r\n        let tokens = context.tokens;\r\n        let begin = context[CONTEXT.begin];\r\n        //let steps: Array<number> = [];\r\n        return explore(\r\n            root,\r\n            start\r\n        );\r\n        function get_records(matched: Matched, end: number): MatchedRecords {\r\n            if (\r\n                !matched[MATCHED.filter]\r\n                || matched[MATCHED.filter](context, start, end)\r\n            ) {\r\n                return [\r\n                    matched[MATCHED.precedence],\r\n                    start,\r\n                    end,\r\n                    matched\r\n                ];\r\n            }\r\n        }\r\n        function explore(parent: MatchTree, index: number): Longest {\r\n\r\n            let res: Longest;\r\n            let matched: Matched;\r\n            if (parent[MARKS.WALKER]) {\r\n                parent[MARKS.WALKER](context, index - 1);\r\n            }\r\n            if (parent[MARKS.TERMINAL]) {\r\n                if (!(index - 1 <= minimum)) {\r\n                    matched = parent[MARKS.END];\r\n                    if (matched && (res = get_records(matched, index - 1))) {\r\n                        minimum = index - 1;\r\n                    }\r\n                }\r\n                return res;\r\n            }\r\n\r\n            let token = index >= begin\r\n                ? context.getToken(index) || (index <= tokens.length && padding_token)\r\n                : padding_token;\r\n            if (!token) {\r\n                return;\r\n            }\r\n            let has_backflow = false;\r\n            if (backflow_tape.length <= index + 1) {\r\n                has_backflow = true;\r\n                backflow_tape.push(start);\r\n            }\r\n            let matched_node: MatchTree;\r\n            let alias = TYPE_ALIAS[token.type];\r\n            let cursor = 0, length = 1, type: string | number;\r\n            let longest: Longest;\r\n            let node: MatchTree;\r\n            let value_node: MatchTree, type_node: MatchTree;\r\n            if (alias) {\r\n                length = alias.length;\r\n                type = alias[cursor];\r\n            } else {\r\n                type = token.type;\r\n            }\r\n            while (true) {\r\n                if (node = parent[type]) {\r\n                    res = undefined;\r\n                    if (\r\n                        !(\r\n                            (value_node = node[token.value])\r\n                            && (res = explore(value_node, index + 1))\r\n                        )\r\n                        && !(\r\n                            (type_node = node[MARKS.TYPE_ONLY])\r\n                            && (res = explore(type_node, index + 1))\r\n                        )\r\n                        && !(index <= minimum)\r\n                    ) {\r\n                        if (\r\n                            matched = (matched_node = value_node) && matched_node[MARKS.END]\r\n                            || (matched_node = type_node) && matched_node[MARKS.END]\r\n                        ) {\r\n                            if (\r\n                                (res = get_records(matched, index))\r\n                            ) {\r\n                                minimum = index;\r\n                            } else if (has_backflow && index > start) {\r\n                                backflow_tape.splice(index + 1, backflow_tape.length - index - 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    longest = res || longest;\r\n                }\r\n                if (++cursor >= length) {\r\n                    return longest;\r\n                } else {\r\n                    type = alias[cursor];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    createNode(context: Context) {\r\n        let left = context[CONTEXT.left];\r\n        let right = context[CONTEXT.right];\r\n        let matched = context[CONTEXT.matched];\r\n        let tokens = context.tokens;\r\n        let begin = context[CONTEXT.begin];\r\n        let node: any = new matched[MATCHED.wrapper]();\r\n        let length = tokens.length;\r\n        let start = left, end = right < length ? right : length - 1;\r\n        let offset = left, key: string | Cover | Mark, pipes: Array<Pipe>, nth: number;\r\n        let token: any, res: any;\r\n        context[CONTEXT.collected] = node;\r\n\r\n        function restore_volatility() {\r\n            context[CONTEXT.left] = left;\r\n            context[CONTEXT.right] = right;\r\n            context[CONTEXT.matched] = matched;\r\n            context[CONTEXT.collected] = node\r\n        }\r\n\r\n        for (const prop of matched[MATCHED.props]) {\r\n            [key, nth, pipes] = prop as any;\r\n            if (key instanceof Mark) {\r\n                token = key.data(context, offset);\r\n                restore_volatility();\r\n                if (token === undefined) {\r\n                    continue;\r\n                }\r\n                key = key.key;\r\n            } else {\r\n                token = offset >= begin && offset < length ? tokens[offset] : null;\r\n\r\n                for (let i in pipes) {\r\n                    res = pipes[i](context, token, offset);\r\n                    res === undefined || (token = res);\r\n                    restore_volatility();\r\n                }\r\n                if (key instanceof Cover) {\r\n                    if (key.value === null) {\r\n                        if (offset === start) {\r\n                            offset < end && (start = offset + 1);\r\n                        } else if (offset > begin && offset - 1 < end) {\r\n                            end = offset - 1;\r\n                        }\r\n                    } else if (offset < length && end < offset) {\r\n                        end = offset;\r\n                    }\r\n                    offset += 1;\r\n                    continue;\r\n                } else if (offset < length && end < offset) {\r\n                    end = offset;\r\n                }\r\n                offset += 1;\r\n            }\r\n            if (nth <= 1) {\r\n                node[key] = nth === 0 ? token : [token];\r\n            } else {\r\n                node[key].push(token);\r\n            }\r\n        }\r\n\r\n        start >= begin || (start = begin);\r\n\r\n        let start_token = tokens[start];\r\n        let end_token = tokens[end];\r\n        attachLocation(node, start_token, end_token);\r\n        context[CONTEXT.start] = start;\r\n        context[CONTEXT.end] = end;\r\n        return node;\r\n    }\r\n    getToken(index: number) {\r\n        return this.tokens.length > index ? this.tokens[index] : this.nextToken();\r\n    }\r\n    finallize(\r\n        context: Context,\r\n        record: Extreme\r\n    ) {\r\n        let [, left, right, matched/*, steps*/] = record;\r\n        let validator = matched[MATCHED.validator];\r\n        let collected: any;\r\n        let start: number, end: number;\r\n        context[CONTEXT.left] = left;\r\n        context[CONTEXT.right] = right;\r\n        context[CONTEXT.matched] = matched;\r\n        let tokens = context.tokens;\r\n        let handler = matched[MATCHED.handler];\r\n        //this.logs.push(\"finallize\", left, right, matched[MATCHED.wrapper].name);\r\n        if (!validator || (collected = validator(context)) === true) {\r\n            collected = this.createNode(context);\r\n            start = context[CONTEXT.start];\r\n            end = context[CONTEXT.end];\r\n            if (handler) {\r\n                collected = handler(context);\r\n            }\r\n        } else if (collected) {\r\n            start = context[CONTEXT.start];\r\n            end = context[CONTEXT.end];\r\n        }\r\n        if (!collected) {\r\n            return collected === undefined || collected === false\r\n                ? 0\r\n                : (collected === null ? 1 : -1);\r\n        }\r\n        //debugger;\r\n        //this.logs.push(\"finallize\", collected);\r\n        let length = end - start + 1;\r\n        if (collected instanceof Array) {\r\n            tokens.splice(start, length, ...collected);\r\n        } else {\r\n            tokens.splice(start, length, collected);\r\n        }\r\n        return length;\r\n    }\r\n}\r\n","import {\r\n    Node, Token, Context, CONTEXT, MATCHED, MatchTree, MARKS\r\n} from '../interfaces';\r\nimport {\r\n    Operator,\r\n    async_getter,\r\n    token_hooks,\r\n    _Punctuator,\r\n    _Keyword,\r\n    _Identifier,\r\n    _Pattern,\r\n    _Validate,\r\n    is_right_parentheses,\r\n    is_right_brackets,\r\n    is_right_braces,\r\n    createMatchTree,\r\n    _Option, _Or, _Series, _NonCollecting, _NonCapturing, _Mark,\r\n    TYPE_ALIAS, _Context, _Loop, NODES, validateIdentifier, validateAssignment,\r\n    validateBinding, validateLineTerminator, ASSIGNMENT_PUNCTUATORS_PATTERN, _SuccessCollector, join_content,\r\n\r\n    IDENTIFIER_OR_VALIDATE_STRICT_RESERVED_WORDS_PATTERN,\r\n    EXPRESSION_OR_VALIDATE_STRICT_RESERVED_WORDS_PATTERN,\r\n    IDENTIFIER_OR_THROW_STRICT_RESERVED_WORDS_PATTERN,\r\n    EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN,\r\n    TOPLEVEL_ITEM_PATTERN,\r\n    isAligned,\r\n    attachLocation,\r\n\r\n    reinterpretIdentifierAsKeyword,\r\n    reinterpretKeywordAsIdentifier,\r\n\r\n    extract_success,\r\n    parse_and_extract,\r\n} from './head'\r\n\r\nimport Parser from '../parser'\r\nimport Tokenizer from '../tokenizer'\r\n\r\nimport {\r\n    parseArrayPattern,\r\n    parseObjectPattern\r\n} from './pattern';\r\nconst Grouping = NODES.Grouping;\r\n\r\ninit_token_hooks();\r\n\r\nfunction walk_primary_expression(context: Context, index: number) {\r\n    context[CONTEXT.parser].parseRange(PRIMARY_EXPRESSION_TREE, context, index, is_right_parentheses);\r\n}\r\n\r\n\r\nconst ARGUMENTS_PATTERN = _Or(\r\n    _Punctuator(\"(\").walk(\r\n        walk_primary_expression\r\n    ),\r\n    \"Punctuator ()\"\r\n).pipe(\r\n    function (context: Context, token: Token, index: number) {\r\n        let parser = context[CONTEXT.parser];\r\n        let store = context.store(\r\n            CONTEXT.isExpression, true,\r\n            CONTEXT.bindingElement, false,\r\n            CONTEXT.spreadElement, true,\r\n            CONTEXT.tokens, token.content\r\n        );\r\n        let res = parser.parseNode(ARGUMENTS_TREE, context, function (node: Token) { return node.type === \"Success\"; })\r\n        context.restore(store);\r\n        return res ? res.content : [];\r\n    }\r\n);\r\n\r\n\r\nconst PARAMS_PATTERN: Operator = _Or(\r\n    _Punctuator(\"(\").walk(\r\n        function (context: Context, left: number) {\r\n            let parser = context[CONTEXT.parser];\r\n            let store = context.store(\r\n                CONTEXT.bindingElement, true,\r\n                CONTEXT.spreadElement, true,\r\n                CONTEXT.bindingSet, []\r\n            );\r\n            parser.parseRange(\r\n                PARAMS_TREE, context, left, is_right_parentheses,\r\n                function (node: Token) { return node.type === \"Success\"; }\r\n            ).type = \"Params\";\r\n            context.restore(store);\r\n        }\r\n    ), _Pattern(\"Params\")\r\n).pipe(\r\n    function (context: Context, token: Token, left: number) {\r\n        let [collected, parser] = context;\r\n        let kind = collected.kind;\r\n        let params = token.content ? token.content.content : [];\r\n        let params_count = kind === \"get\" ? 0 : kind === \"set\" ? 1 : false;\r\n        if (params_count !== false && params.length !== params_count) {\r\n            parser.err(...params.splice(params_count, params.length - params_count));\r\n        }\r\n        return params;\r\n    }\r\n);\r\nconst BODY_PATTERN: Operator = _Or(\r\n    _Punctuator(\"{\").walk(\r\n        function (context: Context, left: number) {\r\n            let generator = !!this.generator, async = !!this.async;\r\n            let parser = context[CONTEXT.parser];\r\n            let body_context = _Context(parser);\r\n            body_context[CONTEXT.inFunctionBody] = left + 1;\r\n            body_context[CONTEXT.strict] = context[CONTEXT.strict];\r\n            body_context[CONTEXT.allowYield] = generator;\r\n            body_context[CONTEXT.allowAwait] = async;\r\n\r\n            let node = parser.parseRangeAsBlock(body_context, left);\r\n            /*parser.parseRange(\r\n                parser.SYNTAX_TREE, body_context, left, is_right_braces\r\n            )*/\r\n            node.type = \"Body\";\r\n            node.generator = generator;\r\n            node.async = async;\r\n            let block = new NODES.BlockStatement();\r\n            block.body = node.content;\r\n            attachLocation(block, node);\r\n            node.content = block;\r\n        },\r\n        true\r\n    ), \"Body\"\r\n);\r\nconst FUNCTION_BODY_PATTERN: Operator = _Or(\r\n    BODY_PATTERN\r\n).pipe(\r\n    function (context: Context, token: Token) {\r\n        return token.content;\r\n    }\r\n);\r\n\r\nconst PrimaryExpressions: Record<string, any> = {\r\n    \"\": [\r\n        {\r\n            collector: {\r\n                type: _Mark(\"Punctuator\"),\r\n                value: _Mark(\"{}\"),\r\n                content: _Punctuator(\"{\").pipe(\r\n                    function (context: Context, token: Token, left: number) {\r\n                        return context[CONTEXT.parser].parseRange(\r\n                            PROPERTIES_TREE, context, left, is_right_braces\r\n                        ).content || [];\r\n                    }\r\n                )\r\n            }\r\n        },\r\n        {\r\n            collector: {\r\n                type: _Mark(\"Punctuator\"),\r\n                value: _Mark(\"()\"),\r\n                content: _Punctuator(\"(\").walk(\r\n                    walk_primary_expression\r\n                ).pipe(\r\n                    function (context: Context, token: Token, index: number) {\r\n                        return token.content;\r\n                    }\r\n                )\r\n            }\r\n        },\r\n        {\r\n            collector: {\r\n                type: _Mark(\"Punctuator\"),\r\n                value: _Mark(\"[]\"),\r\n                content: _Punctuator(\"[\").pipe(\r\n                    function (context: Context, node: Node, index: number) {\r\n                        return context[CONTEXT.parser].parseRange(\r\n                            PRIMARY_EXPRESSION_TREE, context, index, is_right_brackets\r\n                        ).content;\r\n                    }\r\n                )\r\n            }\r\n        },\r\n    ],\r\n    \"Identifier\": [\r\n    ],\r\n    \"Literal\": [//已在 tokenizer => token_hooks 中处理\r\n    ],\r\n    \"ThisExpression\": {\r\n        collector: {\r\n            token: _NonCollecting(\"Keyword this\")\r\n        }\r\n    },\r\n    \"TemplateLiteral\": {\r\n        filter(context: Context, left: number, right: number) {\r\n            let value = context.getToken(right).value;\r\n            return value[0] === \"`\";\r\n        },\r\n        collector: [\r\n            {\r\n                _: _NonCapturing(_Option(\"[Expression]\")),\r\n                expressions: _Mark(() => []),\r\n                quasis: _Pattern(\"Template\").pipe(\r\n                    function (context: Context, token: Token, index: number) {\r\n                        let [collected, parser] = context;\r\n                        let value: string;\r\n                        let expressions = collected.expressions;\r\n                        let quasis = [];\r\n                        let tail: boolean = false;\r\n                        let end: number;\r\n                        while (true) {\r\n                            token = context.getToken(index);\r\n                            value = token.value;\r\n                            token.value = \"\";\r\n                            if (value[value.length - 1] === \"`\") {\r\n                                end = -1;\r\n                                tail = true;\r\n                            } else {\r\n                                end = -2;\r\n                                tail = false;\r\n                            }\r\n                            quasis.push(\r\n                                {\r\n                                    type: \"TemplateElement\",\r\n                                    value: {\r\n                                        raw: value.slice(1, end),\r\n                                        cooked: parser._volatility\r\n                                    },\r\n                                    tail\r\n                                }\r\n                            );\r\n                            if (tail) {\r\n                                break;\r\n                            }\r\n                            expressions.push(\r\n                                parser.parseRangeAsExpression(context, index,\r\n                                    function (token: Token) {\r\n                                        return token.type === parser.TYPE_ENUMS.Template\r\n                                            && token.value[0] === \"}\";\r\n                                    }\r\n                                )\r\n                            )\r\n                        }\r\n                        return quasis;\r\n                    }\r\n                ),\r\n            }\r\n        ]\r\n    },\r\n    \"FunctionExpression\": [\r\n\r\n        {\r\n            collector: [\r\n                {\r\n                    async: _Or(\r\n                        _Series(_Mark(true), _NonCollecting(\"Keyword async\")),\r\n                        _Mark(false)\r\n                    ),\r\n                    __: _NonCollecting(\"Keyword function\"),\r\n                    generator: _Or(\r\n                        _Series(_Mark(true), _NonCollecting(\"Punctuator *\")),\r\n                        _Mark(false)\r\n                    ),\r\n                    id: _Or(IDENTIFIER_OR_THROW_STRICT_RESERVED_WORDS_PATTERN, _Mark(null)),\r\n                    params: PARAMS_PATTERN,\r\n                    body: FUNCTION_BODY_PATTERN,\r\n                    expression: _Mark(false)\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            validator(context: Context) {\r\n                let [, parser, left] = context;\r\n                context[CONTEXT.start] = context[CONTEXT.end] = left;\r\n                return reinterpretIdentifierAsKeyword(context.getToken(left))\r\n                //return parser.parseKeyword(context.getToken(left));\r\n            },\r\n            filter: [\r\n                function () {\r\n                    return false;\r\n                },\r\n                isAligned\r\n            ],\r\n            collector: [\r\n                { _: _Series(\"Identifier async\", \"Identifier\") },\r\n                {\r\n                    async: \"Identifier async\",\r\n                    _next: _NonCapturing(\"Keyword function\"),\r\n                },\r\n                {\r\n                    async: \"Identifier async\",\r\n                    params: _NonCapturing(\r\n                        _Punctuator(\"(\").walk(\r\n                            walk_primary_expression\r\n                        ), \"Punctuator ()\", \"Identifier\"),\r\n                    token: _NonCapturing(\"Punctuator =>\"),\r\n                },\r\n            ]\r\n        }\r\n    ],\r\n    \"ArrowFunctionExpression\": {\r\n        handler: [\r\n            null,\r\n            function (context: Context) {\r\n                let [collected, parser, left, right] = context;\r\n                let token = context.getToken(right);\r\n                token.value = \"_=>\";\r\n                let body_context = _Context(parser);\r\n                body_context[CONTEXT.strict] = context[CONTEXT.strict];\r\n                body_context[CONTEXT.allowAwait] = collected.async;\r\n                if (\r\n                    parser.parseCustom(\r\n                        parser.EXPRESSION_TREE,\r\n                        body_context,\r\n                        left,\r\n                        (node: Node) => true\r\n                    )\r\n                ) {\r\n                    return null;\r\n                }\r\n            },\r\n            null\r\n        ],\r\n        precedence: [3, true, new Number(3)],\r\n        collector: [\r\n            {//占位使 () 不会被单独收集为表达式\r\n                async: _Or(\r\n                    _Series(_Mark(true), _NonCollecting(\"Keyword async\")),\r\n                    _Mark(false)\r\n                ),\r\n                generator: _Mark(false),\r\n                id: _Mark(null),\r\n                params: _Or(\r\n                    _Punctuator(\"()\").pipe(\r\n                        function (context: Context, token: Token) {\r\n                            context.wrap(CONTEXT.tokens, token.content);\r\n                            let res = parse_params(context, token.content);\r\n                            context.unwrap();\r\n                            return res;\r\n                        }\r\n                    ),\r\n                    _Pattern(\"Identifier\").pipe(\r\n                        function (context: Context, token: Token) {\r\n                            validateAssignment(context, token);\r\n                            return [token];\r\n                        }\r\n                    )\r\n                ),\r\n                token: _NonCollecting(\"Punctuator =>\"),\r\n                body: FUNCTION_BODY_PATTERN,\r\n                expression: _Mark(false)\r\n            },\r\n            [\"body\", _Mark()],\r\n            [\r\n                //_=>作用为隔断匹配，使后续的表达式使用当前方法声明的环境\r\n                [\"token\", _NonCollecting(\"Punctuator _=>\")],//\"Punctuator _=>\"\r\n                [\"body\", \"[Expression]\"],\r\n                [\"expression\", _Mark(true)]\r\n            ]\r\n        ]\r\n    },\r\n    \"ClassExpression\": {\r\n        collector: [\r\n            {\r\n                _: _NonCollecting(\"Keyword class\"),\r\n                id: _Or(IDENTIFIER_OR_VALIDATE_STRICT_RESERVED_WORDS_PATTERN, _Mark(null)),\r\n                superClass: _Or(\r\n                    _Series(\r\n                        _NonCollecting(\"Keyword extends\"),\r\n                        IDENTIFIER_OR_VALIDATE_STRICT_RESERVED_WORDS_PATTERN\r\n                    ),\r\n                    _Mark(null)\r\n                ),\r\n                body:\r\n                    _Punctuator(\"{\").pipe(\r\n                        function (context: Context, token: Token, left: number) {\r\n                            let parser = context[CONTEXT.parser];\r\n                            let res = parser.parseRange(\r\n                                METHOD_DEFINITIONS_TREE, context, left, is_right_braces,\r\n                                function (node: Token) { return node.type === \"Success\"; }\r\n                            );\r\n\r\n                            return {\r\n                                type: \"ClassBody\",\r\n                                body: res.content?.content || [],\r\n                                range: res.range,\r\n                                loc: res.loc\r\n                            };\r\n                        }\r\n                    )\r\n            }\r\n        ]\r\n    },\r\n    \"Super\": {\r\n        validator(context: Context) {\r\n            let [, parser, left, right] = context;\r\n            if (!context[CONTEXT.inFunctionBody] || right === left) {\r\n                parser.err(context.getToken(left));\r\n            }\r\n            return true;\r\n        },\r\n        collector: {\r\n            token: _NonCollecting(\"Keyword super\"),\r\n            _next: _NonCapturing(\"Punctuator ( . [\")\r\n        }\r\n    },\r\n}\r\n\r\nconst Expressions: Record<string, any> = async_getter.Expressions = {\r\n    ...PrimaryExpressions,\r\n    \"\": PrimaryExpressions[\"\"].concat(\r\n        {\r\n            validator(context: Context) {\r\n                let parser = context[CONTEXT.parser];\r\n                let left = context[CONTEXT.left];\r\n                let token = context.getToken(left);\r\n                let store = context.store(\r\n                    CONTEXT.bindingSet, null,\r\n                    CONTEXT.bindingElement, false,\r\n                    CONTEXT.tokens, token.content\r\n                );\r\n                let grouping = new Grouping(\r\n                    parser.parseExpression(context), token\r\n                );\r\n                context.restore(store);\r\n                context[CONTEXT.start] = context[CONTEXT.end] = left;\r\n                return grouping;\r\n            },\r\n            collector: {\r\n                token: \"Punctuator ()\"\r\n            }\r\n        }\r\n    ),\r\n    \"ArrayExpression\": {\r\n        precedence: 20,\r\n        collector: {\r\n            elements: _Punctuator(\"[]\").pipe(\r\n                function (context: Context, node: Node, index: number) {\r\n                    let store = context.store(\r\n                        CONTEXT.spreadElement, true,\r\n                        CONTEXT.bindingElement, false\r\n                    );\r\n                    let res = parse_and_extract(ARRAY_ELEMENTS_TREE, context, node);\r\n                    context.restore(store);\r\n                    return res;\r\n                }\r\n            ),\r\n        }\r\n\r\n    },\r\n    \"ObjectExpression\": {\r\n        precedence: 20,\r\n        collector: {\r\n            properties: _Punctuator(\"{}\").pipe(\r\n                function (context: Context, node: Node, index: number) {\r\n                    return parse_and_extract(OBJECT_PROPERTIES_TREE, context, node);\r\n                    //return node.content || [];\r\n                }\r\n            ),\r\n        }\r\n\r\n    },\r\n    \"TaggedTemplateExpression\": {\r\n        collector: [\r\n            {\r\n                tag: EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN,\r\n                quasi: \"TemplateLiteral\"\r\n            }\r\n        ]\r\n    },\r\n    \"MemberExpression\": [\r\n        {\r\n            precedence: 20,\r\n            collector: {\r\n                object: EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN,\r\n                property: _Series(\r\n                    _NonCollecting(\"Punctuator .\"),\r\n                    _Or(\r\n                        \"Identifier\",\r\n                        _Pattern(\"Keyword\").pipe(\r\n                            function (context: Context, token: Token) {\r\n                                return reinterpretKeywordAsIdentifier(token);\r\n                                //return context[CONTEXT.parser].parseIdentifier(token);\r\n                            }\r\n                        )\r\n                    )\r\n                ),\r\n                computed: _Mark(false)\r\n            }\r\n        },\r\n        {\r\n            filter: \"CallExpression\",\r\n            precedence: 20,\r\n            collector: {\r\n                object: EXPRESSION_OR_VALIDATE_STRICT_RESERVED_WORDS_PATTERN,\r\n                property: _Or(\r\n                    _Punctuator(\"[\").pipe(\r\n                        function (context: Context, token: Token, left: number) {\r\n                            let store = context.store(CONTEXT.bindingElement, false);\r\n                            let res = context[CONTEXT.parser].parseRangeAsExpression(context, left, is_right_brackets);\r\n                            context.restore(store);\r\n                            return res;\r\n                        }\r\n                    ),\r\n                    _Punctuator(\"[]\").pipe(\r\n                        function (context: Context, token: Token, left: number) {\r\n                            let store = context.store(CONTEXT.tokens, token.content, CONTEXT.bindingElement, false);\r\n                            let res = context[CONTEXT.parser].parseExpression(context);\r\n                            context.restore(store);\r\n                            return res;\r\n                        }\r\n                    )\r\n                ),\r\n                computed: _Mark(true)\r\n            }\r\n        }\r\n    ],\r\n\r\n    \"MetaProperty\": {\r\n        handler([collected]: Context) {\r\n            collected.meta.type = \"Identifier\";\r\n            return collected;\r\n        },\r\n        collector: [\r\n            {\r\n                meta: \"Keyword import\",\r\n                _: _NonCollecting(\"Punctuator .\"),\r\n                property: \"Identifier meta\"\r\n            },\r\n            {\r\n                meta: \"Keyword new\",\r\n                _: _NonCollecting(\"Punctuator .\"),\r\n                property: \"Identifier target\"\r\n            }\r\n        ]\r\n    },\r\n    \"NewExpression\": {\r\n        precedence: new Number(20)/*_Precedence(20, PRECEDENCE_FEATURES.RIGHT_TERMINAL)*/,//memberexpression new Number(20)\r\n        collector: [\r\n            {\r\n                token: _NonCollecting(\"Keyword new\"),\r\n                callee: _Or(\r\n                    EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN,\r\n                    _Pattern(\"ArrowFunctionExpression\").pipe(\r\n                        function (context: Context, token: Token) {\r\n                            context[CONTEXT.parser].err(token);\r\n                        }\r\n                    )\r\n                ),\r\n                arguments: _Or(_Mark(() => []), ARGUMENTS_PATTERN)\r\n            }\r\n        ]\r\n    },\r\n    \"CallExpression\": {\r\n        precedence: 20/* _Precedence(20, PRECEDENCE_FEATURES.RIGHT_TERMINAL)*/,\r\n        filter(context: Context, left: number) {\r\n            let tokens = context.tokens;\r\n            let first_token = tokens[left], second_token = tokens[left + 1];\r\n            if (second_token === context[CONTEXT.rightAssociativeNode]) {\r\n                return false;\r\n            }\r\n            let first_token_type = first_token.type;\r\n            if (\r\n                first_token instanceof Grouping\r\n                || first_token_type !== \"ArrowFunctionExpression\"\r\n            ) {\r\n                return true;\r\n            }\r\n        },\r\n        collector: {\r\n            callee: EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN,\r\n            arguments: ARGUMENTS_PATTERN\r\n        }\r\n\r\n    },\r\n    \"UpdateExpression\": [\r\n        {\r\n            handler(context: Context) {\r\n                let [collected] = context;\r\n                collected.operator = collected.operator.value;\r\n                return collected;\r\n            },\r\n            precedence: 17,\r\n            collector: {\r\n                operator: \"Punctuator ++ --\",\r\n                argument: _Or(\"MemberExpression\", IDENTIFIER_OR_THROW_STRICT_RESERVED_WORDS_PATTERN),\r\n                prefix: _Mark(true),\r\n                /*_: _++a(b)*/\r\n            }\r\n        },\r\n        {\r\n            validator(context: Context) {\r\n                let collected = context[CONTEXT.parser].createNode(context);\r\n                collected.operator = collected.operator.value;\r\n                return collected;\r\n            },\r\n            filter(context: Context, left: number, right: number) {\r\n                return isAligned(context, left, left + 1);\r\n            },\r\n            precedence: 18,\r\n            collector: {\r\n                argument: _Or(\"MemberExpression\", IDENTIFIER_OR_THROW_STRICT_RESERVED_WORDS_PATTERN),\r\n                operator: \"Punctuator ++ --\",\r\n                prefix: _Mark(false),\r\n                _: _Option(\r\n                    _NonCapturing(\r\n                        _Punctuator(\"[\", \"(\").pipe(\r\n                            function (context: Context, token: Token) {\r\n                                context[CONTEXT.rightAssociativeNode] = token;\r\n                            }\r\n                        ),\r\n                        _Punctuator(\".\").pipe(\r\n                            function (context: Context, token: Token) {\r\n                                context[CONTEXT.parser].err(token);\r\n                            }\r\n                        )\r\n                    )\r\n                )\r\n            }\r\n        }\r\n    ],\r\n    \"AwaitExpression\": [\r\n        {\r\n            precedence: 17,\r\n            filter(context: Context) {\r\n                return context[CONTEXT.allowAwait];\r\n            },\r\n            collector: {\r\n                token: _NonCollecting(\"Keyword await\"),\r\n                argument: EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN\r\n            }\r\n        },\r\n        {\r\n            handler([{ token }]: Context) {\r\n                return reinterpretKeywordAsIdentifier(token);\r\n                //return parser.parseIdentifier(collected.token);\r\n            },\r\n            filter(context: Context) {\r\n                return !context[CONTEXT.allowAwait];\r\n            },\r\n            collector: {\r\n                token: \"Keyword await\",\r\n            }\r\n        },\r\n    ],\r\n    \"UnaryExpression\": {\r\n        handler(context: Context) {\r\n            let [collected] = context;\r\n            collected.operator = collected.operator.value;\r\n            return collected;\r\n        },\r\n        precedence: 17,\r\n        collector: [\r\n            {\r\n                operator: _Or(\"Punctuator ~ ! + -\", \"Keyword delete void typeof\"),\r\n                argument: EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN,\r\n                prefix: _Mark(true)\r\n            }\r\n        ]\r\n    },\r\n    \"BinaryExpression\": {\r\n        handler(context: Context) {\r\n            let [collected] = context;\r\n            collected.operator = collected.operator.value;\r\n            return collected;\r\n        },\r\n        validator(context: Context) {\r\n            return context[CONTEXT.right] - context[CONTEXT.left] >= 2\r\n        },\r\n        precedence: [16, 15, 14, 13, 12, 11, 10, 9, 8, 7],\r\n        collector: [\r\n            {\r\n                left: EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN,\r\n                operator: `Punctuator **`,\r\n                right: _Option(EXPRESSION_OR_VALIDATE_STRICT_RESERVED_WORDS_PATTERN)\r\n            },\r\n            [\"operator\", `Punctuator * / %`],\r\n            [\"operator\", `Punctuator + -`],\r\n            [\"operator\", `Punctuator << >> >>>`],\r\n            [\"operator\", _Or(`Punctuator < <= > >=`, `Keyword in instanceof`)],\r\n            [\"operator\", `Punctuator == != === !==`],\r\n            [\"operator\", `Punctuator &`],\r\n            [\"operator\", `Punctuator ^`],\r\n            [\"operator\", `Punctuator |`],\r\n            [\"operator\", `Punctuator ??`]\r\n        ]\r\n    },\r\n    \"LogicalExpression\": {\r\n        validator(context: Context) {\r\n            if (context[CONTEXT.right] - context[CONTEXT.left] === 2) {\r\n                let collected = context[CONTEXT.parser].createNode(context);\r\n                collected.operator = collected.operator.value;\r\n                return collected;\r\n            }\r\n        },\r\n        precedence: [6, 5],\r\n        collector: [\r\n            {\r\n                left: EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN,\r\n                operator: \"Punctuator &&\",\r\n                right: _Option(EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN)\r\n            },\r\n            [\"operator\", \"Punctuator ||\"]\r\n        ]\r\n    },\r\n    \"ConditionalExpression\": [\r\n        {\r\n            validator(context: Context) {\r\n                let [, parser, left, right] = context;\r\n                if (right - left >= 4) {\r\n                    return true;\r\n                }\r\n                if (!context[CONTEXT.isExpression] || context[CONTEXT.bindingElement]) {\r\n                    let store = context.store(CONTEXT.isExpression, true, CONTEXT.bindingElement, null);\r\n                    parser.parseCustom(\r\n                        parser.EXPRESSION_TREE,\r\n                        context,\r\n                        left,\r\n                        (node: Node) => node.type === \"ConditionalExpression\"\r\n                    );\r\n                    context.restore(store);\r\n                    return null;\r\n                }\r\n            },\r\n            precedence: new Number(3),//与 Assignment 为右优先\r\n            collector: [\r\n                {\r\n                    test: EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN,//EXPRESSION_OR_VALIDATE_STRICT_RESERVED_WORDS\r\n                    token: _NonCollecting(\"Punctuator ?\")\r\n                },\r\n                [\"consequent\", EXPRESSION_OR_VALIDATE_STRICT_RESERVED_WORDS_PATTERN],\r\n                [\"_\", _NonCollecting(\"Punctuator :\")],\r\n                [\"alternate\", EXPRESSION_OR_VALIDATE_STRICT_RESERVED_WORDS_PATTERN]\r\n            ]\r\n        },\r\n    ],\r\n    \"YieldExpression\": [\r\n        {\r\n            /*filter(context: Context) {\r\n                return context[CONTEXT.allowYield];\r\n            },*/\r\n            precedence: 2,\r\n            collector: [\r\n                {\r\n                    token: _NonCollecting(\"Keyword yield\"),\r\n                    _: _NonCollecting(\"Punctuator *\"),\r\n                    argument: EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN,\r\n                    delegate: _Mark(true)\r\n                },\r\n                {\r\n                    token: _NonCollecting(\"Keyword yield\"),\r\n                    argument: EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN,\r\n                    delegate: _Mark(false)\r\n                }\r\n            ]\r\n        },\r\n        /*{\r\n            handler([{ token }]: Context) {\r\n                return reinterpretKeywordAsIdentifier(token)\r\n                //return parser.parseIdentifier(collected.token);\r\n            },\r\n            filter(context: Context) {\r\n                return !context[CONTEXT.allowYield];\r\n            },\r\n            collector: {\r\n                token: \"Keyword yield\"\r\n            }\r\n        },*/\r\n    ],\r\n    \"AssignmentExpression\": {\r\n        validator: \"LogicalExpression\",\r\n        precedence: new Number(3),//Right-associative\r\n        collector: {\r\n            left: _Or(\r\n                _Or(\"[Expression]\").pipe(\r\n                    function (context: Context, expr: Node) {\r\n                        context[CONTEXT.parser].err(expr);\r\n                    }\r\n                ),\r\n                \"AssignmentExpression\",\r\n                \"MemberExpression\",\r\n                \"AssignmentPattern\",\r\n                \"ArrayPattern\",\r\n                \"ObjectPattern\",\r\n                IDENTIFIER_OR_THROW_STRICT_RESERVED_WORDS_PATTERN\r\n            ),\r\n            operator: ASSIGNMENT_PUNCTUATORS_PATTERN,\r\n            right: _Option(\"[Expression]\")//占位避免错误断句\r\n        }\r\n    },\r\n    \"SequenceExpression\": {\r\n        handler(context: Context) {\r\n            let [collected] = context;\r\n            let expressions: Array<Node> = collected.expressions;\r\n            if (expressions[0] instanceof NODES.SequenceExpression) {\r\n                expressions[0].expressions.push(expressions[1]);\r\n                collected.expressions = expressions[0].expressions\r\n            }\r\n            return collected\r\n        },\r\n        validator(context: Context) {\r\n            let [, , left, right] = context;\r\n            if (right - left === 2) {\r\n                return true;\r\n            }\r\n        },\r\n        precedence: 1,\r\n        collector: {\r\n            expressions: _Series(\r\n                EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN,\r\n                _NonCollecting(\"Punctuator ,\"),\r\n                _Option(EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN)\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst COMPUTED_PROPERTY_NAME_PATTERN = _Punctuator(\"[]\").pipe(\r\n    function (context: Context, token: Token) {\r\n        let [collected, parser] = context;\r\n        collected.computed = true;\r\n        context.wrap(CONTEXT.tokens, token.content)\r\n        let res = parser.parseExpression(context);\r\n        context.unwrap();\r\n        return res;\r\n    }\r\n);\r\n\r\nconst LITERAL_PROPERTY_NAME_PATTERN = _Or(\"Identifier\", \"Keyword\", \"Literal\").pipe(\r\n    function (context: Context, key: Token) {\r\n        let [, parser] = context;\r\n        if (key instanceof Grouping) {\r\n            parser.err(key);\r\n        } else {\r\n            switch (key.type) {\r\n                case \"Keyword\":\r\n                    return reinterpretKeywordAsIdentifier(key);\r\n                //return parser.parseIdentifier(key);\r\n                case \"Literal\":\r\n                    if (key.regex) {\r\n                        parser.err(key);\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n);\r\nconst PROPERTY_NAME_PATTERN = _Or(COMPUTED_PROPERTY_NAME_PATTERN, LITERAL_PROPERTY_NAME_PATTERN);\r\n\r\n\r\nconst MethodDefinitions = {\r\n    ..._SuccessCollector(_Pattern(\"MethodDefinition\")),\r\n    \"\": {\r\n        validator(context: Context) {\r\n            context[CONTEXT.start] = context[CONTEXT.end] = context[CONTEXT.right];\r\n            return [];\r\n        },\r\n        collector: {\r\n            _: _NonCapturing(MARKS.BOUNDARY, \"Success\"),\r\n            __: \"Punctuator ;\"\r\n        }\r\n    },\r\n    MethodDefinition: {\r\n        handler(context: Context) {\r\n            let [collected] = context;\r\n            let { value } = collected;\r\n            collected.kind = value.kind;\r\n            delete value.kind;\r\n            collected.computed = value.computed;\r\n            delete value.computed;\r\n            collected.key = value.key;\r\n            delete value.key;\r\n            return collected;\r\n        },\r\n        collector: [\r\n            {\r\n                _prev: _NonCapturing(MARKS.BOUNDARY, \"Success\"),\r\n                key: _Mark(\"\"),\r\n                static: _Mark(true),\r\n                computed: _Mark(false),\r\n                _static: _NonCollecting(\"Identifier static\"),\r\n                value: \"FunctionExpression\",\r\n                kind: _Mark(\"\"),\r\n            },\r\n            [\r\n                [\"static\", _Mark(false)],\r\n                [\"_static\", _Mark()]\r\n            ]\r\n        ]\r\n    },\r\n    FunctionExpression: {\r\n        collector: [\r\n            {\r\n                _prev: _NonCapturing(MARKS.BOUNDARY, \"Success\"),\r\n                static: _Option(_NonCapturing(\"Identifier static\")),\r\n                async: _Or(\r\n                    _Series(_Mark(true), _NonCollecting(\"Identifier async\")),\r\n                    _Mark(false)\r\n                ),\r\n                generator: _Or(\r\n                    _Series(_Mark(true), _NonCollecting(\"Punctuator *\")),\r\n                    _Mark(false)\r\n                ),\r\n                kind: _Mark(\"method\"),\r\n                computed: _Mark(false),\r\n                key: PROPERTY_NAME_PATTERN,\r\n                id: _Mark(null),\r\n                params: PARAMS_PATTERN,\r\n                expression: _Mark(false),\r\n                body: FUNCTION_BODY_PATTERN\r\n            },\r\n            [\r\n                [\"generator\", _Mark(false)],\r\n                [\r\n                    \"kind\", _Or(\"Identifier get set\").pipe(\r\n                        function (context: Context, token: Token, left: number) {\r\n                            return token.value;\r\n                        }\r\n                    )\r\n                ]\r\n            ]\r\n        ]\r\n    }\r\n}\r\n\r\nconst Arguments = {\r\n    \"Success\": {\r\n        handler: join_content,\r\n        //precedence: 0,\r\n        collector: {\r\n            success: _Or(_NonCollecting(MARKS.BOUNDARY), \"Success\"),\r\n            content: _Or(\"SpreadElement\", EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN),\r\n            _: _Or(_NonCollecting(\"Punctuator ,\"), MARKS.BOUNDARY, _NonCapturing(\"Punctuator )\")),\r\n        }\r\n    }\r\n}\r\n\r\nfunction validateParamDeclarator(context: Context, token: Token) {\r\n    let parser = context[CONTEXT.parser];\r\n    validate(token);\r\n    function validate(id: Node) {\r\n        if (id instanceof Grouping) {\r\n            parser.err(id);\r\n            return;\r\n        }\r\n        switch (id.type) {\r\n            case \"Identifier\":\r\n                validateBinding(context, id);\r\n                break;\r\n            case \"ObjectPattern\":\r\n                for (let property of id.properties) {\r\n                    validate(property.value);\r\n                }\r\n                break;\r\n            case \"ArrayPattern\":\r\n                for (let element of id.elements) {\r\n                    element && validate(element);\r\n                }\r\n                break;\r\n            case \"RestElement\":\r\n                validate(id.argument);\r\n                break;\r\n            case \"AssignmentPattern\":\r\n                validate(id.left);\r\n                break;\r\n            default:\r\n                parser.err(id);\r\n                break;\r\n        }\r\n    }\r\n}\r\nconst Params = {\r\n    \"Success\": {\r\n        handler(context: Context) {\r\n            let [collected, parser] = context;\r\n            if (collected.content instanceof Grouping) {\r\n                parser.err(collected.content);\r\n            }\r\n            return join_content(context);\r\n        },\r\n        collector: [\r\n            {\r\n                success: _Or(_NonCollecting(MARKS.BOUNDARY), \"Success\"),\r\n                content: \"AssignmentPattern\",\r\n                _: _Or(_NonCollecting(\"Punctuator ,\", MARKS.BOUNDARY), _NonCapturing(\"Punctuator )\")),\r\n            },\r\n            [\r\n                \"content\", _Or(\"Identifier\").pipe(\r\n                    function (context: Context, token: Token) {\r\n                        validateBinding(context, token);\r\n                    }\r\n                )\r\n            ],\r\n            [\"content\", _Or(\"ArrayPattern\", \"ObjectPattern\").pipe(validateParamDeclarator)],\r\n            [\r\n                [\"content\", _Or(\"RestElement\").pipe(validateParamDeclarator)],\r\n                [\"_\", _Or(_NonCollecting(MARKS.BOUNDARY), _NonCapturing(\"Punctuator )\"))]\r\n            ]\r\n        ]\r\n    }\r\n}\r\n\r\nconst ArrayElements: any = {\r\n    \"Success\": {\r\n        handler: join_content,\r\n        precedence: 0,\r\n        collector: [\r\n            {\r\n                success: _Or(_NonCollecting(MARKS.BOUNDARY), \"Success\"),\r\n                content: _Or(\"SpreadElement\", EXPRESSION_OR_VALIDATE_STRICT_RESERVED_WORDS_PATTERN),\r\n                _: _NonCollecting(\"Punctuator ,\", MARKS.BOUNDARY),\r\n            },\r\n            [\r\n                [\"content\", _Mark(null)],\r\n                [\"_\", _NonCollecting(\"Punctuator ,\")]\r\n            ]\r\n        ]\r\n    }\r\n}\r\n\r\nconst Properties = {\r\n    \"Property\": {\r\n        handler(context: Context) {\r\n            let [collected, parser, left, right] = context;\r\n            let { value: [params, body] } = collected;\r\n            let expr = new NODES.FunctionExpression();\r\n            expr.id = null;\r\n            expr.params = params;\r\n            expr.body = body.content;\r\n            expr.generator = body.generator;\r\n            expr.expression = false;\r\n            expr.async = body.async;\r\n            attachLocation(expr, collected, context.getToken(right - 1));\r\n            collected.value = expr;\r\n            collected.type = \"ObjectProperty\"\r\n            return collected;\r\n        },\r\n        collector: [\r\n            {\r\n                _prev: _NonCapturing(MARKS.BOUNDARY, \"Punctuator ,\", \"ObjectProperty\"),\r\n                async: _Option(_NonCollecting(\"Identifier async\")),\r\n                generator: _Option(_NonCollecting(\"Punctuator *\")),\r\n                kind: _Mark(\"init\"),\r\n                computed: _Mark(false),\r\n                key: PROPERTY_NAME_PATTERN,\r\n                value: _Series(PARAMS_PATTERN, BODY_PATTERN),\r\n                _next: _Or(\r\n                    _NonCollecting(MARKS.BOUNDARY, \"Punctuator ,\"),\r\n                    _NonCapturing(\"Punctuator }\")\r\n                ),\r\n                //_NonCapturing(MATCH_MARKS.BOUNDARY, \"Punctuator ,\", \"Punctuator }\"),\r\n                method: _Mark(true),\r\n                shorthand: _Mark(false)\r\n            },\r\n            [\r\n                [\"async\", _Mark()],\r\n                [\"generator\", _Mark()],\r\n                [\r\n                    \"kind\", _Or(\r\n                        _Series(_NonCollecting(\"Identifier get\"), _Mark(\"get\")),\r\n                        _Series(_NonCollecting(\"Identifier set\"), _Mark(\"set\"))\r\n                    )\r\n                ],//\"Identifier get set\"\r\n                [\"method\", _Mark(false)]\r\n            ]\r\n        ]\r\n    }\r\n}\r\n\r\nconst ObjectProperties = {\r\n    ..._SuccessCollector(_Or(\r\n        \"Property\",\r\n        _Or(\"ObjectProperty\").pipe(\r\n            function (context: Context, token: Token) {\r\n                token.type = \"Property\";\r\n            }\r\n        )\r\n    )),\r\n    \"Property\": {\r\n        collector: [\r\n            {\r\n                _prev: _NonCapturing(MARKS.BOUNDARY, \"Success\"),\r\n                key: PROPERTY_NAME_PATTERN,//\"TemplateLiteral\"\r\n                value: _Series(\r\n                    _NonCollecting(\"Punctuator :\"),\r\n                    EXPRESSION_OR_VALIDATE_STRICT_RESERVED_WORDS_PATTERN\r\n                ),\r\n                _next: _Or(_NonCollecting(MARKS.BOUNDARY, \"Punctuator ,\"), _NonCapturing(\"Punctuator }\")),\r\n                kind: _Mark(\"init\"),\r\n                computed: _Mark(false),\r\n                method: _Mark(false),\r\n                shorthand: _Mark(false),\r\n            },\r\n            [\r\n                [\"key\", \"Identifier\"],\r\n                [\"value\", _Mark(function (context: Context) {\r\n                    return context[CONTEXT.collected].key;\r\n                })],\r\n                [\"shorthand\", _Mark(true)]\r\n            ]\r\n        ]\r\n    }\r\n}\r\n/*\r\nlet PRIMARY_EXPRESSION_TREE = createMatchTree(\r\n    PrimaryExpressions\r\n)\r\nlet METHOD_DEFINITIONS_TREE = createMatchTree(\r\n    MethodDefinitions, PRIMARY_EXPRESSION_TREE\r\n);\r\nlet PROPERTIES_TREE = createMatchTree(\r\n    Properties,\r\n    PRIMARY_EXPRESSION_TREE\r\n);*/\r\n\r\nlet PRIMARY_EXPRESSION_TREE: MatchTree,\r\n    METHOD_DEFINITIONS_TREE: MatchTree,\r\n    PROPERTIES_TREE: MatchTree,\r\n    UNIT_EXPRESSION_TREE: MatchTree,\r\n    ARRAY_ELEMENTS_TREE: MatchTree,\r\n    OBJECT_PROPERTIES_TREE: MatchTree,\r\n    PARAMS_TREE: MatchTree,\r\n    ARGUMENTS_TREE: MatchTree,\r\n    EXPRESSION_TREE: MatchTree;\r\n\r\n\r\n\r\nasync_getter.get(\r\n    \"Patterns\",\r\n    function (Patterns: Record<string, any>) {\r\n        PRIMARY_EXPRESSION_TREE = createMatchTree(\r\n            PrimaryExpressions\r\n        )\r\n        METHOD_DEFINITIONS_TREE = createMatchTree(\r\n            MethodDefinitions, PRIMARY_EXPRESSION_TREE\r\n        );\r\n        PROPERTIES_TREE = createMatchTree(\r\n            Properties,\r\n            PRIMARY_EXPRESSION_TREE\r\n        );\r\n\r\n        UNIT_EXPRESSION_TREE = createMatchTree(\r\n            [Expressions, Patterns],\r\n            undefined,\r\n            [\"SequenceExpression\"]\r\n        );\r\n        ARRAY_ELEMENTS_TREE = createMatchTree(ArrayElements, UNIT_EXPRESSION_TREE);\r\n\r\n        OBJECT_PROPERTIES_TREE = createMatchTree(\r\n            ObjectProperties,\r\n            UNIT_EXPRESSION_TREE\r\n        );\r\n        PARAMS_TREE = createMatchTree(\r\n            Params,\r\n            UNIT_EXPRESSION_TREE\r\n        );\r\n        ARGUMENTS_TREE = createMatchTree(\r\n            Arguments,\r\n            UNIT_EXPRESSION_TREE\r\n        );\r\n        EXPRESSION_TREE = createMatchTree(\r\n            { SequenceExpression: Expressions.SequenceExpression }\r\n            , UNIT_EXPRESSION_TREE\r\n        );\r\n        async_getter.EXPRESSION_TREE = EXPRESSION_TREE;\r\n        async_getter.UNIT_EXPRESSION_TREE = UNIT_EXPRESSION_TREE;\r\n    }\r\n)\r\n\r\n\r\nasync_getter.get(\"Expressions\", function (expressions: Record<string, any>) {\r\n    for (const type_name in expressions) {\r\n        if (type_name) {\r\n            TYPE_ALIAS[type_name] = [type_name, \"[Expression]\"];\r\n        }\r\n    }\r\n});\r\nexport {\r\n    ArrayElements,\r\n    PARAMS_PATTERN,\r\n    FUNCTION_BODY_PATTERN,\r\n    PrimaryExpressions,\r\n    Expressions,\r\n    parseArrayPattern,\r\n    parseObjectPattern,\r\n    parse_params\r\n};\r\nexport default Expressions;\r\nfunction parse_params(context: Context, tokens: Array<Token>) {//\r\n    if (tokens.length) {\r\n        let parser = context[CONTEXT.parser];\r\n        let restore = context.store(\r\n            CONTEXT.tokens, tokens,\r\n            CONTEXT.bindingElement, true\r\n        );\r\n        context[CONTEXT.strict] && context.wrap(CONTEXT.bindingSet, []);\r\n        parser.parseCustom(PARAMS_TREE, context);\r\n        context.restore(restore);\r\n        return extract_success(parser, tokens);\r\n    }\r\n    return [];\r\n}\r\n\r\n\r\nfunction init_token_hooks() {\r\n    function getLiteral(parse_value: (token: Token, tokenizer: Tokenizer) => any, token: Token, tokenizer: Tokenizer) {\r\n        return {\r\n            type: \"Literal\",\r\n            value: parse_value(token, tokenizer),\r\n            raw: token.value,\r\n            range: token.range,\r\n            loc: token.loc\r\n        }\r\n    }\r\n\r\n    let getStringLiteral = getLiteral.bind(null, (token: Token, tokenizer: Tokenizer) => tokenizer._volatility);\r\n    let getRegularLiteral = getLiteral.bind(null, (token: Token, tokenizer: Tokenizer) => {\r\n        let regex = token.regex;\r\n        try {\r\n            return new RegExp(regex.pattern, regex.flags);\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    });\r\n\r\n    token_hooks.Keyword = function (token: Token, parser: Parser) {\r\n        let context = parser.context_stack[0];\r\n        if (!context[CONTEXT.allowYield] && token.value === \"yield\") {\r\n            return reinterpretKeywordAsIdentifier(token);\r\n        }\r\n        return token;\r\n    };\r\n    token_hooks.Identifier = reinterpretKeywordAsIdentifier;\r\n    token_hooks.Numeric = getLiteral.bind(null, (token: Token) => Number(token.value));\r\n    token_hooks.Boolean = getLiteral.bind(null, (token: Token) => token.value === \"true\");\r\n    token_hooks.String = function (token: Token, parser: Parser) {\r\n        token = getStringLiteral(token, parser);\r\n        if (parser._scopes.octal && parser.context_stack[0][CONTEXT.strict]) {\r\n            parser.err(token);\r\n        }\r\n        return token;\r\n    };\r\n    token_hooks.Null = getLiteral.bind(null, () => null);\r\n    token_hooks.RegularExpression = function (token: Token, tokenizer: Tokenizer) {\r\n        let res = getRegularLiteral(token, tokenizer);\r\n        res.regex = token.regex;\r\n        return res;\r\n    };\r\n}\r\n","\r\n\r\nimport {\r\n    Context, CONTEXT, SourceLocation, Node, Token, MARKS, MatchTree\r\n} from '../interfaces';\r\nimport {\r\n    async_getter,\r\n    _Punctuator,\r\n    _Keyword,\r\n    _Identifier,\r\n    _Pattern,\r\n    isRestrictedWord,\r\n    STATEMANT_LIST_ITEM_PATTERN,\r\n    TOPLEVEL_ITEM_PATTERN,\r\n    _Option, _Or, _Series, _NonCollecting, _Mark, NODES, TYPE_ALIAS,\r\n    validateBinding, validateLineTerminator, createMatchTree, join_content, _NonCapturing, reinterpretIdentifierAsKeyword\r\n} from './head'\r\n//import { Expressions, UNIT_EXPRESSION_TREE } from './expression';\r\n\r\nlet Grouping = NODES.Grouping;\r\n\r\n\r\n\r\nfunction get_variable_declarator(context: Context, id: Node, init: Node, range: [number, number], loc: SourceLocation): Node {\r\n\r\n    let parser = context[CONTEXT.parser];\r\n    validate(id);\r\n    /*\r\n    if (id instanceof Grouping) {\r\n        parser.err(id);\r\n    }if (context[CONTEXT.strict]) {\r\n        init || validateBinding(context, id);\r\n    } if (id.name === \"let\") {\r\n        let kind = context.tokens[context[CONTEXT.begin] - 1];\r\n        if (kind.value === \"let\" || kind.value === \"const\") {\r\n            parser.err(id);\r\n        }\r\n    }*/\r\n    return {\r\n        type: \"VariableDeclarator\",\r\n        id, init, range, loc\r\n    };\r\n\r\n    function validate(id: Node) {\r\n        if (id instanceof Grouping) {\r\n            parser.err(id);\r\n            return;\r\n        }\r\n        switch (id.type) {\r\n            case \"Identifier\":\r\n                if (context[CONTEXT.strict]) {\r\n                    validateBinding(context, id);\r\n                } else if (id.name === \"let\") {\r\n                    let kind = context.tokens[context[CONTEXT.begin] - 1];\r\n                    if (kind.value === \"let\" || kind.value === \"const\") {\r\n                        parser.err(id);\r\n                    }\r\n                }\r\n                break;\r\n            case \"ObjectPattern\":\r\n                for (let property of id.properties) {\r\n                    validate(property.value);\r\n                }\r\n                break;\r\n            case \"ArrayPattern\":\r\n                for (let element of id.elements) {\r\n                    element && validate(element);\r\n                }\r\n                break;\r\n            case \"RestElement\":\r\n                validate(id.argument);\r\n                break;\r\n            case \"AssignmentPattern\":\r\n                validate(id.left);\r\n                break;\r\n            default:\r\n                parser.err(id);\r\n                break;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nlet VariableDeclarators = {\r\n    Success: {\r\n        handler: [\r\n            join_content,\r\n            function (context: Context) {\r\n                let [collected] = context;\r\n                validateLineTerminator(context);\r\n                collected.content = join_content(context).content;\r\n                return collected;\r\n            }\r\n        ],\r\n        precedence: [true, 0],\r\n        collector: [\r\n            {\r\n                success: _Or(\"Success\", MARKS.BOUNDARY),\r\n                content: _Or(\r\n                    _Pattern(\"Identifier\").pipe(\r\n                        function (context: Context, identifier: Node) {\r\n                            return get_variable_declarator(\r\n                                context,\r\n                                identifier,\r\n                                null,\r\n                                identifier.range,\r\n                                identifier.loc\r\n                            );\r\n                        }\r\n                    ),\r\n                    _Pattern(\"AssignmentPattern\").pipe(\r\n                        function (context: Context, pattern: Node) {\r\n                            return get_variable_declarator(\r\n                                context,\r\n                                pattern.left,\r\n                                pattern.right,\r\n                                pattern.range,\r\n                                pattern.loc\r\n                            );\r\n                        }\r\n                    )\r\n                ),\r\n                _next: _NonCollecting(\"Punctuator ,\"),\r\n            },\r\n            [\r\n                [\"type\", _Mark(\"VariableDeclarators\")],\r\n                [\"_next\", _Option(\"Punctuator ;\")]\r\n            ]\r\n        ]\r\n    }\r\n}\r\n\r\n\r\nlet VARIABLE_DECLARATOR_TREE: MatchTree;\r\n\r\nasync_getter.get(\r\n    \"UNIT_EXPRESSION_TREE\",\r\n    function (UNIT_EXPRESSION_TREE: MatchTree) {\r\n        VARIABLE_DECLARATOR_TREE = createMatchTree(VariableDeclarators, UNIT_EXPRESSION_TREE);\r\n    }\r\n);\r\n\r\nfunction reinterpreat_expression_as_declaration(context: Context, expr: Node) {\r\n    let [collected, parser] = context;\r\n    expr.type = collected.type;\r\n    if (expr.id) {\r\n        if (isRestrictedWord(expr.id.name)) {\r\n            parser.err(expr.id);\r\n        }\r\n    } else {\r\n        parser.err(expr);\r\n    }\r\n    for (let key in expr) {\r\n        collected[key] = expr[key];\r\n    }\r\n    return expr.id;\r\n}\r\n\r\nconst Declarations: Record<string, any> = async_getter.Declarations = {\r\n    \"ClassDeclaration\": { //<= ClassExpression\r\n        filter(context: Context, left: number, right: number) {\r\n            let tokens = context.tokens;\r\n            return !(tokens[right] instanceof Grouping);\r\n        },\r\n        collector: [\r\n            {\r\n                _prev: _NonCapturing(TOPLEVEL_ITEM_PATTERN),\r\n                id: _Pattern(\"ClassExpression\").pipe(reinterpreat_expression_as_declaration)\r\n            }\r\n        ]\r\n    },\r\n    \"FunctionDeclaration\": {\r\n        filter: \"ClassDeclaration\",\r\n        collector: [\r\n            {\r\n                _prev: _NonCapturing(TOPLEVEL_ITEM_PATTERN),\r\n                id: _Pattern(\"FunctionExpression\").pipe(reinterpreat_expression_as_declaration)\r\n            }\r\n        ]\r\n    },\r\n    \"VariableDeclaration\": [\r\n        {\r\n            validator: [\r\n                function (context: Context) {\r\n                    let [, parser, left] = context;\r\n                    context.wrap(CONTEXT.bindingElement, true);\r\n                    let res = parser.parseCustom(\r\n                        VARIABLE_DECLARATOR_TREE,\r\n                        context,\r\n                        left + 1,\r\n                        (node: Node) => node.type === \"VariableDeclarators\"\r\n                    );\r\n                    context.unwrap();\r\n                    return res && 0;\r\n                }, null\r\n            ],\r\n            collector: [\r\n                {\r\n                    //_: _NonCapturing(TOPLEVEL_ITEM_PATTERN),\r\n                    kind: _Or(\"Keyword var const let\", \"Identifier let\").pipe(\r\n                        function (context: Context, token: Token) {\r\n                            return token.name === undefined ? token.value : token.name;\r\n                        }\r\n                    ),\r\n                    declarations: _Or(\r\n                        \"Identifier\",\r\n                        \"Punctuator [ {\"\r\n                    )\r\n                },\r\n                [\r\n                    [\"declarations\", _Pattern(\"VariableDeclarators\").pipe(\r\n                        function (context: Context, token: Token) {\r\n                            return token.content;\r\n                        }\r\n                    )],\r\n                ]\r\n            ]\r\n        }\r\n    ]\r\n\r\n};\r\nasync_getter.get(\"Declarations\", function (declarations: Record<string, any>) {\r\n    for (const type_name in declarations) {\r\n        type_name && (TYPE_ALIAS[type_name] = [type_name, \"[Declaration]\"]);\r\n    }\r\n\r\n})\r\nexport { get_variable_declarator };\r\nexport default Declarations;\r\n","\r\n\r\nimport {\r\n    Token, Node, Context, CONTEXT, MatchTree\r\n} from './interfaces';\r\n\r\nimport { createSearchTree } from './lexical/head'\r\n\r\nimport {\r\n    TYPE_ENUMS,\r\n    PUNCTUATORS,\r\n    TOKEN_TYPE_SET,\r\n    REGEXP_DESCRIPTOR\r\n} from \"./lexical/index\";\r\n\r\nimport Parser from './parser';\r\nimport TokenizerOrigin from './tokenizer';\r\n\r\nimport { async_getter, token_hooks, createMatchTree } from './syntax/head'\r\n\r\nimport Expressions from './syntax/expression'\r\nimport Declarations from './syntax/declaration'\r\nimport Statements from './syntax/statement'\r\nimport ModuleDeclarations from './syntax/module_declaration'\r\n\r\n\r\nasync_getter.open();\r\nlet EXPRESSION_TREE: MatchTree = async_getter.EXPRESSION_TREE;\r\n\r\nconst SYNTAX_TREE = createMatchTree([\r\n    Declarations,\r\n    ModuleDeclarations,\r\n    Statements\r\n], EXPRESSION_TREE);\r\n\r\n\r\nlet EXPRESSION_ITEM_PATTERN = {};\r\nlet DECLARATION_ITEM_PATTERN = {};\r\nlet STATEMENT_ITEM_PATTERN = {};\r\nlet STATEMENT_LIST_ITEM_PATTERN = {};\r\nlet MODULE_ITEM_PATTERN = {};\r\nfor (\r\n    const [descriptor, patterns]\r\n    of\r\n    [\r\n        [\r\n            Expressions,\r\n            [EXPRESSION_ITEM_PATTERN]\r\n        ],\r\n        [\r\n            Declarations,\r\n            [DECLARATION_ITEM_PATTERN, STATEMENT_LIST_ITEM_PATTERN]\r\n        ],\r\n        [\r\n            Statements,\r\n            [STATEMENT_ITEM_PATTERN, STATEMENT_LIST_ITEM_PATTERN]\r\n        ],\r\n        [\r\n            ModuleDeclarations,\r\n            [MODULE_ITEM_PATTERN, STATEMENT_LIST_ITEM_PATTERN]\r\n        ],\r\n    ] as Array<[Record<string, any>, Array<Record<string, boolean>>]>\r\n) {\r\n    for (const key in descriptor) {\r\n        if (key) {\r\n            for (const pattern of patterns) {\r\n                pattern[key] = true;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction isExpression(node: Node) {\r\n    return EXPRESSION_ITEM_PATTERN[node.type];\r\n}\r\nfunction isDeclaration(node: Node) {\r\n    return DECLARATION_ITEM_PATTERN[node.type];\r\n}\r\nfunction isStatement(node: Node) {\r\n    return STATEMENT_ITEM_PATTERN[node.type];\r\n}\r\nfunction isStatementListItem(node: Node) {\r\n    return STATEMENT_LIST_ITEM_PATTERN[node.type];\r\n}\r\nfunction isModuleItem(node: Node) {\r\n    return MODULE_ITEM_PATTERN[node.type];\r\n}\r\n\r\n\r\nconst TOKEN_TYPE_MAPPERS: Record<string, string | number> = TOKEN_TYPE_SET.reduce(\r\n    (map, [type, id_set]) => {\r\n        for (let id of id_set) {\r\n            map[\" \" + id] = type;\r\n        }\r\n        return map;\r\n    }, {}\r\n);\r\nconst PUNCTUATORS_TREE = createSearchTree(PUNCTUATORS);\r\nconst PRIMARY_EXPR_START_PUNCTUATORS_TREE = createSearchTree(\r\n    [REGEXP_DESCRIPTOR],\r\n    createSearchTree(PUNCTUATORS, undefined, [\"/=\"]),\r\n);\r\n\r\n\r\n\r\nclass Tokenizer extends TokenizerOrigin {\r\n    TYPE_ENUMS = TYPE_ENUMS;\r\n    PRIMARY_EXPR_START_PUNCTUATORS_TREE = PRIMARY_EXPR_START_PUNCTUATORS_TREE;\r\n    PUNCTUATORS_TREE = PUNCTUATORS_TREE;\r\n}\r\nclass Dison extends Parser {\r\n    token_hooks = token_hooks;\r\n    TYPE_ENUMS = TYPE_ENUMS;\r\n    PRIMARY_EXPR_START_PUNCTUATORS_TREE = PRIMARY_EXPR_START_PUNCTUATORS_TREE;\r\n    PUNCTUATORS_TREE = PUNCTUATORS_TREE;\r\n    TOKEN_TYPE_MAPPERS = TOKEN_TYPE_MAPPERS;\r\n    SYNTAX_TREE = SYNTAX_TREE;\r\n    EXPRESSION_TREE = EXPRESSION_TREE;\r\n\r\n    isExpression = isExpression;\r\n    isStatement = isStatement;\r\n    isStatementListItem = isStatementListItem;\r\n    isDeclaration = isDeclaration;\r\n    isModuleItem = isModuleItem;\r\n}\r\nexport {\r\n    Tokenizer,\r\n    Dison as Parser\r\n};\r\nexport default Dison;\r\n","\r\nimport {\r\n    Node, Token, Context, CONTEXT, MARKS, MatchTree\r\n} from '../interfaces';\r\nimport {\r\n    async_getter,\r\n    attachLocation,\r\n    createMatchTree,\r\n    _Option, _Or, _Series, _NonCollecting, _NonCapturing, _Mark,\r\n    TYPE_ALIAS, _Context, _Loop, NODES,\r\n    validateBinding, validateLineTerminator, ASSIGNMENT_PUNCTUATORS_PATTERN, _SuccessCollector, join_content, TOPLEVEL_ITEM_PATTERN,\r\n    extract_success,\r\n    parse_and_extract,\r\n    get_inner_group,\r\n    _Pattern,\r\n} from './head'\r\n\r\n//import { UNIT_EXPRESSION_TREE } from './expression';\r\nconst Grouping = NODES.Grouping;\r\n\r\nlet UNIT_EXPRESSION_TREE: Record<string, any>;\r\nlet PETTERN_ELEMENTS_TREE: Record<string, any>;\r\nlet PATTERN_PROPERTIES_TREE: Record<string, any>;\r\n\r\n//console.log(123123, UNIT_EXPRESSION_TREE, UNIT_EXPRESSION_TREE);\r\n\r\nasync_getter.get(\"UNIT_EXPRESSION_TREE\", function (data: MatchTree) {\r\n    UNIT_EXPRESSION_TREE = data;\r\n    PETTERN_ELEMENTS_TREE = createMatchTree(\r\n        PatternElements,\r\n        UNIT_EXPRESSION_TREE\r\n    );\r\n    PATTERN_PROPERTIES_TREE = createMatchTree(\r\n        PatternProperties,\r\n        UNIT_EXPRESSION_TREE\r\n    );\r\n});\r\n\r\n\r\nconst Patterns: Record<string, any> = async_getter.Patterns = {\r\n    ArrayPattern: {\r\n        handler(context: Context) {\r\n            let [collected] = context;\r\n            collected.is_binding || context.wrap(CONTEXT.bindingSet, null);\r\n            let res = parseArrayPattern(context, collected.elements);\r\n            collected.is_binding || context.unwrap();\r\n            return res;\r\n        },\r\n        precedence: 20,\r\n        filter: [\r\n            null,\r\n            function (context: Context) {\r\n                return context[CONTEXT.bindingElement]/* === context[CONTEXT.tokens]*/;\r\n            }\r\n        ],\r\n        collector: [\r\n            {\r\n                elements: _Or(\"Punctuator []\"),\r\n                _next: _NonCapturing(ASSIGNMENT_PUNCTUATORS_PATTERN),//+=\r\n            },\r\n            {\r\n                _prev: _NonCapturing(\"Punctuator  ...\", MARKS.BOUNDARY, \"Success\"),\r\n                elements: _Or(\"Punctuator []\"),\r\n                is_binding: _Mark(true)\r\n            }\r\n        ]\r\n    },\r\n    ObjectPattern: {\r\n        handler: function (context: Context) {\r\n            let [collected] = context;\r\n            collected.is_binding || context.wrap(CONTEXT.bindingSet, null);\r\n            let res = parseObjectPattern(context, collected.properties);\r\n            collected.is_binding || context.unwrap();\r\n            return res;\r\n        },\r\n        precedence: 20,\r\n        filter: [\r\n            null, null,\r\n            function (context: Context, left: number, right: number) {\r\n                return context[CONTEXT.bindingElement]/* === tokens*/\r\n                    || context[CONTEXT.isExpression];\r\n            },\r\n            function (context: Context) {\r\n                return context[CONTEXT.bindingElement] /*=== context[CONTEXT.tokens]*/;\r\n            }\r\n        ],\r\n        collector: [\r\n            {\r\n                _prev: _NonCapturing(ASSIGNMENT_PUNCTUATORS_PATTERN),\r\n                properties: _Or(\"Punctuator {}\"),\r\n                _next: _NonCapturing(ASSIGNMENT_PUNCTUATORS_PATTERN)\r\n            },\r\n            [\r\n                [\"_prev\", _NonCapturing(\"Punctuator  ,\")],\r\n                [\"is_binding\", _Mark(true)]\r\n            ],\r\n            [\"_prev\", _Mark()],\r\n            [\r\n                [\"_prev\", _NonCapturing(\"Punctuator ...\", MARKS.BOUNDARY, \"Success\")],\r\n                [\"_next\", _Mark()],\r\n            ]\r\n        ]\r\n    },\r\n    AssignmentPattern: {\r\n        filter(context: Context) {\r\n            return context[CONTEXT.bindingElement]/* === context[CONTEXT.tokens]*/;\r\n        },\r\n        precedence: 1.5,\r\n        collector: {\r\n            _: _NonCapturing(MARKS.BOUNDARY, \"Success\"),\r\n            left: _Or(\r\n                \"ArrayPattern\", \"ObjectPattern\",\r\n                \"Identifier\"\r\n                /*_Or(\"Identifier\").pipe(\r\n                    function (context: Context, identifier: Node) {\r\n                        if (identifier instanceof Grouping) {\r\n                            context[CONTEXT.parser].err(identifier);\r\n                        } else {\r\n                            validateBinding(context, identifier);\r\n                        }\r\n                    }\r\n                )*/\r\n            ),\r\n            __: _NonCollecting(\"Punctuator =\"),\r\n            right: \"[Expression]\"\r\n        }\r\n    },\r\n    \"\": [\r\n        {\r\n            handler(context: Context) {\r\n                let [{ token }, parser, left, right] = context;\r\n                token = get_inner_group(token);\r\n                let store = context.store(\r\n                    CONTEXT.tokens, token.content,\r\n                    CONTEXT.bindingElement, true,\r\n                    CONTEXT.bindingSet, null\r\n                );\r\n                let node = parser.parseNode(\r\n                    UNIT_EXPRESSION_TREE,\r\n                    context,\r\n                    node => parser.isExpression(node)\r\n                        || node.type === \"ArrayPattern\"\r\n                        || node.type === \"ObjectPattern\"\r\n                        || node.type === \"AssignmentPattern\",\r\n                );\r\n                context.restore(store);\r\n                if (!node) {\r\n                    parser.err(token);\r\n                }\r\n                return new Grouping(node, token);\r\n            },\r\n            collector: [\r\n                {\r\n                    _prev: _NonCapturing(\r\n                        _Series(\"Keyword export\", \"Keyword default\"),\r\n                        \"Punctuator ,\", \"Success\", TOPLEVEL_ITEM_PATTERN, ASSIGNMENT_PUNCTUATORS_PATTERN\r\n                    ),\r\n                    token: _Or(\"Punctuator ()\"),\r\n                    _next: _NonCapturing(ASSIGNMENT_PUNCTUATORS_PATTERN)\r\n                }\r\n            ]\r\n        },\r\n\r\n        {\r\n            validator(context: Context) {\r\n                let [, parser, , right] = context;\r\n                let argument = context.getToken(right);\r\n                argument instanceof Grouping && parser.err(argument);\r\n                return true;\r\n            },\r\n            filter(context: Context) {\r\n                return context[CONTEXT.spreadElement];\r\n            },\r\n            precedence: 1.5,\r\n            collector: {\r\n                type: _Mark(\"SpreadElement\"),\r\n                token: _NonCollecting(\"Punctuator ...\"),\r\n                argument: \"[Expression]\"\r\n            }\r\n        },\r\n        {\r\n            validator(context: Context) {\r\n                let [, parser, , right] = context;\r\n                let argument = context.getToken(right);\r\n                argument instanceof Grouping && parser.err(argument);\r\n                return true;\r\n            },\r\n            filter: function (context: Context) {\r\n                return context[CONTEXT.bindingElement];\r\n            },\r\n            precedence: 1.5,\r\n            collector: {\r\n                type: _Mark(\"RestElement\"),\r\n                token: _NonCollecting(\"Punctuator ...\"),\r\n                argument: _Or(\r\n                    /*_Or(\"Identifier\").pipe(\r\n                        function (context: Context, token: Token) {\r\n                            validateBinding(context, token)\r\n                        }\r\n                    )*/\r\n                    \"Identifier\", \"MemberExpression\"\r\n                    , \"ArrayPattern\", \"ObjectPattern\"\r\n                )\r\n            }\r\n        }\r\n    ]\r\n};\r\nexport {\r\n    Patterns,\r\n    parseArrayPattern,\r\n    parseObjectPattern\r\n}\r\n\r\n\r\nfunction parseArrayPattern(context: Context, token: Token): Node {\r\n    let pattern = new NODES.ArrayPattern();\r\n    context.wrap(CONTEXT.bindingElement, true);\r\n    pattern.elements = parse_and_extract(PETTERN_ELEMENTS_TREE, context, token);\r\n    context.unwrap();\r\n    pattern.range = token.range;\r\n    pattern.loc = token.loc;\r\n    return pattern;\r\n}\r\nfunction parseObjectPattern(context: Context, token: Token): Node {\r\n    let pattern = new NODES.ObjectPattern();\r\n    context.wrap(CONTEXT.bindingElement, true);\r\n    pattern.properties = parse_and_extract(PATTERN_PROPERTIES_TREE, context, token);\r\n    context.unwrap();\r\n    pattern.range = token.range;\r\n    pattern.loc = token.loc;\r\n    return pattern;\r\n}\r\n\r\nlet PatternElements = {\r\n    Success: {\r\n        handler: join_content,\r\n        collector: [\r\n            {\r\n                success: _Or(MARKS.BOUNDARY, \"Success\"),\r\n                content: _Or(\r\n                    /*_Or(\"Identifier\").pipe(\r\n                        function (context: Context, identifier: Token) {\r\n                            if (identifier instanceof Grouping) {\r\n                                context[CONTEXT.parser].err(identifier);\r\n                            } else {\r\n                            validateBinding(context, identifier);\r\n                            }\r\n                        }\r\n                    ),*/\r\n                    \"Identifier\", \"MemberExpression\",\r\n                    _Or(\"ArrayPattern\", \"ObjectPattern\", \"AssignmentPattern\")\r\n                ),\r\n                _next: _NonCollecting(_Or(\"Punctuator ,\", MARKS.BOUNDARY))\r\n            },\r\n            [\r\n                [\"content\", \"RestElement\"],\r\n                [\"_next\", _NonCollecting(MARKS.BOUNDARY)]\r\n            ],\r\n            {\r\n                success: _Or(MARKS.BOUNDARY, \"Success\"),\r\n                content: _Mark(null),\r\n                _next: _NonCollecting(\"Punctuator ,\")\r\n            }\r\n        ]\r\n    }\r\n}\r\n\r\n\r\nconst PatternProperties = {\r\n    ..._SuccessCollector(_Pattern(\"Property\")),\r\n    Property: [\r\n        {\r\n            collector: [\r\n                {\r\n                    _prev: _NonCapturing(MARKS.BOUNDARY, \"Success\"),\r\n                    key: _Or(\"Punctuator []\").pipe(\r\n                        function (context: Context, token: Token) {\r\n                            context.wrap(CONTEXT.tokens, token.content);\r\n                            let res = context[CONTEXT.parser].parseExpression(context);\r\n                            context.unwrap();\r\n                            return res;\r\n                        }\r\n                    ),\r\n                    value: _Series(\r\n                        _NonCollecting(\"Punctuator :\"),\r\n                        _Or(\r\n                            /*_Or(\"Identifier\").pipe(function (context: Context, token: Token) {\r\n                                validateBinding(context, token);\r\n                            }),\r\n                            _Or(\"MemberExpression\"),*/\r\n                            \"Identifier\", \"MemberExpression\",\r\n                            _Or(\"Punctuator []\").pipe(parseArrayPattern),\r\n                            _Or(\"Punctuator {}\").pipe(parseObjectPattern),\r\n                        ),\r\n                        _Option(_Series(_NonCollecting(\"Punctuator =\"), \"[Expression]\")),\r\n                        _Mark(\r\n                            function (context: Context) {\r\n                                let [collected] = context;\r\n                                let { value } = collected;\r\n                                if (value.length > 1) {\r\n                                    let _value = new NODES.AssignmentPattern();\r\n                                    _value.left = value[0];\r\n                                    _value.right = value[1];\r\n                                    attachLocation(_value, value[0], value[1]);\r\n                                    collected.value = _value;\r\n                                } else {\r\n                                    collected.value = value[0];\r\n                                }\r\n                                return undefined;\r\n                            }\r\n                        )\r\n                    ),\r\n                    _next: _NonCollecting(MARKS.BOUNDARY, \"Punctuator ,\"),\r\n                    computed: _Mark(true),\r\n                    kind: _Mark(\"init\"),\r\n                    method: _Mark(false),\r\n                    shorthand: _Mark(false),\r\n                },\r\n                [\r\n                    [\r\n                        \"key\",\r\n                        _Or(\"Identifier\").pipe(\r\n                            function (context: Context, identifier: Node) {\r\n                                if (identifier instanceof Grouping) {\r\n                                    context[CONTEXT.parser].err(identifier);\r\n                                }\r\n                            }\r\n                        )\r\n                    ],\r\n                    [\"computed\", _Mark(false)]\r\n                ],\r\n                [\r\n                    [\r\n                        \"value\", _Or(\r\n                            _Series(_NonCollecting(\"Punctuator =\"), \"[Expression]\").pipe(\r\n                                function (context: Context, token: Token) {\r\n                                    let [collected] = context;\r\n                                    let left = collected.key;\r\n                                    let res = new NODES.AssignmentPattern();\r\n                                    res.left = left;\r\n                                    res.right = token;\r\n                                    attachLocation(res, left, token);\r\n                                    return res;\r\n                                }\r\n                            ),\r\n                            _Mark(\r\n                                function (context: Context) {\r\n                                    return context[CONTEXT.collected].key;\r\n                                }\r\n                            )\r\n                        )\r\n                    ],\r\n                    [\r\n                        \"shorthand\",\r\n                        _Mark(true)\r\n                        /*_Mark(\r\n                            function (context: Context) {\r\n                                validateBinding(context, context[CONTEXT.collected].key);\r\n                                return true;\r\n                            }\r\n                        )*/\r\n                    ]\r\n                ]\r\n            ]\r\n        },\r\n        {\r\n            validator() {//匹配占位\r\n                return false;\r\n            },\r\n            precedence: new Number(3),\r\n            collector: {\r\n                __: _Series(\r\n                    _Or(MARKS.BOUNDARY, \"Success\"),\r\n                    _Or(\r\n                        \"Punctuator []\",\r\n                        \"Identifier\",\r\n                    ),\r\n                    \"Punctuator :\",\r\n                    _Or(\r\n                        \"Identifier\",\r\n                        \"Punctuator [] {}\",\r\n                    ),\r\n                    \"Punctuator =\"\r\n                )\r\n            }\r\n        }\r\n    ]\r\n}\r\n","\r\nimport {\r\n    Context, CONTEXT, Node, Token, MARKS, MatchTree\r\n} from '../interfaces';\r\nimport {\r\n    join_content,\r\n    async_getter,\r\n    _Punctuator,\r\n    _Keyword,\r\n    _Identifier,\r\n    _Pattern,\r\n    is_right_parentheses,\r\n    is_right_brackets,\r\n    is_right_braces,\r\n    createMatchTree,\r\n    NODES,\r\n    _Option, _Or, _Series, _NonCollecting, _Mark, _Loop, TYPE_ALIAS,\r\n    validateBinding, validateLineTerminator, _NonCapturing,\r\n    validateIdentifier, validateAssignment,\r\n    STATEMANT_LIST_ITEM_PATTERN,\r\n    TOPLEVEL_ITEM_PATTERN,\r\n    RIGHT_SIDE_TOPLEVEL_ITEM_PATTERN,\r\n    EXPRESSION_OR_VALIDATE_STRICT_RESERVED_WORDS_PATTERN,\r\n    IDENTIFIER_OR_VALIDATE_STRICT_RESERVED_WORDS_PATTERN,\r\n    IDENTIFIER_OR_THROW_STRICT_RESERVED_WORDS_PATTERN,\r\n    EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN,\r\n    isAligned,\r\n    attachLocation,\r\n    get_inner_group,\r\n    parse_next_statement,\r\n    reinterpretIdentifierAsKeyword\r\n} from './head'\r\nimport {\r\n    PrimaryExpressions,\r\n    parseArrayPattern,\r\n    parseObjectPattern,\r\n    parse_params\r\n} from './expression';\r\nimport Declaration, { get_variable_declarator } from './declaration';\r\n\r\nconst Grouping = NODES.Grouping;\r\nlet { VariableDeclaration } = Declaration;\r\n\r\nlet STATEMANT_LIST_ITEM_AND_VALIDATE_DECLARATION_PATTERN = _Or(STATEMANT_LIST_ITEM_PATTERN).pipe(\r\n    function (context: Context, node: Node) {\r\n        if (node.type === \"VariableDeclaration\" && node.kind !== \"var\") {\r\n            context[CONTEXT.parser].err(node);\r\n        }\r\n    }\r\n)\r\n\r\nlet BLOCK_STATEMENT_PATTERN = _Or(\r\n    \"Block\",\r\n    _Or(\"Punctuator {\").walk(\r\n        function (context: Context, left: number) {\r\n            let parser = context[CONTEXT.parser];\r\n            parser.parseRangeAsBlock(context, left);\r\n            //parser.parseRange(parser.SYNTAX_TREE, context, left, is_right_braces).type = \"Block\";\r\n        }\r\n    )\r\n).pipe(\r\n    function (context: Context, token: Token) {\r\n        let res = new NODES.BlockStatement();\r\n        res.body = token.content;\r\n        attachLocation(res, token);\r\n        return res;\r\n    }\r\n)\r\n\r\nlet GROUPING_EXPRESSION = _Or(\r\n    \"Punctuator ()\",\r\n    _Punctuator(\"(\").walk(\r\n        function (context: Context, index: number) {\r\n            let [, parser] = context;\r\n            let store = context.store(\r\n                CONTEXT.bindingSet, null,\r\n                CONTEXT.bindingElement, false\r\n            );\r\n            parser.parseRange(parser.EXPRESSION_TREE, context, index, is_right_parentheses, parser.isExpression);\r\n            context.restore(store);\r\n        }\r\n    )\r\n).pipe(\r\n    function (context: Context, token: Token) {\r\n        if (token.content) {\r\n            return token.content;\r\n        } else {\r\n            context[CONTEXT.parser].err(token);\r\n            return null;\r\n        }\r\n    }\r\n)\r\n\r\nconst Statements: Record<string, any> = async_getter.Statements = {\r\n    \"\": {\r\n        handler([collected, parser]: Context) {\r\n            parser.err(collected.error);\r\n            return [];\r\n        },\r\n        precedence: 0,\r\n        collector: [\r\n            {\r\n                error: _Or(\"Punctuator\", \"Keyword\"),\r\n                _next: _NonCapturing(RIGHT_SIDE_TOPLEVEL_ITEM_PATTERN),/*, \"Punctuator }\"*/\r\n            }\r\n        ]\r\n    },\r\n    \"BreakStatement\": {\r\n        handler(context: Context) {\r\n            let [collected, parser] = context;\r\n            validateLineTerminator(context);\r\n            let label = collected.label;\r\n            if (label) {\r\n                if (\r\n                    label instanceof Grouping\r\n                    || context[CONTEXT.labelSet].indexOf(label.name) < 0\r\n                ) {\r\n                    parser.err(label);\r\n                }\r\n            } else if (!context[CONTEXT.inIteration] && !context[CONTEXT.inSwitch]) {\r\n                parser.err(collected);\r\n            }\r\n            return collected;\r\n        },\r\n        filter: [\r\n            function (context: Context, left: number) {\r\n                return isAligned(context, left, left + 1);\r\n            },\r\n            null,\r\n        ],\r\n        collector: [\r\n            {\r\n                token: _NonCollecting(\"Keyword break\"),\r\n                label: IDENTIFIER_OR_THROW_STRICT_RESERVED_WORDS_PATTERN,\r\n                _next: _Option(\"Punctuator ;\")\r\n            },\r\n            [\"label\", _Mark(null)]\r\n        ]\r\n    },\r\n    \"ContinueStatement\": {\r\n        handler(context: Context) {\r\n            let [collected, parser] = context;\r\n            let label = collected.label;\r\n            validateLineTerminator(context);\r\n            if (label) {\r\n                if (\r\n                    label instanceof Grouping\r\n                    || context[CONTEXT.labelSet].indexOf(label.name) < 0\r\n                ) {\r\n                    parser.err(label);\r\n                }\r\n            } else if (!context[CONTEXT.inIteration]) {\r\n                parser.err(collected);\r\n            }\r\n            return collected;\r\n        },\r\n        filter: \"BreakStatement\",\r\n        collector: [\r\n            {\r\n                token: _NonCollecting(\"Keyword continue\"),\r\n                label: IDENTIFIER_OR_THROW_STRICT_RESERVED_WORDS_PATTERN,\r\n                _next: _Option(\"Punctuator ;\")\r\n            },\r\n            [\"label\", _Mark(null)],\r\n        ]\r\n    },\r\n    \"ReturnStatement\": {\r\n        handler(context: Context) {\r\n            let [collected, parser] = context;\r\n            validateLineTerminator(context);\r\n            if (!context[CONTEXT.inFunctionBody]) {\r\n                parser.err(collected);\r\n            }\r\n            return collected;\r\n        },\r\n        validator(context: Context) {\r\n            let [, , left, right] = context;\r\n            if (left === right) {\r\n                let next_token = context.getToken(left + 1);\r\n                if (next_token && context.getToken(left).loc.end.line === next_token.loc.start.line) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        },\r\n        filter: \"BreakStatement\",\r\n        precedence: 0,\r\n        collector: [\r\n            {\r\n                token: _NonCollecting(\"Keyword return\"),\r\n                argument: EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN,\r\n                _next: _Option(\"Punctuator ;\")\r\n            },\r\n            [\"argument\", _Mark(null)]\r\n        ]\r\n    },\r\n    \"BlockStatement\": {\r\n        overload: true,//和 ObjectPattern 收集器有重叠，在存在 BlockStatement 的环境， ObjectPattern 的 filter 不会返回 true，这里强制覆盖\r\n        //precedence: 0,\r\n        collector: [\r\n            {\r\n                _prev: _NonCapturing(TOPLEVEL_ITEM_PATTERN),\r\n                body: _Punctuator(\"{\").pipe(\r\n                    function (context: Context, token: Token, left: number) {\r\n                        let parser = context[CONTEXT.parser];\r\n                        return parser.parseRangeAsBlock(context, left).content;\r\n                        //return parser.parseRange(parser.SYNTAX_TREE, context, left, is_right_braces).content;\r\n                    }\r\n                )\r\n            }\r\n        ]\r\n    },\r\n    \"DoWhileStatement\": {\r\n        validator: \"ForStatement\",\r\n        handler(context: Context) {\r\n            let [collected, parser] = context;\r\n            validateLineTerminator(context);\r\n            //collected.test = parser.parseExpression(context, collected.test);\r\n            return collected;\r\n        },\r\n        collector: [\r\n            {\r\n                keyword: _NonCollecting(\"Keyword do\"),\r\n            },\r\n            [\r\n                [\"body\", STATEMANT_LIST_ITEM_AND_VALIDATE_DECLARATION_PATTERN],\r\n                [\"test\", _Series(\r\n                    _NonCollecting(\"Keyword while\"),\r\n                    GROUPING_EXPRESSION\r\n                )],\r\n                [\"_next\", _Option(\"Punctuator ;\")]\r\n            ]\r\n        ]\r\n    },\r\n    \"DebuggerStatement\": {\r\n        handler: validateLineTerminator,\r\n        collector: {\r\n            _: _NonCollecting(_Keyword(\"debugger\")),\r\n            _next: _Option(\"Punctuator ;\")\r\n        }\r\n    },\r\n    \"EmptyStatement\": [\r\n        {\r\n            collector: [\r\n                {\r\n                    _prev: _NonCapturing(TOPLEVEL_ITEM_PATTERN),\r\n                    _: _NonCollecting(\"Punctuator ;\")\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"ExpressionStatement\": [\r\n        {\r\n            handler(context: Context) {\r\n                let [collected, parser, left] = context;\r\n                validateLineTerminator(context);\r\n                let begin = context[CONTEXT.begin];\r\n                if (\r\n                    (\r\n                        !context[CONTEXT.tokens] ||\r\n                        context[CONTEXT.inFunctionBody] === begin\r\n                    )\r\n                    && (\r\n                        begin >= left ||\r\n                        context.getToken(left - 1).directive\r\n                    )\r\n                ) {\r\n                    let expression = collected.expression;\r\n                    if (\r\n                        expression\r\n                        && expression.type === \"Literal\"\r\n                        && typeof expression.value === \"string\"\r\n                        && expression.raw.length > 2\r\n                    ) {\r\n                        collected = new NODES.Directive(\r\n                            collected.type,\r\n                            expression,\r\n                            expression.raw.slice(1, -1),\r\n                            collected.range,\r\n                            collected.loc\r\n                        );\r\n                        if (collected.directive === \"use strict\") {\r\n                            context[CONTEXT.strict] = true;\r\n                        }\r\n                    }\r\n                }\r\n                return collected;\r\n            },\r\n            precedence: 0,\r\n            collector: [\r\n                {\r\n                    expression: EXPRESSION_OR_VALIDATE_STRICT_RESERVED_WORDS_PATTERN,\r\n                    _next: _Option(\"Punctuator ;\")\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"ForStatement\": {\r\n        validator: [\r\n            function (context: Context) {\r\n                context.wrap(CONTEXT.inIteration, true);\r\n                //context.wrap(CONTEXT.bindingElement, true);\r\n                let res = parse_next_statement(context);\r\n                //context.unwrap();\r\n                context.unwrap();\r\n                return res;\r\n            },\r\n            null\r\n        ],\r\n        handler(context: Context) {\r\n            let [collected, parser] = context;\r\n            let { iterator, body, range, loc } = collected;\r\n            collected = iterator.content;\r\n            if (collected) {\r\n                collected.body = body;\r\n                collected.range = range;\r\n                collected.loc = loc;\r\n                return collected;\r\n            } else {\r\n                parser.err(iterator);\r\n                return [];\r\n            }\r\n        },\r\n        collector: [\r\n            {\r\n                keyword: _NonCollecting(\"Keyword for\"),\r\n                iterator: _Or(\r\n                    \"Punctuator ()\",\r\n                    _Punctuator(\"(\").walk(\r\n                        function (context: Context, left: number) {\r\n                            let parser = context[CONTEXT.parser];\r\n                            context.wrap(CONTEXT.isExpression, true);\r\n\r\n                            parser.parseRange(FOR_ITERATOR_TREE, context, left, is_right_parentheses, parser.isStatement)\r\n                            context.unwrap();\r\n                        }\r\n                    )\r\n                )\r\n            },\r\n            [\"body\", STATEMANT_LIST_ITEM_AND_VALIDATE_DECLARATION_PATTERN]\r\n        ]\r\n    },\r\n    \"ForInStatement\": {//ForStatement\r\n    },\r\n    \"ForOfStatement\": {//ForStatement\r\n    },\r\n    \"IfStatement\": {\r\n        validator(context: Context) {\r\n            let [, , left, right] = context;\r\n            if ((right - left) % 2 === 1) {\r\n                return parse_next_statement(context);\r\n            }\r\n            return true;\r\n        },\r\n        collector: [\r\n            {\r\n                token: _NonCollecting(\"Keyword if\"),\r\n                test: GROUPING_EXPRESSION,\r\n                consequent: _Mark(null),\r\n                alternate: _Mark(null)\r\n            },\r\n            [\"consequent\", STATEMANT_LIST_ITEM_AND_VALIDATE_DECLARATION_PATTERN],\r\n            [\r\n                \"alternate\", _Series(\r\n                    _NonCollecting(\"Keyword else\"),\r\n                    _Option(STATEMANT_LIST_ITEM_AND_VALIDATE_DECLARATION_PATTERN)\r\n                )\r\n            ]\r\n        ]\r\n    },\r\n    \"LabeledStatement\": {\r\n        validator: [\r\n            function (context: Context) {\r\n                let [, parser, left] = context;\r\n                let label = context.getToken(left);\r\n                let label_name = label.name;\r\n                let label_set = context[CONTEXT.labelSet];\r\n                if (label_set.indexOf(label_name) >= 0) {\r\n                    parser.err(label);\r\n                }\r\n                label_set.unshift(label_name);\r\n                let res = parse_next_statement(context);\r\n                label_set.shift();\r\n                return res;\r\n            },\r\n            null\r\n        ],\r\n        precedence: 0,\r\n        collector: [\r\n            {\r\n                label: _Series(\r\n                    IDENTIFIER_OR_THROW_STRICT_RESERVED_WORDS_PATTERN,\r\n                    _NonCollecting(\"Punctuator :\")\r\n                )\r\n            },\r\n            [\"body\", STATEMANT_LIST_ITEM_PATTERN]\r\n        ]\r\n    },\r\n    \"SwitchStatement\": [\r\n        {\r\n            collector: [\r\n                {\r\n                    token: _NonCollecting(\"Keyword switch\"),\r\n                    discriminant: GROUPING_EXPRESSION,\r\n                    cases: _Punctuator(\"{\").pipe(\r\n                        function (context: Context, token: Token, left: number) {\r\n                            let parser = context[CONTEXT.parser]\r\n                            context.wrap(CONTEXT.inSwitch, true);\r\n                            let cases = parser.parseRange(parser.SYNTAX_TREE, context, left, is_right_braces).content\r\n                            context.unwrap();\r\n\r\n                            let has_default = false;\r\n                            for (const item of cases) {\r\n                                if (item.type === \"SwitchCase\") {\r\n                                    if (item.test) {\r\n                                        continue;\r\n                                    }\r\n                                    if (!has_default) {\r\n                                        has_default = true;\r\n                                        continue;\r\n                                    }\r\n                                }\r\n                                parser.err(item);\r\n                            }\r\n                            return cases;\r\n                        }\r\n                    )\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            handler([collected]: Context) {\r\n                collected.consequent = [];\r\n                return collected;\r\n            },\r\n            precedence: 0,\r\n            filter(content: Context) {\r\n                return content[CONTEXT.inSwitch] /*=== content[CONTEXT.tokens]*/;\r\n            },\r\n            collector: [\r\n                {\r\n                    type: _Mark(\"SwitchCase\"),\r\n                    test: _Or(\r\n                        _Series(\r\n                            _NonCollecting(\"Keyword case\"),\r\n                            EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN\r\n                        ),\r\n                        _Series(\r\n                            _NonCollecting(\"Keyword default\"),\r\n                            _Mark(null)\r\n                        )\r\n                    ),\r\n                    __: _NonCollecting(\"Punctuator :\")\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            handler([collected]: Context) {\r\n                collected.token.consequent.push(collected.consequent)\r\n                return collected.token;\r\n            },\r\n            collector: {\r\n                token: \"SwitchCase\",\r\n                consequent: STATEMANT_LIST_ITEM_PATTERN\r\n            }\r\n        }\r\n    ],\r\n    \"ThrowStatement\": {\r\n        handler(context: Context) {\r\n            let [collected, parser] = context;\r\n            validateLineTerminator(context);\r\n            if (collected.loc.start.line !== collected.argument.loc.start.line) {\r\n                parser.err(collected);\r\n            }\r\n            return collected;\r\n        },\r\n        precedence: 0,\r\n        collector: [\r\n            {\r\n                token: _NonCollecting(\"Keyword throw\"),\r\n                argument: EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN,\r\n                _next: _Option(\"Punctuator ;\")\r\n            }\r\n        ]\r\n    },\r\n    \"TryStatement\": {\r\n        collector: [\r\n            {\r\n                token: _NonCollecting(\"Keyword try\"),\r\n                block: BLOCK_STATEMENT_PATTERN/*\"Punctuator {}\"*/,\r\n                handler: _Series(\r\n                    _NonCollecting(\"Keyword catch\"), \"Punctuator ()\", BLOCK_STATEMENT_PATTERN,\r\n                    _Mark(\r\n                        function (context: Context) {\r\n                            let [collected, parser] = context;\r\n                            let [param, body] = collected.handler;\r\n                            let params = parse_params(context, param.content);\r\n                            if (params.length !== 1) {\r\n                                parser.err(param);\r\n                            }\r\n                            collected.handler = {\r\n                                type: \"CatchClause\",\r\n                                param: params[0],\r\n                                body\r\n                            };\r\n                        }\r\n                    )\r\n                ),\r\n                finalizer: _Mark(null)\r\n            },\r\n            [\"finalizer\", _Series(_NonCollecting(\"Keyword finally\"), BLOCK_STATEMENT_PATTERN)],\r\n            [\"handler\", _Mark(null)],\r\n        ]\r\n    },\r\n    \"WhileStatement\": {\r\n        validator: \"ForStatement\",\r\n        /*handler(context: Context) {\r\n            let [collected, parser] = context;\r\n            //collected.test = parser.parseExpression(context, collected.test);\r\n            return collected;\r\n        },*/\r\n        collector: [\r\n            {\r\n                token: _NonCollecting(\"Keyword while\"),\r\n                test: GROUPING_EXPRESSION\r\n            },\r\n            [\"body\", STATEMANT_LIST_ITEM_AND_VALIDATE_DECLARATION_PATTERN]\r\n        ]\r\n    },\r\n    \"WithStatement\": {\r\n        validator: [\r\n            parse_next_statement,\r\n            null\r\n        ],\r\n        handler(context: Context) {\r\n            let [collected, parser] = context;\r\n            if (context[CONTEXT.strict]) {\r\n                parser.err(collected);\r\n            }\r\n            //collected.object = parser.parseExpression(context, collected.object);\r\n            return collected;\r\n        },\r\n        collector: [\r\n            {\r\n                token: \"Keyword with\",\r\n                object: \"Punctuator ()\"\r\n            },\r\n            [\"body\", STATEMANT_LIST_ITEM_AND_VALIDATE_DECLARATION_PATTERN]\r\n        ]\r\n    }\r\n};\r\n\r\nasync_getter.get(\"Statements\", function (statements: Record<string, any>) {\r\n    for (const type_name in statements) {\r\n        if (type_name) {\r\n            type_name && (TYPE_ALIAS[type_name] = [type_name, \"[Statement]\"]);\r\n        }\r\n    }\r\n});\r\n\r\nlet ForIterator = {\r\n    //VariableDeclaration,\r\n\r\n    \"\": {\r\n        handler(context: Context) {\r\n            return reinterpretIdentifierAsKeyword(context[CONTEXT.collected].token);\r\n        },\r\n        collector: {\r\n            _prev: MARKS.BOUNDARY,\r\n            token: \"Identifier let\"\r\n        }\r\n    },\r\n    VariableDeclaration: {\r\n        handler: [\r\n            function (context: Context) {\r\n                let [collected] = context;\r\n                let { kind, declarations } = collected;\r\n                let [id, init] = declarations;\r\n                collected.declarations = [get_variable_declarator(\r\n                    context,\r\n                    id.type === \"Identifier\"\r\n                        ? id\r\n                        : (id.value === \"[]\"\r\n                            ? parseArrayPattern(context, id)\r\n                            : parseObjectPattern(context, id)),\r\n                    init,\r\n                    [id.range[0], (init || id).range[1]],\r\n                    {\r\n                        start: id.loc.start,\r\n                        end: (init || id).loc.end\r\n                    }\r\n                )]\r\n\r\n                if (kind.type === \"VariableDeclaration\") {\r\n                    collected.declarations.unshift(...kind.declarations);\r\n                    collected.kind = kind.kind;\r\n                } else {\r\n                    collected.kind = kind.value;\r\n                }\r\n                return collected;\r\n            }\r\n        ],\r\n        collector: [\r\n            {\r\n                kind: _Or(\r\n                    _Series(\"VariableDeclaration\", _NonCollecting(\"Punctuator ,\")),\r\n                    _Series(\r\n                        _NonCollecting(MARKS.BOUNDARY),\r\n                        _Keyword(\"let\", \"var\", \"const\")\r\n                    ),\r\n                ),\r\n                declarations: _Series(\r\n                    _Or(\r\n                        \"Identifier\",\r\n                        _Or(\"Punctuator [] {}\")\r\n                    ),\r\n                    _Or(\r\n                        _Series(\r\n                            _NonCollecting(\"Punctuator =\"),\r\n                            \"[Expression]\"\r\n                        ),\r\n                        _Mark(null)\r\n                    )\r\n                ),\r\n                _next: _NonCapturing(\r\n                    \"Punctuator ; ,\",\r\n                    _Identifier(\"of\"),\r\n                    _Keyword(\"of\"),\r\n                    _Keyword(\"in\")\r\n                )\r\n\r\n            }\r\n\r\n        ]\r\n    },\r\n    ForStatement: [\r\n        {\r\n            collector: [\r\n                {\r\n                    init:\r\n                        _Series(\r\n                            _NonCollecting(MARKS.BOUNDARY),\r\n                            _Or(\r\n                                _Pattern(\"VariableDeclaration\").pipe(\r\n                                    function (context: Context, node: Node) {\r\n                                        if (node.kind === \"const\") {\r\n                                            context[CONTEXT.parser].err(node);\r\n                                        }\r\n                                    }\r\n                                ),\r\n                                EXPRESSION_OR_THROW_STRICT_RESERVED_WORDS_PATTERN, _Mark(null)\r\n                            ),//EXPRESSION_OR_VALIDATE_STRICT_RESERVED_WORDS\r\n                            _NonCollecting(\"Punctuator ;\")\r\n                        )\r\n                    //)\r\n                    ,\r\n                    test: _Series(\r\n                        _Or(EXPRESSION_OR_VALIDATE_STRICT_RESERVED_WORDS_PATTERN, _Mark(null)),\r\n                        _NonCollecting(\"Punctuator ;\")\r\n                    ),\r\n                    update: _Series(\r\n                        _Or(EXPRESSION_OR_VALIDATE_STRICT_RESERVED_WORDS_PATTERN, _Mark(null)),\r\n                        _NonCapturing(\"Punctuator )\")\r\n                    ),\r\n                    body: _Mark(null)\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            validator(context: Context) {\r\n                let right = context[CONTEXT.right];\r\n                return right >= context.tokens.length - 1;\r\n            },\r\n            precedence: 1.5,\r\n            collector: [\r\n                {\r\n                    type: _Mark(\"ForOfStatement\"),\r\n                    _prev: _NonCollecting(MARKS.BOUNDARY),\r\n                    left: _Or(\r\n                        \"VariableDeclaration\",\r\n                        _Or(\"Identifier\", _Punctuator(\"()\", \"[]\", \"{}\")).pipe(\r\n                            function (context: Context, node: Node) {\r\n                                let parser = context[CONTEXT.parser];\r\n                                let target = node;\r\n                                if (node.value === \"()\") {\r\n                                    target = get_inner_group(node);\r\n                                    if (target.content.length > 1) {\r\n                                        parser.err(...target.content.slice(1));\r\n                                    }\r\n                                    target = target.content[0] || node;\r\n                                }\r\n\r\n                                if (target.type === \"Identifier\") {\r\n                                    validateAssignment(context, target);\r\n                                    return target;\r\n                                } else {\r\n                                    switch (target.value) {\r\n                                        case \"[]\":\r\n                                            return new Grouping(\r\n                                                parseArrayPattern(context, target),\r\n                                                node\r\n                                            );\r\n                                        case \"{}\":\r\n                                            return new Grouping(\r\n                                                parseObjectPattern(context, target),\r\n                                                node\r\n                                            );\r\n                                        default:\r\n                                            context[CONTEXT.parser].err(node);\r\n                                            return null;\r\n                                    }\r\n                                }\r\n                            }\r\n                        )\r\n                    ),\r\n                    token: _NonCollecting(\r\n                        _Identifier(\"of\").walk(\r\n                            function (context: Context, index: number) {\r\n                                context.tokens[index] = reinterpretIdentifierAsKeyword(context.tokens[index]);\r\n                            }\r\n                        ),\r\n                        _Keyword(\"of\")\r\n                    ),\r\n                    right: _Option(\r\n                        _Series(\r\n                            EXPRESSION_OR_VALIDATE_STRICT_RESERVED_WORDS_PATTERN,\r\n                            _Option(_NonCapturing(\"Punctuator )\"))\r\n                        )\r\n                    ),\r\n                    body: _Mark(null),\r\n                },\r\n                [\r\n                    [\"type\", _Mark(\"ForInStatement\")],\r\n                    [\"token\", _NonCollecting(\"Keyword in\")],\r\n                    [\"each\", _Mark(false)]\r\n                ]\r\n            ]\r\n\r\n        }\r\n    ]\r\n};\r\nlet FOR_ITERATOR_TREE: MatchTree;\r\nasync_getter.get(\"EXPRESSION_TREE\", function (EXPRESSION_TREE: MatchTree) {\r\n    FOR_ITERATOR_TREE = createMatchTree(ForIterator, EXPRESSION_TREE);\r\n});\r\n\r\n\r\n\r\nexport default Statements;","import {\r\n    Context, CONTEXT, Token, Node\r\n    , MARKS\r\n} from '../interfaces';\r\nimport {\r\n    async_getter,\r\n    _Punctuator,\r\n    _Keyword,\r\n    _Identifier,\r\n    _Pattern,\r\n    _Option, _Or, _Series, _NonCollecting, _Mark, TYPE_ALIAS,\r\n    validateLineTerminator, NODES, _NonCapturing, _SuccessCollector, createMatchTree,\r\n\r\n    extract_success,\r\n    parse_and_extract,\r\n} from './head'\r\nlet Grouping = NODES.Grouping;\r\n\r\nconst STRING_LITERAL_PATTERN = _Or(\"Literal\").pipe(\r\n    function (context: Context, token: Token) {\r\n        if (token instanceof Grouping || typeof token.value !== \"string\") {\r\n            context[CONTEXT.parser].err(token);\r\n        }\r\n    }\r\n)\r\n\r\nlet ImportSpecifiers = {\r\n    ..._SuccessCollector(_Pattern(\"ImportSpecifier\")),\r\n    /*\"Success\": {\r\n        handler: join_content,\r\n        precedence: 0,\r\n        collector: [\r\n            {\r\n                success: _Or(MARKS.BOUNDARY, \"Success\"),\r\n                content: \"ImportSpecifier\",\r\n            }\r\n        ]\r\n    },*/\r\n    ImportSpecifier: {\r\n        collector: {\r\n            _prev: _NonCapturing(\"Success\", MARKS.BOUNDARY),\r\n            imported: \"Identifier\",\r\n            local: _Or(\r\n                _Series(\r\n                    _NonCollecting(\"Identifier as\"),\r\n                    \"Identifier\",\r\n                    _NonCollecting(\"Punctuator ,\", MARKS.BOUNDARY)\r\n                ),\r\n                _Or(\"Punctuator ,\", MARKS.BOUNDARY).pipe(\r\n                    function (context: Context) {\r\n                        let [collected] = context;\r\n                        return collected.imported;\r\n                    }\r\n                )\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst IMPORT_SPECIFIERS_TREE = createMatchTree(ImportSpecifiers);\r\nconst EXPORT_SPECIFIERS_TREE = createMatchTree({\r\n    ..._SuccessCollector(_Pattern(\"ExportSpecifier\")),\r\n    ExportSpecifier: {\r\n        collector: {\r\n            _prev: _NonCapturing(\"Success\", MARKS.BOUNDARY),\r\n            local: \"Identifier\",\r\n            exported: _Or(\r\n                _Series(\r\n                    _NonCollecting(\"Identifier as\"),\r\n                    \"Identifier\",\r\n                    _NonCollecting(\"Punctuator ,\", MARKS.BOUNDARY)\r\n                ),\r\n                _Or(\"Punctuator ,\", MARKS.BOUNDARY).pipe(\r\n                    function (context: Context) {\r\n                        let [collected] = context;\r\n                        return collected.local;\r\n                    }\r\n                )\r\n            )\r\n        }\r\n    }\r\n});\r\n\r\nconst ModuleDeclarations: Record<string, any> = {\r\n    \"ImportDeclaration\": {\r\n        handler(context: Context) {\r\n            let [collected, parser] = context;\r\n            validateLineTerminator(context);\r\n            if (!context[CONTEXT.isModule]) {\r\n                parser.err(collected);\r\n            }\r\n            return collected;\r\n        },\r\n        collector: [\r\n            {\r\n                token: _NonCollecting(\"Keyword import\"),\r\n                specifiers: _Or(\r\n                    _Punctuator(\"{}\").pipe(\r\n                        function (context: Context, token: Token) {\r\n                            return parse_and_extract(IMPORT_SPECIFIERS_TREE, context, token);\r\n                        }\r\n                    ),\r\n                    _Series(\r\n                        _NonCollecting(\"Punctuator *\"),\r\n                        _NonCollecting(\"Identifier as\"),\r\n                        _Identifier().pipe(\r\n                            function (context: Context, token: Token) {\r\n                                return [\r\n                                    {\r\n                                        type: \"ImportNamespaceSpecifier\",\r\n                                        local: token\r\n                                    }\r\n                                ]\r\n                            }\r\n                        )\r\n                    ),\r\n                    _Series(\r\n                        _Identifier().pipe(\r\n                            function (context: Context, Identifier: Token) {\r\n                                return {\r\n                                    type: \"ImportDefaultSpecifier\",\r\n                                    local: Identifier\r\n                                }\r\n                            }\r\n                        ),\r\n                        _Option(\r\n                            _Series(\r\n                                _NonCollecting(\"Punctuator ,\"),\r\n                                _Or(\r\n                                    _Series(\r\n                                        _Punctuator(\"{}\").pipe(\r\n                                            function (context: Context, token: Token) {\r\n                                                return parse_and_extract(IMPORT_SPECIFIERS_TREE, context, token);\r\n                                            }\r\n                                        ),\r\n                                        _Mark(\r\n                                            function (context: Context) {\r\n                                                let [collected] = context;\r\n                                                let specifiers = collected.specifiers;\r\n                                                specifiers.splice(1, 1, ...specifiers[1]);\r\n                                            }\r\n                                        )\r\n                                    ),\r\n                                    _Series(\r\n                                        _NonCollecting(\"Punctuator *\"),\r\n                                        _NonCollecting(\"Identifier as\"),\r\n                                        _Identifier().pipe(\r\n                                            function (context: Context, token: Token) {\r\n                                                return {\r\n                                                    type: \"ImportNamespaceSpecifier\",\r\n                                                    local: token\r\n                                                }\r\n                                            }\r\n                                        )\r\n                                    )\r\n                                )\r\n                            )\r\n                        ),\r\n                        _Mark(function () { })//使结果收集为数组\r\n                    )\r\n                ),\r\n                _: _NonCollecting(\"Identifier from\"),\r\n                source: STRING_LITERAL_PATTERN,\r\n                _next: _Option(\"Punctuator ;\")\r\n            }\r\n        ]\r\n    },\r\n    \"ExportAllDeclaration\": {\r\n        handler(context: Context) {\r\n            let [collected, parser] = context;\r\n            validateLineTerminator(context);\r\n            if (!context[CONTEXT.isModule]) {\r\n                parser.err(collected);\r\n            }\r\n            return collected;\r\n        },\r\n        collector: {\r\n            _: _NonCollecting(_Series(\"Keyword export\", \"Punctuator *\", \"Identifier from\")),\r\n            source: STRING_LITERAL_PATTERN,\r\n            _next: _Option(\"Punctuator ;\"),\r\n        },\r\n    },\r\n    \"ExportNamedDeclaration\": {\r\n        handler(context: Context) {\r\n            let [collected, parser] = context;\r\n            collected.declaration || validateLineTerminator(context);\r\n            if (!context[CONTEXT.isModule]) {\r\n                parser.err(collected);\r\n            }\r\n            return collected;\r\n        },\r\n        collector: [\r\n            {\r\n                _: _NonCollecting(\"Keyword export\"),\r\n                declaration: \"VariableDeclaration\",\r\n                specifiers: _Mark(() => []),\r\n                source: _Mark(null)\r\n            },\r\n            {\r\n                _: _NonCollecting(\"Keyword export\"),\r\n                declaration: _Mark(null),\r\n                specifiers: _Punctuator(\"{}\").pipe(\r\n                    function (context: Context, token: Token) {\r\n                        return parse_and_extract(EXPORT_SPECIFIERS_TREE, context, token);\r\n                    }\r\n                ),\r\n                source: _Mark(null),\r\n                _next: _Option(\"Punctuator ;\")\r\n            }\r\n        ]\r\n    },\r\n    \"ExportDefaultDeclaration\": {\r\n        handler(context: Context) {\r\n            let [collected] = context;\r\n            validateLineTerminator(context);\r\n            if (!context[CONTEXT.isModule]) {\r\n                context[CONTEXT.parser].err(collected);\r\n            }\r\n            return collected;\r\n        },\r\n        precedence: 1.5,\r\n        collector: [\r\n            {\r\n                type: _Mark(\"ExportDefaultDeclaration\"),\r\n                _: _NonCollecting(\"Keyword export\"),\r\n                __: _NonCollecting(\"Keyword default\"),\r\n                declaration: \"[Expression]\",\r\n                _next: _Option(\"Punctuator ;\")\r\n            }\r\n        ]\r\n    }\r\n}\r\nexport default ModuleDeclarations;","\r\nimport Dison, { Tokenizer } from './index';\r\n\r\nlet esprima = require(\"./test/esprima.js\")\r\n\r\nconst parser = new Dison();\r\n\r\nimport data1 from './test/test_data1.js'\r\nimport data2 from './test/test_data2.js'\r\nimport data3 from './test/test_data3.js'\r\nimport data4 from './test/test_data4.js'\r\nimport data5 from './test/test_data5.js'\r\nimport data6 from './test/test_data6.js'\r\nimport data7 from './test/test_data7.js'\r\n\r\nlet data0 = (window as any).test.innerHTML;\r\n\r\nlet test_data = data1\r\nlet a, b;\r\n\r\nconsole.time(\"dison\");\r\nconsole.log(a = parser.parseModule(test_data));\r\nconsole.timeEnd(\"dison\");\r\nconsole.time(\"esprima\");\r\nconsole.log(b = esprima.parseModule(test_data, {\r\n    range: true,\r\n    loc: true\r\n}));\r\nconsole.timeEnd(\"esprima\");\r\n\r\nconsole.log(123, weakEqual(a, b));\r\n(window as any).parser = parser;\r\n(window as any).esprima = esprima;\r\n\r\nlet tokenizer = new Tokenizer();\r\n(window as any).tokenizer = tokenizer;\r\n\r\n\r\nconsole.log(parser.parseModule(data0).body);\r\n\r\nlet tast_list: Array<[string, any]> = [\r\n    [\r\n        `\r\n        let test1\\\\u0061asd = \"\\\\u{0000000be} \\\\u0044 \\\\\\\\ \\\\x44s \\\\0112  \\\\ns\"+/s[s/]/\r\n        `,\r\n        { \"type\": \"Program\", \"sourceType\": \"script\", \"body\": [{ \"type\": \"VariableDeclaration\", \"kind\": \"let\", \"declarations\": [{ \"type\": \"VariableDeclarator\", \"id\": { \"type\": \"Identifier\", \"name\": \"test1aasd\", \"range\": [13, 27], \"loc\": { \"start\": { \"line\": 1, \"column\": 12 }, \"end\": { \"line\": 1, \"column\": 26 } } }, \"init\": { \"type\": \"BinaryExpression\", \"left\": { \"type\": \"Literal\", \"value\": \"¾ D \\\\ Ds \\t2  \\ns\", \"raw\": \"\\\"\\\\u{0000000be} \\\\u0044 \\\\\\\\ \\\\x44s \\\\0112  \\\\ns\\\"\", \"range\": [30, 72], \"loc\": { \"start\": { \"line\": 1, \"column\": 29 }, \"end\": { \"line\": 1, \"column\": 71 } } }, \"operator\": \"+\", \"right\": { \"type\": \"Literal\", \"value\": {}, \"raw\": \"/s[s/]/\", \"regex\": { \"pattern\": \"s[s/]\", \"flags\": \"\" }, \"range\": [73, 80], \"loc\": { \"start\": { \"line\": 1, \"column\": 72 }, \"end\": { \"line\": 1, \"column\": 79 } } }, \"range\": [30, 80], \"loc\": { \"start\": { \"line\": 1, \"column\": 29 }, \"end\": { \"line\": 1, \"column\": 79 } } }, \"range\": [13, 80], \"loc\": { \"start\": { \"line\": 1, \"column\": 12 }, \"end\": { \"line\": 1, \"column\": 79 } } }], \"range\": [9, 80], \"loc\": { \"start\": { \"line\": 1, \"column\": 8 }, \"end\": { \"line\": 1, \"column\": 79 } } }], \"range\": [0, 89], \"loc\": { \"start\": { \"line\": 0, \"column\": 0 }, \"end\": { \"line\": 2, \"column\": 8 } } }\r\n    ],\r\n    [\r\n        `\r\n        ++a\r\n        ++\r\n        b+c++\r\n        (e)\r\n        c++\r\n        [D]\r\n        ++\r\n        b+(c++)[D]\r\n        //b+c++[D]\r\n        `,\r\n        { \"type\": \"Program\", \"sourceType\": \"script\", \"body\": [{ \"type\": \"ExpressionStatement\", \"expression\": { \"type\": \"UpdateExpression\", \"operator\": \"++\", \"argument\": { \"type\": \"Identifier\", \"name\": \"a\", \"range\": [11, 12], \"loc\": { \"start\": { \"line\": 1, \"column\": 10 }, \"end\": { \"line\": 1, \"column\": 11 } } }, \"prefix\": true, \"range\": [9, 12], \"loc\": { \"start\": { \"line\": 1, \"column\": 8 }, \"end\": { \"line\": 1, \"column\": 11 } } }, \"range\": [9, 12], \"loc\": { \"start\": { \"line\": 1, \"column\": 8 }, \"end\": { \"line\": 1, \"column\": 11 } } }, { \"type\": \"ExpressionStatement\", \"expression\": { \"type\": \"BinaryExpression\", \"left\": { \"type\": \"UpdateExpression\", \"operator\": \"++\", \"argument\": { \"type\": \"Identifier\", \"name\": \"b\", \"range\": [32, 33], \"loc\": { \"start\": { \"line\": 3, \"column\": 8 }, \"end\": { \"line\": 3, \"column\": 9 } } }, \"prefix\": true, \"range\": [21, 33], \"loc\": { \"start\": { \"line\": 2, \"column\": 8 }, \"end\": { \"line\": 3, \"column\": 9 } } }, \"operator\": \"+\", \"right\": { \"type\": \"UpdateExpression\", \"argument\": { \"type\": \"Identifier\", \"name\": \"c\", \"range\": [34, 35], \"loc\": { \"start\": { \"line\": 3, \"column\": 10 }, \"end\": { \"line\": 3, \"column\": 11 } } }, \"operator\": \"++\", \"prefix\": false, \"range\": [34, 37], \"loc\": { \"start\": { \"line\": 3, \"column\": 10 }, \"end\": { \"line\": 3, \"column\": 13 } } }, \"range\": [21, 37], \"loc\": { \"start\": { \"line\": 2, \"column\": 8 }, \"end\": { \"line\": 3, \"column\": 13 } } }, \"range\": [21, 37], \"loc\": { \"start\": { \"line\": 2, \"column\": 8 }, \"end\": { \"line\": 3, \"column\": 13 } } }, { \"type\": \"ExpressionStatement\", \"expression\": { \"type\": \"Identifier\", \"name\": \"e\", \"range\": [46, 49], \"loc\": { \"start\": { \"line\": 4, \"column\": 8 }, \"end\": { \"line\": 4, \"column\": 11 } } }, \"range\": [46, 49], \"loc\": { \"start\": { \"line\": 4, \"column\": 8 }, \"end\": { \"line\": 4, \"column\": 11 } } }, { \"type\": \"ExpressionStatement\", \"expression\": { \"type\": \"UpdateExpression\", \"argument\": { \"type\": \"Identifier\", \"name\": \"c\", \"range\": [58, 59], \"loc\": { \"start\": { \"line\": 5, \"column\": 8 }, \"end\": { \"line\": 5, \"column\": 9 } } }, \"operator\": \"++\", \"prefix\": false, \"range\": [58, 61], \"loc\": { \"start\": { \"line\": 5, \"column\": 8 }, \"end\": { \"line\": 5, \"column\": 11 } } }, \"range\": [58, 61], \"loc\": { \"start\": { \"line\": 5, \"column\": 8 }, \"end\": { \"line\": 5, \"column\": 11 } } }, { \"type\": \"ExpressionStatement\", \"expression\": { \"type\": \"ArrayExpression\", \"elements\": [{ \"type\": \"Identifier\", \"name\": \"D\", \"range\": [71, 72], \"loc\": { \"start\": { \"line\": 6, \"column\": 9 }, \"end\": { \"line\": 6, \"column\": 10 } } }], \"range\": [70, 73], \"loc\": { \"start\": { \"line\": 6, \"column\": 8 }, \"end\": { \"line\": 6, \"column\": 11 } } }, \"range\": [70, 73], \"loc\": { \"start\": { \"line\": 6, \"column\": 8 }, \"end\": { \"line\": 6, \"column\": 11 } } }, { \"type\": \"ExpressionStatement\", \"expression\": { \"type\": \"BinaryExpression\", \"left\": { \"type\": \"UpdateExpression\", \"operator\": \"++\", \"argument\": { \"type\": \"Identifier\", \"name\": \"b\", \"range\": [93, 94], \"loc\": { \"start\": { \"line\": 8, \"column\": 8 }, \"end\": { \"line\": 8, \"column\": 9 } } }, \"prefix\": true, \"range\": [82, 94], \"loc\": { \"start\": { \"line\": 7, \"column\": 8 }, \"end\": { \"line\": 8, \"column\": 9 } } }, \"operator\": \"+\", \"right\": { \"type\": \"MemberExpression\", \"object\": { \"type\": \"UpdateExpression\", \"argument\": { \"type\": \"Identifier\", \"name\": \"c\", \"range\": [96, 97], \"loc\": { \"start\": { \"line\": 8, \"column\": 11 }, \"end\": { \"line\": 8, \"column\": 12 } } }, \"operator\": \"++\", \"prefix\": false, \"range\": [95, 100], \"loc\": { \"start\": { \"line\": 8, \"column\": 10 }, \"end\": { \"line\": 8, \"column\": 15 } } }, \"property\": { \"type\": \"Identifier\", \"name\": \"D\", \"range\": [101, 102], \"loc\": { \"start\": { \"line\": 8, \"column\": 16 }, \"end\": { \"line\": 8, \"column\": 17 } } }, \"computed\": true, \"range\": [95, 103], \"loc\": { \"start\": { \"line\": 8, \"column\": 10 }, \"end\": { \"line\": 8, \"column\": 18 } } }, \"range\": [82, 103], \"loc\": { \"start\": { \"line\": 7, \"column\": 8 }, \"end\": { \"line\": 8, \"column\": 18 } } }, \"range\": [82, 103], \"loc\": { \"start\": { \"line\": 7, \"column\": 8 }, \"end\": { \"line\": 8, \"column\": 18 } } }], \"range\": [0, 131], \"loc\": { \"start\": { \"line\": 0, \"column\": 0 }, \"end\": { \"line\": 10, \"column\": 8 } } }\r\n    ],\r\n    [\r\n        `6*a%[a][b]()*c,a,b?new [].c[10][20]()[10]:d`,\r\n        { \"type\": \"Program\", \"sourceType\": \"script\", \"body\": [{ \"type\": \"ExpressionStatement\", \"expression\": { \"type\": \"SequenceExpression\", \"expressions\": [{ \"type\": \"BinaryExpression\", \"left\": { \"type\": \"BinaryExpression\", \"left\": { \"type\": \"BinaryExpression\", \"left\": { \"type\": \"Literal\", \"value\": 6, \"raw\": \"6\", \"range\": [0, 1], \"loc\": { \"start\": { \"line\": 0, \"column\": 0 }, \"end\": { \"line\": 0, \"column\": 1 } } }, \"operator\": \"*\", \"right\": { \"type\": \"Identifier\", \"name\": \"a\", \"range\": [2, 3], \"loc\": { \"start\": { \"line\": 0, \"column\": 2 }, \"end\": { \"line\": 0, \"column\": 3 } } }, \"range\": [0, 3], \"loc\": { \"start\": { \"line\": 0, \"column\": 0 }, \"end\": { \"line\": 0, \"column\": 3 } } }, \"operator\": \"%\", \"right\": { \"type\": \"CallExpression\", \"callee\": { \"type\": \"MemberExpression\", \"object\": { \"type\": \"ArrayExpression\", \"elements\": [{ \"type\": \"Identifier\", \"name\": \"a\", \"range\": [5, 6], \"loc\": { \"start\": { \"line\": 0, \"column\": 5 }, \"end\": { \"line\": 0, \"column\": 6 } } }], \"range\": [4, 7], \"loc\": { \"start\": { \"line\": 0, \"column\": 4 }, \"end\": { \"line\": 0, \"column\": 7 } } }, \"property\": { \"type\": \"Identifier\", \"name\": \"b\", \"range\": [8, 9], \"loc\": { \"start\": { \"line\": 0, \"column\": 8 }, \"end\": { \"line\": 0, \"column\": 9 } } }, \"computed\": true, \"range\": [4, 10], \"loc\": { \"start\": { \"line\": 0, \"column\": 4 }, \"end\": { \"line\": 0, \"column\": 10 } } }, \"arguments\": [], \"range\": [4, 12], \"loc\": { \"start\": { \"line\": 0, \"column\": 4 }, \"end\": { \"line\": 0, \"column\": 12 } } }, \"range\": [0, 12], \"loc\": { \"start\": { \"line\": 0, \"column\": 0 }, \"end\": { \"line\": 0, \"column\": 12 } } }, \"operator\": \"*\", \"right\": { \"type\": \"Identifier\", \"name\": \"c\", \"range\": [13, 14], \"loc\": { \"start\": { \"line\": 0, \"column\": 13 }, \"end\": { \"line\": 0, \"column\": 14 } } }, \"range\": [0, 14], \"loc\": { \"start\": { \"line\": 0, \"column\": 0 }, \"end\": { \"line\": 0, \"column\": 14 } } }, { \"type\": \"Identifier\", \"name\": \"a\", \"range\": [15, 16], \"loc\": { \"start\": { \"line\": 0, \"column\": 15 }, \"end\": { \"line\": 0, \"column\": 16 } } }, { \"type\": \"ConditionalExpression\", \"test\": { \"type\": \"Identifier\", \"name\": \"b\", \"range\": [17, 18], \"loc\": { \"start\": { \"line\": 0, \"column\": 17 }, \"end\": { \"line\": 0, \"column\": 18 } } }, \"consequent\": { \"type\": \"MemberExpression\", \"object\": { \"type\": \"NewExpression\", \"callee\": { \"type\": \"MemberExpression\", \"object\": { \"type\": \"MemberExpression\", \"object\": { \"type\": \"MemberExpression\", \"object\": { \"type\": \"ArrayExpression\", \"elements\": [], \"range\": [23, 25], \"loc\": { \"start\": { \"line\": 0, \"column\": 23 }, \"end\": { \"line\": 0, \"column\": 25 } } }, \"property\": { \"type\": \"Identifier\", \"name\": \"c\", \"range\": [26, 27], \"loc\": { \"start\": { \"line\": 0, \"column\": 26 }, \"end\": { \"line\": 0, \"column\": 27 } } }, \"computed\": false, \"range\": [23, 27], \"loc\": { \"start\": { \"line\": 0, \"column\": 23 }, \"end\": { \"line\": 0, \"column\": 27 } } }, \"property\": { \"type\": \"Literal\", \"value\": 10, \"raw\": \"10\", \"range\": [28, 30], \"loc\": { \"start\": { \"line\": 0, \"column\": 28 }, \"end\": { \"line\": 0, \"column\": 30 } } }, \"computed\": true, \"range\": [23, 31], \"loc\": { \"start\": { \"line\": 0, \"column\": 23 }, \"end\": { \"line\": 0, \"column\": 31 } } }, \"property\": { \"type\": \"Literal\", \"value\": 20, \"raw\": \"20\", \"range\": [32, 34], \"loc\": { \"start\": { \"line\": 0, \"column\": 32 }, \"end\": { \"line\": 0, \"column\": 34 } } }, \"computed\": true, \"range\": [23, 35], \"loc\": { \"start\": { \"line\": 0, \"column\": 23 }, \"end\": { \"line\": 0, \"column\": 35 } } }, \"arguments\": [], \"range\": [19, 37], \"loc\": { \"start\": { \"line\": 0, \"column\": 19 }, \"end\": { \"line\": 0, \"column\": 37 } } }, \"property\": { \"type\": \"Literal\", \"value\": 10, \"raw\": \"10\", \"range\": [38, 40], \"loc\": { \"start\": { \"line\": 0, \"column\": 38 }, \"end\": { \"line\": 0, \"column\": 40 } } }, \"computed\": true, \"range\": [19, 41], \"loc\": { \"start\": { \"line\": 0, \"column\": 19 }, \"end\": { \"line\": 0, \"column\": 41 } } }, \"alternate\": { \"type\": \"Identifier\", \"name\": \"d\", \"range\": [42, 43], \"loc\": { \"start\": { \"line\": 0, \"column\": 42 }, \"end\": { \"line\": 0, \"column\": 43 } } }, \"range\": [17, 43], \"loc\": { \"start\": { \"line\": 0, \"column\": 17 }, \"end\": { \"line\": 0, \"column\": 43 } } }], \"range\": [0, 43], \"loc\": { \"start\": { \"line\": 0, \"column\": 0 }, \"end\": { \"line\": 0, \"column\": 43 } } }, \"range\": [0, 43], \"loc\": { \"start\": { \"line\": 0, \"column\": 0 }, \"end\": { \"line\": 0, \"column\": 43 } } }], \"range\": [0, 43], \"loc\": { \"start\": { \"line\": 0, \"column\": 0 }, \"end\": { \"line\": 0, \"column\": 43 } } }\r\n    ], [\r\n        `yield* a.b.c?a+b:/fsd/ig&&d;void function *(){yield* a.b.c?a+b:/fsd/ig&&d}`,\r\n        { \"type\": \"Program\", \"sourceType\": \"script\", \"body\": [{ \"type\": \"ExpressionStatement\", \"expression\": { \"type\": \"ConditionalExpression\", \"test\": { \"type\": \"BinaryExpression\", \"left\": { \"type\": \"Identifier\", \"name\": \"yield\", \"range\": [0, 5], \"loc\": { \"start\": { \"line\": 0, \"column\": 0 }, \"end\": { \"line\": 0, \"column\": 5 } } }, \"operator\": \"*\", \"right\": { \"type\": \"MemberExpression\", \"object\": { \"type\": \"MemberExpression\", \"object\": { \"type\": \"Identifier\", \"name\": \"a\", \"range\": [7, 8], \"loc\": { \"start\": { \"line\": 0, \"column\": 7 }, \"end\": { \"line\": 0, \"column\": 8 } } }, \"property\": { \"type\": \"Identifier\", \"name\": \"b\", \"range\": [9, 10], \"loc\": { \"start\": { \"line\": 0, \"column\": 9 }, \"end\": { \"line\": 0, \"column\": 10 } } }, \"computed\": false, \"range\": [7, 10], \"loc\": { \"start\": { \"line\": 0, \"column\": 7 }, \"end\": { \"line\": 0, \"column\": 10 } } }, \"property\": { \"type\": \"Identifier\", \"name\": \"c\", \"range\": [11, 12], \"loc\": { \"start\": { \"line\": 0, \"column\": 11 }, \"end\": { \"line\": 0, \"column\": 12 } } }, \"computed\": false, \"range\": [7, 12], \"loc\": { \"start\": { \"line\": 0, \"column\": 7 }, \"end\": { \"line\": 0, \"column\": 12 } } }, \"range\": [0, 12], \"loc\": { \"start\": { \"line\": 0, \"column\": 0 }, \"end\": { \"line\": 0, \"column\": 12 } } }, \"consequent\": { \"type\": \"BinaryExpression\", \"left\": { \"type\": \"Identifier\", \"name\": \"a\", \"range\": [13, 14], \"loc\": { \"start\": { \"line\": 0, \"column\": 13 }, \"end\": { \"line\": 0, \"column\": 14 } } }, \"operator\": \"+\", \"right\": { \"type\": \"Identifier\", \"name\": \"b\", \"range\": [15, 16], \"loc\": { \"start\": { \"line\": 0, \"column\": 15 }, \"end\": { \"line\": 0, \"column\": 16 } } }, \"range\": [13, 16], \"loc\": { \"start\": { \"line\": 0, \"column\": 13 }, \"end\": { \"line\": 0, \"column\": 16 } } }, \"alternate\": { \"type\": \"LogicalExpression\", \"left\": { \"type\": \"Literal\", \"value\": {}, \"raw\": \"/fsd/ig\", \"regex\": { \"pattern\": \"fsd\", \"flags\": \"ig\" }, \"range\": [17, 24], \"loc\": { \"start\": { \"line\": 0, \"column\": 17 }, \"end\": { \"line\": 0, \"column\": 24 } } }, \"operator\": \"&&\", \"right\": { \"type\": \"Identifier\", \"name\": \"d\", \"range\": [26, 27], \"loc\": { \"start\": { \"line\": 0, \"column\": 26 }, \"end\": { \"line\": 0, \"column\": 27 } } }, \"range\": [17, 27], \"loc\": { \"start\": { \"line\": 0, \"column\": 17 }, \"end\": { \"line\": 0, \"column\": 27 } } }, \"range\": [0, 27], \"loc\": { \"start\": { \"line\": 0, \"column\": 0 }, \"end\": { \"line\": 0, \"column\": 27 } } }, \"range\": [0, 28], \"loc\": { \"start\": { \"line\": 0, \"column\": 0 }, \"end\": { \"line\": 0, \"column\": 28 } } }, { \"type\": \"ExpressionStatement\", \"expression\": { \"type\": \"UnaryExpression\", \"operator\": \"void\", \"argument\": { \"type\": \"FunctionExpression\", \"async\": false, \"generator\": true, \"id\": null, \"params\": [], \"body\": { \"type\": \"BlockStatement\", \"body\": [{ \"type\": \"ExpressionStatement\", \"expression\": { \"type\": \"YieldExpression\", \"argument\": { \"type\": \"ConditionalExpression\", \"test\": { \"type\": \"MemberExpression\", \"object\": { \"type\": \"MemberExpression\", \"object\": { \"type\": \"Identifier\", \"name\": \"a\", \"range\": [53, 54], \"loc\": { \"start\": { \"line\": 0, \"column\": 53 }, \"end\": { \"line\": 0, \"column\": 54 } } }, \"property\": { \"type\": \"Identifier\", \"name\": \"b\", \"range\": [55, 56], \"loc\": { \"start\": { \"line\": 0, \"column\": 55 }, \"end\": { \"line\": 0, \"column\": 56 } } }, \"computed\": false, \"range\": [53, 56], \"loc\": { \"start\": { \"line\": 0, \"column\": 53 }, \"end\": { \"line\": 0, \"column\": 56 } } }, \"property\": { \"type\": \"Identifier\", \"name\": \"c\", \"range\": [57, 58], \"loc\": { \"start\": { \"line\": 0, \"column\": 57 }, \"end\": { \"line\": 0, \"column\": 58 } } }, \"computed\": false, \"range\": [53, 58], \"loc\": { \"start\": { \"line\": 0, \"column\": 53 }, \"end\": { \"line\": 0, \"column\": 58 } } }, \"consequent\": { \"type\": \"BinaryExpression\", \"left\": { \"type\": \"Identifier\", \"name\": \"a\", \"range\": [59, 60], \"loc\": { \"start\": { \"line\": 0, \"column\": 59 }, \"end\": { \"line\": 0, \"column\": 60 } } }, \"operator\": \"+\", \"right\": { \"type\": \"Identifier\", \"name\": \"b\", \"range\": [61, 62], \"loc\": { \"start\": { \"line\": 0, \"column\": 61 }, \"end\": { \"line\": 0, \"column\": 62 } } }, \"range\": [59, 62], \"loc\": { \"start\": { \"line\": 0, \"column\": 59 }, \"end\": { \"line\": 0, \"column\": 62 } } }, \"alternate\": { \"type\": \"LogicalExpression\", \"left\": { \"type\": \"Literal\", \"value\": {}, \"raw\": \"/fsd/ig\", \"regex\": { \"pattern\": \"fsd\", \"flags\": \"ig\" }, \"range\": [63, 70], \"loc\": { \"start\": { \"line\": 0, \"column\": 63 }, \"end\": { \"line\": 0, \"column\": 70 } } }, \"operator\": \"&&\", \"right\": { \"type\": \"Identifier\", \"name\": \"d\", \"range\": [72, 73], \"loc\": { \"start\": { \"line\": 0, \"column\": 72 }, \"end\": { \"line\": 0, \"column\": 73 } } }, \"range\": [63, 73], \"loc\": { \"start\": { \"line\": 0, \"column\": 63 }, \"end\": { \"line\": 0, \"column\": 73 } } }, \"range\": [53, 73], \"loc\": { \"start\": { \"line\": 0, \"column\": 53 }, \"end\": { \"line\": 0, \"column\": 73 } } }, \"delegate\": true, \"range\": [46, 73], \"loc\": { \"start\": { \"line\": 0, \"column\": 46 }, \"end\": { \"line\": 0, \"column\": 73 } } }, \"range\": [46, 73], \"loc\": { \"start\": { \"line\": 0, \"column\": 46 }, \"end\": { \"line\": 0, \"column\": 73 } } }] }, \"expression\": false, \"range\": [33, 74], \"loc\": { \"start\": { \"line\": 0, \"column\": 33 }, \"end\": { \"line\": 0, \"column\": 74 } } }, \"prefix\": true, \"range\": [28, 74], \"loc\": { \"start\": { \"line\": 0, \"column\": 28 }, \"end\": { \"line\": 0, \"column\": 74 } } }, \"range\": [28, 74], \"loc\": { \"start\": { \"line\": 0, \"column\": 28 }, \"end\": { \"line\": 0, \"column\": 74 } } }], \"range\": [0, 74], \"loc\": { \"start\": { \"line\": 0, \"column\": 0 }, \"end\": { \"line\": 0, \"column\": 74 } } }\r\n    ], [\r\n        `\r\n        a,b?new [].c[10][20]()[10]:d;\r\n        await- a.b.c?a+b:/fsd/ig&&d;\r\n        async a=>await- a.b.c?a+b:/fsd/ig&&d;\r\n        `,\r\n        { \"type\": \"Program\", \"sourceType\": \"script\", \"body\": [{ \"type\": \"ExpressionStatement\", \"expression\": { \"type\": \"SequenceExpression\", \"expressions\": [{ \"type\": \"Identifier\", \"name\": \"a\", \"range\": [9, 10], \"loc\": { \"start\": { \"line\": 1, \"column\": 8 }, \"end\": { \"line\": 1, \"column\": 9 } } }, { \"type\": \"ConditionalExpression\", \"test\": { \"type\": \"Identifier\", \"name\": \"b\", \"range\": [11, 12], \"loc\": { \"start\": { \"line\": 1, \"column\": 10 }, \"end\": { \"line\": 1, \"column\": 11 } } }, \"consequent\": { \"type\": \"MemberExpression\", \"object\": { \"type\": \"NewExpression\", \"callee\": { \"type\": \"MemberExpression\", \"object\": { \"type\": \"MemberExpression\", \"object\": { \"type\": \"MemberExpression\", \"object\": { \"type\": \"ArrayExpression\", \"elements\": [], \"range\": [17, 19], \"loc\": { \"start\": { \"line\": 1, \"column\": 16 }, \"end\": { \"line\": 1, \"column\": 18 } } }, \"property\": { \"type\": \"Identifier\", \"name\": \"c\", \"range\": [20, 21], \"loc\": { \"start\": { \"line\": 1, \"column\": 19 }, \"end\": { \"line\": 1, \"column\": 20 } } }, \"computed\": false, \"range\": [17, 21], \"loc\": { \"start\": { \"line\": 1, \"column\": 16 }, \"end\": { \"line\": 1, \"column\": 20 } } }, \"property\": { \"type\": \"Literal\", \"value\": 10, \"raw\": \"10\", \"range\": [22, 24], \"loc\": { \"start\": { \"line\": 1, \"column\": 21 }, \"end\": { \"line\": 1, \"column\": 23 } } }, \"computed\": true, \"range\": [17, 25], \"loc\": { \"start\": { \"line\": 1, \"column\": 16 }, \"end\": { \"line\": 1, \"column\": 24 } } }, \"property\": { \"type\": \"Literal\", \"value\": 20, \"raw\": \"20\", \"range\": [26, 28], \"loc\": { \"start\": { \"line\": 1, \"column\": 25 }, \"end\": { \"line\": 1, \"column\": 27 } } }, \"computed\": true, \"range\": [17, 29], \"loc\": { \"start\": { \"line\": 1, \"column\": 16 }, \"end\": { \"line\": 1, \"column\": 28 } } }, \"arguments\": [], \"range\": [13, 31], \"loc\": { \"start\": { \"line\": 1, \"column\": 12 }, \"end\": { \"line\": 1, \"column\": 30 } } }, \"property\": { \"type\": \"Literal\", \"value\": 10, \"raw\": \"10\", \"range\": [32, 34], \"loc\": { \"start\": { \"line\": 1, \"column\": 31 }, \"end\": { \"line\": 1, \"column\": 33 } } }, \"computed\": true, \"range\": [13, 35], \"loc\": { \"start\": { \"line\": 1, \"column\": 12 }, \"end\": { \"line\": 1, \"column\": 34 } } }, \"alternate\": { \"type\": \"Identifier\", \"name\": \"d\", \"range\": [36, 37], \"loc\": { \"start\": { \"line\": 1, \"column\": 35 }, \"end\": { \"line\": 1, \"column\": 36 } } }, \"range\": [11, 37], \"loc\": { \"start\": { \"line\": 1, \"column\": 10 }, \"end\": { \"line\": 1, \"column\": 36 } } }], \"range\": [9, 37], \"loc\": { \"start\": { \"line\": 1, \"column\": 8 }, \"end\": { \"line\": 1, \"column\": 36 } } }, \"range\": [9, 38], \"loc\": { \"start\": { \"line\": 1, \"column\": 8 }, \"end\": { \"line\": 1, \"column\": 37 } } }, { \"type\": \"ExpressionStatement\", \"expression\": { \"type\": \"ConditionalExpression\", \"test\": { \"type\": \"BinaryExpression\", \"left\": { \"type\": \"Identifier\", \"name\": \"await\", \"range\": [47, 52], \"loc\": { \"start\": { \"line\": 2, \"column\": 8 }, \"end\": { \"line\": 2, \"column\": 13 } } }, \"operator\": \"-\", \"right\": { \"type\": \"MemberExpression\", \"object\": { \"type\": \"MemberExpression\", \"object\": { \"type\": \"Identifier\", \"name\": \"a\", \"range\": [54, 55], \"loc\": { \"start\": { \"line\": 2, \"column\": 15 }, \"end\": { \"line\": 2, \"column\": 16 } } }, \"property\": { \"type\": \"Identifier\", \"name\": \"b\", \"range\": [56, 57], \"loc\": { \"start\": { \"line\": 2, \"column\": 17 }, \"end\": { \"line\": 2, \"column\": 18 } } }, \"computed\": false, \"range\": [54, 57], \"loc\": { \"start\": { \"line\": 2, \"column\": 15 }, \"end\": { \"line\": 2, \"column\": 18 } } }, \"property\": { \"type\": \"Identifier\", \"name\": \"c\", \"range\": [58, 59], \"loc\": { \"start\": { \"line\": 2, \"column\": 19 }, \"end\": { \"line\": 2, \"column\": 20 } } }, \"computed\": false, \"range\": [54, 59], \"loc\": { \"start\": { \"line\": 2, \"column\": 15 }, \"end\": { \"line\": 2, \"column\": 20 } } }, \"range\": [47, 59], \"loc\": { \"start\": { \"line\": 2, \"column\": 8 }, \"end\": { \"line\": 2, \"column\": 20 } } }, \"consequent\": { \"type\": \"BinaryExpression\", \"left\": { \"type\": \"Identifier\", \"name\": \"a\", \"range\": [60, 61], \"loc\": { \"start\": { \"line\": 2, \"column\": 21 }, \"end\": { \"line\": 2, \"column\": 22 } } }, \"operator\": \"+\", \"right\": { \"type\": \"Identifier\", \"name\": \"b\", \"range\": [62, 63], \"loc\": { \"start\": { \"line\": 2, \"column\": 23 }, \"end\": { \"line\": 2, \"column\": 24 } } }, \"range\": [60, 63], \"loc\": { \"start\": { \"line\": 2, \"column\": 21 }, \"end\": { \"line\": 2, \"column\": 24 } } }, \"alternate\": { \"type\": \"LogicalExpression\", \"left\": { \"type\": \"Literal\", \"value\": {}, \"raw\": \"/fsd/ig\", \"regex\": { \"pattern\": \"fsd\", \"flags\": \"ig\" }, \"range\": [64, 71], \"loc\": { \"start\": { \"line\": 2, \"column\": 25 }, \"end\": { \"line\": 2, \"column\": 32 } } }, \"operator\": \"&&\", \"right\": { \"type\": \"Identifier\", \"name\": \"d\", \"range\": [73, 74], \"loc\": { \"start\": { \"line\": 2, \"column\": 34 }, \"end\": { \"line\": 2, \"column\": 35 } } }, \"range\": [64, 74], \"loc\": { \"start\": { \"line\": 2, \"column\": 25 }, \"end\": { \"line\": 2, \"column\": 35 } } }, \"range\": [47, 74], \"loc\": { \"start\": { \"line\": 2, \"column\": 8 }, \"end\": { \"line\": 2, \"column\": 35 } } }, \"range\": [47, 75], \"loc\": { \"start\": { \"line\": 2, \"column\": 8 }, \"end\": { \"line\": 2, \"column\": 36 } } }, { \"type\": \"ExpressionStatement\", \"expression\": { \"type\": \"ArrowFunctionExpression\", \"async\": true, \"generator\": false, \"id\": null, \"params\": [{ \"type\": \"Identifier\", \"name\": \"a\", \"range\": [90, 91], \"loc\": { \"start\": { \"line\": 3, \"column\": 14 }, \"end\": { \"line\": 3, \"column\": 15 } } }], \"body\": { \"type\": \"ConditionalExpression\", \"test\": { \"type\": \"AwaitExpression\", \"argument\": { \"type\": \"UnaryExpression\", \"operator\": \"-\", \"argument\": { \"type\": \"MemberExpression\", \"object\": { \"type\": \"MemberExpression\", \"object\": { \"type\": \"Identifier\", \"name\": \"a\", \"range\": [100, 101], \"loc\": { \"start\": { \"line\": 3, \"column\": 24 }, \"end\": { \"line\": 3, \"column\": 25 } } }, \"property\": { \"type\": \"Identifier\", \"name\": \"b\", \"range\": [102, 103], \"loc\": { \"start\": { \"line\": 3, \"column\": 26 }, \"end\": { \"line\": 3, \"column\": 27 } } }, \"computed\": false, \"range\": [100, 103], \"loc\": { \"start\": { \"line\": 3, \"column\": 24 }, \"end\": { \"line\": 3, \"column\": 27 } } }, \"property\": { \"type\": \"Identifier\", \"name\": \"c\", \"range\": [104, 105], \"loc\": { \"start\": { \"line\": 3, \"column\": 28 }, \"end\": { \"line\": 3, \"column\": 29 } } }, \"computed\": false, \"range\": [100, 105], \"loc\": { \"start\": { \"line\": 3, \"column\": 24 }, \"end\": { \"line\": 3, \"column\": 29 } } }, \"prefix\": true, \"range\": [98, 105], \"loc\": { \"start\": { \"line\": 3, \"column\": 22 }, \"end\": { \"line\": 3, \"column\": 29 } } }, \"range\": [93, 105], \"loc\": { \"start\": { \"line\": 3, \"column\": 17 }, \"end\": { \"line\": 3, \"column\": 29 } } }, \"consequent\": { \"type\": \"BinaryExpression\", \"left\": { \"type\": \"Identifier\", \"name\": \"a\", \"range\": [106, 107], \"loc\": { \"start\": { \"line\": 3, \"column\": 30 }, \"end\": { \"line\": 3, \"column\": 31 } } }, \"operator\": \"+\", \"right\": { \"type\": \"Identifier\", \"name\": \"b\", \"range\": [108, 109], \"loc\": { \"start\": { \"line\": 3, \"column\": 32 }, \"end\": { \"line\": 3, \"column\": 33 } } }, \"range\": [106, 109], \"loc\": { \"start\": { \"line\": 3, \"column\": 30 }, \"end\": { \"line\": 3, \"column\": 33 } } }, \"alternate\": { \"type\": \"LogicalExpression\", \"left\": { \"type\": \"Literal\", \"value\": {}, \"raw\": \"/fsd/ig\", \"regex\": { \"pattern\": \"fsd\", \"flags\": \"ig\" }, \"range\": [110, 117], \"loc\": { \"start\": { \"line\": 3, \"column\": 34 }, \"end\": { \"line\": 3, \"column\": 41 } } }, \"operator\": \"&&\", \"right\": { \"type\": \"Identifier\", \"name\": \"d\", \"range\": [119, 120], \"loc\": { \"start\": { \"line\": 3, \"column\": 43 }, \"end\": { \"line\": 3, \"column\": 44 } } }, \"range\": [110, 120], \"loc\": { \"start\": { \"line\": 3, \"column\": 34 }, \"end\": { \"line\": 3, \"column\": 44 } } }, \"range\": [93, 120], \"loc\": { \"start\": { \"line\": 3, \"column\": 17 }, \"end\": { \"line\": 3, \"column\": 44 } } }, \"expression\": true, \"range\": [84, 120], \"loc\": { \"start\": { \"line\": 3, \"column\": 8 }, \"end\": { \"line\": 3, \"column\": 44 } } }, \"range\": [84, 121], \"loc\": { \"start\": { \"line\": 3, \"column\": 8 }, \"end\": { \"line\": 3, \"column\": 45 } } }], \"range\": [0, 130], \"loc\": { \"start\": { \"line\": 0, \"column\": 0 }, \"end\": { \"line\": 4, \"column\": 8 } } }\r\n    ],\r\n    [\r\n        \"if(a){}else if(b+c){}else if('') console.log();else a:while(b)b:{break a;} !function a(){}[10] ;new function(){}``()\",\r\n        { \"type\": \"Program\", \"sourceType\": \"script\", \"body\": [{ \"type\": \"IfStatement\", \"test\": { \"type\": \"Identifier\", \"name\": \"a\", \"range\": [3, 4], \"loc\": { \"start\": { \"line\": 0, \"column\": 3 }, \"end\": { \"line\": 0, \"column\": 4 } } }, \"consequent\": { \"type\": \"BlockStatement\", \"body\": [], \"range\": [5, 7], \"loc\": { \"start\": { \"line\": 0, \"column\": 5 }, \"end\": { \"line\": 0, \"column\": 7 } } }, \"alternate\": { \"type\": \"IfStatement\", \"test\": { \"type\": \"BinaryExpression\", \"left\": { \"type\": \"Identifier\", \"name\": \"b\", \"range\": [15, 16], \"loc\": { \"start\": { \"line\": 0, \"column\": 15 }, \"end\": { \"line\": 0, \"column\": 16 } } }, \"operator\": \"+\", \"right\": { \"type\": \"Identifier\", \"name\": \"c\", \"range\": [17, 18], \"loc\": { \"start\": { \"line\": 0, \"column\": 17 }, \"end\": { \"line\": 0, \"column\": 18 } } }, \"range\": [15, 18], \"loc\": { \"start\": { \"line\": 0, \"column\": 15 }, \"end\": { \"line\": 0, \"column\": 18 } } }, \"consequent\": { \"type\": \"BlockStatement\", \"body\": [], \"range\": [19, 21], \"loc\": { \"start\": { \"line\": 0, \"column\": 19 }, \"end\": { \"line\": 0, \"column\": 21 } } }, \"alternate\": { \"type\": \"IfStatement\", \"test\": { \"type\": \"Literal\", \"value\": \"\", \"raw\": \"''\", \"range\": [29, 31], \"loc\": { \"start\": { \"line\": 0, \"column\": 29 }, \"end\": { \"line\": 0, \"column\": 31 } } }, \"consequent\": { \"type\": \"ExpressionStatement\", \"expression\": { \"type\": \"CallExpression\", \"callee\": { \"type\": \"MemberExpression\", \"object\": { \"type\": \"Identifier\", \"name\": \"console\", \"range\": [33, 40], \"loc\": { \"start\": { \"line\": 0, \"column\": 33 }, \"end\": { \"line\": 0, \"column\": 40 } } }, \"property\": { \"type\": \"Identifier\", \"name\": \"log\", \"range\": [41, 44], \"loc\": { \"start\": { \"line\": 0, \"column\": 41 }, \"end\": { \"line\": 0, \"column\": 44 } } }, \"computed\": false, \"range\": [33, 44], \"loc\": { \"start\": { \"line\": 0, \"column\": 33 }, \"end\": { \"line\": 0, \"column\": 44 } } }, \"arguments\": [], \"range\": [33, 46], \"loc\": { \"start\": { \"line\": 0, \"column\": 33 }, \"end\": { \"line\": 0, \"column\": 46 } } }, \"range\": [33, 47], \"loc\": { \"start\": { \"line\": 0, \"column\": 33 }, \"end\": { \"line\": 0, \"column\": 47 } } }, \"alternate\": { \"type\": \"LabeledStatement\", \"label\": { \"type\": \"Identifier\", \"name\": \"a\", \"range\": [52, 53], \"loc\": { \"start\": { \"line\": 0, \"column\": 52 }, \"end\": { \"line\": 0, \"column\": 53 } } }, \"body\": { \"type\": \"WhileStatement\", \"test\": { \"type\": \"Identifier\", \"name\": \"b\", \"range\": [60, 61], \"loc\": { \"start\": { \"line\": 0, \"column\": 60 }, \"end\": { \"line\": 0, \"column\": 61 } } }, \"body\": { \"type\": \"LabeledStatement\", \"label\": { \"type\": \"Identifier\", \"name\": \"b\", \"range\": [62, 63], \"loc\": { \"start\": { \"line\": 0, \"column\": 62 }, \"end\": { \"line\": 0, \"column\": 63 } } }, \"body\": { \"type\": \"BlockStatement\", \"body\": [{ \"type\": \"BreakStatement\", \"label\": { \"type\": \"Identifier\", \"name\": \"a\", \"range\": [71, 72], \"loc\": { \"start\": { \"line\": 0, \"column\": 71 }, \"end\": { \"line\": 0, \"column\": 72 } } }, \"range\": [65, 73], \"loc\": { \"start\": { \"line\": 0, \"column\": 65 }, \"end\": { \"line\": 0, \"column\": 73 } } }], \"range\": [64, 74], \"loc\": { \"start\": { \"line\": 0, \"column\": 64 }, \"end\": { \"line\": 0, \"column\": 74 } } }, \"range\": [62, 74], \"loc\": { \"start\": { \"line\": 0, \"column\": 62 }, \"end\": { \"line\": 0, \"column\": 74 } } }, \"range\": [54, 74], \"loc\": { \"start\": { \"line\": 0, \"column\": 54 }, \"end\": { \"line\": 0, \"column\": 74 } } }, \"range\": [52, 74], \"loc\": { \"start\": { \"line\": 0, \"column\": 52 }, \"end\": { \"line\": 0, \"column\": 74 } } }, \"range\": [26, 74], \"loc\": { \"start\": { \"line\": 0, \"column\": 26 }, \"end\": { \"line\": 0, \"column\": 74 } } }, \"range\": [12, 74], \"loc\": { \"start\": { \"line\": 0, \"column\": 12 }, \"end\": { \"line\": 0, \"column\": 74 } } }, \"range\": [0, 74], \"loc\": { \"start\": { \"line\": 0, \"column\": 0 }, \"end\": { \"line\": 0, \"column\": 74 } } }, { \"type\": \"ExpressionStatement\", \"expression\": { \"type\": \"UnaryExpression\", \"operator\": \"!\", \"argument\": { \"type\": \"MemberExpression\", \"object\": { \"type\": \"FunctionExpression\", \"async\": false, \"generator\": false, \"id\": { \"type\": \"Identifier\", \"name\": \"a\", \"range\": [85, 86], \"loc\": { \"start\": { \"line\": 0, \"column\": 85 }, \"end\": { \"line\": 0, \"column\": 86 } } }, \"params\": [], \"body\": { \"type\": \"BlockStatement\", \"body\": [], \"range\": [88, 90], \"loc\": { \"start\": { \"line\": 0, \"column\": 88 }, \"end\": { \"line\": 0, \"column\": 90 } } }, \"expression\": false, \"range\": [76, 90], \"loc\": { \"start\": { \"line\": 0, \"column\": 76 }, \"end\": { \"line\": 0, \"column\": 90 } } }, \"property\": { \"type\": \"Literal\", \"value\": 10, \"raw\": \"10\", \"range\": [91, 93], \"loc\": { \"start\": { \"line\": 0, \"column\": 91 }, \"end\": { \"line\": 0, \"column\": 93 } } }, \"computed\": true, \"range\": [76, 94], \"loc\": { \"start\": { \"line\": 0, \"column\": 76 }, \"end\": { \"line\": 0, \"column\": 94 } } }, \"prefix\": true, \"range\": [75, 94], \"loc\": { \"start\": { \"line\": 0, \"column\": 75 }, \"end\": { \"line\": 0, \"column\": 94 } } }, \"range\": [75, 96], \"loc\": { \"start\": { \"line\": 0, \"column\": 75 }, \"end\": { \"line\": 0, \"column\": 96 } } }, { \"type\": \"ExpressionStatement\", \"expression\": { \"type\": \"NewExpression\", \"callee\": { \"type\": \"TaggedTemplateExpression\", \"tag\": { \"type\": \"FunctionExpression\", \"async\": false, \"generator\": false, \"id\": null, \"params\": [], \"body\": { \"type\": \"BlockStatement\", \"body\": [], \"range\": [110, 112], \"loc\": { \"start\": { \"line\": 0, \"column\": 110 }, \"end\": { \"line\": 0, \"column\": 112 } } }, \"expression\": false, \"range\": [100, 112], \"loc\": { \"start\": { \"line\": 0, \"column\": 100 }, \"end\": { \"line\": 0, \"column\": 112 } } }, \"quasi\": { \"type\": \"TemplateLiteral\", \"expressions\": [], \"quasis\": [{ \"type\": \"TemplateElement\", \"value\": { \"raw\": \"\", \"cooked\": \"\" }, \"tail\": true }], \"range\": [112, 114], \"loc\": { \"start\": { \"line\": 0, \"column\": 112 }, \"end\": { \"line\": 0, \"column\": 114 } } }, \"range\": [100, 114], \"loc\": { \"start\": { \"line\": 0, \"column\": 100 }, \"end\": { \"line\": 0, \"column\": 114 } } }, \"arguments\": [], \"range\": [96, 116], \"loc\": { \"start\": { \"line\": 0, \"column\": 96 }, \"end\": { \"line\": 0, \"column\": 116 } } }, \"range\": [96, 116], \"loc\": { \"start\": { \"line\": 0, \"column\": 96 }, \"end\": { \"line\": 0, \"column\": 116 } } }] }\r\n    ]\r\n]\r\nlet table = [];\r\n\r\nfor (const [input, control] of tast_list) {\r\n    let output = parser.parse(input);\r\n    table.push(\r\n        {\r\n            equal: weakEqual(control, output),\r\n            source: input,\r\n            control,\r\n            output\r\n        }\r\n    )\r\n}\r\nconsole.table(table);\r\n\r\n\r\n\r\nfunction weakEqual(a: any, b: any) {\r\n    if (typeof a === \"object\") {\r\n        if (typeof b === \"object\") {\r\n            if (a !== b) {\r\n                if (a === null || b === null) {\r\n                    return [a, b];\r\n                }\r\n                let keys = new Set(Object.keys(a).concat(Object.keys(b)));\r\n                for (const key of Array.from(keys)) {\r\n                    if (key === \"range\" || key === \"loc\") {\r\n                        continue;\r\n                    }\r\n                    let res = weakEqual(a[key], b[key]);\r\n                    if (res !== true) {\r\n                        res.unshift(a, b, key);\r\n                        return res;\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        } else {\r\n            return [a, b];\r\n        }\r\n    } else {\r\n        return a === b || [a, b];\r\n    }\r\n}\r\n\r\nfunction deepEqual(a: any, b: any) {\r\n    if (typeof a === \"object\") {\r\n        if (typeof b === \"object\") {\r\n            if (a !== b) {\r\n                if (a === null || b === null) {\r\n                    return [a, b];\r\n                }\r\n                let keys = new Set(Object.keys(a).concat(Object.keys(b)));\r\n                for (const key of Array.from(keys)) {\r\n                    let res = deepEqual(a[key], b[key]);\r\n                    if (res !== true) {\r\n                        res.unshift(a, b, key);\r\n                        return res;\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        } else {\r\n            return [a, b];\r\n        }\r\n    } else {\r\n        return a === b || [a, b];\r\n    }\r\n}\r\n\r\n\r\n","\r\n(function webpackUniversalModuleDefinition(root, factory) {\r\n/* istanbul ignore next */\r\n\tif(typeof exports === 'object' && typeof module === 'object')\r\n\t\tmodule.exports = factory();\r\n\telse if(typeof define === 'function' && define.amd)\r\n\t\tdefine([], factory);\r\n/* istanbul ignore next */\r\n\telse if(typeof exports === 'object')\r\n\t\texports[\"esprima\"] = factory();\r\n\telse\r\n\t\troot[\"esprima\"] = factory();\r\n})(this, function() {\r\nreturn /******/ (function(modules) { // webpackBootstrap\r\n/******/ \t// The module cache\r\n/******/ \tvar installedModules = {};\r\n\r\n/******/ \t// The require function\r\n/******/ \tfunction __webpack_require__(moduleId) {\r\n\r\n/******/ \t\t// Check if module is in cache\r\n/* istanbul ignore if */\r\n/******/ \t\tif(installedModules[moduleId])\r\n/******/ \t\t\treturn installedModules[moduleId].exports;\r\n\r\n/******/ \t\t// Create a new module (and put it into the cache)\r\n/******/ \t\tvar module = installedModules[moduleId] = {\r\n/******/ \t\t\texports: {},\r\n/******/ \t\t\tid: moduleId,\r\n/******/ \t\t\tloaded: false\r\n/******/ \t\t};\r\n\r\n/******/ \t\t// Execute the module function\r\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\r\n\r\n/******/ \t\t// Flag the module as loaded\r\n/******/ \t\tmodule.loaded = true;\r\n\r\n/******/ \t\t// Return the exports of the module\r\n/******/ \t\treturn module.exports;\r\n/******/ \t}\r\n\r\n\r\n/******/ \t// expose the modules object (__webpack_modules__)\r\n/******/ \t__webpack_require__.m = modules;\r\n\r\n/******/ \t// expose the module cache\r\n/******/ \t__webpack_require__.c = installedModules;\r\n\r\n/******/ \t// __webpack_public_path__\r\n/******/ \t__webpack_require__.p = \"\";\r\n\r\n/******/ \t// Load entry module and return exports\r\n/******/ \treturn __webpack_require__(0);\r\n/******/ })\r\n/************************************************************************/\r\n/******/ ([\r\n/* 0 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\"use strict\";\r\n\t/*\r\n\t  Copyright JS Foundation and other contributors, https://js.foundation/\r\n\r\n\t  Redistribution and use in source and binary forms, with or without\r\n\t  modification, are permitted provided that the following conditions are met:\r\n\r\n\t    * Redistributions of source code must retain the above copyright\r\n\t      notice, this list of conditions and the following disclaimer.\r\n\t    * Redistributions in binary form must reproduce the above copyright\r\n\t      notice, this list of conditions and the following disclaimer in the\r\n\t      documentation and/or other materials provided with the distribution.\r\n\r\n\t  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n\t  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n\t  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n\t  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\r\n\t  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n\t  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n\t  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n\t  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n\t  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\r\n\t  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\t*/\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar comment_handler_1 = __webpack_require__(1);\r\n\tvar jsx_parser_1 = __webpack_require__(3);\r\n\tvar parser_1 = __webpack_require__(8);\r\n\tvar tokenizer_1 = __webpack_require__(15);\r\n\tfunction parse(code, options, delegate) {\r\n\t    var commentHandler = null;\r\n\t    var proxyDelegate = function (node, metadata) {\r\n\t        if (delegate) {\r\n\t            delegate(node, metadata);\r\n\t        }\r\n\t        if (commentHandler) {\r\n\t            commentHandler.visit(node, metadata);\r\n\t        }\r\n\t    };\r\n\t    var parserDelegate = (typeof delegate === 'function') ? proxyDelegate : null;\r\n\t    var collectComment = false;\r\n\t    if (options) {\r\n\t        collectComment = (typeof options.comment === 'boolean' && options.comment);\r\n\t        var attachComment = (typeof options.attachComment === 'boolean' && options.attachComment);\r\n\t        if (collectComment || attachComment) {\r\n\t            commentHandler = new comment_handler_1.CommentHandler();\r\n\t            commentHandler.attach = attachComment;\r\n\t            options.comment = true;\r\n\t            parserDelegate = proxyDelegate;\r\n\t        }\r\n\t    }\r\n\t    var isModule = false;\r\n\t    if (options && typeof options.sourceType === 'string') {\r\n\t        isModule = (options.sourceType === 'module');\r\n\t    }\r\n\t    var parser;\r\n\t    if (options && typeof options.jsx === 'boolean' && options.jsx) {\r\n\t        parser = new jsx_parser_1.JSXParser(code, options, parserDelegate);\r\n\t    }\r\n\t    else {\r\n\t        parser = new parser_1.Parser(code, options, parserDelegate);\r\n\t    }\r\n\t    var program = isModule ? parser.parseModule() : parser.parseScript();\r\n\t    var ast = program;\r\n\t    if (collectComment && commentHandler) {\r\n\t        ast.comments = commentHandler.comments;\r\n\t    }\r\n\t    if (parser.config.tokens) {\r\n\t        ast.tokens = parser.tokens;\r\n\t    }\r\n\t    if (parser.config.tolerant) {\r\n\t        ast.errors = parser.errorHandler.errors;\r\n\t    }\r\n\t    return ast;\r\n\t}\r\n\texports.parse = parse;\r\n\tfunction parseModule(code, options, delegate) {\r\n\t    var parsingOptions = options || {};\r\n\t    parsingOptions.sourceType = 'module';\r\n\t    return parse(code, parsingOptions, delegate);\r\n\t}\r\n\texports.parseModule = parseModule;\r\n\tfunction parseScript(code, options, delegate) {\r\n\t    var parsingOptions = options || {};\r\n\t    parsingOptions.sourceType = 'script';\r\n\t    return parse(code, parsingOptions, delegate);\r\n\t}\r\n\texports.parseScript = parseScript;\r\n\tfunction tokenize(code, options, delegate) {\r\n\t    var tokenizer = new tokenizer_1.Tokenizer(code, options);\r\n\t    var tokens = [];\r\n\t    try {\r\n\t        while (true) {\r\n\t            var token = tokenizer.getNextToken();\r\n\t            if (!token) {\r\n\t                break;\r\n\t            }\r\n\t            if (delegate) {\r\n\t                token = delegate(token);\r\n\t            }\r\n\t            tokens.push(token);\r\n\t        }\r\n\t    }\r\n\t    catch (e) {\r\n\t        tokenizer.errorHandler.tolerate(e);\r\n\t    }\r\n\t    if (tokenizer.errorHandler.tolerant) {\r\n\t        tokens.errors = tokenizer.errors();\r\n\t    }\r\n\t    return tokens;\r\n\t}\r\n\texports.tokenize = tokenize;\r\n\tvar syntax_1 = __webpack_require__(2);\r\n\texports.Syntax = syntax_1.Syntax;\r\n\t// Sync with *.json manifests.\r\n\texports.version = '4.0.0-dev';\r\n\r\n\r\n/***/ },\r\n/* 1 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\"use strict\";\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar syntax_1 = __webpack_require__(2);\r\n\tvar CommentHandler = /** @class */ (function () {\r\n\t    function CommentHandler() {\r\n\t        this.attach = false;\r\n\t        this.comments = [];\r\n\t        this.stack = [];\r\n\t        this.leading = [];\r\n\t        this.trailing = [];\r\n\t    }\r\n\t    CommentHandler.prototype.insertInnerComments = function (node, metadata) {\r\n\t        //  innnerComments for properties empty block\r\n\t        //  `function a() {/** comments **\\/}`\r\n\t        if (node.type === syntax_1.Syntax.BlockStatement && node.body.length === 0) {\r\n\t            var innerComments = [];\r\n\t            for (var i = this.leading.length - 1; i >= 0; --i) {\r\n\t                var entry = this.leading[i];\r\n\t                if (metadata.end.offset >= entry.start) {\r\n\t                    innerComments.unshift(entry.comment);\r\n\t                    this.leading.splice(i, 1);\r\n\t                    this.trailing.splice(i, 1);\r\n\t                }\r\n\t            }\r\n\t            if (innerComments.length) {\r\n\t                node.innerComments = innerComments;\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    CommentHandler.prototype.findTrailingComments = function (metadata) {\r\n\t        var trailingComments = [];\r\n\t        if (this.trailing.length > 0) {\r\n\t            for (var i = this.trailing.length - 1; i >= 0; --i) {\r\n\t                var entry = this.trailing[i];\r\n\t                if (entry.start >= metadata.end.offset) {\r\n\t                    trailingComments.unshift(entry.comment);\r\n\t                }\r\n\t            }\r\n\t            this.trailing.length = 0;\r\n\t            return trailingComments;\r\n\t        }\r\n\t        var last = this.stack[this.stack.length - 1];\r\n\t        if (last && last.node.trailingComments) {\r\n\t            var firstComment = last.node.trailingComments[0];\r\n\t            if (firstComment && firstComment.range[0] >= metadata.end.offset) {\r\n\t                trailingComments = last.node.trailingComments;\r\n\t                delete last.node.trailingComments;\r\n\t            }\r\n\t        }\r\n\t        return trailingComments;\r\n\t    };\r\n\t    CommentHandler.prototype.findLeadingComments = function (metadata) {\r\n\t        var leadingComments = [];\r\n\t        var target;\r\n\t        while (this.stack.length > 0) {\r\n\t            var entry = this.stack[this.stack.length - 1];\r\n\t            if (entry && entry.start >= metadata.start.offset) {\r\n\t                target = entry.node;\r\n\t                this.stack.pop();\r\n\t            }\r\n\t            else {\r\n\t                break;\r\n\t            }\r\n\t        }\r\n\t        if (target) {\r\n\t            var count = target.leadingComments ? target.leadingComments.length : 0;\r\n\t            for (var i = count - 1; i >= 0; --i) {\r\n\t                var comment = target.leadingComments[i];\r\n\t                if (comment.range[1] <= metadata.start.offset) {\r\n\t                    leadingComments.unshift(comment);\r\n\t                    target.leadingComments.splice(i, 1);\r\n\t                }\r\n\t            }\r\n\t            if (target.leadingComments && target.leadingComments.length === 0) {\r\n\t                delete target.leadingComments;\r\n\t            }\r\n\t            return leadingComments;\r\n\t        }\r\n\t        for (var i = this.leading.length - 1; i >= 0; --i) {\r\n\t            var entry = this.leading[i];\r\n\t            if (entry.start <= metadata.start.offset) {\r\n\t                leadingComments.unshift(entry.comment);\r\n\t                this.leading.splice(i, 1);\r\n\t            }\r\n\t        }\r\n\t        return leadingComments;\r\n\t    };\r\n\t    CommentHandler.prototype.visitNode = function (node, metadata) {\r\n\t        if (node.type === syntax_1.Syntax.Program && node.body.length > 0) {\r\n\t            return;\r\n\t        }\r\n\t        this.insertInnerComments(node, metadata);\r\n\t        var trailingComments = this.findTrailingComments(metadata);\r\n\t        var leadingComments = this.findLeadingComments(metadata);\r\n\t        if (leadingComments.length > 0) {\r\n\t            node.leadingComments = leadingComments;\r\n\t        }\r\n\t        if (trailingComments.length > 0) {\r\n\t            node.trailingComments = trailingComments;\r\n\t        }\r\n\t        this.stack.push({\r\n\t            node: node,\r\n\t            start: metadata.start.offset\r\n\t        });\r\n\t    };\r\n\t    CommentHandler.prototype.visitComment = function (node, metadata) {\r\n\t        var type = (node.type[0] === 'L') ? 'Line' : 'Block';\r\n\t        var comment = {\r\n\t            type: type,\r\n\t            value: node.value\r\n\t        };\r\n\t        if (node.range) {\r\n\t            comment.range = node.range;\r\n\t        }\r\n\t        if (node.loc) {\r\n\t            comment.loc = node.loc;\r\n\t        }\r\n\t        this.comments.push(comment);\r\n\t        if (this.attach) {\r\n\t            var entry = {\r\n\t                comment: {\r\n\t                    type: type,\r\n\t                    value: node.value,\r\n\t                    range: [metadata.start.offset, metadata.end.offset]\r\n\t                },\r\n\t                start: metadata.start.offset\r\n\t            };\r\n\t            if (node.loc) {\r\n\t                entry.comment.loc = node.loc;\r\n\t            }\r\n\t            node.type = type;\r\n\t            this.leading.push(entry);\r\n\t            this.trailing.push(entry);\r\n\t        }\r\n\t    };\r\n\t    CommentHandler.prototype.visit = function (node, metadata) {\r\n\t        if (node.type === 'LineComment') {\r\n\t            this.visitComment(node, metadata);\r\n\t        }\r\n\t        else if (node.type === 'BlockComment') {\r\n\t            this.visitComment(node, metadata);\r\n\t        }\r\n\t        else if (this.attach) {\r\n\t            this.visitNode(node, metadata);\r\n\t        }\r\n\t    };\r\n\t    return CommentHandler;\r\n\t}());\r\n\texports.CommentHandler = CommentHandler;\r\n\r\n\r\n/***/ },\r\n/* 2 */\r\n/***/ function(module, exports) {\r\n\r\n\t\"use strict\";\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\texports.Syntax = {\r\n\t    AssignmentExpression: 'AssignmentExpression',\r\n\t    AssignmentPattern: 'AssignmentPattern',\r\n\t    ArrayExpression: 'ArrayExpression',\r\n\t    ArrayPattern: 'ArrayPattern',\r\n\t    ArrowFunctionExpression: 'ArrowFunctionExpression',\r\n\t    AwaitExpression: 'AwaitExpression',\r\n\t    BlockStatement: 'BlockStatement',\r\n\t    BinaryExpression: 'BinaryExpression',\r\n\t    BreakStatement: 'BreakStatement',\r\n\t    CallExpression: 'CallExpression',\r\n\t    CatchClause: 'CatchClause',\r\n\t    ClassBody: 'ClassBody',\r\n\t    ClassDeclaration: 'ClassDeclaration',\r\n\t    ClassExpression: 'ClassExpression',\r\n\t    ConditionalExpression: 'ConditionalExpression',\r\n\t    ContinueStatement: 'ContinueStatement',\r\n\t    DoWhileStatement: 'DoWhileStatement',\r\n\t    DebuggerStatement: 'DebuggerStatement',\r\n\t    EmptyStatement: 'EmptyStatement',\r\n\t    ExportAllDeclaration: 'ExportAllDeclaration',\r\n\t    ExportDefaultDeclaration: 'ExportDefaultDeclaration',\r\n\t    ExportNamedDeclaration: 'ExportNamedDeclaration',\r\n\t    ExportSpecifier: 'ExportSpecifier',\r\n\t    ExpressionStatement: 'ExpressionStatement',\r\n\t    ForStatement: 'ForStatement',\r\n\t    ForOfStatement: 'ForOfStatement',\r\n\t    ForInStatement: 'ForInStatement',\r\n\t    FunctionDeclaration: 'FunctionDeclaration',\r\n\t    FunctionExpression: 'FunctionExpression',\r\n\t    Identifier: 'Identifier',\r\n\t    IfStatement: 'IfStatement',\r\n\t    Import: 'Import',\r\n\t    ImportDeclaration: 'ImportDeclaration',\r\n\t    ImportDefaultSpecifier: 'ImportDefaultSpecifier',\r\n\t    ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',\r\n\t    ImportSpecifier: 'ImportSpecifier',\r\n\t    Literal: 'Literal',\r\n\t    LabeledStatement: 'LabeledStatement',\r\n\t    LogicalExpression: 'LogicalExpression',\r\n\t    MemberExpression: 'MemberExpression',\r\n\t    MetaProperty: 'MetaProperty',\r\n\t    MethodDefinition: 'MethodDefinition',\r\n\t    NewExpression: 'NewExpression',\r\n\t    ObjectExpression: 'ObjectExpression',\r\n\t    ObjectPattern: 'ObjectPattern',\r\n\t    Program: 'Program',\r\n\t    Property: 'Property',\r\n\t    RestElement: 'RestElement',\r\n\t    ReturnStatement: 'ReturnStatement',\r\n\t    SequenceExpression: 'SequenceExpression',\r\n\t    SpreadElement: 'SpreadElement',\r\n\t    Super: 'Super',\r\n\t    SwitchCase: 'SwitchCase',\r\n\t    SwitchStatement: 'SwitchStatement',\r\n\t    TaggedTemplateExpression: 'TaggedTemplateExpression',\r\n\t    TemplateElement: 'TemplateElement',\r\n\t    TemplateLiteral: 'TemplateLiteral',\r\n\t    ThisExpression: 'ThisExpression',\r\n\t    ThrowStatement: 'ThrowStatement',\r\n\t    TryStatement: 'TryStatement',\r\n\t    UnaryExpression: 'UnaryExpression',\r\n\t    UpdateExpression: 'UpdateExpression',\r\n\t    VariableDeclaration: 'VariableDeclaration',\r\n\t    VariableDeclarator: 'VariableDeclarator',\r\n\t    WhileStatement: 'WhileStatement',\r\n\t    WithStatement: 'WithStatement',\r\n\t    YieldExpression: 'YieldExpression'\r\n\t};\r\n\r\n\r\n/***/ },\r\n/* 3 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\"use strict\";\r\n/* istanbul ignore next */\r\n\tvar __extends = (this && this.__extends) || (function () {\r\n\t    var extendStatics = function (d, b) {\r\n\t        extendStatics = Object.setPrototypeOf ||\r\n\t            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t        return extendStatics(d, b);\r\n\t    };\r\n\t    return function (d, b) {\r\n\t        extendStatics(d, b);\r\n\t        function __() { this.constructor = d; }\r\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t    };\r\n\t})();\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar character_1 = __webpack_require__(4);\r\n\tvar JSXNode = __webpack_require__(5);\r\n\tvar jsx_syntax_1 = __webpack_require__(6);\r\n\tvar Node = __webpack_require__(7);\r\n\tvar parser_1 = __webpack_require__(8);\r\n\tvar token_1 = __webpack_require__(13);\r\n\tvar xhtml_entities_1 = __webpack_require__(14);\r\n\ttoken_1.TokenName[100 /* Identifier */] = 'JSXIdentifier';\r\n\ttoken_1.TokenName[101 /* Text */] = 'JSXText';\r\n\t// Fully qualified element name, e.g. <svg:path> returns \"svg:path\"\r\n\tfunction getQualifiedElementName(elementName) {\r\n\t    var qualifiedName;\r\n\t    switch (elementName.type) {\r\n\t        case jsx_syntax_1.JSXSyntax.JSXIdentifier:\r\n\t            var id = elementName;\r\n\t            qualifiedName = id.name;\r\n\t            break;\r\n\t        case jsx_syntax_1.JSXSyntax.JSXNamespacedName:\r\n\t            var ns = elementName;\r\n\t            qualifiedName = getQualifiedElementName(ns.namespace) + ':' +\r\n\t                getQualifiedElementName(ns.name);\r\n\t            break;\r\n\t        case jsx_syntax_1.JSXSyntax.JSXMemberExpression:\r\n\t            var expr = elementName;\r\n\t            qualifiedName = getQualifiedElementName(expr.object) + '.' +\r\n\t                getQualifiedElementName(expr.property);\r\n\t            break;\r\n\t        /* istanbul ignore next */\r\n\t        default:\r\n\t            break;\r\n\t    }\r\n\t    return qualifiedName;\r\n\t}\r\n\tvar JSXParser = /** @class */ (function (_super) {\r\n\t    __extends(JSXParser, _super);\r\n\t    function JSXParser(code, options, delegate) {\r\n\t        return _super.call(this, code, options, delegate) || this;\r\n\t    }\r\n\t    JSXParser.prototype.parsePrimaryExpression = function () {\r\n\t        return this.match('<') ? this.parseJSXRoot() : _super.prototype.parsePrimaryExpression.call(this);\r\n\t    };\r\n\t    JSXParser.prototype.startJSX = function () {\r\n\t        // Unwind the scanner before the lookahead token.\r\n\t        this.scanner.index = this.startMarker.index;\r\n\t        this.scanner.lineNumber = this.startMarker.line;\r\n\t        this.scanner.lineStart = this.startMarker.index - this.startMarker.column;\r\n\t    };\r\n\t    JSXParser.prototype.finishJSX = function () {\r\n\t        // Prime the next lookahead.\r\n\t        this.nextToken();\r\n\t    };\r\n\t    JSXParser.prototype.reenterJSX = function () {\r\n\t        this.startJSX();\r\n\t        this.expectJSX('}');\r\n\t        // Pop the closing '}' added from the lookahead.\r\n\t        if (this.config.tokens) {\r\n\t            this.tokens.pop();\r\n\t        }\r\n\t    };\r\n\t    JSXParser.prototype.createJSXNode = function () {\r\n\t        this.collectComments();\r\n\t        return {\r\n\t            index: this.scanner.index,\r\n\t            line: this.scanner.lineNumber,\r\n\t            column: this.scanner.index - this.scanner.lineStart\r\n\t        };\r\n\t    };\r\n\t    JSXParser.prototype.createJSXChildNode = function () {\r\n\t        return {\r\n\t            index: this.scanner.index,\r\n\t            line: this.scanner.lineNumber,\r\n\t            column: this.scanner.index - this.scanner.lineStart\r\n\t        };\r\n\t    };\r\n\t    JSXParser.prototype.scanXHTMLEntity = function (quote) {\r\n\t        var result = '&';\r\n\t        var valid = true;\r\n\t        var terminated = false;\r\n\t        var numeric = false;\r\n\t        var hex = false;\r\n\t        while (!this.scanner.eof() && valid && !terminated) {\r\n\t            var ch = this.scanner.source[this.scanner.index];\r\n\t            if (ch === quote) {\r\n\t                break;\r\n\t            }\r\n\t            terminated = (ch === ';');\r\n\t            result += ch;\r\n\t            ++this.scanner.index;\r\n\t            if (!terminated) {\r\n\t                switch (result.length) {\r\n\t                    case 2:\r\n\t                        // e.g. '&#123;'\r\n\t                        numeric = (ch === '#');\r\n\t                        break;\r\n\t                    case 3:\r\n\t                        if (numeric) {\r\n\t                            // e.g. '&#x41;'\r\n\t                            hex = (ch === 'x');\r\n\t                            valid = hex || character_1.Character.isDecimalDigit(ch.charCodeAt(0));\r\n\t                            numeric = numeric && !hex;\r\n\t                        }\r\n\t                        break;\r\n\t                    default:\r\n\t                        valid = valid && !(numeric && !character_1.Character.isDecimalDigit(ch.charCodeAt(0)));\r\n\t                        valid = valid && !(hex && !character_1.Character.isHexDigit(ch.charCodeAt(0)));\r\n\t                        break;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        if (valid && terminated && result.length > 2) {\r\n\t            // e.g. '&#x41;' becomes just '#x41'\r\n\t            var str = result.substr(1, result.length - 2);\r\n\t            if (numeric && str.length > 1) {\r\n\t                result = String.fromCharCode(parseInt(str.substr(1), 10));\r\n\t            }\r\n\t            else if (hex && str.length > 2) {\r\n\t                result = String.fromCharCode(parseInt('0' + str.substr(1), 16));\r\n\t            }\r\n\t            else if (!numeric && !hex && xhtml_entities_1.XHTMLEntities[str]) {\r\n\t                result = xhtml_entities_1.XHTMLEntities[str];\r\n\t            }\r\n\t        }\r\n\t        return result;\r\n\t    };\r\n\t    // Scan the next JSX token. This replaces Scanner#lex when in JSX mode.\r\n\t    JSXParser.prototype.lexJSX = function () {\r\n\t        var cp = this.scanner.source.charCodeAt(this.scanner.index);\r\n\t        // < > / : = { }\r\n\t        if (cp === 60 || cp === 62 || cp === 47 || cp === 58 || cp === 61 || cp === 123 || cp === 125) {\r\n\t            var value = this.scanner.source[this.scanner.index++];\r\n\t            return {\r\n\t                type: 7 /* Punctuator */,\r\n\t                value: value,\r\n\t                lineNumber: this.scanner.lineNumber,\r\n\t                lineStart: this.scanner.lineStart,\r\n\t                start: this.scanner.index - 1,\r\n\t                end: this.scanner.index\r\n\t            };\r\n\t        }\r\n\t        // \" '\r\n\t        if (cp === 34 || cp === 39) {\r\n\t            var start = this.scanner.index;\r\n\t            var quote = this.scanner.source[this.scanner.index++];\r\n\t            var str = '';\r\n\t            while (!this.scanner.eof()) {\r\n\t                var ch = this.scanner.source[this.scanner.index++];\r\n\t                if (ch === quote) {\r\n\t                    break;\r\n\t                }\r\n\t                else if (ch === '&') {\r\n\t                    str += this.scanXHTMLEntity(quote);\r\n\t                }\r\n\t                else {\r\n\t                    str += ch;\r\n\t                }\r\n\t            }\r\n\t            return {\r\n\t                type: 8 /* StringLiteral */,\r\n\t                value: str,\r\n\t                lineNumber: this.scanner.lineNumber,\r\n\t                lineStart: this.scanner.lineStart,\r\n\t                start: start,\r\n\t                end: this.scanner.index\r\n\t            };\r\n\t        }\r\n\t        // ... or .\r\n\t        if (cp === 46) {\r\n\t            var n1 = this.scanner.source.charCodeAt(this.scanner.index + 1);\r\n\t            var n2 = this.scanner.source.charCodeAt(this.scanner.index + 2);\r\n\t            var value = (n1 === 46 && n2 === 46) ? '...' : '.';\r\n\t            var start = this.scanner.index;\r\n\t            this.scanner.index += value.length;\r\n\t            return {\r\n\t                type: 7 /* Punctuator */,\r\n\t                value: value,\r\n\t                lineNumber: this.scanner.lineNumber,\r\n\t                lineStart: this.scanner.lineStart,\r\n\t                start: start,\r\n\t                end: this.scanner.index\r\n\t            };\r\n\t        }\r\n\t        // `\r\n\t        if (cp === 96) {\r\n\t            // Only placeholder, since it will be rescanned as a real assignment expression.\r\n\t            return {\r\n\t                type: 10 /* Template */,\r\n\t                value: '',\r\n\t                lineNumber: this.scanner.lineNumber,\r\n\t                lineStart: this.scanner.lineStart,\r\n\t                start: this.scanner.index,\r\n\t                end: this.scanner.index\r\n\t            };\r\n\t        }\r\n\t        // Identifer can not contain backslash (char code 92).\r\n\t        if (character_1.Character.isIdentifierStart(cp) && (cp !== 92)) {\r\n\t            var start = this.scanner.index;\r\n\t            ++this.scanner.index;\r\n\t            while (!this.scanner.eof()) {\r\n\t                var ch = this.scanner.source.charCodeAt(this.scanner.index);\r\n\t                if (character_1.Character.isIdentifierPart(ch) && (ch !== 92)) {\r\n\t                    ++this.scanner.index;\r\n\t                }\r\n\t                else if (ch === 45) {\r\n\t                    // Hyphen (char code 45) can be part of an identifier.\r\n\t                    ++this.scanner.index;\r\n\t                }\r\n\t                else {\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\t            var id = this.scanner.source.slice(start, this.scanner.index);\r\n\t            return {\r\n\t                type: 100 /* Identifier */,\r\n\t                value: id,\r\n\t                lineNumber: this.scanner.lineNumber,\r\n\t                lineStart: this.scanner.lineStart,\r\n\t                start: start,\r\n\t                end: this.scanner.index\r\n\t            };\r\n\t        }\r\n\t        return this.scanner.lex();\r\n\t    };\r\n\t    JSXParser.prototype.nextJSXToken = function () {\r\n\t        this.collectComments();\r\n\t        this.startMarker.index = this.scanner.index;\r\n\t        this.startMarker.line = this.scanner.lineNumber;\r\n\t        this.startMarker.column = this.scanner.index - this.scanner.lineStart;\r\n\t        var token = this.lexJSX();\r\n\t        this.lastMarker.index = this.scanner.index;\r\n\t        this.lastMarker.line = this.scanner.lineNumber;\r\n\t        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\r\n\t        if (this.config.tokens) {\r\n\t            this.tokens.push(this.convertToken(token));\r\n\t        }\r\n\t        return token;\r\n\t    };\r\n\t    JSXParser.prototype.nextJSXText = function () {\r\n\t        this.startMarker.index = this.scanner.index;\r\n\t        this.startMarker.line = this.scanner.lineNumber;\r\n\t        this.startMarker.column = this.scanner.index - this.scanner.lineStart;\r\n\t        var start = this.scanner.index;\r\n\t        var text = '';\r\n\t        while (!this.scanner.eof()) {\r\n\t            var ch = this.scanner.source[this.scanner.index];\r\n\t            if (ch === '{' || ch === '<') {\r\n\t                break;\r\n\t            }\r\n\t            ++this.scanner.index;\r\n\t            text += ch;\r\n\t            if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\r\n\t                ++this.scanner.lineNumber;\r\n\t                if (ch === '\\r' && this.scanner.source[this.scanner.index] === '\\n') {\r\n\t                    ++this.scanner.index;\r\n\t                }\r\n\t                this.scanner.lineStart = this.scanner.index;\r\n\t            }\r\n\t        }\r\n\t        this.lastMarker.index = this.scanner.index;\r\n\t        this.lastMarker.line = this.scanner.lineNumber;\r\n\t        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\r\n\t        var token = {\r\n\t            type: 101 /* Text */,\r\n\t            value: text,\r\n\t            lineNumber: this.scanner.lineNumber,\r\n\t            lineStart: this.scanner.lineStart,\r\n\t            start: start,\r\n\t            end: this.scanner.index\r\n\t        };\r\n\t        if ((text.length > 0) && this.config.tokens) {\r\n\t            this.tokens.push(this.convertToken(token));\r\n\t        }\r\n\t        return token;\r\n\t    };\r\n\t    JSXParser.prototype.peekJSXToken = function () {\r\n\t        var state = this.scanner.saveState();\r\n\t        this.scanner.scanComments();\r\n\t        var next = this.lexJSX();\r\n\t        this.scanner.restoreState(state);\r\n\t        return next;\r\n\t    };\r\n\t    // Expect the next JSX token to match the specified punctuator.\r\n\t    // If not, an exception will be thrown.\r\n\t    JSXParser.prototype.expectJSX = function (value) {\r\n\t        var token = this.nextJSXToken();\r\n\t        if (token.type !== 7 /* Punctuator */ || token.value !== value) {\r\n\t            this.throwUnexpectedToken(token);\r\n\t        }\r\n\t    };\r\n\t    // Return true if the next JSX token matches the specified punctuator.\r\n\t    JSXParser.prototype.matchJSX = function (value) {\r\n\t        var next = this.peekJSXToken();\r\n\t        return next.type === 7 /* Punctuator */ && next.value === value;\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXIdentifier = function () {\r\n\t        var node = this.createJSXNode();\r\n\t        var token = this.nextJSXToken();\r\n\t        if (token.type !== 100 /* Identifier */) {\r\n\t            this.throwUnexpectedToken(token);\r\n\t        }\r\n\t        return this.finalize(node, new JSXNode.JSXIdentifier(token.value));\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXElementName = function () {\r\n\t        var node = this.createJSXNode();\r\n\t        var elementName = this.parseJSXIdentifier();\r\n\t        if (this.matchJSX(':')) {\r\n\t            var namespace = elementName;\r\n\t            this.expectJSX(':');\r\n\t            var name_1 = this.parseJSXIdentifier();\r\n\t            elementName = this.finalize(node, new JSXNode.JSXNamespacedName(namespace, name_1));\r\n\t        }\r\n\t        else if (this.matchJSX('.')) {\r\n\t            while (this.matchJSX('.')) {\r\n\t                var object = elementName;\r\n\t                this.expectJSX('.');\r\n\t                var property = this.parseJSXIdentifier();\r\n\t                elementName = this.finalize(node, new JSXNode.JSXMemberExpression(object, property));\r\n\t            }\r\n\t        }\r\n\t        return elementName;\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXAttributeName = function () {\r\n\t        var node = this.createJSXNode();\r\n\t        var attributeName;\r\n\t        var identifier = this.parseJSXIdentifier();\r\n\t        if (this.matchJSX(':')) {\r\n\t            var namespace = identifier;\r\n\t            this.expectJSX(':');\r\n\t            var name_2 = this.parseJSXIdentifier();\r\n\t            attributeName = this.finalize(node, new JSXNode.JSXNamespacedName(namespace, name_2));\r\n\t        }\r\n\t        else {\r\n\t            attributeName = identifier;\r\n\t        }\r\n\t        return attributeName;\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXStringLiteralAttribute = function () {\r\n\t        var node = this.createJSXNode();\r\n\t        var token = this.nextJSXToken();\r\n\t        if (token.type !== 8 /* StringLiteral */) {\r\n\t            this.throwUnexpectedToken(token);\r\n\t        }\r\n\t        var raw = this.getTokenRaw(token);\r\n\t        return this.finalize(node, new Node.Literal(token.value, raw));\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXExpressionAttribute = function () {\r\n\t        var node = this.createJSXNode();\r\n\t        this.expectJSX('{');\r\n\t        this.finishJSX();\r\n\t        if (this.match('}')) {\r\n\t            this.tolerateError('JSX attributes must only be assigned a non-empty expression');\r\n\t        }\r\n\t        var expression = this.parseAssignmentExpression();\r\n\t        this.reenterJSX();\r\n\t        return this.finalize(node, new JSXNode.JSXExpressionContainer(expression));\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXAttributeValue = function () {\r\n\t        return this.matchJSX('{') ? this.parseJSXExpressionAttribute() :\r\n\t            this.matchJSX('<') ? this.parseJSXElement() : this.parseJSXStringLiteralAttribute();\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXNameValueAttribute = function () {\r\n\t        var node = this.createJSXNode();\r\n\t        var name = this.parseJSXAttributeName();\r\n\t        var value = null;\r\n\t        if (this.matchJSX('=')) {\r\n\t            this.expectJSX('=');\r\n\t            value = this.parseJSXAttributeValue();\r\n\t        }\r\n\t        return this.finalize(node, new JSXNode.JSXAttribute(name, value));\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXSpreadAttribute = function () {\r\n\t        var node = this.createJSXNode();\r\n\t        this.expectJSX('{');\r\n\t        this.expectJSX('...');\r\n\t        this.finishJSX();\r\n\t        var argument = this.parseAssignmentExpression();\r\n\t        this.reenterJSX();\r\n\t        return this.finalize(node, new JSXNode.JSXSpreadAttribute(argument));\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXAttributes = function () {\r\n\t        var attributes = [];\r\n\t        while (!this.matchJSX('/') && !this.matchJSX('>')) {\r\n\t            var attribute = this.matchJSX('{') ? this.parseJSXSpreadAttribute() :\r\n\t                this.parseJSXNameValueAttribute();\r\n\t            attributes.push(attribute);\r\n\t        }\r\n\t        return attributes;\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXOpeningElement = function () {\r\n\t        var node = this.createJSXNode();\r\n\t        this.expectJSX('<');\r\n\t        var name = this.parseJSXElementName();\r\n\t        var attributes = this.parseJSXAttributes();\r\n\t        var selfClosing = this.matchJSX('/');\r\n\t        if (selfClosing) {\r\n\t            this.expectJSX('/');\r\n\t        }\r\n\t        this.expectJSX('>');\r\n\t        return this.finalize(node, new JSXNode.JSXOpeningElement(name, selfClosing, attributes));\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXBoundaryElement = function () {\r\n\t        var node = this.createJSXNode();\r\n\t        this.expectJSX('<');\r\n\t        if (this.matchJSX('/')) {\r\n\t            this.expectJSX('/');\r\n\t            var elementName = this.parseJSXElementName();\r\n\t            this.expectJSX('>');\r\n\t            return this.finalize(node, new JSXNode.JSXClosingElement(elementName));\r\n\t        }\r\n\t        var name = this.parseJSXElementName();\r\n\t        var attributes = this.parseJSXAttributes();\r\n\t        var selfClosing = this.matchJSX('/');\r\n\t        if (selfClosing) {\r\n\t            this.expectJSX('/');\r\n\t        }\r\n\t        this.expectJSX('>');\r\n\t        return this.finalize(node, new JSXNode.JSXOpeningElement(name, selfClosing, attributes));\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXEmptyExpression = function () {\r\n\t        var node = this.createJSXChildNode();\r\n\t        this.collectComments();\r\n\t        this.lastMarker.index = this.scanner.index;\r\n\t        this.lastMarker.line = this.scanner.lineNumber;\r\n\t        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\r\n\t        return this.finalize(node, new JSXNode.JSXEmptyExpression());\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXExpressionContainer = function () {\r\n\t        var node = this.createJSXNode();\r\n\t        this.expectJSX('{');\r\n\t        var expression;\r\n\t        if (this.matchJSX('}')) {\r\n\t            expression = this.parseJSXEmptyExpression();\r\n\t            this.expectJSX('}');\r\n\t        }\r\n\t        else {\r\n\t            this.finishJSX();\r\n\t            expression = this.parseAssignmentExpression();\r\n\t            this.reenterJSX();\r\n\t        }\r\n\t        return this.finalize(node, new JSXNode.JSXExpressionContainer(expression));\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXChildren = function () {\r\n\t        var children = [];\r\n\t        while (!this.scanner.eof()) {\r\n\t            var node = this.createJSXChildNode();\r\n\t            var token = this.nextJSXText();\r\n\t            if (token.start < token.end) {\r\n\t                var raw = this.getTokenRaw(token);\r\n\t                var child = this.finalize(node, new JSXNode.JSXText(token.value, raw));\r\n\t                children.push(child);\r\n\t            }\r\n\t            if (this.scanner.source[this.scanner.index] === '{') {\r\n\t                var container = this.parseJSXExpressionContainer();\r\n\t                children.push(container);\r\n\t            }\r\n\t            else {\r\n\t                break;\r\n\t            }\r\n\t        }\r\n\t        return children;\r\n\t    };\r\n\t    JSXParser.prototype.parseComplexJSXElement = function (el) {\r\n\t        var stack = [];\r\n\t        while (!this.scanner.eof()) {\r\n\t            el.children = el.children.concat(this.parseJSXChildren());\r\n\t            var node = this.createJSXChildNode();\r\n\t            var element = this.parseJSXBoundaryElement();\r\n\t            if (element.type === jsx_syntax_1.JSXSyntax.JSXOpeningElement) {\r\n\t                var opening = element;\r\n\t                if (opening.selfClosing) {\r\n\t                    var child = this.finalize(node, new JSXNode.JSXElement(opening, [], null));\r\n\t                    el.children.push(child);\r\n\t                }\r\n\t                else {\r\n\t                    stack.push(el);\r\n\t                    el = { node: node, opening: opening, closing: null, children: [] };\r\n\t                }\r\n\t            }\r\n\t            if (element.type === jsx_syntax_1.JSXSyntax.JSXClosingElement) {\r\n\t                el.closing = element;\r\n\t                var open_1 = getQualifiedElementName(el.opening.name);\r\n\t                var close_1 = getQualifiedElementName(el.closing.name);\r\n\t                if (open_1 !== close_1) {\r\n\t                    this.tolerateError('Expected corresponding JSX closing tag for %0', open_1);\r\n\t                }\r\n\t                if (stack.length > 0) {\r\n\t                    var child = this.finalize(el.node, new JSXNode.JSXElement(el.opening, el.children, el.closing));\r\n\t                    el = stack[stack.length - 1];\r\n\t                    el.children.push(child);\r\n\t                    stack.pop();\r\n\t                }\r\n\t                else {\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        return el;\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXElement = function () {\r\n\t        var node = this.createJSXNode();\r\n\t        var opening = this.parseJSXOpeningElement();\r\n\t        var children = [];\r\n\t        var closing = null;\r\n\t        if (!opening.selfClosing) {\r\n\t            var el = this.parseComplexJSXElement({ node: node, opening: opening, closing: closing, children: children });\r\n\t            children = el.children;\r\n\t            closing = el.closing;\r\n\t        }\r\n\t        return this.finalize(node, new JSXNode.JSXElement(opening, children, closing));\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXRoot = function () {\r\n\t        // Pop the opening '<' added from the lookahead.\r\n\t        if (this.config.tokens) {\r\n\t            this.tokens.pop();\r\n\t        }\r\n\t        this.startJSX();\r\n\t        var element = this.parseJSXElement();\r\n\t        this.finishJSX();\r\n\t        return element;\r\n\t    };\r\n\t    JSXParser.prototype.isStartOfExpression = function () {\r\n\t        return _super.prototype.isStartOfExpression.call(this) || this.match('<');\r\n\t    };\r\n\t    return JSXParser;\r\n\t}(parser_1.Parser));\r\n\texports.JSXParser = JSXParser;\r\n\r\n/***/ },\r\n/* 4 */\r\n/***/ function(module, exports) {\r\n\r\n\t\"use strict\";\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t// See also tools/generate-unicode-regex.js.\r\n\tvar Regex = {\r\n\t    // Unicode v12.1.0 NonAsciiIdentifierStart:\r\n\t    NonAsciiIdentifierStart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEF\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7C6\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB67\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD23\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF45\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD44\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC5F\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDEB8\\uDF00-\\uDF1A]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCDF\\uDCFF\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDEE0-\\uDEF2]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE7F\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD4E\\uDEC0-\\uDEEB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43\\uDD4B]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]/,\r\n\t    // Unicode v12.1.0 NonAsciiIdentifierPart:\r\n\t    // eslint-disable-next-line no-misleading-character-class\r\n\t    NonAsciiIdentifierPart: /[\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u07FD\\u0800-\\u082D\\u0840-\\u085B\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D3-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u09FC\\u09FE\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9-\\u0AFF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D00-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CD0-\\u1CD2\\u1CD4-\\u1CFA\\u1D00-\\u1DF9\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEF\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7C6\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB67\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD27\\uDD30-\\uDD39\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF50\\uDFE0-\\uDFF6]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD44-\\uDD46\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDC9-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3B-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC5E\\uDC5F\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDC00-\\uDC3A\\uDCA0-\\uDCE9\\uDCFF\\uDDA0-\\uDDA7\\uDDAA-\\uDDD7\\uDDDA-\\uDDE1\\uDDE3\\uDDE4\\uDE00-\\uDE3E\\uDE47\\uDE50-\\uDE99\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC59\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD36\\uDD3A\\uDD3C\\uDD3D\\uDD3F-\\uDD47\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD8E\\uDD90\\uDD91\\uDD93-\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF6]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE7F\\uDF00-\\uDF4A\\uDF4F-\\uDF87\\uDF8F-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A\\uDD00-\\uDD2C\\uDD30-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDEC0-\\uDEF9]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6\\uDD00-\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/\r\n\t};\r\n\texports.Character = {\r\n\t    fromCodePoint: function (cp) {\r\n\t        return (cp < 0x10000) ? String.fromCharCode(cp) :\r\n\t            String.fromCharCode(0xD800 + ((cp - 0x10000) >> 10)) +\r\n\t                String.fromCharCode(0xDC00 + ((cp - 0x10000) & 1023));\r\n\t    },\r\n\t    // https://tc39.github.io/ecma262/#sec-white-space\r\n\t    isWhiteSpace: function (cp) {\r\n\t        return (cp === 0x20) || (cp === 0x09) || (cp === 0x0B) || (cp === 0x0C) || (cp === 0xA0) ||\r\n\t            (cp >= 0x1680 && [0x1680, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(cp) >= 0);\r\n\t    },\r\n\t    // https://tc39.github.io/ecma262/#sec-line-terminators\r\n\t    isLineTerminator: function (cp) {\r\n\t        return (cp === 0x0A) || (cp === 0x0D) || (cp === 0x2028) || (cp === 0x2029);\r\n\t    },\r\n\t    // https://tc39.github.io/ecma262/#sec-names-and-keywords\r\n\t    isIdentifierStart: function (cp) {\r\n\t        return (cp === 0x24) || (cp === 0x5F) || // $ (dollar) and _ (underscore)\r\n\t            (cp >= 0x41 && cp <= 0x5A) || // A..Z\r\n\t            (cp >= 0x61 && cp <= 0x7A) || // a..z\r\n\t            (cp === 0x5C) || // \\ (backslash)\r\n\t            ((cp >= 0x80) && Regex.NonAsciiIdentifierStart.test(exports.Character.fromCodePoint(cp)));\r\n\t    },\r\n\t    isIdentifierPart: function (cp) {\r\n\t        return (cp === 0x24) || (cp === 0x5F) || // $ (dollar) and _ (underscore)\r\n\t            (cp >= 0x41 && cp <= 0x5A) || // A..Z\r\n\t            (cp >= 0x61 && cp <= 0x7A) || // a..z\r\n\t            (cp >= 0x30 && cp <= 0x39) || // 0..9\r\n\t            (cp === 0x5C) || // \\ (backslash)\r\n\t            ((cp >= 0x80) && Regex.NonAsciiIdentifierPart.test(exports.Character.fromCodePoint(cp)));\r\n\t    },\r\n\t    // https://tc39.github.io/ecma262/#sec-literals-numeric-literals\r\n\t    isDecimalDigit: function (cp) {\r\n\t        return (cp >= 0x30 && cp <= 0x39); // 0..9\r\n\t    },\r\n\t    isHexDigit: function (cp) {\r\n\t        return (cp >= 0x30 && cp <= 0x39) || // 0..9\r\n\t            (cp >= 0x41 && cp <= 0x46) || // A..F\r\n\t            (cp >= 0x61 && cp <= 0x66); // a..f\r\n\t    },\r\n\t    isOctalDigit: function (cp) {\r\n\t        return (cp >= 0x30 && cp <= 0x37); // 0..7\r\n\t    }\r\n\t};\r\n\r\n\r\n/***/ },\r\n/* 5 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\"use strict\";\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar jsx_syntax_1 = __webpack_require__(6);\r\n\tvar JSXClosingElement = /** @class */ (function () {\r\n\t    function JSXClosingElement(name) {\r\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXClosingElement;\r\n\t        this.name = name;\r\n\t    }\r\n\t    return JSXClosingElement;\r\n\t}());\r\n\texports.JSXClosingElement = JSXClosingElement;\r\n\tvar JSXElement = /** @class */ (function () {\r\n\t    function JSXElement(openingElement, children, closingElement) {\r\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXElement;\r\n\t        this.openingElement = openingElement;\r\n\t        this.children = children;\r\n\t        this.closingElement = closingElement;\r\n\t    }\r\n\t    return JSXElement;\r\n\t}());\r\n\texports.JSXElement = JSXElement;\r\n\tvar JSXEmptyExpression = /** @class */ (function () {\r\n\t    function JSXEmptyExpression() {\r\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXEmptyExpression;\r\n\t    }\r\n\t    return JSXEmptyExpression;\r\n\t}());\r\n\texports.JSXEmptyExpression = JSXEmptyExpression;\r\n\tvar JSXExpressionContainer = /** @class */ (function () {\r\n\t    function JSXExpressionContainer(expression) {\r\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXExpressionContainer;\r\n\t        this.expression = expression;\r\n\t    }\r\n\t    return JSXExpressionContainer;\r\n\t}());\r\n\texports.JSXExpressionContainer = JSXExpressionContainer;\r\n\tvar JSXIdentifier = /** @class */ (function () {\r\n\t    function JSXIdentifier(name) {\r\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXIdentifier;\r\n\t        this.name = name;\r\n\t    }\r\n\t    return JSXIdentifier;\r\n\t}());\r\n\texports.JSXIdentifier = JSXIdentifier;\r\n\tvar JSXMemberExpression = /** @class */ (function () {\r\n\t    function JSXMemberExpression(object, property) {\r\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXMemberExpression;\r\n\t        this.object = object;\r\n\t        this.property = property;\r\n\t    }\r\n\t    return JSXMemberExpression;\r\n\t}());\r\n\texports.JSXMemberExpression = JSXMemberExpression;\r\n\tvar JSXAttribute = /** @class */ (function () {\r\n\t    function JSXAttribute(name, value) {\r\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXAttribute;\r\n\t        this.name = name;\r\n\t        this.value = value;\r\n\t    }\r\n\t    return JSXAttribute;\r\n\t}());\r\n\texports.JSXAttribute = JSXAttribute;\r\n\tvar JSXNamespacedName = /** @class */ (function () {\r\n\t    function JSXNamespacedName(namespace, name) {\r\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXNamespacedName;\r\n\t        this.namespace = namespace;\r\n\t        this.name = name;\r\n\t    }\r\n\t    return JSXNamespacedName;\r\n\t}());\r\n\texports.JSXNamespacedName = JSXNamespacedName;\r\n\tvar JSXOpeningElement = /** @class */ (function () {\r\n\t    function JSXOpeningElement(name, selfClosing, attributes) {\r\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXOpeningElement;\r\n\t        this.name = name;\r\n\t        this.selfClosing = selfClosing;\r\n\t        this.attributes = attributes;\r\n\t    }\r\n\t    return JSXOpeningElement;\r\n\t}());\r\n\texports.JSXOpeningElement = JSXOpeningElement;\r\n\tvar JSXSpreadAttribute = /** @class */ (function () {\r\n\t    function JSXSpreadAttribute(argument) {\r\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXSpreadAttribute;\r\n\t        this.argument = argument;\r\n\t    }\r\n\t    return JSXSpreadAttribute;\r\n\t}());\r\n\texports.JSXSpreadAttribute = JSXSpreadAttribute;\r\n\tvar JSXText = /** @class */ (function () {\r\n\t    function JSXText(value, raw) {\r\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXText;\r\n\t        this.value = value;\r\n\t        this.raw = raw;\r\n\t    }\r\n\t    return JSXText;\r\n\t}());\r\n\texports.JSXText = JSXText;\r\n\r\n\r\n/***/ },\r\n/* 6 */\r\n/***/ function(module, exports) {\r\n\r\n\t\"use strict\";\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\texports.JSXSyntax = {\r\n\t    JSXAttribute: 'JSXAttribute',\r\n\t    JSXClosingElement: 'JSXClosingElement',\r\n\t    JSXElement: 'JSXElement',\r\n\t    JSXEmptyExpression: 'JSXEmptyExpression',\r\n\t    JSXExpressionContainer: 'JSXExpressionContainer',\r\n\t    JSXIdentifier: 'JSXIdentifier',\r\n\t    JSXMemberExpression: 'JSXMemberExpression',\r\n\t    JSXNamespacedName: 'JSXNamespacedName',\r\n\t    JSXOpeningElement: 'JSXOpeningElement',\r\n\t    JSXSpreadAttribute: 'JSXSpreadAttribute',\r\n\t    JSXText: 'JSXText'\r\n\t};\r\n\r\n\r\n/***/ },\r\n/* 7 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\"use strict\";\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar syntax_1 = __webpack_require__(2);\r\n\tvar ArrayExpression = /** @class */ (function () {\r\n\t    function ArrayExpression(elements) {\r\n\t        this.type = syntax_1.Syntax.ArrayExpression;\r\n\t        this.elements = elements;\r\n\t    }\r\n\t    return ArrayExpression;\r\n\t}());\r\n\texports.ArrayExpression = ArrayExpression;\r\n\tvar ArrayPattern = /** @class */ (function () {\r\n\t    function ArrayPattern(elements) {\r\n\t        this.type = syntax_1.Syntax.ArrayPattern;\r\n\t        this.elements = elements;\r\n\t    }\r\n\t    return ArrayPattern;\r\n\t}());\r\n\texports.ArrayPattern = ArrayPattern;\r\n\tvar ArrowFunctionExpression = /** @class */ (function () {\r\n\t    function ArrowFunctionExpression(params, body, expression) {\r\n\t        this.type = syntax_1.Syntax.ArrowFunctionExpression;\r\n\t        this.id = null;\r\n\t        this.params = params;\r\n\t        this.body = body;\r\n\t        this.generator = false;\r\n\t        this.expression = expression;\r\n\t        this.async = false;\r\n\t    }\r\n\t    return ArrowFunctionExpression;\r\n\t}());\r\n\texports.ArrowFunctionExpression = ArrowFunctionExpression;\r\n\tvar AssignmentExpression = /** @class */ (function () {\r\n\t    function AssignmentExpression(operator, left, right) {\r\n\t        this.type = syntax_1.Syntax.AssignmentExpression;\r\n\t        this.operator = operator;\r\n\t        this.left = left;\r\n\t        this.right = right;\r\n\t    }\r\n\t    return AssignmentExpression;\r\n\t}());\r\n\texports.AssignmentExpression = AssignmentExpression;\r\n\tvar AssignmentPattern = /** @class */ (function () {\r\n\t    function AssignmentPattern(left, right) {\r\n\t        this.type = syntax_1.Syntax.AssignmentPattern;\r\n\t        this.left = left;\r\n\t        this.right = right;\r\n\t    }\r\n\t    return AssignmentPattern;\r\n\t}());\r\n\texports.AssignmentPattern = AssignmentPattern;\r\n\tvar AsyncArrowFunctionExpression = /** @class */ (function () {\r\n\t    function AsyncArrowFunctionExpression(params, body, expression) {\r\n\t        this.type = syntax_1.Syntax.ArrowFunctionExpression;\r\n\t        this.id = null;\r\n\t        this.params = params;\r\n\t        this.body = body;\r\n\t        this.generator = false;\r\n\t        this.expression = expression;\r\n\t        this.async = true;\r\n\t    }\r\n\t    return AsyncArrowFunctionExpression;\r\n\t}());\r\n\texports.AsyncArrowFunctionExpression = AsyncArrowFunctionExpression;\r\n\tvar AsyncFunctionDeclaration = /** @class */ (function () {\r\n\t    function AsyncFunctionDeclaration(id, params, body) {\r\n\t        this.type = syntax_1.Syntax.FunctionDeclaration;\r\n\t        this.id = id;\r\n\t        this.params = params;\r\n\t        this.body = body;\r\n\t        this.generator = false;\r\n\t        this.expression = false;\r\n\t        this.async = true;\r\n\t    }\r\n\t    return AsyncFunctionDeclaration;\r\n\t}());\r\n\texports.AsyncFunctionDeclaration = AsyncFunctionDeclaration;\r\n\tvar AsyncFunctionExpression = /** @class */ (function () {\r\n\t    function AsyncFunctionExpression(id, params, body) {\r\n\t        this.type = syntax_1.Syntax.FunctionExpression;\r\n\t        this.id = id;\r\n\t        this.params = params;\r\n\t        this.body = body;\r\n\t        this.generator = false;\r\n\t        this.expression = false;\r\n\t        this.async = true;\r\n\t    }\r\n\t    return AsyncFunctionExpression;\r\n\t}());\r\n\texports.AsyncFunctionExpression = AsyncFunctionExpression;\r\n\tvar AwaitExpression = /** @class */ (function () {\r\n\t    function AwaitExpression(argument) {\r\n\t        this.type = syntax_1.Syntax.AwaitExpression;\r\n\t        this.argument = argument;\r\n\t    }\r\n\t    return AwaitExpression;\r\n\t}());\r\n\texports.AwaitExpression = AwaitExpression;\r\n\tvar BinaryExpression = /** @class */ (function () {\r\n\t    function BinaryExpression(operator, left, right) {\r\n\t        var logical = (operator === '||' || operator === '&&');\r\n\t        this.type = logical ? syntax_1.Syntax.LogicalExpression : syntax_1.Syntax.BinaryExpression;\r\n\t        this.operator = operator;\r\n\t        this.left = left;\r\n\t        this.right = right;\r\n\t    }\r\n\t    return BinaryExpression;\r\n\t}());\r\n\texports.BinaryExpression = BinaryExpression;\r\n\tvar BlockStatement = /** @class */ (function () {\r\n\t    function BlockStatement(body) {\r\n\t        this.type = syntax_1.Syntax.BlockStatement;\r\n\t        this.body = body;\r\n\t    }\r\n\t    return BlockStatement;\r\n\t}());\r\n\texports.BlockStatement = BlockStatement;\r\n\tvar BreakStatement = /** @class */ (function () {\r\n\t    function BreakStatement(label) {\r\n\t        this.type = syntax_1.Syntax.BreakStatement;\r\n\t        this.label = label;\r\n\t    }\r\n\t    return BreakStatement;\r\n\t}());\r\n\texports.BreakStatement = BreakStatement;\r\n\tvar CallExpression = /** @class */ (function () {\r\n\t    function CallExpression(callee, args) {\r\n\t        this.type = syntax_1.Syntax.CallExpression;\r\n\t        this.callee = callee;\r\n\t        this.arguments = args;\r\n\t    }\r\n\t    return CallExpression;\r\n\t}());\r\n\texports.CallExpression = CallExpression;\r\n\tvar CatchClause = /** @class */ (function () {\r\n\t    function CatchClause(param, body) {\r\n\t        this.type = syntax_1.Syntax.CatchClause;\r\n\t        this.param = param;\r\n\t        this.body = body;\r\n\t    }\r\n\t    return CatchClause;\r\n\t}());\r\n\texports.CatchClause = CatchClause;\r\n\tvar ClassBody = /** @class */ (function () {\r\n\t    function ClassBody(body) {\r\n\t        this.type = syntax_1.Syntax.ClassBody;\r\n\t        this.body = body;\r\n\t    }\r\n\t    return ClassBody;\r\n\t}());\r\n\texports.ClassBody = ClassBody;\r\n\tvar ClassDeclaration = /** @class */ (function () {\r\n\t    function ClassDeclaration(id, superClass, body) {\r\n\t        this.type = syntax_1.Syntax.ClassDeclaration;\r\n\t        this.id = id;\r\n\t        this.superClass = superClass;\r\n\t        this.body = body;\r\n\t    }\r\n\t    return ClassDeclaration;\r\n\t}());\r\n\texports.ClassDeclaration = ClassDeclaration;\r\n\tvar ClassExpression = /** @class */ (function () {\r\n\t    function ClassExpression(id, superClass, body) {\r\n\t        this.type = syntax_1.Syntax.ClassExpression;\r\n\t        this.id = id;\r\n\t        this.superClass = superClass;\r\n\t        this.body = body;\r\n\t    }\r\n\t    return ClassExpression;\r\n\t}());\r\n\texports.ClassExpression = ClassExpression;\r\n\tvar ComputedMemberExpression = /** @class */ (function () {\r\n\t    function ComputedMemberExpression(object, property) {\r\n\t        this.type = syntax_1.Syntax.MemberExpression;\r\n\t        this.computed = true;\r\n\t        this.object = object;\r\n\t        this.property = property;\r\n\t    }\r\n\t    return ComputedMemberExpression;\r\n\t}());\r\n\texports.ComputedMemberExpression = ComputedMemberExpression;\r\n\tvar ConditionalExpression = /** @class */ (function () {\r\n\t    function ConditionalExpression(test, consequent, alternate) {\r\n\t        this.type = syntax_1.Syntax.ConditionalExpression;\r\n\t        this.test = test;\r\n\t        this.consequent = consequent;\r\n\t        this.alternate = alternate;\r\n\t    }\r\n\t    return ConditionalExpression;\r\n\t}());\r\n\texports.ConditionalExpression = ConditionalExpression;\r\n\tvar ContinueStatement = /** @class */ (function () {\r\n\t    function ContinueStatement(label) {\r\n\t        this.type = syntax_1.Syntax.ContinueStatement;\r\n\t        this.label = label;\r\n\t    }\r\n\t    return ContinueStatement;\r\n\t}());\r\n\texports.ContinueStatement = ContinueStatement;\r\n\tvar DebuggerStatement = /** @class */ (function () {\r\n\t    function DebuggerStatement() {\r\n\t        this.type = syntax_1.Syntax.DebuggerStatement;\r\n\t    }\r\n\t    return DebuggerStatement;\r\n\t}());\r\n\texports.DebuggerStatement = DebuggerStatement;\r\n\tvar Directive = /** @class */ (function () {\r\n\t    function Directive(expression, directive) {\r\n\t        this.type = syntax_1.Syntax.ExpressionStatement;\r\n\t        this.expression = expression;\r\n\t        this.directive = directive;\r\n\t    }\r\n\t    return Directive;\r\n\t}());\r\n\texports.Directive = Directive;\r\n\tvar DoWhileStatement = /** @class */ (function () {\r\n\t    function DoWhileStatement(body, test) {\r\n\t        this.type = syntax_1.Syntax.DoWhileStatement;\r\n\t        this.body = body;\r\n\t        this.test = test;\r\n\t    }\r\n\t    return DoWhileStatement;\r\n\t}());\r\n\texports.DoWhileStatement = DoWhileStatement;\r\n\tvar EmptyStatement = /** @class */ (function () {\r\n\t    function EmptyStatement() {\r\n\t        this.type = syntax_1.Syntax.EmptyStatement;\r\n\t    }\r\n\t    return EmptyStatement;\r\n\t}());\r\n\texports.EmptyStatement = EmptyStatement;\r\n\tvar ExportAllDeclaration = /** @class */ (function () {\r\n\t    function ExportAllDeclaration(source) {\r\n\t        this.type = syntax_1.Syntax.ExportAllDeclaration;\r\n\t        this.source = source;\r\n\t    }\r\n\t    return ExportAllDeclaration;\r\n\t}());\r\n\texports.ExportAllDeclaration = ExportAllDeclaration;\r\n\tvar ExportDefaultDeclaration = /** @class */ (function () {\r\n\t    function ExportDefaultDeclaration(declaration) {\r\n\t        this.type = syntax_1.Syntax.ExportDefaultDeclaration;\r\n\t        this.declaration = declaration;\r\n\t    }\r\n\t    return ExportDefaultDeclaration;\r\n\t}());\r\n\texports.ExportDefaultDeclaration = ExportDefaultDeclaration;\r\n\tvar ExportNamedDeclaration = /** @class */ (function () {\r\n\t    function ExportNamedDeclaration(declaration, specifiers, source) {\r\n\t        this.type = syntax_1.Syntax.ExportNamedDeclaration;\r\n\t        this.declaration = declaration;\r\n\t        this.specifiers = specifiers;\r\n\t        this.source = source;\r\n\t    }\r\n\t    return ExportNamedDeclaration;\r\n\t}());\r\n\texports.ExportNamedDeclaration = ExportNamedDeclaration;\r\n\tvar ExportSpecifier = /** @class */ (function () {\r\n\t    function ExportSpecifier(local, exported) {\r\n\t        this.type = syntax_1.Syntax.ExportSpecifier;\r\n\t        this.exported = exported;\r\n\t        this.local = local;\r\n\t    }\r\n\t    return ExportSpecifier;\r\n\t}());\r\n\texports.ExportSpecifier = ExportSpecifier;\r\n\tvar ExpressionStatement = /** @class */ (function () {\r\n\t    function ExpressionStatement(expression) {\r\n\t        this.type = syntax_1.Syntax.ExpressionStatement;\r\n\t        this.expression = expression;\r\n\t    }\r\n\t    return ExpressionStatement;\r\n\t}());\r\n\texports.ExpressionStatement = ExpressionStatement;\r\n\tvar ForInStatement = /** @class */ (function () {\r\n\t    function ForInStatement(left, right, body) {\r\n\t        this.type = syntax_1.Syntax.ForInStatement;\r\n\t        this.left = left;\r\n\t        this.right = right;\r\n\t        this.body = body;\r\n\t        this.each = false;\r\n\t    }\r\n\t    return ForInStatement;\r\n\t}());\r\n\texports.ForInStatement = ForInStatement;\r\n\tvar ForOfStatement = /** @class */ (function () {\r\n\t    function ForOfStatement(left, right, body) {\r\n\t        this.type = syntax_1.Syntax.ForOfStatement;\r\n\t        this.left = left;\r\n\t        this.right = right;\r\n\t        this.body = body;\r\n\t    }\r\n\t    return ForOfStatement;\r\n\t}());\r\n\texports.ForOfStatement = ForOfStatement;\r\n\tvar ForStatement = /** @class */ (function () {\r\n\t    function ForStatement(init, test, update, body) {\r\n\t        this.type = syntax_1.Syntax.ForStatement;\r\n\t        this.init = init;\r\n\t        this.test = test;\r\n\t        this.update = update;\r\n\t        this.body = body;\r\n\t    }\r\n\t    return ForStatement;\r\n\t}());\r\n\texports.ForStatement = ForStatement;\r\n\tvar FunctionDeclaration = /** @class */ (function () {\r\n\t    function FunctionDeclaration(id, params, body, generator) {\r\n\t        this.type = syntax_1.Syntax.FunctionDeclaration;\r\n\t        this.id = id;\r\n\t        this.params = params;\r\n\t        this.body = body;\r\n\t        this.generator = generator;\r\n\t        this.expression = false;\r\n\t        this.async = false;\r\n\t    }\r\n\t    return FunctionDeclaration;\r\n\t}());\r\n\texports.FunctionDeclaration = FunctionDeclaration;\r\n\tvar FunctionExpression = /** @class */ (function () {\r\n\t    function FunctionExpression(id, params, body, generator) {\r\n\t        this.type = syntax_1.Syntax.FunctionExpression;\r\n\t        this.id = id;\r\n\t        this.params = params;\r\n\t        this.body = body;\r\n\t        this.generator = generator;\r\n\t        this.expression = false;\r\n\t        this.async = false;\r\n\t    }\r\n\t    return FunctionExpression;\r\n\t}());\r\n\texports.FunctionExpression = FunctionExpression;\r\n\tvar Identifier = /** @class */ (function () {\r\n\t    function Identifier(name) {\r\n\t        this.type = syntax_1.Syntax.Identifier;\r\n\t        this.name = name;\r\n\t    }\r\n\t    return Identifier;\r\n\t}());\r\n\texports.Identifier = Identifier;\r\n\tvar IfStatement = /** @class */ (function () {\r\n\t    function IfStatement(test, consequent, alternate) {\r\n\t        this.type = syntax_1.Syntax.IfStatement;\r\n\t        this.test = test;\r\n\t        this.consequent = consequent;\r\n\t        this.alternate = alternate;\r\n\t    }\r\n\t    return IfStatement;\r\n\t}());\r\n\texports.IfStatement = IfStatement;\r\n\tvar Import = /** @class */ (function () {\r\n\t    function Import() {\r\n\t        this.type = syntax_1.Syntax.Import;\r\n\t    }\r\n\t    return Import;\r\n\t}());\r\n\texports.Import = Import;\r\n\tvar ImportDeclaration = /** @class */ (function () {\r\n\t    function ImportDeclaration(specifiers, source) {\r\n\t        this.type = syntax_1.Syntax.ImportDeclaration;\r\n\t        this.specifiers = specifiers;\r\n\t        this.source = source;\r\n\t    }\r\n\t    return ImportDeclaration;\r\n\t}());\r\n\texports.ImportDeclaration = ImportDeclaration;\r\n\tvar ImportDefaultSpecifier = /** @class */ (function () {\r\n\t    function ImportDefaultSpecifier(local) {\r\n\t        this.type = syntax_1.Syntax.ImportDefaultSpecifier;\r\n\t        this.local = local;\r\n\t    }\r\n\t    return ImportDefaultSpecifier;\r\n\t}());\r\n\texports.ImportDefaultSpecifier = ImportDefaultSpecifier;\r\n\tvar ImportNamespaceSpecifier = /** @class */ (function () {\r\n\t    function ImportNamespaceSpecifier(local) {\r\n\t        this.type = syntax_1.Syntax.ImportNamespaceSpecifier;\r\n\t        this.local = local;\r\n\t    }\r\n\t    return ImportNamespaceSpecifier;\r\n\t}());\r\n\texports.ImportNamespaceSpecifier = ImportNamespaceSpecifier;\r\n\tvar ImportSpecifier = /** @class */ (function () {\r\n\t    function ImportSpecifier(local, imported) {\r\n\t        this.type = syntax_1.Syntax.ImportSpecifier;\r\n\t        this.local = local;\r\n\t        this.imported = imported;\r\n\t    }\r\n\t    return ImportSpecifier;\r\n\t}());\r\n\texports.ImportSpecifier = ImportSpecifier;\r\n\tvar LabeledStatement = /** @class */ (function () {\r\n\t    function LabeledStatement(label, body) {\r\n\t        this.type = syntax_1.Syntax.LabeledStatement;\r\n\t        this.label = label;\r\n\t        this.body = body;\r\n\t    }\r\n\t    return LabeledStatement;\r\n\t}());\r\n\texports.LabeledStatement = LabeledStatement;\r\n\tvar Literal = /** @class */ (function () {\r\n\t    function Literal(value, raw) {\r\n\t        this.type = syntax_1.Syntax.Literal;\r\n\t        this.value = value;\r\n\t        this.raw = raw;\r\n\t    }\r\n\t    return Literal;\r\n\t}());\r\n\texports.Literal = Literal;\r\n\tvar MetaProperty = /** @class */ (function () {\r\n\t    function MetaProperty(meta, property) {\r\n\t        this.type = syntax_1.Syntax.MetaProperty;\r\n\t        this.meta = meta;\r\n\t        this.property = property;\r\n\t    }\r\n\t    return MetaProperty;\r\n\t}());\r\n\texports.MetaProperty = MetaProperty;\r\n\tvar MethodDefinition = /** @class */ (function () {\r\n\t    function MethodDefinition(key, computed, value, kind, isStatic) {\r\n\t        this.type = syntax_1.Syntax.MethodDefinition;\r\n\t        this.key = key;\r\n\t        this.computed = computed;\r\n\t        this.value = value;\r\n\t        this.kind = kind;\r\n\t        this.static = isStatic;\r\n\t    }\r\n\t    return MethodDefinition;\r\n\t}());\r\n\texports.MethodDefinition = MethodDefinition;\r\n\tvar Module = /** @class */ (function () {\r\n\t    function Module(body) {\r\n\t        this.type = syntax_1.Syntax.Program;\r\n\t        this.body = body;\r\n\t        this.sourceType = 'module';\r\n\t    }\r\n\t    return Module;\r\n\t}());\r\n\texports.Module = Module;\r\n\tvar NewExpression = /** @class */ (function () {\r\n\t    function NewExpression(callee, args) {\r\n\t        this.type = syntax_1.Syntax.NewExpression;\r\n\t        this.callee = callee;\r\n\t        this.arguments = args;\r\n\t    }\r\n\t    return NewExpression;\r\n\t}());\r\n\texports.NewExpression = NewExpression;\r\n\tvar ObjectExpression = /** @class */ (function () {\r\n\t    function ObjectExpression(properties) {\r\n\t        this.type = syntax_1.Syntax.ObjectExpression;\r\n\t        this.properties = properties;\r\n\t    }\r\n\t    return ObjectExpression;\r\n\t}());\r\n\texports.ObjectExpression = ObjectExpression;\r\n\tvar ObjectPattern = /** @class */ (function () {\r\n\t    function ObjectPattern(properties) {\r\n\t        this.type = syntax_1.Syntax.ObjectPattern;\r\n\t        this.properties = properties;\r\n\t    }\r\n\t    return ObjectPattern;\r\n\t}());\r\n\texports.ObjectPattern = ObjectPattern;\r\n\tvar Property = /** @class */ (function () {\r\n\t    function Property(kind, key, computed, value, method, shorthand) {\r\n\t        this.type = syntax_1.Syntax.Property;\r\n\t        this.key = key;\r\n\t        this.computed = computed;\r\n\t        this.value = value;\r\n\t        this.kind = kind;\r\n\t        this.method = method;\r\n\t        this.shorthand = shorthand;\r\n\t    }\r\n\t    return Property;\r\n\t}());\r\n\texports.Property = Property;\r\n\tvar RegexLiteral = /** @class */ (function () {\r\n\t    function RegexLiteral(value, raw, pattern, flags) {\r\n\t        this.type = syntax_1.Syntax.Literal;\r\n\t        this.value = value;\r\n\t        this.raw = raw;\r\n\t        this.regex = { pattern: pattern, flags: flags };\r\n\t    }\r\n\t    return RegexLiteral;\r\n\t}());\r\n\texports.RegexLiteral = RegexLiteral;\r\n\tvar RestElement = /** @class */ (function () {\r\n\t    function RestElement(argument) {\r\n\t        this.type = syntax_1.Syntax.RestElement;\r\n\t        this.argument = argument;\r\n\t    }\r\n\t    return RestElement;\r\n\t}());\r\n\texports.RestElement = RestElement;\r\n\tvar ReturnStatement = /** @class */ (function () {\r\n\t    function ReturnStatement(argument) {\r\n\t        this.type = syntax_1.Syntax.ReturnStatement;\r\n\t        this.argument = argument;\r\n\t    }\r\n\t    return ReturnStatement;\r\n\t}());\r\n\texports.ReturnStatement = ReturnStatement;\r\n\tvar Script = /** @class */ (function () {\r\n\t    function Script(body) {\r\n\t        this.type = syntax_1.Syntax.Program;\r\n\t        this.body = body;\r\n\t        this.sourceType = 'script';\r\n\t    }\r\n\t    return Script;\r\n\t}());\r\n\texports.Script = Script;\r\n\tvar SequenceExpression = /** @class */ (function () {\r\n\t    function SequenceExpression(expressions) {\r\n\t        this.type = syntax_1.Syntax.SequenceExpression;\r\n\t        this.expressions = expressions;\r\n\t    }\r\n\t    return SequenceExpression;\r\n\t}());\r\n\texports.SequenceExpression = SequenceExpression;\r\n\tvar SpreadElement = /** @class */ (function () {\r\n\t    function SpreadElement(argument) {\r\n\t        this.type = syntax_1.Syntax.SpreadElement;\r\n\t        this.argument = argument;\r\n\t    }\r\n\t    return SpreadElement;\r\n\t}());\r\n\texports.SpreadElement = SpreadElement;\r\n\tvar StaticMemberExpression = /** @class */ (function () {\r\n\t    function StaticMemberExpression(object, property) {\r\n\t        this.type = syntax_1.Syntax.MemberExpression;\r\n\t        this.computed = false;\r\n\t        this.object = object;\r\n\t        this.property = property;\r\n\t    }\r\n\t    return StaticMemberExpression;\r\n\t}());\r\n\texports.StaticMemberExpression = StaticMemberExpression;\r\n\tvar Super = /** @class */ (function () {\r\n\t    function Super() {\r\n\t        this.type = syntax_1.Syntax.Super;\r\n\t    }\r\n\t    return Super;\r\n\t}());\r\n\texports.Super = Super;\r\n\tvar SwitchCase = /** @class */ (function () {\r\n\t    function SwitchCase(test, consequent) {\r\n\t        this.type = syntax_1.Syntax.SwitchCase;\r\n\t        this.test = test;\r\n\t        this.consequent = consequent;\r\n\t    }\r\n\t    return SwitchCase;\r\n\t}());\r\n\texports.SwitchCase = SwitchCase;\r\n\tvar SwitchStatement = /** @class */ (function () {\r\n\t    function SwitchStatement(discriminant, cases) {\r\n\t        this.type = syntax_1.Syntax.SwitchStatement;\r\n\t        this.discriminant = discriminant;\r\n\t        this.cases = cases;\r\n\t    }\r\n\t    return SwitchStatement;\r\n\t}());\r\n\texports.SwitchStatement = SwitchStatement;\r\n\tvar TaggedTemplateExpression = /** @class */ (function () {\r\n\t    function TaggedTemplateExpression(tag, quasi) {\r\n\t        this.type = syntax_1.Syntax.TaggedTemplateExpression;\r\n\t        this.tag = tag;\r\n\t        this.quasi = quasi;\r\n\t    }\r\n\t    return TaggedTemplateExpression;\r\n\t}());\r\n\texports.TaggedTemplateExpression = TaggedTemplateExpression;\r\n\tvar TemplateElement = /** @class */ (function () {\r\n\t    function TemplateElement(value, tail) {\r\n\t        this.type = syntax_1.Syntax.TemplateElement;\r\n\t        this.value = value;\r\n\t        this.tail = tail;\r\n\t    }\r\n\t    return TemplateElement;\r\n\t}());\r\n\texports.TemplateElement = TemplateElement;\r\n\tvar TemplateLiteral = /** @class */ (function () {\r\n\t    function TemplateLiteral(quasis, expressions) {\r\n\t        this.type = syntax_1.Syntax.TemplateLiteral;\r\n\t        this.quasis = quasis;\r\n\t        this.expressions = expressions;\r\n\t    }\r\n\t    return TemplateLiteral;\r\n\t}());\r\n\texports.TemplateLiteral = TemplateLiteral;\r\n\tvar ThisExpression = /** @class */ (function () {\r\n\t    function ThisExpression() {\r\n\t        this.type = syntax_1.Syntax.ThisExpression;\r\n\t    }\r\n\t    return ThisExpression;\r\n\t}());\r\n\texports.ThisExpression = ThisExpression;\r\n\tvar ThrowStatement = /** @class */ (function () {\r\n\t    function ThrowStatement(argument) {\r\n\t        this.type = syntax_1.Syntax.ThrowStatement;\r\n\t        this.argument = argument;\r\n\t    }\r\n\t    return ThrowStatement;\r\n\t}());\r\n\texports.ThrowStatement = ThrowStatement;\r\n\tvar TryStatement = /** @class */ (function () {\r\n\t    function TryStatement(block, handler, finalizer) {\r\n\t        this.type = syntax_1.Syntax.TryStatement;\r\n\t        this.block = block;\r\n\t        this.handler = handler;\r\n\t        this.finalizer = finalizer;\r\n\t    }\r\n\t    return TryStatement;\r\n\t}());\r\n\texports.TryStatement = TryStatement;\r\n\tvar UnaryExpression = /** @class */ (function () {\r\n\t    function UnaryExpression(operator, argument) {\r\n\t        this.type = syntax_1.Syntax.UnaryExpression;\r\n\t        this.operator = operator;\r\n\t        this.argument = argument;\r\n\t        this.prefix = true;\r\n\t    }\r\n\t    return UnaryExpression;\r\n\t}());\r\n\texports.UnaryExpression = UnaryExpression;\r\n\tvar UpdateExpression = /** @class */ (function () {\r\n\t    function UpdateExpression(operator, argument, prefix) {\r\n\t        this.type = syntax_1.Syntax.UpdateExpression;\r\n\t        this.operator = operator;\r\n\t        this.argument = argument;\r\n\t        this.prefix = prefix;\r\n\t    }\r\n\t    return UpdateExpression;\r\n\t}());\r\n\texports.UpdateExpression = UpdateExpression;\r\n\tvar VariableDeclaration = /** @class */ (function () {\r\n\t    function VariableDeclaration(declarations, kind) {\r\n\t        this.type = syntax_1.Syntax.VariableDeclaration;\r\n\t        this.declarations = declarations;\r\n\t        this.kind = kind;\r\n\t    }\r\n\t    return VariableDeclaration;\r\n\t}());\r\n\texports.VariableDeclaration = VariableDeclaration;\r\n\tvar VariableDeclarator = /** @class */ (function () {\r\n\t    function VariableDeclarator(id, init) {\r\n\t        this.type = syntax_1.Syntax.VariableDeclarator;\r\n\t        this.id = id;\r\n\t        this.init = init;\r\n\t    }\r\n\t    return VariableDeclarator;\r\n\t}());\r\n\texports.VariableDeclarator = VariableDeclarator;\r\n\tvar WhileStatement = /** @class */ (function () {\r\n\t    function WhileStatement(test, body) {\r\n\t        this.type = syntax_1.Syntax.WhileStatement;\r\n\t        this.test = test;\r\n\t        this.body = body;\r\n\t    }\r\n\t    return WhileStatement;\r\n\t}());\r\n\texports.WhileStatement = WhileStatement;\r\n\tvar WithStatement = /** @class */ (function () {\r\n\t    function WithStatement(object, body) {\r\n\t        this.type = syntax_1.Syntax.WithStatement;\r\n\t        this.object = object;\r\n\t        this.body = body;\r\n\t    }\r\n\t    return WithStatement;\r\n\t}());\r\n\texports.WithStatement = WithStatement;\r\n\tvar YieldExpression = /** @class */ (function () {\r\n\t    function YieldExpression(argument, delegate) {\r\n\t        this.type = syntax_1.Syntax.YieldExpression;\r\n\t        this.argument = argument;\r\n\t        this.delegate = delegate;\r\n\t    }\r\n\t    return YieldExpression;\r\n\t}());\r\n\texports.YieldExpression = YieldExpression;\r\n\r\n\r\n/***/ },\r\n/* 8 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\"use strict\";\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar assert_1 = __webpack_require__(9);\r\n\tvar error_handler_1 = __webpack_require__(10);\r\n\tvar messages_1 = __webpack_require__(11);\r\n\tvar Node = __webpack_require__(7);\r\n\tvar scanner_1 = __webpack_require__(12);\r\n\tvar syntax_1 = __webpack_require__(2);\r\n\tvar token_1 = __webpack_require__(13);\r\n\tvar ArrowParameterPlaceHolder = 'ArrowParameterPlaceHolder';\r\n\t/* eslint-disable @typescript-eslint/unbound-method */\r\n\tvar Parser = /** @class */ (function () {\r\n\t    function Parser(code, options, delegate) {\r\n\t        if (options === void 0) { options = {}; }\r\n\t        this.config = {\r\n\t            range: (typeof options.range === 'boolean') && options.range,\r\n\t            loc: (typeof options.loc === 'boolean') && options.loc,\r\n\t            source: null,\r\n\t            tokens: (typeof options.tokens === 'boolean') && options.tokens,\r\n\t            comment: (typeof options.comment === 'boolean') && options.comment,\r\n\t            tolerant: (typeof options.tolerant === 'boolean') && options.tolerant\r\n\t        };\r\n\t        if (this.config.loc && options.source && options.source !== null) {\r\n\t            this.config.source = String(options.source);\r\n\t        }\r\n\t        this.delegate = delegate;\r\n\t        this.errorHandler = new error_handler_1.ErrorHandler();\r\n\t        this.errorHandler.tolerant = this.config.tolerant;\r\n\t        this.scanner = new scanner_1.Scanner(code, this.errorHandler);\r\n\t        this.scanner.trackComment = this.config.comment;\r\n\t        this.operatorPrecedence = {\r\n\t            ')': 0,\r\n\t            ';': 0,\r\n\t            ',': 0,\r\n\t            '=': 0,\r\n\t            ']': 0,\r\n\t            '||': 1,\r\n\t            '&&': 2,\r\n\t            '|': 3,\r\n\t            '^': 4,\r\n\t            '&': 5,\r\n\t            '==': 6,\r\n\t            '!=': 6,\r\n\t            '===': 6,\r\n\t            '!==': 6,\r\n\t            '<': 7,\r\n\t            '>': 7,\r\n\t            '<=': 7,\r\n\t            '>=': 7,\r\n\t            '<<': 8,\r\n\t            '>>': 8,\r\n\t            '>>>': 8,\r\n\t            '+': 9,\r\n\t            '-': 9,\r\n\t            '*': 11,\r\n\t            '/': 11,\r\n\t            '%': 11\r\n\t        };\r\n\t        this.lookahead = {\r\n\t            type: 2 /* EOF */,\r\n\t            value: '',\r\n\t            lineNumber: this.scanner.lineNumber,\r\n\t            lineStart: 0,\r\n\t            start: 0,\r\n\t            end: 0\r\n\t        };\r\n\t        this.hasLineTerminator = false;\r\n\t        this.context = {\r\n\t            isModule: false,\r\n\t            await: false,\r\n\t            allowIn: true,\r\n\t            allowStrictDirective: true,\r\n\t            allowYield: true,\r\n\t            firstCoverInitializedNameError: null,\r\n\t            isAssignmentTarget: false,\r\n\t            isBindingElement: false,\r\n\t            inFunctionBody: false,\r\n\t            inIteration: false,\r\n\t            inSwitch: false,\r\n\t            labelSet: {},\r\n\t            strict: false\r\n\t        };\r\n\t        this.tokens = [];\r\n\t        this.startMarker = {\r\n\t            index: 0,\r\n\t            line: this.scanner.lineNumber,\r\n\t            column: 0\r\n\t        };\r\n\t        this.lastMarker = {\r\n\t            index: 0,\r\n\t            line: this.scanner.lineNumber,\r\n\t            column: 0\r\n\t        };\r\n\t        this.nextToken();\r\n\t        this.lastMarker = {\r\n\t            index: this.scanner.index,\r\n\t            line: this.scanner.lineNumber,\r\n\t            column: this.scanner.index - this.scanner.lineStart\r\n\t        };\r\n\t    }\r\n\t    Parser.prototype.throwError = function (messageFormat) {\r\n\t        var values = [];\r\n\t        for (var _i = 1; _i < arguments.length; _i++) {\r\n\t            values[_i - 1] = arguments[_i];\r\n\t        }\r\n\t        var args = values.slice();\r\n\t        var msg = messageFormat.replace(/%(\\d)/g, function (whole, idx) {\r\n\t            assert_1.assert(idx < args.length, 'Message reference must be in range');\r\n\t            return args[idx];\r\n\t        });\r\n\t        var index = this.lastMarker.index;\r\n\t        var line = this.lastMarker.line;\r\n\t        var column = this.lastMarker.column + 1;\r\n\t        throw this.errorHandler.createError(index, line, column, msg);\r\n\t    };\r\n\t    Parser.prototype.tolerateError = function (messageFormat) {\r\n\t        var values = [];\r\n\t        for (var _i = 1; _i < arguments.length; _i++) {\r\n\t            values[_i - 1] = arguments[_i];\r\n\t        }\r\n\t        var args = values.slice();\r\n\t        var msg = messageFormat.replace(/%(\\d)/g, function (whole, idx) {\r\n\t            assert_1.assert(idx < args.length, 'Message reference must be in range');\r\n\t            return args[idx];\r\n\t        });\r\n\t        var index = this.lastMarker.index;\r\n\t        var line = this.scanner.lineNumber;\r\n\t        var column = this.lastMarker.column + 1;\r\n\t        this.errorHandler.tolerateError(index, line, column, msg);\r\n\t    };\r\n\t    // Throw an exception because of the token.\r\n\t    Parser.prototype.unexpectedTokenError = function (token, message) {\r\n\t        var msg = message || messages_1.Messages.UnexpectedToken;\r\n\t        var value;\r\n\t        if (token) {\r\n\t            if (!message) {\r\n\t                msg = (token.type === 2 /* EOF */) ? messages_1.Messages.UnexpectedEOS :\r\n\t                    (token.type === 3 /* Identifier */) ? messages_1.Messages.UnexpectedIdentifier :\r\n\t                        (token.type === 6 /* NumericLiteral */) ? messages_1.Messages.UnexpectedNumber :\r\n\t                            (token.type === 8 /* StringLiteral */) ? messages_1.Messages.UnexpectedString :\r\n\t                                (token.type === 10 /* Template */) ? messages_1.Messages.UnexpectedTemplate :\r\n\t                                    messages_1.Messages.UnexpectedToken;\r\n\t                if (token.type === 4 /* Keyword */) {\r\n\t                    if (this.scanner.isFutureReservedWord(token.value)) {\r\n\t                        msg = messages_1.Messages.UnexpectedReserved;\r\n\t                    }\r\n\t                    else if (this.context.strict && this.scanner.isStrictModeReservedWord(token.value)) {\r\n\t                        msg = messages_1.Messages.StrictReservedWord;\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            value = token.value;\r\n\t        }\r\n\t        else {\r\n\t            value = 'ILLEGAL';\r\n\t        }\r\n\t        msg = msg.replace('%0', value);\r\n\t        if (token && typeof token.lineNumber === 'number') {\r\n\t            var index = token.start;\r\n\t            var line = token.lineNumber;\r\n\t            var lastMarkerLineStart = this.lastMarker.index - this.lastMarker.column;\r\n\t            var column = token.start - lastMarkerLineStart + 1;\r\n\t            return this.errorHandler.createError(index, line, column, msg);\r\n\t        }\r\n\t        else {\r\n\t            var index = this.lastMarker.index;\r\n\t            var line = this.lastMarker.line;\r\n\t            var column = this.lastMarker.column + 1;\r\n\t            return this.errorHandler.createError(index, line, column, msg);\r\n\t        }\r\n\t    };\r\n\t    Parser.prototype.throwUnexpectedToken = function (token, message) {\r\n\t        throw this.unexpectedTokenError(token, message);\r\n\t    };\r\n\t    Parser.prototype.tolerateUnexpectedToken = function (token, message) {\r\n\t        this.errorHandler.tolerate(this.unexpectedTokenError(token, message));\r\n\t    };\r\n\t    Parser.prototype.collectComments = function () {\r\n\t        if (!this.config.comment) {\r\n\t            this.scanner.scanComments();\r\n\t        }\r\n\t        else {\r\n\t            var comments = this.scanner.scanComments();\r\n\t            if (comments.length > 0 && this.delegate) {\r\n\t                for (var i = 0; i < comments.length; ++i) {\r\n\t                    var e = comments[i];\r\n\t                    var node = {\r\n\t                        type: e.multiLine ? 'BlockComment' : 'LineComment',\r\n\t                        value: this.scanner.source.slice(e.slice[0], e.slice[1])\r\n\t                    };\r\n\t                    if (this.config.range) {\r\n\t                        node.range = e.range;\r\n\t                    }\r\n\t                    if (this.config.loc) {\r\n\t                        node.loc = e.loc;\r\n\t                    }\r\n\t                    var metadata = {\r\n\t                        start: {\r\n\t                            line: e.loc.start.line,\r\n\t                            column: e.loc.start.column,\r\n\t                            offset: e.range[0]\r\n\t                        },\r\n\t                        end: {\r\n\t                            line: e.loc.end.line,\r\n\t                            column: e.loc.end.column,\r\n\t                            offset: e.range[1]\r\n\t                        }\r\n\t                    };\r\n\t                    this.delegate(node, metadata);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    // From internal representation to an external structure\r\n\t    Parser.prototype.getTokenRaw = function (token) {\r\n\t        return this.scanner.source.slice(token.start, token.end);\r\n\t    };\r\n\t    Parser.prototype.convertToken = function (token) {\r\n\t        var t = {\r\n\t            type: token_1.TokenName[token.type],\r\n\t            value: this.getTokenRaw(token)\r\n\t        };\r\n\t        if (this.config.range) {\r\n\t            t.range = [token.start, token.end];\r\n\t        }\r\n\t        if (this.config.loc) {\r\n\t            t.loc = {\r\n\t                start: {\r\n\t                    line: this.startMarker.line,\r\n\t                    column: this.startMarker.column\r\n\t                },\r\n\t                end: {\r\n\t                    line: this.scanner.lineNumber,\r\n\t                    column: this.scanner.index - this.scanner.lineStart\r\n\t                }\r\n\t            };\r\n\t        }\r\n\t        if (token.type === 9 /* RegularExpression */) {\r\n\t            var pattern = token.pattern;\r\n\t            var flags = token.flags;\r\n\t            t.regex = { pattern: pattern, flags: flags };\r\n\t        }\r\n\t        return t;\r\n\t    };\r\n\t    Parser.prototype.nextToken = function () {\r\n\t        var token = this.lookahead;\r\n\t        this.lastMarker.index = this.scanner.index;\r\n\t        this.lastMarker.line = this.scanner.lineNumber;\r\n\t        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\r\n\t        this.collectComments();\r\n\t        if (this.scanner.index !== this.startMarker.index) {\r\n\t            this.startMarker.index = this.scanner.index;\r\n\t            this.startMarker.line = this.scanner.lineNumber;\r\n\t            this.startMarker.column = this.scanner.index - this.scanner.lineStart;\r\n\t        }\r\n\t\t\tvar next = this.scanner.lex();\r\n\t        this.hasLineTerminator = (token.lineNumber !== next.lineNumber);\r\n\t        if (next && this.context.strict && next.type === 3 /* Identifier */) {\r\n\t            if (this.scanner.isStrictModeReservedWord(next.value)) {\r\n\t                next.type = 4 /* Keyword */;\r\n\t            }\r\n\t        }\r\n\t        this.lookahead = next;\r\n\t        if (this.config.tokens && next.type !== 2 /* EOF */) {\r\n\t            this.tokens.push(this.convertToken(next));\r\n\t        }\r\n\t        return token;\r\n\t    };\r\n\t    Parser.prototype.nextRegexToken = function () {\r\n\t\t\tthis.collectComments();\r\n\t        var token = this.scanner.scanRegExp();\r\n\t        if (this.config.tokens) {\r\n\t            // Pop the previous token, '/' or '/='\r\n\t            // This is added from the lookahead token.\r\n\t            this.tokens.pop();\r\n\t            this.tokens.push(this.convertToken(token));\r\n\t        }\r\n\t        // Prime the next lookahead.\r\n\t        this.lookahead = token;\r\n\t        this.nextToken();\r\n\t        return token;\r\n\t    };\r\n\t    Parser.prototype.createNode = function () {\r\n\t        return {\r\n\t            index: this.startMarker.index,\r\n\t            line: this.startMarker.line,\r\n\t            column: this.startMarker.column\r\n\t        };\r\n\t    };\r\n\t    Parser.prototype.startNode = function (token, lastLineStart) {\r\n\t        if (lastLineStart === void 0) { lastLineStart = 0; }\r\n\t        var column = token.start - token.lineStart;\r\n\t        var line = token.lineNumber;\r\n\t        if (column < 0) {\r\n\t            column += lastLineStart;\r\n\t            line--;\r\n\t        }\r\n\t        return {\r\n\t            index: token.start,\r\n\t            line: line,\r\n\t            column: column\r\n\t        };\r\n\t    };\r\n\t    Parser.prototype.finalize = function (marker, node) {\r\n\t        if (this.config.range) {\r\n\t            node.range = [marker.index, this.lastMarker.index];\r\n\t        }\r\n\t        if (this.config.loc) {\r\n\t            node.loc = {\r\n\t                start: {\r\n\t                    line: marker.line,\r\n\t                    column: marker.column,\r\n\t                },\r\n\t                end: {\r\n\t                    line: this.lastMarker.line,\r\n\t                    column: this.lastMarker.column\r\n\t                }\r\n\t            };\r\n\t            if (this.config.source) {\r\n\t                node.loc.source = this.config.source;\r\n\t            }\r\n\t        }\r\n\t        if (this.delegate) {\r\n\t            var metadata = {\r\n\t                start: {\r\n\t                    line: marker.line,\r\n\t                    column: marker.column,\r\n\t                    offset: marker.index\r\n\t                },\r\n\t                end: {\r\n\t                    line: this.lastMarker.line,\r\n\t                    column: this.lastMarker.column,\r\n\t                    offset: this.lastMarker.index\r\n\t                }\r\n\t            };\r\n\t            this.delegate(node, metadata);\r\n\t        }\r\n\t        return node;\r\n\t    };\r\n\t    // Expect the next token to match the specified punctuator.\r\n\t    // If not, an exception will be thrown.\r\n\t    Parser.prototype.expect = function (value) {\r\n\t        var token = this.nextToken();\r\n\t        if (token.type !== 7 /* Punctuator */ || token.value !== value) {\r\n\t            this.throwUnexpectedToken(token);\r\n\t        }\r\n\t    };\r\n\t    // Quietly expect a comma when in tolerant mode, otherwise delegates to expect().\r\n\t    Parser.prototype.expectCommaSeparator = function () {\r\n\t        if (this.config.tolerant) {\r\n\t            var token = this.lookahead;\r\n\t            if (token.type === 7 /* Punctuator */ && token.value === ',') {\r\n\t                this.nextToken();\r\n\t            }\r\n\t            else if (token.type === 7 /* Punctuator */ && token.value === ';') {\r\n\t                this.nextToken();\r\n\t                this.tolerateUnexpectedToken(token);\r\n\t            }\r\n\t            else {\r\n\t                this.tolerateUnexpectedToken(token, messages_1.Messages.UnexpectedToken);\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            this.expect(',');\r\n\t        }\r\n\t    };\r\n\t    // Expect the next token to match the specified keyword.\r\n\t    // If not, an exception will be thrown.\r\n\t    Parser.prototype.expectKeyword = function (keyword) {\r\n\t        var token = this.nextToken();\r\n\t        if (token.type !== 4 /* Keyword */ || token.value !== keyword) {\r\n\t            this.throwUnexpectedToken(token);\r\n\t        }\r\n\t    };\r\n\t    // Return true if the next token matches the specified punctuator.\r\n\t    Parser.prototype.match = function (value) {\r\n\t        return this.lookahead.type === 7 /* Punctuator */ && this.lookahead.value === value;\r\n\t    };\r\n\t    // Return true if the next token matches the specified keyword\r\n\t    Parser.prototype.matchKeyword = function (keyword) {\r\n\t        return this.lookahead.type === 4 /* Keyword */ && this.lookahead.value === keyword;\r\n\t    };\r\n\t    // Return true if the next token matches the specified contextual keyword\r\n\t    // (where an identifier is sometimes a keyword depending on the context)\r\n\t    Parser.prototype.matchContextualKeyword = function (keyword) {\r\n\t        return this.lookahead.type === 3 /* Identifier */ && this.lookahead.value === keyword;\r\n\t    };\r\n\t    // Return true if the next token is an assignment operator\r\n\t    Parser.prototype.matchAssign = function () {\r\n\t        if (this.lookahead.type !== 7 /* Punctuator */) {\r\n\t            return false;\r\n\t        }\r\n\t        var op = this.lookahead.value;\r\n\t        return op === '=' ||\r\n\t            op === '*=' ||\r\n\t            op === '**=' ||\r\n\t            op === '/=' ||\r\n\t            op === '%=' ||\r\n\t            op === '+=' ||\r\n\t            op === '-=' ||\r\n\t            op === '<<=' ||\r\n\t            op === '>>=' ||\r\n\t            op === '>>>=' ||\r\n\t            op === '&=' ||\r\n\t            op === '^=' ||\r\n\t            op === '|=';\r\n\t    };\r\n\t    // Cover grammar support.\r\n\t    //\r\n\t    // When an assignment expression position starts with an left parenthesis, the determination of the type\r\n\t    // of the syntax is to be deferred arbitrarily long until the end of the parentheses pair (plus a lookahead)\r\n\t    // or the first comma. This situation also defers the determination of all the expressions nested in the pair.\r\n\t    //\r\n\t    // There are three productions that can be parsed in a parentheses pair that needs to be determined\r\n\t    // after the outermost pair is closed. They are:\r\n\t    //\r\n\t    //   1. AssignmentExpression\r\n\t    //   2. BindingElements\r\n\t    //   3. AssignmentTargets\r\n\t    //\r\n\t    // In order to avoid exponential backtracking, we use two flags to denote if the production can be\r\n\t    // binding element or assignment target.\r\n\t    //\r\n\t    // The three productions have the relationship:\r\n\t    //\r\n\t    //   BindingElements ⊆ AssignmentTargets ⊆ AssignmentExpression\r\n\t    //\r\n\t    // with a single exception that CoverInitializedName when used directly in an Expression, generates\r\n\t    // an early error. Therefore, we need the third state, firstCoverInitializedNameError, to track the\r\n\t    // first usage of CoverInitializedName and report it when we reached the end of the parentheses pair.\r\n\t    //\r\n\t    // isolateCoverGrammar function runs the given parser function with a new cover grammar context, and it does not\r\n\t    // effect the current flags. This means the production the parser parses is only used as an expression. Therefore\r\n\t    // the CoverInitializedName check is conducted.\r\n\t    //\r\n\t    // inheritCoverGrammar function runs the given parse function with a new cover grammar context, and it propagates\r\n\t    // the flags outside of the parser. This means the production the parser parses is used as a part of a potential\r\n\t    // pattern. The CoverInitializedName check is deferred.\r\n\t    Parser.prototype.isolateCoverGrammar = function (parseFunction) {\r\n\t        var previousIsBindingElement = this.context.isBindingElement;\r\n\t        var previousIsAssignmentTarget = this.context.isAssignmentTarget;\r\n\t        var previousFirstCoverInitializedNameError = this.context.firstCoverInitializedNameError;\r\n\t        this.context.isBindingElement = true;\r\n\t        this.context.isAssignmentTarget = true;\r\n\t        this.context.firstCoverInitializedNameError = null;\r\n\t        var result = parseFunction.call(this);\r\n\t        if (this.context.firstCoverInitializedNameError !== null) {\r\n\t            this.throwUnexpectedToken(this.context.firstCoverInitializedNameError);\r\n\t        }\r\n\t        this.context.isBindingElement = previousIsBindingElement;\r\n\t        this.context.isAssignmentTarget = previousIsAssignmentTarget;\r\n\t        this.context.firstCoverInitializedNameError = previousFirstCoverInitializedNameError;\r\n\t        return result;\r\n\t    };\r\n\t    Parser.prototype.inheritCoverGrammar = function (parseFunction) {\r\n\t        var previousIsBindingElement = this.context.isBindingElement;\r\n\t        var previousIsAssignmentTarget = this.context.isAssignmentTarget;\r\n\t        var previousFirstCoverInitializedNameError = this.context.firstCoverInitializedNameError;\r\n\t        this.context.isBindingElement = true;\r\n\t        this.context.isAssignmentTarget = true;\r\n\t        this.context.firstCoverInitializedNameError = null;\r\n\t        var result = parseFunction.call(this);\r\n\t        this.context.isBindingElement = this.context.isBindingElement && previousIsBindingElement;\r\n\t        this.context.isAssignmentTarget = this.context.isAssignmentTarget && previousIsAssignmentTarget;\r\n\t        this.context.firstCoverInitializedNameError = previousFirstCoverInitializedNameError || this.context.firstCoverInitializedNameError;\r\n\t        return result;\r\n\t    };\r\n\t    Parser.prototype.consumeSemicolon = function () {\r\n\t        if (this.match(';')) {\r\n\t            this.nextToken();\r\n\t        }\r\n\t        else if (!this.hasLineTerminator) {\r\n\t            if (this.lookahead.type !== 2 /* EOF */ && !this.match('}')) {\r\n\t                this.throwUnexpectedToken(this.lookahead);\r\n\t            }\r\n\t            this.lastMarker.index = this.startMarker.index;\r\n\t            this.lastMarker.line = this.startMarker.line;\r\n\t            this.lastMarker.column = this.startMarker.column;\r\n\t        }\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-primary-expression\r\n\t    Parser.prototype.parsePrimaryExpression = function () {\r\n\t        var node = this.createNode();\r\n\t        var expr;\r\n\t        var token, raw;\r\n\t        switch (this.lookahead.type) {\r\n\t            case 3 /* Identifier */:\r\n\t                if ((this.context.isModule || this.context.await) && this.lookahead.value === 'await') {\r\n\t                    this.tolerateUnexpectedToken(this.lookahead);\r\n\t                }\r\n\t                expr = this.matchAsyncFunction() ? this.parseFunctionExpression() : this.finalize(node, new Node.Identifier(this.nextToken().value));\r\n\t                break;\r\n\t            case 6 /* NumericLiteral */:\r\n\t            case 8 /* StringLiteral */:\r\n\t                if (this.context.strict && this.lookahead.octal) {\r\n\t                    this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.StrictOctalLiteral);\r\n\t                }\r\n\t                this.context.isAssignmentTarget = false;\r\n\t                this.context.isBindingElement = false;\r\n\t                token = this.nextToken();\r\n\t                raw = this.getTokenRaw(token);\r\n\t                expr = this.finalize(node, new Node.Literal(token.value, raw));\r\n\t                break;\r\n\t            case 1 /* BooleanLiteral */:\r\n\t                this.context.isAssignmentTarget = false;\r\n\t                this.context.isBindingElement = false;\r\n\t                token = this.nextToken();\r\n\t                raw = this.getTokenRaw(token);\r\n\t                expr = this.finalize(node, new Node.Literal(token.value === 'true', raw));\r\n\t                break;\r\n\t            case 5 /* NullLiteral */:\r\n\t                this.context.isAssignmentTarget = false;\r\n\t                this.context.isBindingElement = false;\r\n\t                token = this.nextToken();\r\n\t                raw = this.getTokenRaw(token);\r\n\t                expr = this.finalize(node, new Node.Literal(null, raw));\r\n\t                break;\r\n\t            case 10 /* Template */:\r\n\t                expr = this.parseTemplateLiteral();\r\n\t                break;\r\n\t            case 7 /* Punctuator */:\r\n\t                switch (this.lookahead.value) {\r\n\t                    case '(':\r\n\t                        this.context.isBindingElement = false;\r\n\t                        expr = this.inheritCoverGrammar(this.parseGroupExpression);\r\n\t                        break;\r\n\t                    case '[':\r\n\t                        expr = this.inheritCoverGrammar(this.parseArrayInitializer);\r\n\t                        break;\r\n\t                    case '{':\r\n\t                        expr = this.inheritCoverGrammar(this.parseObjectInitializer);\r\n\t                        break;\r\n\t                    case '/':\r\n\t                    case '/=':\r\n\t                        this.context.isAssignmentTarget = false;\r\n\t                        this.context.isBindingElement = false;\r\n\t                        this.scanner.index = this.startMarker.index;\r\n\t                        token = this.nextRegexToken();\r\n\t                        raw = this.getTokenRaw(token);\r\n\t                        expr = this.finalize(node, new Node.RegexLiteral(token.regex, raw, token.pattern, token.flags));\r\n\t                        break;\r\n\t                    default:\r\n\t                        expr = this.throwUnexpectedToken(this.nextToken());\r\n\t                }\r\n\t                break;\r\n\t            case 4 /* Keyword */:\r\n\t                if (!this.context.strict && this.context.allowYield && this.matchKeyword('yield')) {\r\n\t                    expr = this.parseIdentifierName();\r\n\t                }\r\n\t                else if (!this.context.strict && this.matchKeyword('let')) {\r\n\t                    expr = this.finalize(node, new Node.Identifier(this.nextToken().value));\r\n\t                }\r\n\t                else {\r\n\t                    this.context.isAssignmentTarget = false;\r\n\t                    this.context.isBindingElement = false;\r\n\t                    if (this.matchKeyword('function')) {\r\n\t                        expr = this.parseFunctionExpression();\r\n\t                    }\r\n\t                    else if (this.matchKeyword('this')) {\r\n\t                        this.nextToken();\r\n\t                        expr = this.finalize(node, new Node.ThisExpression());\r\n\t                    }\r\n\t                    else if (this.matchKeyword('class')) {\r\n\t                        expr = this.parseClassExpression();\r\n\t                    }\r\n\t                    else if (this.matchImportCall()) {\r\n\t                        expr = this.parseImportCall();\r\n\t                    }\r\n\t                    else {\r\n\t                        expr = this.throwUnexpectedToken(this.nextToken());\r\n\t                    }\r\n\t                }\r\n\t                break;\r\n\t            default:\r\n\t                expr = this.throwUnexpectedToken(this.nextToken());\r\n\t        }\r\n\t        return expr;\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-array-initializer\r\n\t    Parser.prototype.parseSpreadElement = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expect('...');\r\n\t        var arg = this.inheritCoverGrammar(this.parseAssignmentExpression);\r\n\t        return this.finalize(node, new Node.SpreadElement(arg));\r\n\t    };\r\n\t    Parser.prototype.parseArrayInitializer = function () {\r\n\t        var node = this.createNode();\r\n\t        var elements = [];\r\n\t        this.expect('[');\r\n\t        while (!this.match(']')) {\r\n\t            if (this.match(',')) {\r\n\t                this.nextToken();\r\n\t                elements.push(null);\r\n\t            }\r\n\t            else if (this.match('...')) {\r\n\t                var element = this.parseSpreadElement();\r\n\t                if (!this.match(']')) {\r\n\t                    this.context.isAssignmentTarget = false;\r\n\t                    this.context.isBindingElement = false;\r\n\t                    this.expect(',');\r\n\t                }\r\n\t                elements.push(element);\r\n\t            }\r\n\t            else {\r\n\t                elements.push(this.inheritCoverGrammar(this.parseAssignmentExpression));\r\n\t                if (!this.match(']')) {\r\n\t                    this.expect(',');\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        this.expect(']');\r\n\t        return this.finalize(node, new Node.ArrayExpression(elements));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-object-initializer\r\n\t    Parser.prototype.parsePropertyMethod = function (params) {\r\n\t        this.context.isAssignmentTarget = false;\r\n\t        this.context.isBindingElement = false;\r\n\t        var previousStrict = this.context.strict;\r\n\t        var previousAllowStrictDirective = this.context.allowStrictDirective;\r\n\t        this.context.allowStrictDirective = params.simple;\r\n\t        var body = this.isolateCoverGrammar(this.parseFunctionSourceElements);\r\n\t        if (this.context.strict && params.firstRestricted) {\r\n\t            this.tolerateUnexpectedToken(params.firstRestricted, params.message);\r\n\t        }\r\n\t        if (this.context.strict && params.stricted) {\r\n\t            this.tolerateUnexpectedToken(params.stricted, params.message);\r\n\t        }\r\n\t        this.context.strict = previousStrict;\r\n\t        this.context.allowStrictDirective = previousAllowStrictDirective;\r\n\t        return body;\r\n\t    };\r\n\t    Parser.prototype.parsePropertyMethodFunction = function () {\r\n\t        var isGenerator = false;\r\n\t        var node = this.createNode();\r\n\t        var previousAllowYield = this.context.allowYield;\r\n\t        this.context.allowYield = true;\r\n\t        var params = this.parseFormalParameters();\r\n\t        var method = this.parsePropertyMethod(params);\r\n\t        this.context.allowYield = previousAllowYield;\r\n\t        return this.finalize(node, new Node.FunctionExpression(null, params.params, method, isGenerator));\r\n\t    };\r\n\t    Parser.prototype.parsePropertyMethodAsyncFunction = function () {\r\n\t        var node = this.createNode();\r\n\t        var previousAllowYield = this.context.allowYield;\r\n\t        var previousAwait = this.context.await;\r\n\t        this.context.allowYield = false;\r\n\t        this.context.await = true;\r\n\t        var params = this.parseFormalParameters();\r\n\t        var method = this.parsePropertyMethod(params);\r\n\t        this.context.allowYield = previousAllowYield;\r\n\t        this.context.await = previousAwait;\r\n\t        return this.finalize(node, new Node.AsyncFunctionExpression(null, params.params, method));\r\n\t    };\r\n\t    Parser.prototype.parseObjectPropertyKey = function () {\r\n\t        var node = this.createNode();\r\n\t        var token = this.nextToken();\r\n\t\t\tvar key;\r\n\t        switch (token.type) {\r\n\t            case 8 /* StringLiteral */:\r\n\t            case 6 /* NumericLiteral */:\r\n\t                if (this.context.strict && token.octal) {\r\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictOctalLiteral);\r\n\t                }\r\n\t                var raw = this.getTokenRaw(token);\r\n\t                key = this.finalize(node, new Node.Literal(token.value, raw));\r\n\t                break;\r\n\t            case 3 /* Identifier */:\r\n\t            case 1 /* BooleanLiteral */:\r\n\t            case 5 /* NullLiteral */:\r\n\t            case 4 /* Keyword */:\r\n\t                key = this.finalize(node, new Node.Identifier(token.value));\r\n\t                break;\r\n\t            case 7 /* Punctuator */:\r\n\t                if (token.value === '[') {\r\n\t                    key = this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t                    this.expect(']');\r\n\t                }\r\n\t                else {\r\n\t                    key = this.throwUnexpectedToken(token);\r\n\t                }\r\n\t                break;\r\n\t            default:\r\n\t                key = this.throwUnexpectedToken(token);\r\n\t        }\r\n\t        return key;\r\n\t    };\r\n\t    Parser.prototype.isPropertyKey = function (key, value) {\r\n\t        return (key.type === syntax_1.Syntax.Identifier && key.name === value) ||\r\n\t            (key.type === syntax_1.Syntax.Literal && key.value === value);\r\n\t    };\r\n\t    Parser.prototype.parseObjectProperty = function (hasProto) {\r\n\t        var node = this.createNode();\r\n\t        var token = this.lookahead;\r\n\t        var kind;\r\n\t        var key = null;\r\n\t        var value = null;\r\n\t        var computed = false;\r\n\t        var method = false;\r\n\t        var shorthand = false;\r\n\t        var isAsync = false;\r\n\t        if (token.type === 3 /* Identifier */) {\r\n\t\t\t\tvar id = token.value;\r\n\t            this.nextToken();\r\n\t            computed = this.match('[');\r\n\t            isAsync = !this.hasLineTerminator && (id === 'async') &&\r\n\t                !this.match(':') && !this.match('(') && !this.match('*') && !this.match(',');\r\n\t            key = isAsync ? this.parseObjectPropertyKey() : this.finalize(node, new Node.Identifier(id));\r\n\t        }\r\n\t        else if (this.match('*')) {\r\n\t            this.nextToken();\r\n\t        }\r\n\t        else {\r\n\t            computed = this.match('[');\r\n\t            key = this.parseObjectPropertyKey();\r\n\t        }\r\n\t        var lookaheadPropertyKey = this.qualifiedPropertyName(this.lookahead);\r\n\t        if (token.type === 3 /* Identifier */ && !isAsync && token.value === 'get' && lookaheadPropertyKey) {\r\n\t            kind = 'get';\r\n\t            computed = this.match('[');\r\n\t            key = this.parseObjectPropertyKey();\r\n\t            this.context.allowYield = false;\r\n\t            value = this.parseGetterMethod();\r\n\t        }\r\n\t        else if (token.type === 3 /* Identifier */ && !isAsync && token.value === 'set' && lookaheadPropertyKey) {\r\n\t            kind = 'set';\r\n\t            computed = this.match('[');\r\n\t            key = this.parseObjectPropertyKey();\r\n\t            value = this.parseSetterMethod();\r\n\t        }\r\n\t        else if (token.type === 7 /* Punctuator */ && token.value === '*' && lookaheadPropertyKey) {\r\n\t            kind = 'init';\r\n\t            computed = this.match('[');\r\n\t            key = this.parseObjectPropertyKey();\r\n\t            value = this.parseGeneratorMethod();\r\n\t            method = true;\r\n\t        }\r\n\t        else {\r\n\t            if (!key) {\r\n\t                this.throwUnexpectedToken(this.lookahead);\r\n\t            }\r\n\t            kind = 'init';\r\n\t            if (this.match(':') && !isAsync) {\r\n\t                if (!computed && this.isPropertyKey(key, '__proto__')) {\r\n\t                    if (hasProto.value) {\r\n\t                        this.tolerateError(messages_1.Messages.DuplicateProtoProperty);\r\n\t                    }\r\n\t                    hasProto.value = true;\r\n\t                }\r\n\t                this.nextToken();\r\n\t                value = this.inheritCoverGrammar(this.parseAssignmentExpression);\r\n\t            }\r\n\t            else if (this.match('(')) {\r\n\t                value = isAsync ? this.parsePropertyMethodAsyncFunction() : this.parsePropertyMethodFunction();\r\n\t                method = true;\r\n\t            }\r\n\t            else if (token.type === 3 /* Identifier */) {\r\n\t                var id = this.finalize(node, new Node.Identifier(token.value));\r\n\t                if (this.match('=')) {\r\n\t                    this.context.firstCoverInitializedNameError = this.lookahead;\r\n\t                    this.nextToken();\r\n\t                    shorthand = true;\r\n\t                    var init = this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t                    value = this.finalize(node, new Node.AssignmentPattern(id, init));\r\n\t                }\r\n\t                else {\r\n\t                    shorthand = true;\r\n\t                    value = id;\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                this.throwUnexpectedToken(this.nextToken());\r\n\t            }\r\n\t        }\r\n\t        return this.finalize(node, new Node.Property(kind, key, computed, value, method, shorthand));\r\n\t    };\r\n\t    Parser.prototype.parseObjectInitializer = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expect('{');\r\n\t        var properties = [];\r\n\t        var hasProto = { value: false };\r\n\t        while (!this.match('}')) {\r\n\t            properties.push(this.match('...') ? this.parseSpreadElement() : this.parseObjectProperty(hasProto));\r\n\t            if (!this.match('}')) {\r\n\t                this.expectCommaSeparator();\r\n\t            }\r\n\t        }\r\n\t        this.expect('}');\r\n\t        return this.finalize(node, new Node.ObjectExpression(properties));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-template-literals\r\n\t    Parser.prototype.parseTemplateHead = function () {\r\n\t        assert_1.assert(this.lookahead.head, 'Template literal must start with a template head');\r\n\t        var node = this.createNode();\r\n\t        var token = this.nextToken();\r\n\t        var raw = token.value;\r\n\t        var cooked = token.cooked;\r\n\t        return this.finalize(node, new Node.TemplateElement({ raw: raw, cooked: cooked }, token.tail));\r\n\t    };\r\n\t    Parser.prototype.parseTemplateElement = function () {\r\n\t        if (this.lookahead.type !== 10 /* Template */) {\r\n\t            this.throwUnexpectedToken();\r\n\t        }\r\n\t        var node = this.createNode();\r\n\t        var token = this.nextToken();\r\n\t        var raw = token.value;\r\n\t        var cooked = token.cooked;\r\n\t        return this.finalize(node, new Node.TemplateElement({ raw: raw, cooked: cooked }, token.tail));\r\n\t    };\r\n\t    Parser.prototype.parseTemplateLiteral = function () {\r\n\t        var node = this.createNode();\r\n\t        var expressions = [];\r\n\t        var quasis = [];\r\n\t        var quasi = this.parseTemplateHead();\r\n\t        quasis.push(quasi);\r\n\t        while (!quasi.tail) {\r\n\t            expressions.push(this.parseExpression());\r\n\t            quasi = this.parseTemplateElement();\r\n\t            quasis.push(quasi);\r\n\t        }\r\n\t        return this.finalize(node, new Node.TemplateLiteral(quasis, expressions));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-grouping-operator\r\n\t    Parser.prototype.reinterpretExpressionAsPattern = function (expr) {\r\n\t        switch (expr.type) {\r\n\t            case syntax_1.Syntax.Identifier:\r\n\t            case syntax_1.Syntax.MemberExpression:\r\n\t            case syntax_1.Syntax.RestElement:\r\n\t            case syntax_1.Syntax.AssignmentPattern:\r\n\t                break;\r\n\t            case syntax_1.Syntax.SpreadElement:\r\n\t                expr.type = syntax_1.Syntax.RestElement;\r\n\t                this.reinterpretExpressionAsPattern(expr.argument);\r\n\t                break;\r\n\t            case syntax_1.Syntax.ArrayExpression:\r\n\t                expr.type = syntax_1.Syntax.ArrayPattern;\r\n\t                for (var i = 0; i < expr.elements.length; i++) {\r\n\t                    if (expr.elements[i] !== null) {\r\n\t                        this.reinterpretExpressionAsPattern(expr.elements[i]);\r\n\t                    }\r\n\t                }\r\n\t                break;\r\n\t            case syntax_1.Syntax.ObjectExpression:\r\n\t                expr.type = syntax_1.Syntax.ObjectPattern;\r\n\t                for (var i = 0; i < expr.properties.length; i++) {\r\n\t                    var property = expr.properties[i];\r\n\t                    this.reinterpretExpressionAsPattern(property.type === syntax_1.Syntax.SpreadElement ? property : property.value);\r\n\t                }\r\n\t                break;\r\n\t            case syntax_1.Syntax.AssignmentExpression:\r\n\t                expr.type = syntax_1.Syntax.AssignmentPattern;\r\n\t                delete expr.operator;\r\n\t                this.reinterpretExpressionAsPattern(expr.left);\r\n\t                break;\r\n\t            default:\r\n\t                // Allow other node type for tolerant parsing.\r\n\t                break;\r\n\t        }\r\n\t    };\r\n\t    Parser.prototype.parseGroupExpression = function () {\r\n\t        var expr;\r\n\t        this.expect('(');\r\n\t        if (this.match(')')) {\r\n\t            this.nextToken();\r\n\t            if (!this.match('=>')) {\r\n\t                this.expect('=>');\r\n\t            }\r\n\t            expr = {\r\n\t                type: ArrowParameterPlaceHolder,\r\n\t                params: [],\r\n\t                async: false\r\n\t            };\r\n\t        }\r\n\t        else {\r\n\t            var startToken = this.lookahead;\r\n\t            var params = [];\r\n\t            if (this.match('...')) {\r\n\t                expr = this.parseRestElement(params);\r\n\t                this.expect(')');\r\n\t                if (!this.match('=>')) {\r\n\t                    this.expect('=>');\r\n\t                }\r\n\t                expr = {\r\n\t                    type: ArrowParameterPlaceHolder,\r\n\t                    params: [expr],\r\n\t                    async: false\r\n\t                };\r\n\t            }\r\n\t            else {\r\n\t                var arrow = false;\r\n\t                this.context.isBindingElement = true;\r\n\t                expr = this.inheritCoverGrammar(this.parseAssignmentExpression);\r\n\t                if (this.match(',')) {\r\n\t                    var expressions = [];\r\n\t                    this.context.isAssignmentTarget = false;\r\n\t                    expressions.push(expr);\r\n\t                    while (this.lookahead.type !== 2 /* EOF */) {\r\n\t                        if (!this.match(',')) {\r\n\t                            break;\r\n\t                        }\r\n\t                        this.nextToken();\r\n\t                        if (this.match(')')) {\r\n\t                            this.nextToken();\r\n\t                            for (var i = 0; i < expressions.length; i++) {\r\n\t                                this.reinterpretExpressionAsPattern(expressions[i]);\r\n\t                            }\r\n\t                            arrow = true;\r\n\t                            expr = {\r\n\t                                type: ArrowParameterPlaceHolder,\r\n\t                                params: expressions,\r\n\t                                async: false\r\n\t                            };\r\n\t                        }\r\n\t                        else if (this.match('...')) {\r\n\t                            if (!this.context.isBindingElement) {\r\n\t                                this.throwUnexpectedToken(this.lookahead);\r\n\t                            }\r\n\t                            expressions.push(this.parseRestElement(params));\r\n\t                            this.expect(')');\r\n\t                            if (!this.match('=>')) {\r\n\t                                this.expect('=>');\r\n\t                            }\r\n\t                            this.context.isBindingElement = false;\r\n\t                            for (var i = 0; i < expressions.length; i++) {\r\n\t                                this.reinterpretExpressionAsPattern(expressions[i]);\r\n\t                            }\r\n\t                            arrow = true;\r\n\t                            expr = {\r\n\t                                type: ArrowParameterPlaceHolder,\r\n\t                                params: expressions,\r\n\t                                async: false\r\n\t                            };\r\n\t                        }\r\n\t                        else {\r\n\t                            expressions.push(this.inheritCoverGrammar(this.parseAssignmentExpression));\r\n\t                        }\r\n\t                        if (arrow) {\r\n\t                            break;\r\n\t                        }\r\n\t                    }\r\n\t                    if (!arrow) {\r\n\t                        expr = this.finalize(this.startNode(startToken), new Node.SequenceExpression(expressions));\r\n\t                    }\r\n\t                }\r\n\t                if (!arrow) {\r\n\t                    this.expect(')');\r\n\t                    if (this.match('=>')) {\r\n\t                        if (expr.type === syntax_1.Syntax.Identifier && expr.name === 'yield') {\r\n\t                            arrow = true;\r\n\t                            expr = {\r\n\t                                type: ArrowParameterPlaceHolder,\r\n\t                                params: [expr],\r\n\t                                async: false\r\n\t                            };\r\n\t                        }\r\n\t                        if (!arrow) {\r\n\t                            if (!this.context.isBindingElement) {\r\n\t                                this.throwUnexpectedToken(this.lookahead);\r\n\t                            }\r\n\t                            if (expr.type === syntax_1.Syntax.SequenceExpression) {\r\n\t                                for (var i = 0; i < expr.expressions.length; i++) {\r\n\t                                    this.reinterpretExpressionAsPattern(expr.expressions[i]);\r\n\t                                }\r\n\t                            }\r\n\t                            else {\r\n\t                                this.reinterpretExpressionAsPattern(expr);\r\n\t                            }\r\n\t                            var parameters = (expr.type === syntax_1.Syntax.SequenceExpression ? expr.expressions : [expr]);\r\n\t                            expr = {\r\n\t                                type: ArrowParameterPlaceHolder,\r\n\t                                params: parameters,\r\n\t                                async: false\r\n\t                            };\r\n\t                        }\r\n\t                    }\r\n\t                    this.context.isBindingElement = false;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        return expr;\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-left-hand-side-expressions\r\n\t    Parser.prototype.parseArguments = function () {\r\n\t        this.expect('(');\r\n\t        var args = [];\r\n\t        if (!this.match(')')) {\r\n\t            while (true) {\r\n\t                var expr = this.match('...') ? this.parseSpreadElement() :\r\n\t                    this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t                args.push(expr);\r\n\t                if (this.match(')')) {\r\n\t                    break;\r\n\t                }\r\n\t                this.expectCommaSeparator();\r\n\t                if (this.match(')')) {\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        this.expect(')');\r\n\t        return args;\r\n\t    };\r\n\t    Parser.prototype.isIdentifierName = function (token) {\r\n\t        return token.type === 3 /* Identifier */ ||\r\n\t            token.type === 4 /* Keyword */ ||\r\n\t            token.type === 1 /* BooleanLiteral */ ||\r\n\t            token.type === 5 /* NullLiteral */;\r\n\t    };\r\n\t    Parser.prototype.parseIdentifierName = function () {\r\n\t        var node = this.createNode();\r\n\t        var token = this.nextToken();\r\n\t        if (!this.isIdentifierName(token)) {\r\n\t            this.throwUnexpectedToken(token);\r\n\t        }\r\n\t        return this.finalize(node, new Node.Identifier(token.value));\r\n\t    };\r\n\t    Parser.prototype.parseNewExpression = function () {\r\n\t        var node = this.createNode();\r\n\t        var id = this.parseIdentifierName();\r\n\t        assert_1.assert(id.name === 'new', 'New expression must start with `new`');\r\n\t        var expr;\r\n\t        if (this.match('.')) {\r\n\t            this.nextToken();\r\n\t            if (this.lookahead.type === 3 /* Identifier */ && this.context.inFunctionBody && this.lookahead.value === 'target') {\r\n\t                var property = this.parseIdentifierName();\r\n\t                expr = new Node.MetaProperty(id, property);\r\n\t            }\r\n\t            else {\r\n\t                this.throwUnexpectedToken(this.lookahead);\r\n\t            }\r\n\t        }\r\n\t        else if (this.matchKeyword('import')) {\r\n\t            this.throwUnexpectedToken(this.lookahead);\r\n\t        }\r\n\t        else {\r\n\t            var callee = this.isolateCoverGrammar(this.parseLeftHandSideExpression);\r\n\t            var args = this.match('(') ? this.parseArguments() : [];\r\n\t            expr = new Node.NewExpression(callee, args);\r\n\t            this.context.isAssignmentTarget = false;\r\n\t            this.context.isBindingElement = false;\r\n\t        }\r\n\t        return this.finalize(node, expr);\r\n\t    };\r\n\t    Parser.prototype.parseAsyncArgument = function () {\r\n\t        var arg = this.parseAssignmentExpression();\r\n\t        this.context.firstCoverInitializedNameError = null;\r\n\t        return arg;\r\n\t    };\r\n\t    Parser.prototype.parseAsyncArguments = function () {\r\n\t        this.expect('(');\r\n\t        var args = [];\r\n\t        if (!this.match(')')) {\r\n\t            while (true) {\r\n\t                var expr = this.match('...') ? this.parseSpreadElement() :\r\n\t                    this.isolateCoverGrammar(this.parseAsyncArgument);\r\n\t                args.push(expr);\r\n\t                if (this.match(')')) {\r\n\t                    break;\r\n\t                }\r\n\t                this.expectCommaSeparator();\r\n\t                if (this.match(')')) {\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        this.expect(')');\r\n\t        return args;\r\n\t    };\r\n\t    Parser.prototype.matchImportCall = function () {\r\n\t        var match = this.matchKeyword('import');\r\n\t        if (match) {\r\n\t            var state = this.scanner.saveState();\r\n\t            this.scanner.scanComments();\r\n\t            var next = this.scanner.lex();\r\n\t            this.scanner.restoreState(state);\r\n\t            match = (next.type === 7 /* Punctuator */) && (next.value === '(');\r\n\t        }\r\n\t        return match;\r\n\t    };\r\n\t    Parser.prototype.parseImportCall = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('import');\r\n\t        return this.finalize(node, new Node.Import());\r\n\t    };\r\n\t    Parser.prototype.parseLeftHandSideExpressionAllowCall = function () {\r\n\t        var startToken = this.lookahead;\r\n\t        var maybeAsync = this.matchContextualKeyword('async');\r\n\t        var previousAllowIn = this.context.allowIn;\r\n\t        this.context.allowIn = true;\r\n\t        var expr;\r\n\t        if (this.matchKeyword('super') && this.context.inFunctionBody) {\r\n\t            expr = this.createNode();\r\n\t            this.nextToken();\r\n\t            expr = this.finalize(expr, new Node.Super());\r\n\t            if (!this.match('(') && !this.match('.') && !this.match('[')) {\r\n\t                this.throwUnexpectedToken(this.lookahead);\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            expr = this.inheritCoverGrammar(this.matchKeyword('new') ? this.parseNewExpression : this.parsePrimaryExpression);\r\n\t        }\r\n\t        while (true) {\r\n\t            if (this.match('.')) {\r\n\t                this.context.isBindingElement = false;\r\n\t                this.context.isAssignmentTarget = true;\r\n\t                this.expect('.');\r\n\t                var property = this.parseIdentifierName();\r\n\t                expr = this.finalize(this.startNode(startToken), new Node.StaticMemberExpression(expr, property));\r\n\t            }\r\n\t            else if (this.match('(')) {\r\n\t                var asyncArrow = maybeAsync && (startToken.lineNumber === this.lookahead.lineNumber);\r\n\t                this.context.isBindingElement = false;\r\n\t                this.context.isAssignmentTarget = false;\r\n\t                var args = asyncArrow ? this.parseAsyncArguments() : this.parseArguments();\r\n\t                if (expr.type === syntax_1.Syntax.Import && args.length !== 1) {\r\n\t                    this.tolerateError(messages_1.Messages.BadImportCallArity);\r\n\t                }\r\n\t                expr = this.finalize(this.startNode(startToken), new Node.CallExpression(expr, args));\r\n\t                if (asyncArrow && this.match('=>')) {\r\n\t                    for (var i = 0; i < args.length; ++i) {\r\n\t                        this.reinterpretExpressionAsPattern(args[i]);\r\n\t                    }\r\n\t                    expr = {\r\n\t                        type: ArrowParameterPlaceHolder,\r\n\t                        params: args,\r\n\t                        async: true\r\n\t                    };\r\n\t                }\r\n\t            }\r\n\t            else if (this.match('[')) {\r\n\t                this.context.isBindingElement = false;\r\n\t                this.context.isAssignmentTarget = true;\r\n\t                this.expect('[');\r\n\t                var property = this.isolateCoverGrammar(this.parseExpression);\r\n\t                this.expect(']');\r\n\t                expr = this.finalize(this.startNode(startToken), new Node.ComputedMemberExpression(expr, property));\r\n\t            }\r\n\t            else if (this.lookahead.type === 10 /* Template */ && this.lookahead.head) {\r\n\t                var quasi = this.parseTemplateLiteral();\r\n\t                expr = this.finalize(this.startNode(startToken), new Node.TaggedTemplateExpression(expr, quasi));\r\n\t            }\r\n\t            else {\r\n\t                break;\r\n\t            }\r\n\t        }\r\n\t        this.context.allowIn = previousAllowIn;\r\n\t        return expr;\r\n\t    };\r\n\t    Parser.prototype.parseSuper = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('super');\r\n\t        if (!this.match('[') && !this.match('.')) {\r\n\t            this.throwUnexpectedToken(this.lookahead);\r\n\t        }\r\n\t        return this.finalize(node, new Node.Super());\r\n\t    };\r\n\t    Parser.prototype.parseLeftHandSideExpression = function () {\r\n\t        assert_1.assert(this.context.allowIn, 'callee of new expression always allow in keyword.');\r\n\t        var node = this.startNode(this.lookahead);\r\n\t        var expr = (this.matchKeyword('super') && this.context.inFunctionBody) ? this.parseSuper() :\r\n\t            this.inheritCoverGrammar(this.matchKeyword('new') ? this.parseNewExpression : this.parsePrimaryExpression);\r\n\t        while (true) {\r\n\t            if (this.match('[')) {\r\n\t                this.context.isBindingElement = false;\r\n\t                this.context.isAssignmentTarget = true;\r\n\t                this.expect('[');\r\n\t                var property = this.isolateCoverGrammar(this.parseExpression);\r\n\t                this.expect(']');\r\n\t                expr = this.finalize(node, new Node.ComputedMemberExpression(expr, property));\r\n\t            }\r\n\t            else if (this.match('.')) {\r\n\t                this.context.isBindingElement = false;\r\n\t                this.context.isAssignmentTarget = true;\r\n\t                this.expect('.');\r\n\t                var property = this.parseIdentifierName();\r\n\t                expr = this.finalize(node, new Node.StaticMemberExpression(expr, property));\r\n\t            }\r\n\t            else if (this.lookahead.type === 10 /* Template */ && this.lookahead.head) {\r\n\t                var quasi = this.parseTemplateLiteral();\r\n\t                expr = this.finalize(node, new Node.TaggedTemplateExpression(expr, quasi));\r\n\t            }\r\n\t            else {\r\n\t                break;\r\n\t            }\r\n\t        }\r\n\t        return expr;\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-update-expressions\r\n\t    Parser.prototype.parseUpdateExpression = function () {\r\n\t        var expr;\r\n\t        var startToken = this.lookahead;\r\n\t        if (this.match('++') || this.match('--')) {\r\n\t            var node = this.startNode(startToken);\r\n\t            var token = this.nextToken();\r\n\t            expr = this.inheritCoverGrammar(this.parseUnaryExpression);\r\n\t            if (this.context.strict && expr.type === syntax_1.Syntax.Identifier && this.scanner.isRestrictedWord(expr.name)) {\r\n\t                this.tolerateError(messages_1.Messages.StrictLHSPrefix);\r\n\t            }\r\n\t            if (!this.context.isAssignmentTarget) {\r\n\t                this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);\r\n\t            }\r\n\t            var prefix = true;\r\n\t            expr = this.finalize(node, new Node.UpdateExpression(token.value, expr, prefix));\r\n\t            this.context.isAssignmentTarget = false;\r\n\t            this.context.isBindingElement = false;\r\n\t        }\r\n\t        else {\r\n\t            expr = this.inheritCoverGrammar(this.parseLeftHandSideExpressionAllowCall);\r\n\t            if (!this.hasLineTerminator && this.lookahead.type === 7 /* Punctuator */) {\r\n\t                if (this.match('++') || this.match('--')) {\r\n\t                    if (this.context.strict && expr.type === syntax_1.Syntax.Identifier && this.scanner.isRestrictedWord(expr.name)) {\r\n\t                        this.tolerateError(messages_1.Messages.StrictLHSPostfix);\r\n\t                    }\r\n\t                    if (!this.context.isAssignmentTarget) {\r\n\t                        this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);\r\n\t                    }\r\n\t                    this.context.isAssignmentTarget = false;\r\n\t                    this.context.isBindingElement = false;\r\n\t                    var operator = this.nextToken().value;\r\n\t                    var prefix = false;\r\n\t                    expr = this.finalize(this.startNode(startToken), new Node.UpdateExpression(operator, expr, prefix));\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        return expr;\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-unary-operators\r\n\t    Parser.prototype.parseAwaitExpression = function () {\r\n\t        var node = this.createNode();\r\n\t        this.nextToken();\r\n\t        var argument = this.parseUnaryExpression();\r\n\t        return this.finalize(node, new Node.AwaitExpression(argument));\r\n\t    };\r\n\t    Parser.prototype.parseUnaryExpression = function () {\r\n\t        var expr;\r\n\t        if (this.match('+') || this.match('-') || this.match('~') || this.match('!') ||\r\n\t            this.matchKeyword('delete') || this.matchKeyword('void') || this.matchKeyword('typeof')) {\r\n\t            var node = this.startNode(this.lookahead);\r\n\t            var token = this.nextToken();\r\n\t            expr = this.inheritCoverGrammar(this.parseUnaryExpression);\r\n\t            expr = this.finalize(node, new Node.UnaryExpression(token.value, expr));\r\n\t            if (this.context.strict && expr.operator === 'delete' && expr.argument.type === syntax_1.Syntax.Identifier) {\r\n\t                this.tolerateError(messages_1.Messages.StrictDelete);\r\n\t            }\r\n\t            this.context.isAssignmentTarget = false;\r\n\t            this.context.isBindingElement = false;\r\n\t        }\r\n\t        else if (this.context.await && this.matchContextualKeyword('await')) {\r\n\t            expr = this.parseAwaitExpression();\r\n\t        }\r\n\t        else {\r\n\t            expr = this.parseUpdateExpression();\r\n\t        }\r\n\t        return expr;\r\n\t    };\r\n\t    Parser.prototype.parseExponentiationExpression = function () {\r\n\t        var startToken = this.lookahead;\r\n\t        var expr = this.inheritCoverGrammar(this.parseUnaryExpression);\r\n\t        if (expr.type !== syntax_1.Syntax.UnaryExpression && this.match('**')) {\r\n\t            this.nextToken();\r\n\t            this.context.isAssignmentTarget = false;\r\n\t            this.context.isBindingElement = false;\r\n\t            var left = expr;\r\n\t            var right = this.isolateCoverGrammar(this.parseExponentiationExpression);\r\n\t            expr = this.finalize(this.startNode(startToken), new Node.BinaryExpression('**', left, right));\r\n\t        }\r\n\t        return expr;\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-exp-operator\r\n\t    // https://tc39.github.io/ecma262/#sec-multiplicative-operators\r\n\t    // https://tc39.github.io/ecma262/#sec-additive-operators\r\n\t    // https://tc39.github.io/ecma262/#sec-bitwise-shift-operators\r\n\t    // https://tc39.github.io/ecma262/#sec-relational-operators\r\n\t    // https://tc39.github.io/ecma262/#sec-equality-operators\r\n\t    // https://tc39.github.io/ecma262/#sec-binary-bitwise-operators\r\n\t    // https://tc39.github.io/ecma262/#sec-binary-logical-operators\r\n\t    Parser.prototype.binaryPrecedence = function (token) {\r\n\t        var op = token.value;\r\n\t        var precedence;\r\n\t        if (token.type === 7 /* Punctuator */) {\r\n\t            precedence = this.operatorPrecedence[op] || 0;\r\n\t        }\r\n\t        else if (token.type === 4 /* Keyword */) {\r\n\t            precedence = (op === 'instanceof' || (this.context.allowIn && op === 'in')) ? 7 : 0;\r\n\t        }\r\n\t        else {\r\n\t            precedence = 0;\r\n\t        }\r\n\t        return precedence;\r\n\t    };\r\n\t    Parser.prototype.parseBinaryExpression = function () {\r\n\t        var startToken = this.lookahead;\r\n\t        var expr = this.inheritCoverGrammar(this.parseExponentiationExpression);\r\n\t        var token = this.lookahead;\r\n\t        var prec = this.binaryPrecedence(token);\r\n\t        if (prec > 0) {\r\n\t            this.nextToken();\r\n\t            this.context.isAssignmentTarget = false;\r\n\t            this.context.isBindingElement = false;\r\n\t            var markers = [startToken, this.lookahead];\r\n\t            var left = expr;\r\n\t            var right = this.isolateCoverGrammar(this.parseExponentiationExpression);\r\n\t            var stack = [left, token.value, right];\r\n\t            var precedences = [prec];\r\n\t            while (true) {\r\n\t                prec = this.binaryPrecedence(this.lookahead);\r\n\t                if (prec <= 0) {\r\n\t                    break;\r\n\t                }\r\n\t                // Reduce: make a binary expression from the three topmost entries.\r\n\t                while ((stack.length > 2) && (prec <= precedences[precedences.length - 1])) {\r\n\t                    right = stack.pop();\r\n\t                    var operator = stack.pop();\r\n\t                    precedences.pop();\r\n\t                    left = stack.pop();\r\n\t                    markers.pop();\r\n\t                    var node = this.startNode(markers[markers.length - 1]);\r\n\t                    stack.push(this.finalize(node, new Node.BinaryExpression(operator, left, right)));\r\n\t                }\r\n\t                // Shift.\r\n\t                stack.push(this.nextToken().value);\r\n\t                precedences.push(prec);\r\n\t                markers.push(this.lookahead);\r\n\t                stack.push(this.isolateCoverGrammar(this.parseExponentiationExpression));\r\n\t            }\r\n\t            // Final reduce to clean-up the stack.\r\n\t            var i = stack.length - 1;\r\n\t            expr = stack[i];\r\n\t            var lastMarker = markers.pop();\r\n\t            while (i > 1) {\r\n\t                var marker = markers.pop();\r\n\t                var lastLineStart = lastMarker && lastMarker.lineStart;\r\n\t                var node = this.startNode(marker, lastLineStart);\r\n\t                var operator = stack[i - 1];\r\n\t                expr = this.finalize(node, new Node.BinaryExpression(operator, stack[i - 2], expr));\r\n\t                i -= 2;\r\n\t                lastMarker = marker;\r\n\t            }\r\n\t        }\r\n\t        return expr;\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-conditional-operator\r\n\t    Parser.prototype.parseConditionalExpression = function () {\r\n\t        var startToken = this.lookahead;\r\n\t        var expr = this.inheritCoverGrammar(this.parseBinaryExpression);\r\n\t        if (this.match('?')) {\r\n\t            this.nextToken();\r\n\t            var previousAllowIn = this.context.allowIn;\r\n\t            this.context.allowIn = true;\r\n\t            var consequent = this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t            this.context.allowIn = previousAllowIn;\r\n\t            this.expect(':');\r\n\t            var alternate = this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t            expr = this.finalize(this.startNode(startToken), new Node.ConditionalExpression(expr, consequent, alternate));\r\n\t            this.context.isAssignmentTarget = false;\r\n\t            this.context.isBindingElement = false;\r\n\t        }\r\n\t        return expr;\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-assignment-operators\r\n\t    Parser.prototype.checkPatternParam = function (options, param) {\r\n\t        switch (param.type) {\r\n\t            case syntax_1.Syntax.Identifier:\r\n\t                this.validateParam(options, param, param.name);\r\n\t                break;\r\n\t            case syntax_1.Syntax.RestElement:\r\n\t                this.checkPatternParam(options, param.argument);\r\n\t                break;\r\n\t            case syntax_1.Syntax.AssignmentPattern:\r\n\t                this.checkPatternParam(options, param.left);\r\n\t                break;\r\n\t            case syntax_1.Syntax.ArrayPattern:\r\n\t                for (var i = 0; i < param.elements.length; i++) {\r\n\t                    if (param.elements[i] !== null) {\r\n\t                        this.checkPatternParam(options, param.elements[i]);\r\n\t                    }\r\n\t                }\r\n\t                break;\r\n\t            case syntax_1.Syntax.ObjectPattern:\r\n\t                for (var i = 0; i < param.properties.length; i++) {\r\n\t                    var property = param.properties[i];\r\n\t                    this.checkPatternParam(options, (property.type === syntax_1.Syntax.RestElement) ? property : property.value);\r\n\t                }\r\n\t                break;\r\n\t            default:\r\n\t                break;\r\n\t        }\r\n\t        options.simple = options.simple && (param instanceof Node.Identifier);\r\n\t    };\r\n\t    Parser.prototype.reinterpretAsCoverFormalsList = function (expr) {\r\n\t        var params = [expr];\r\n\t        var options = {\r\n\t            simple: true,\r\n\t            paramSet: {}\r\n\t        };\r\n\t        var asyncArrow = false;\r\n\t        switch (expr.type) {\r\n\t            case syntax_1.Syntax.Identifier:\r\n\t                break;\r\n\t            case ArrowParameterPlaceHolder:\r\n\t                params = expr.params;\r\n\t                asyncArrow = expr.async;\r\n\t                break;\r\n\t            default:\r\n\t                return null;\r\n\t        }\r\n\t        for (var i = 0; i < params.length; ++i) {\r\n\t            var param = params[i];\r\n\t            if (param.type === syntax_1.Syntax.AssignmentPattern) {\r\n\t                if (param.right.type === syntax_1.Syntax.YieldExpression) {\r\n\t                    if (param.right.argument) {\r\n\t                        this.throwUnexpectedToken(this.lookahead);\r\n\t                    }\r\n\t                    param.right.type = syntax_1.Syntax.Identifier;\r\n\t                    param.right.name = 'yield';\r\n\t                    delete param.right.argument;\r\n\t                    delete param.right.delegate;\r\n\t                }\r\n\t            }\r\n\t            else if (asyncArrow && param.type === syntax_1.Syntax.Identifier && param.name === 'await') {\r\n\t                this.throwUnexpectedToken(this.lookahead);\r\n\t            }\r\n\t            this.checkPatternParam(options, param);\r\n\t            params[i] = param;\r\n\t        }\r\n\t        if (this.context.strict || !this.context.allowYield) {\r\n\t            for (var i = 0; i < params.length; ++i) {\r\n\t                var param = params[i];\r\n\t                if (param.type === syntax_1.Syntax.YieldExpression) {\r\n\t                    this.throwUnexpectedToken(this.lookahead);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        if (options.message === messages_1.Messages.StrictParamDupe) {\r\n\t            var token = this.context.strict ? options.stricted : options.firstRestricted;\r\n\t            this.throwUnexpectedToken(token, options.message);\r\n\t        }\r\n\t        return {\r\n\t            simple: options.simple,\r\n\t            params: params,\r\n\t            stricted: options.stricted,\r\n\t            firstRestricted: options.firstRestricted,\r\n\t            message: options.message\r\n\t        };\r\n\t    };\r\n\t    Parser.prototype.parseAssignmentExpression = function () {\r\n\t        var expr;\r\n\t        if (!this.context.allowYield && this.matchKeyword('yield')) {\r\n\t            expr = this.parseYieldExpression();\r\n\t        }\r\n\t        else {\r\n\t            var startToken = this.lookahead;\r\n\t            var token = startToken;\r\n\t            expr = this.parseConditionalExpression();\r\n\t            if (token.type === 3 /* Identifier */ && (token.lineNumber === this.lookahead.lineNumber) && token.value === 'async') {\r\n\t                if (this.lookahead.type === 3 /* Identifier */ || this.matchKeyword('yield')) {\r\n\t                    var arg = this.parsePrimaryExpression();\r\n\t                    this.reinterpretExpressionAsPattern(arg);\r\n\t                    expr = {\r\n\t                        type: ArrowParameterPlaceHolder,\r\n\t                        params: [arg],\r\n\t                        async: true\r\n\t                    };\r\n\t                }\r\n\t            }\r\n\t            if (expr.type === ArrowParameterPlaceHolder || this.match('=>')) {\r\n\t                // https://tc39.github.io/ecma262/#sec-arrow-function-definitions\r\n\t                this.context.isAssignmentTarget = false;\r\n\t                this.context.isBindingElement = false;\r\n\t                var isAsync = expr.async;\r\n\t                var list = this.reinterpretAsCoverFormalsList(expr);\r\n\t                if (list) {\r\n\t                    if (this.hasLineTerminator) {\r\n\t                        this.tolerateUnexpectedToken(this.lookahead);\r\n\t                    }\r\n\t                    this.context.firstCoverInitializedNameError = null;\r\n\t                    var previousStrict = this.context.strict;\r\n\t                    var previousAllowStrictDirective = this.context.allowStrictDirective;\r\n\t                    this.context.allowStrictDirective = list.simple;\r\n\t                    var previousAllowYield = this.context.allowYield;\r\n\t                    var previousAwait = this.context.await;\r\n\t                    this.context.allowYield = true;\r\n\t                    this.context.await = isAsync;\r\n\t                    var node = this.startNode(startToken);\r\n\t                    this.expect('=>');\r\n\t                    var body = void 0;\r\n\t                    if (this.match('{')) {\r\n\t                        var previousAllowIn = this.context.allowIn;\r\n\t                        this.context.allowIn = true;\r\n\t                        body = this.parseFunctionSourceElements();\r\n\t                        this.context.allowIn = previousAllowIn;\r\n\t                    }\r\n\t                    else {\r\n\t                        body = this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t                    }\r\n\t                    var expression = body.type !== syntax_1.Syntax.BlockStatement;\r\n\t                    if (this.context.strict && list.firstRestricted) {\r\n\t                        this.throwUnexpectedToken(list.firstRestricted, list.message);\r\n\t                    }\r\n\t                    if (this.context.strict && list.stricted) {\r\n\t                        this.tolerateUnexpectedToken(list.stricted, list.message);\r\n\t                    }\r\n\t                    expr = isAsync ? this.finalize(node, new Node.AsyncArrowFunctionExpression(list.params, body, expression)) :\r\n\t                        this.finalize(node, new Node.ArrowFunctionExpression(list.params, body, expression));\r\n\t                    this.context.strict = previousStrict;\r\n\t                    this.context.allowStrictDirective = previousAllowStrictDirective;\r\n\t                    this.context.allowYield = previousAllowYield;\r\n\t                    this.context.await = previousAwait;\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                if (this.matchAssign()) {\r\n\t                    if (!this.context.isAssignmentTarget) {\r\n\t                        this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);\r\n\t                    }\r\n\t                    if (this.context.strict && expr.type === syntax_1.Syntax.Identifier) {\r\n\t                        var id = expr;\r\n\t                        if (this.scanner.isRestrictedWord(id.name)) {\r\n\t                            this.tolerateUnexpectedToken(token, messages_1.Messages.StrictLHSAssignment);\r\n\t                        }\r\n\t                        if (this.scanner.isStrictModeReservedWord(id.name)) {\r\n\t                            this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);\r\n\t                        }\r\n\t                    }\r\n\t                    if (!this.match('=')) {\r\n\t                        this.context.isAssignmentTarget = false;\r\n\t                        this.context.isBindingElement = false;\r\n\t                    }\r\n\t                    else {\r\n\t                        this.reinterpretExpressionAsPattern(expr);\r\n\t                    }\r\n\t                    token = this.nextToken();\r\n\t                    var operator = token.value;\r\n\t                    var right = this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t                    expr = this.finalize(this.startNode(startToken), new Node.AssignmentExpression(operator, expr, right));\r\n\t                    this.context.firstCoverInitializedNameError = null;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        return expr;\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-comma-operator\r\n\t    Parser.prototype.parseExpression = function () {\r\n\t        var startToken = this.lookahead;\r\n\t        var expr = this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t        if (this.match(',')) {\r\n\t            var expressions = [];\r\n\t            expressions.push(expr);\r\n\t            while (this.lookahead.type !== 2 /* EOF */) {\r\n\t                if (!this.match(',')) {\r\n\t                    break;\r\n\t                }\r\n\t                this.nextToken();\r\n\t                expressions.push(this.isolateCoverGrammar(this.parseAssignmentExpression));\r\n\t            }\r\n\t            expr = this.finalize(this.startNode(startToken), new Node.SequenceExpression(expressions));\r\n\t        }\r\n\t        return expr;\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-block\r\n\t    Parser.prototype.parseStatementListItem = function () {\r\n\t        var statement;\r\n\t        this.context.isAssignmentTarget = true;\r\n\t        this.context.isBindingElement = true;\r\n\t        if (this.lookahead.type === 4 /* Keyword */) {\r\n\t            switch (this.lookahead.value) {\r\n\t                case 'export':\r\n\t                    if (!this.context.isModule) {\r\n\t                        this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.IllegalExportDeclaration);\r\n\t                    }\r\n\t                    statement = this.parseExportDeclaration();\r\n\t                    break;\r\n\t                case 'import':\r\n\t                    if (this.matchImportCall()) {\r\n\t                        statement = this.parseExpressionStatement();\r\n\t                    }\r\n\t                    else {\r\n\t                        if (!this.context.isModule) {\r\n\t                            this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.IllegalImportDeclaration);\r\n\t                        }\r\n\t                        statement = this.parseImportDeclaration();\r\n\t                    }\r\n\t                    break;\r\n\t                case 'const':\r\n\t                    statement = this.parseLexicalDeclaration({ inFor: false });\r\n\t                    break;\r\n\t                case 'function':\r\n\t                    statement = this.parseFunctionDeclaration();\r\n\t                    break;\r\n\t                case 'class':\r\n\t                    statement = this.parseClassDeclaration();\r\n\t                    break;\r\n\t                case 'let':\r\n\t                    statement = this.isLexicalDeclaration() ? this.parseLexicalDeclaration({ inFor: false }) : this.parseStatement();\r\n\t                    break;\r\n\t                default:\r\n\t                    statement = this.parseStatement();\r\n\t                    break;\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            statement = this.parseStatement();\r\n\t        }\r\n\t        return statement;\r\n\t    };\r\n\t    Parser.prototype.parseBlock = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expect('{');\r\n\t        var block = [];\r\n\t        while (true) {\r\n\t            if (this.match('}')) {\r\n\t                break;\r\n\t            }\r\n\t            block.push(this.parseStatementListItem());\r\n\t        }\r\n\t        this.expect('}');\r\n\t        return this.finalize(node, new Node.BlockStatement(block));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-let-and-const-declarations\r\n\t    Parser.prototype.parseLexicalBinding = function (kind, options) {\r\n\t        var node = this.createNode();\r\n\t        var params = [];\r\n\t        var id = this.parsePattern(params, kind);\r\n\t        if (this.context.strict && id.type === syntax_1.Syntax.Identifier) {\r\n\t            if (this.scanner.isRestrictedWord(id.name)) {\r\n\t                this.tolerateError(messages_1.Messages.StrictVarName);\r\n\t            }\r\n\t        }\r\n\t        var init = null;\r\n\t        if (kind === 'const') {\r\n\t            if (!this.matchKeyword('in') && !this.matchContextualKeyword('of')) {\r\n\t                if (this.match('=')) {\r\n\t                    this.nextToken();\r\n\t                    init = this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t                }\r\n\t                else {\r\n\t                    this.throwError(messages_1.Messages.DeclarationMissingInitializer, 'const');\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        else if ((!options.inFor && id.type !== syntax_1.Syntax.Identifier) || this.match('=')) {\r\n\t            this.expect('=');\r\n\t            init = this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t        }\r\n\t        return this.finalize(node, new Node.VariableDeclarator(id, init));\r\n\t    };\r\n\t    Parser.prototype.parseBindingList = function (kind, options) {\r\n\t        var list = [this.parseLexicalBinding(kind, options)];\r\n\t        while (this.match(',')) {\r\n\t            this.nextToken();\r\n\t            list.push(this.parseLexicalBinding(kind, options));\r\n\t        }\r\n\t        return list;\r\n\t    };\r\n\t    Parser.prototype.isLexicalDeclaration = function () {\r\n\t        var state = this.scanner.saveState();\r\n\t        this.scanner.scanComments();\r\n\t        var next = this.scanner.lex();\r\n\t        this.scanner.restoreState(state);\r\n\t        return (next.type === 3 /* Identifier */) ||\r\n\t            (next.type === 7 /* Punctuator */ && next.value === '[') ||\r\n\t            (next.type === 7 /* Punctuator */ && next.value === '{') ||\r\n\t            (next.type === 4 /* Keyword */ && next.value === 'let') ||\r\n\t            (next.type === 4 /* Keyword */ && next.value === 'yield');\r\n\t    };\r\n\t    Parser.prototype.parseLexicalDeclaration = function (options) {\r\n\t        var node = this.createNode();\r\n\t        var kind = this.nextToken().value;\r\n\t        assert_1.assert(kind === 'let' || kind === 'const', 'Lexical declaration must be either let or const');\r\n\t        var declarations = this.parseBindingList(kind, options);\r\n\t        this.consumeSemicolon();\r\n\t        return this.finalize(node, new Node.VariableDeclaration(declarations, kind));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-destructuring-binding-patterns\r\n\t    Parser.prototype.parseBindingRestElement = function (params, kind) {\r\n\t        var node = this.createNode();\r\n\t        this.expect('...');\r\n\t        var arg = this.parsePattern(params, kind);\r\n\t        return this.finalize(node, new Node.RestElement(arg));\r\n\t    };\r\n\t    Parser.prototype.parseArrayPattern = function (params, kind) {\r\n\t        var node = this.createNode();\r\n\t        this.expect('[');\r\n\t        var elements = [];\r\n\t        while (!this.match(']')) {\r\n\t            if (this.match(',')) {\r\n\t                this.nextToken();\r\n\t                elements.push(null);\r\n\t            }\r\n\t            else {\r\n\t                if (this.match('...')) {\r\n\t                    elements.push(this.parseBindingRestElement(params, kind));\r\n\t                    break;\r\n\t                }\r\n\t                else {\r\n\t                    elements.push(this.parsePatternWithDefault(params, kind));\r\n\t                }\r\n\t                if (!this.match(']')) {\r\n\t                    this.expect(',');\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        this.expect(']');\r\n\t        return this.finalize(node, new Node.ArrayPattern(elements));\r\n\t    };\r\n\t    Parser.prototype.parsePropertyPattern = function (params, kind) {\r\n\t        var node = this.createNode();\r\n\t        var computed = false;\r\n\t        var shorthand = false;\r\n\t        var method = false;\r\n\t        var key;\r\n\t        var value;\r\n\t        if (this.lookahead.type === 3 /* Identifier */) {\r\n\t            var keyToken = this.lookahead;\r\n\t            key = this.parseVariableIdentifier();\r\n\t            var init = this.finalize(node, new Node.Identifier(keyToken.value));\r\n\t            if (this.match('=')) {\r\n\t                params.push(keyToken);\r\n\t                shorthand = true;\r\n\t                this.nextToken();\r\n\t                var expr = this.parseAssignmentExpression();\r\n\t                value = this.finalize(this.startNode(keyToken), new Node.AssignmentPattern(init, expr));\r\n\t            }\r\n\t            else if (!this.match(':')) {\r\n\t                params.push(keyToken);\r\n\t                shorthand = true;\r\n\t                value = init;\r\n\t            }\r\n\t            else {\r\n\t                this.expect(':');\r\n\t                value = this.parsePatternWithDefault(params, kind);\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            computed = this.match('[');\r\n\t            key = this.parseObjectPropertyKey();\r\n\t            this.expect(':');\r\n\t            value = this.parsePatternWithDefault(params, kind);\r\n\t        }\r\n\t        return this.finalize(node, new Node.Property('init', key, computed, value, method, shorthand));\r\n\t    };\r\n\t    Parser.prototype.parseRestProperty = function (params, kind) {\r\n\t        var node = this.createNode();\r\n\t        this.expect('...');\r\n\t        var arg = this.parsePattern(params);\r\n\t        if (this.match('=')) {\r\n\t            this.throwError(messages_1.Messages.DefaultRestProperty);\r\n\t        }\r\n\t        if (!this.match('}')) {\r\n\t            this.throwError(messages_1.Messages.PropertyAfterRestProperty);\r\n\t        }\r\n\t        return this.finalize(node, new Node.RestElement(arg));\r\n\t    };\r\n\t    Parser.prototype.parseObjectPattern = function (params, kind) {\r\n\t        var node = this.createNode();\r\n\t        var properties = [];\r\n\t        this.expect('{');\r\n\t        while (!this.match('}')) {\r\n\t            properties.push(this.match('...') ? this.parseRestProperty(params, kind) : this.parsePropertyPattern(params, kind));\r\n\t            if (!this.match('}')) {\r\n\t                this.expect(',');\r\n\t            }\r\n\t        }\r\n\t        this.expect('}');\r\n\t        return this.finalize(node, new Node.ObjectPattern(properties));\r\n\t    };\r\n\t    Parser.prototype.parsePattern = function (params, kind) {\r\n\t        var pattern;\r\n\t        if (this.match('[')) {\r\n\t            pattern = this.parseArrayPattern(params, kind);\r\n\t        }\r\n\t        else if (this.match('{')) {\r\n\t            pattern = this.parseObjectPattern(params, kind);\r\n\t        }\r\n\t        else {\r\n\t            if (this.matchKeyword('let') && (kind === 'const' || kind === 'let')) {\r\n\t                this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.LetInLexicalBinding);\r\n\t            }\r\n\t            params.push(this.lookahead);\r\n\t            pattern = this.parseVariableIdentifier(kind);\r\n\t        }\r\n\t        return pattern;\r\n\t    };\r\n\t    Parser.prototype.parsePatternWithDefault = function (params, kind) {\r\n\t        var startToken = this.lookahead;\r\n\t        var pattern = this.parsePattern(params, kind);\r\n\t        if (this.match('=')) {\r\n\t            this.nextToken();\r\n\t            var previousAllowYield = this.context.allowYield;\r\n\t            this.context.allowYield = true;\r\n\t            var right = this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t            this.context.allowYield = previousAllowYield;\r\n\t            pattern = this.finalize(this.startNode(startToken), new Node.AssignmentPattern(pattern, right));\r\n\t        }\r\n\t        return pattern;\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-variable-statement\r\n\t    Parser.prototype.parseVariableIdentifier = function (kind) {\r\n\t        var node = this.createNode();\r\n\t        var token = this.nextToken();\r\n\t        if (token.type === 4 /* Keyword */ && token.value === 'yield') {\r\n\t            if (this.context.strict) {\r\n\t                this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);\r\n\t            }\r\n\t            else if (!this.context.allowYield) {\r\n\t                this.throwUnexpectedToken(token);\r\n\t            }\r\n\t        }\r\n\t        else if (token.type !== 3 /* Identifier */) {\r\n\t            if (this.context.strict && token.type === 4 /* Keyword */ && this.scanner.isStrictModeReservedWord(token.value)) {\r\n\t                this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);\r\n\t            }\r\n\t            else {\r\n\t                if (this.context.strict || token.value !== 'let' || kind !== 'var') {\r\n\t                    this.throwUnexpectedToken(token);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        else if ((this.context.isModule || this.context.await) && token.type === 3 /* Identifier */ && token.value === 'await') {\r\n\t            this.tolerateUnexpectedToken(token);\r\n\t        }\r\n\t        return this.finalize(node, new Node.Identifier(token.value));\r\n\t    };\r\n\t    Parser.prototype.parseVariableDeclaration = function (options) {\r\n\t        var node = this.createNode();\r\n\t        var params = [];\r\n\t        var id = this.parsePattern(params, 'var');\r\n\t        if (this.context.strict && id.type === syntax_1.Syntax.Identifier) {\r\n\t            if (this.scanner.isRestrictedWord(id.name)) {\r\n\t                this.tolerateError(messages_1.Messages.StrictVarName);\r\n\t            }\r\n\t        }\r\n\t        var init = null;\r\n\t        if (this.match('=')) {\r\n\t            this.nextToken();\r\n\t            init = this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t        }\r\n\t        else if (id.type !== syntax_1.Syntax.Identifier && !options.inFor) {\r\n\t            this.expect('=');\r\n\t        }\r\n\t        return this.finalize(node, new Node.VariableDeclarator(id, init));\r\n\t    };\r\n\t    Parser.prototype.parseVariableDeclarationList = function (options) {\r\n\t        var opt = { inFor: options.inFor };\r\n\t        var list = [];\r\n\t        list.push(this.parseVariableDeclaration(opt));\r\n\t        while (this.match(',')) {\r\n\t            this.nextToken();\r\n\t            list.push(this.parseVariableDeclaration(opt));\r\n\t        }\r\n\t        return list;\r\n\t    };\r\n\t    Parser.prototype.parseVariableStatement = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('var');\r\n\t        var declarations = this.parseVariableDeclarationList({ inFor: false });\r\n\t        this.consumeSemicolon();\r\n\t        return this.finalize(node, new Node.VariableDeclaration(declarations, 'var'));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-empty-statement\r\n\t    Parser.prototype.parseEmptyStatement = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expect(';');\r\n\t        return this.finalize(node, new Node.EmptyStatement());\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-expression-statement\r\n\t    Parser.prototype.parseExpressionStatement = function () {\r\n\t        var node = this.createNode();\r\n\t        var expr = this.parseExpression();\r\n\t        this.consumeSemicolon();\r\n\t        return this.finalize(node, new Node.ExpressionStatement(expr));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-if-statement\r\n\t    Parser.prototype.parseIfClause = function () {\r\n\t        if (this.context.strict && this.matchKeyword('function')) {\r\n\t            this.tolerateError(messages_1.Messages.StrictFunction);\r\n\t        }\r\n\t        return this.parseStatement();\r\n\t    };\r\n\t    Parser.prototype.parseIfStatement = function () {\r\n\t        var node = this.createNode();\r\n\t        var consequent;\r\n\t        var alternate = null;\r\n\t        this.expectKeyword('if');\r\n\t        this.expect('(');\r\n\t        var test = this.parseExpression();\r\n\t        if (!this.match(')') && this.config.tolerant) {\r\n\t\t\t\tthis.tolerateUnexpectedToken(this.nextToken());\r\n\t            consequent = this.finalize(this.createNode(), new Node.EmptyStatement());\r\n\t        }\r\n\t        else {\r\n\t            this.expect(')');\r\n\t            consequent = this.parseIfClause();\r\n\t            if (this.matchKeyword('else')) {\r\n\t                this.nextToken();\r\n\t                alternate = this.parseIfClause();\r\n\t            }\r\n\t        }\r\n\t        return this.finalize(node, new Node.IfStatement(test, consequent, alternate));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-do-while-statement\r\n\t    Parser.prototype.parseDoWhileStatement = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('do');\r\n\t        var previousInIteration = this.context.inIteration;\r\n\t        this.context.inIteration = true;\r\n\t        var body = this.parseStatement();\r\n\t        this.context.inIteration = previousInIteration;\r\n\t        this.expectKeyword('while');\r\n\t        this.expect('(');\r\n\t        var test = this.parseExpression();\r\n\t        if (!this.match(')') && this.config.tolerant) {\r\n\t            this.tolerateUnexpectedToken(this.nextToken());\r\n\t        }\r\n\t        else {\r\n\t            this.expect(')');\r\n\t            if (this.match(';')) {\r\n\t                this.nextToken();\r\n\t            }\r\n\t        }\r\n\t        return this.finalize(node, new Node.DoWhileStatement(body, test));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-while-statement\r\n\t    Parser.prototype.parseWhileStatement = function () {\r\n\t        var node = this.createNode();\r\n\t        var body;\r\n\t        this.expectKeyword('while');\r\n\t        this.expect('(');\r\n\t        var test = this.parseExpression();\r\n\t        if (!this.match(')') && this.config.tolerant) {\r\n\t            this.tolerateUnexpectedToken(this.nextToken());\r\n\t            body = this.finalize(this.createNode(), new Node.EmptyStatement());\r\n\t        }\r\n\t        else {\r\n\t            this.expect(')');\r\n\t            var previousInIteration = this.context.inIteration;\r\n\t            this.context.inIteration = true;\r\n\t            body = this.parseStatement();\r\n\t            this.context.inIteration = previousInIteration;\r\n\t        }\r\n\t        return this.finalize(node, new Node.WhileStatement(test, body));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-for-statement\r\n\t    // https://tc39.github.io/ecma262/#sec-for-in-and-for-of-statements\r\n\t    Parser.prototype.parseForStatement = function () {\r\n\t        var init = null;\r\n\t        var test = null;\r\n\t        var update = null;\r\n\t        var forIn = true;\r\n\t        var left, right;\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('for');\r\n\t        this.expect('(');\r\n\t        if (this.match(';')) {\r\n\t            this.nextToken();\r\n\t        }\r\n\t        else {\r\n\t            if (this.matchKeyword('var')) {\r\n\t                init = this.createNode();\r\n\t                this.nextToken();\r\n\t                var previousAllowIn = this.context.allowIn;\r\n\t                this.context.allowIn = false;\r\n\t                var declarations = this.parseVariableDeclarationList({ inFor: true });\r\n\t                this.context.allowIn = previousAllowIn;\r\n\t                if (declarations.length === 1 && this.matchKeyword('in')) {\r\n\t                    var decl = declarations[0];\r\n\t                    if (decl.init && (decl.id.type === syntax_1.Syntax.ArrayPattern || decl.id.type === syntax_1.Syntax.ObjectPattern || this.context.strict)) {\r\n\t                        this.tolerateError(messages_1.Messages.ForInOfLoopInitializer, 'for-in');\r\n\t                    }\r\n\t                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));\r\n\t                    this.nextToken();\r\n\t                    left = init;\r\n\t                    right = this.parseExpression();\r\n\t                    init = null;\r\n\t                }\r\n\t                else if (declarations.length === 1 && declarations[0].init === null && this.matchContextualKeyword('of')) {\r\n\t                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));\r\n\t                    this.nextToken();\r\n\t                    left = init;\r\n\t                    right = this.parseAssignmentExpression();\r\n\t                    init = null;\r\n\t                    forIn = false;\r\n\t                }\r\n\t                else {\r\n\t                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));\r\n\t                    this.expect(';');\r\n\t                }\r\n\t            }\r\n\t            else if (this.matchKeyword('const') || this.matchKeyword('let')) {\r\n\t                init = this.createNode();\r\n\t                var kind = this.nextToken().value;\r\n\t                if (!this.context.strict && this.lookahead.value === 'in') {\r\n\t                    init = this.finalize(init, new Node.Identifier(kind));\r\n\t                    this.nextToken();\r\n\t                    left = init;\r\n\t                    right = this.parseExpression();\r\n\t                    init = null;\r\n\t                }\r\n\t                else {\r\n\t                    var previousAllowIn = this.context.allowIn;\r\n\t                    this.context.allowIn = false;\r\n\t                    var declarations = this.parseBindingList(kind, { inFor: true });\r\n\t                    this.context.allowIn = previousAllowIn;\r\n\t                    if (declarations.length === 1 && declarations[0].init === null && this.matchKeyword('in')) {\r\n\t                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));\r\n\t                        this.nextToken();\r\n\t                        left = init;\r\n\t                        right = this.parseExpression();\r\n\t                        init = null;\r\n\t                    }\r\n\t                    else if (declarations.length === 1 && declarations[0].init === null && this.matchContextualKeyword('of')) {\r\n\t                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));\r\n\t                        this.nextToken();\r\n\t                        left = init;\r\n\t                        right = this.parseAssignmentExpression();\r\n\t                        init = null;\r\n\t                        forIn = false;\r\n\t                    }\r\n\t                    else {\r\n\t                        this.consumeSemicolon();\r\n\t                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                var initStartToken = this.lookahead;\r\n\t                var previousIsBindingElement = this.context.isBindingElement;\r\n\t                var previousIsAssignmentTarget = this.context.isAssignmentTarget;\r\n\t                var previousFirstCoverInitializedNameError = this.context.firstCoverInitializedNameError;\r\n\t                var previousAllowIn = this.context.allowIn;\r\n\t                this.context.allowIn = false;\r\n\t                init = this.inheritCoverGrammar(this.parseAssignmentExpression);\r\n\t                this.context.allowIn = previousAllowIn;\r\n\t                if (this.matchKeyword('in')) {\r\n\t                    if (!this.context.isAssignmentTarget || init.type === syntax_1.Syntax.AssignmentExpression) {\r\n\t                        this.tolerateError(messages_1.Messages.InvalidLHSInForIn);\r\n\t                    }\r\n\t                    this.nextToken();\r\n\t                    this.reinterpretExpressionAsPattern(init);\r\n\t                    left = init;\r\n\t                    right = this.parseExpression();\r\n\t                    init = null;\r\n\t                }\r\n\t                else if (this.matchContextualKeyword('of')) {\r\n\t                    if (!this.context.isAssignmentTarget || init.type === syntax_1.Syntax.AssignmentExpression) {\r\n\t                        this.tolerateError(messages_1.Messages.InvalidLHSInForLoop);\r\n\t                    }\r\n\t                    this.nextToken();\r\n\t                    this.reinterpretExpressionAsPattern(init);\r\n\t                    left = init;\r\n\t                    right = this.parseAssignmentExpression();\r\n\t                    init = null;\r\n\t                    forIn = false;\r\n\t                }\r\n\t                else {\r\n\t                    // The `init` node was not parsed isolated, but we would have wanted it to.\r\n\t                    this.context.isBindingElement = previousIsBindingElement;\r\n\t                    this.context.isAssignmentTarget = previousIsAssignmentTarget;\r\n\t                    this.context.firstCoverInitializedNameError = previousFirstCoverInitializedNameError;\r\n\t                    if (this.match(',')) {\r\n\t                        var initSeq = [init];\r\n\t                        while (this.match(',')) {\r\n\t                            this.nextToken();\r\n\t                            initSeq.push(this.isolateCoverGrammar(this.parseAssignmentExpression));\r\n\t                        }\r\n\t                        init = this.finalize(this.startNode(initStartToken), new Node.SequenceExpression(initSeq));\r\n\t                    }\r\n\t                    this.expect(';');\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        if (typeof left === 'undefined') {\r\n\t            if (!this.match(';')) {\r\n\t                test = this.isolateCoverGrammar(this.parseExpression);\r\n\t            }\r\n\t            this.expect(';');\r\n\t            if (!this.match(')')) {\r\n\t                update = this.isolateCoverGrammar(this.parseExpression);\r\n\t            }\r\n\t        }\r\n\t        var body;\r\n\t        if (!this.match(')') && this.config.tolerant) {\r\n\t            this.tolerateUnexpectedToken(this.nextToken());\r\n\t            body = this.finalize(this.createNode(), new Node.EmptyStatement());\r\n\t        }\r\n\t        else {\r\n\t            this.expect(')');\r\n\t            var previousInIteration = this.context.inIteration;\r\n\t            this.context.inIteration = true;\r\n\t            body = this.isolateCoverGrammar(this.parseStatement);\r\n\t            this.context.inIteration = previousInIteration;\r\n\t        }\r\n\t        return (typeof left === 'undefined') ?\r\n\t            this.finalize(node, new Node.ForStatement(init, test, update, body)) :\r\n\t            forIn ? this.finalize(node, new Node.ForInStatement(left, right, body)) :\r\n\t                this.finalize(node, new Node.ForOfStatement(left, right, body));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-continue-statement\r\n\t    Parser.prototype.parseContinueStatement = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('continue');\r\n\t        var label = null;\r\n\t        if (this.lookahead.type === 3 /* Identifier */ && !this.hasLineTerminator) {\r\n\t            var id = this.parseVariableIdentifier();\r\n\t            label = id;\r\n\t            var key = '$' + id.name;\r\n\t            if (!Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {\r\n\t                this.throwError(messages_1.Messages.UnknownLabel, id.name);\r\n\t            }\r\n\t        }\r\n\t        this.consumeSemicolon();\r\n\t        if (label === null && !this.context.inIteration) {\r\n\t            this.throwError(messages_1.Messages.IllegalContinue);\r\n\t        }\r\n\t        return this.finalize(node, new Node.ContinueStatement(label));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-break-statement\r\n\t    Parser.prototype.parseBreakStatement = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('break');\r\n\t        var label = null;\r\n\t        if (this.lookahead.type === 3 /* Identifier */ && !this.hasLineTerminator) {\r\n\t            var id = this.parseVariableIdentifier();\r\n\t            var key = '$' + id.name;\r\n\t            if (!Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {\r\n\t                this.throwError(messages_1.Messages.UnknownLabel, id.name);\r\n\t            }\r\n\t            label = id;\r\n\t        }\r\n\t        this.consumeSemicolon();\r\n\t        if (label === null && !this.context.inIteration && !this.context.inSwitch) {\r\n\t            this.throwError(messages_1.Messages.IllegalBreak);\r\n\t        }\r\n\t        return this.finalize(node, new Node.BreakStatement(label));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-return-statement\r\n\t    Parser.prototype.parseReturnStatement = function () {\r\n\t        if (!this.context.inFunctionBody) {\r\n\t            this.tolerateError(messages_1.Messages.IllegalReturn);\r\n\t        }\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('return');\r\n\t        var hasArgument = (!this.match(';') && !this.match('}') &&\r\n\t            !this.hasLineTerminator && this.lookahead.type !== 2 /* EOF */) ||\r\n\t            this.lookahead.type === 8 /* StringLiteral */ ||\r\n\t            this.lookahead.type === 10 /* Template */;\r\n\t        var argument = hasArgument ? this.parseExpression() : null;\r\n\t        this.consumeSemicolon();\r\n\t        return this.finalize(node, new Node.ReturnStatement(argument));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-with-statement\r\n\t    Parser.prototype.parseWithStatement = function () {\r\n\t        if (this.context.strict) {\r\n\t            this.tolerateError(messages_1.Messages.StrictModeWith);\r\n\t        }\r\n\t        var node = this.createNode();\r\n\t        var body;\r\n\t        this.expectKeyword('with');\r\n\t        this.expect('(');\r\n\t        var object = this.parseExpression();\r\n\t        if (!this.match(')') && this.config.tolerant) {\r\n\t            this.tolerateUnexpectedToken(this.nextToken());\r\n\t            body = this.finalize(this.createNode(), new Node.EmptyStatement());\r\n\t        }\r\n\t        else {\r\n\t            this.expect(')');\r\n\t            body = this.parseStatement();\r\n\t        }\r\n\t        return this.finalize(node, new Node.WithStatement(object, body));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-switch-statement\r\n\t    Parser.prototype.parseSwitchCase = function () {\r\n\t        var node = this.createNode();\r\n\t        var test;\r\n\t        if (this.matchKeyword('default')) {\r\n\t            this.nextToken();\r\n\t            test = null;\r\n\t        }\r\n\t        else {\r\n\t            this.expectKeyword('case');\r\n\t            test = this.parseExpression();\r\n\t        }\r\n\t        this.expect(':');\r\n\t        var consequent = [];\r\n\t        while (true) {\r\n\t            if (this.match('}') || this.matchKeyword('default') || this.matchKeyword('case')) {\r\n\t                break;\r\n\t            }\r\n\t            consequent.push(this.parseStatementListItem());\r\n\t        }\r\n\t        return this.finalize(node, new Node.SwitchCase(test, consequent));\r\n\t    };\r\n\t    Parser.prototype.parseSwitchStatement = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('switch');\r\n\t        this.expect('(');\r\n\t        var discriminant = this.parseExpression();\r\n\t        this.expect(')');\r\n\t        var previousInSwitch = this.context.inSwitch;\r\n\t        this.context.inSwitch = true;\r\n\t        var cases = [];\r\n\t        var defaultFound = false;\r\n\t        this.expect('{');\r\n\t        while (true) {\r\n\t            if (this.match('}')) {\r\n\t                break;\r\n\t            }\r\n\t            var clause = this.parseSwitchCase();\r\n\t            if (clause.test === null) {\r\n\t                if (defaultFound) {\r\n\t                    this.throwError(messages_1.Messages.MultipleDefaultsInSwitch);\r\n\t                }\r\n\t                defaultFound = true;\r\n\t            }\r\n\t            cases.push(clause);\r\n\t        }\r\n\t        this.expect('}');\r\n\t        this.context.inSwitch = previousInSwitch;\r\n\t        return this.finalize(node, new Node.SwitchStatement(discriminant, cases));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-labelled-statements\r\n\t    Parser.prototype.parseLabelledStatement = function () {\r\n\t        var node = this.createNode();\r\n\t        var expr = this.parseExpression();\r\n\t        var statement;\r\n\t        if ((expr.type === syntax_1.Syntax.Identifier) && this.match(':')) {\r\n\t            this.nextToken();\r\n\t            var id = expr;\r\n\t            var key = '$' + id.name;\r\n\t            if (Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {\r\n\t                this.throwError(messages_1.Messages.Redeclaration, 'Label', id.name);\r\n\t            }\r\n\t            this.context.labelSet[key] = true;\r\n\t            var body = void 0;\r\n\t            if (this.matchKeyword('class')) {\r\n\t                this.tolerateUnexpectedToken(this.lookahead);\r\n\t                body = this.parseClassDeclaration();\r\n\t            }\r\n\t            else if (this.matchKeyword('function')) {\r\n\t                var token = this.lookahead;\r\n\t                var declaration = this.parseFunctionDeclaration();\r\n\t                if (this.context.strict) {\r\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunction);\r\n\t                }\r\n\t                else if (declaration.generator) {\r\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.GeneratorInLegacyContext);\r\n\t                }\r\n\t                body = declaration;\r\n\t            }\r\n\t            else {\r\n\t                body = this.parseStatement();\r\n\t            }\r\n\t            delete this.context.labelSet[key];\r\n\t            statement = new Node.LabeledStatement(id, body);\r\n\t        }\r\n\t        else {\r\n\t            this.consumeSemicolon();\r\n\t            statement = new Node.ExpressionStatement(expr);\r\n\t        }\r\n\t        return this.finalize(node, statement);\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-throw-statement\r\n\t    Parser.prototype.parseThrowStatement = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('throw');\r\n\t        if (this.hasLineTerminator) {\r\n\t            this.throwError(messages_1.Messages.NewlineAfterThrow);\r\n\t        }\r\n\t        var argument = this.parseExpression();\r\n\t        this.consumeSemicolon();\r\n\t        return this.finalize(node, new Node.ThrowStatement(argument));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-try-statement\r\n\t    Parser.prototype.parseCatchClause = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('catch');\r\n\t        this.expect('(');\r\n\t        if (this.match(')')) {\r\n\t            this.throwUnexpectedToken(this.lookahead);\r\n\t        }\r\n\t        var params = [];\r\n\t        var param = this.parsePattern(params);\r\n\t        var paramMap = {};\r\n\t        for (var i = 0; i < params.length; i++) {\r\n\t            var key = '$' + params[i].value;\r\n\t            if (Object.prototype.hasOwnProperty.call(paramMap, key)) {\r\n\t                this.tolerateError(messages_1.Messages.DuplicateBinding, params[i].value);\r\n\t            }\r\n\t            paramMap[key] = true;\r\n\t        }\r\n\t        if (this.context.strict && param.type === syntax_1.Syntax.Identifier) {\r\n\t            if (this.scanner.isRestrictedWord(param.name)) {\r\n\t                this.tolerateError(messages_1.Messages.StrictCatchVariable);\r\n\t            }\r\n\t        }\r\n\t        this.expect(')');\r\n\t        var body = this.parseBlock();\r\n\t        return this.finalize(node, new Node.CatchClause(param, body));\r\n\t    };\r\n\t    Parser.prototype.parseFinallyClause = function () {\r\n\t        this.expectKeyword('finally');\r\n\t        return this.parseBlock();\r\n\t    };\r\n\t    Parser.prototype.parseTryStatement = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('try');\r\n\t        var block = this.parseBlock();\r\n\t        var handler = this.matchKeyword('catch') ? this.parseCatchClause() : null;\r\n\t        var finalizer = this.matchKeyword('finally') ? this.parseFinallyClause() : null;\r\n\t        if (!handler && !finalizer) {\r\n\t            this.throwError(messages_1.Messages.NoCatchOrFinally);\r\n\t        }\r\n\t        return this.finalize(node, new Node.TryStatement(block, handler, finalizer));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-debugger-statement\r\n\t    Parser.prototype.parseDebuggerStatement = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('debugger');\r\n\t        this.consumeSemicolon();\r\n\t        return this.finalize(node, new Node.DebuggerStatement());\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-ecmascript-language-statements-and-declarations\r\n\t    Parser.prototype.parseStatement = function () {\r\n\t        var statement;\r\n\t        switch (this.lookahead.type) {\r\n\t            case 1 /* BooleanLiteral */:\r\n\t            case 5 /* NullLiteral */:\r\n\t            case 6 /* NumericLiteral */:\r\n\t            case 8 /* StringLiteral */:\r\n\t            case 10 /* Template */:\r\n\t            case 9 /* RegularExpression */:\r\n\t                statement = this.parseExpressionStatement();\r\n\t                break;\r\n\t            case 7 /* Punctuator */:\r\n\t                var value = this.lookahead.value;\r\n\t                if (value === '{') {\r\n\t                    statement = this.parseBlock();\r\n\t                }\r\n\t                else if (value === '(') {\r\n\t                    statement = this.parseExpressionStatement();\r\n\t                }\r\n\t                else if (value === ';') {\r\n\t                    statement = this.parseEmptyStatement();\r\n\t                }\r\n\t                else {\r\n\t                    statement = this.parseExpressionStatement();\r\n\t                }\r\n\t                break;\r\n\t            case 3 /* Identifier */:\r\n\t                statement = this.matchAsyncFunction() ? this.parseFunctionDeclaration() : this.parseLabelledStatement();\r\n\t                break;\r\n\t            case 4 /* Keyword */:\r\n\t                switch (this.lookahead.value) {\r\n\t                    case 'break':\r\n\t                        statement = this.parseBreakStatement();\r\n\t                        break;\r\n\t                    case 'continue':\r\n\t                        statement = this.parseContinueStatement();\r\n\t                        break;\r\n\t                    case 'debugger':\r\n\t                        statement = this.parseDebuggerStatement();\r\n\t                        break;\r\n\t                    case 'do':\r\n\t                        statement = this.parseDoWhileStatement();\r\n\t                        break;\r\n\t                    case 'for':\r\n\t                        statement = this.parseForStatement();\r\n\t                        break;\r\n\t                    case 'function':\r\n\t                        statement = this.parseFunctionDeclaration();\r\n\t                        break;\r\n\t                    case 'if':\r\n\t                        statement = this.parseIfStatement();\r\n\t                        break;\r\n\t                    case 'return':\r\n\t                        statement = this.parseReturnStatement();\r\n\t                        break;\r\n\t                    case 'switch':\r\n\t                        statement = this.parseSwitchStatement();\r\n\t                        break;\r\n\t                    case 'throw':\r\n\t                        statement = this.parseThrowStatement();\r\n\t                        break;\r\n\t                    case 'try':\r\n\t                        statement = this.parseTryStatement();\r\n\t                        break;\r\n\t                    case 'var':\r\n\t                        statement = this.parseVariableStatement();\r\n\t                        break;\r\n\t                    case 'while':\r\n\t                        statement = this.parseWhileStatement();\r\n\t                        break;\r\n\t                    case 'with':\r\n\t                        statement = this.parseWithStatement();\r\n\t                        break;\r\n\t                    default:\r\n\t                        statement = this.parseExpressionStatement();\r\n\t                        break;\r\n\t                }\r\n\t                break;\r\n\t            default:\r\n\t                statement = this.throwUnexpectedToken(this.lookahead);\r\n\t        }\r\n\t        return statement;\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-function-definitions\r\n\t    Parser.prototype.parseFunctionSourceElements = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expect('{');\r\n\t        var body = this.parseDirectivePrologues();\r\n\t        var previousLabelSet = this.context.labelSet;\r\n\t        var previousInIteration = this.context.inIteration;\r\n\t        var previousInSwitch = this.context.inSwitch;\r\n\t        var previousInFunctionBody = this.context.inFunctionBody;\r\n\t        this.context.labelSet = {};\r\n\t        this.context.inIteration = false;\r\n\t        this.context.inSwitch = false;\r\n\t        this.context.inFunctionBody = true;\r\n\t        while (this.lookahead.type !== 2 /* EOF */) {\r\n\t            if (this.match('}')) {\r\n\t                break;\r\n\t            }\r\n\t            body.push(this.parseStatementListItem());\r\n\t        }\r\n\t        this.expect('}');\r\n\t        this.context.labelSet = previousLabelSet;\r\n\t        this.context.inIteration = previousInIteration;\r\n\t        this.context.inSwitch = previousInSwitch;\r\n\t        this.context.inFunctionBody = previousInFunctionBody;\r\n\t        return this.finalize(node, new Node.BlockStatement(body));\r\n\t    };\r\n\t    Parser.prototype.validateParam = function (options, param, name) {\r\n\t        var key = '$' + name;\r\n\t        if (this.context.strict) {\r\n\t            if (this.scanner.isRestrictedWord(name)) {\r\n\t                options.stricted = param;\r\n\t                options.message = messages_1.Messages.StrictParamName;\r\n\t            }\r\n\t            if (Object.prototype.hasOwnProperty.call(options.paramSet, key)) {\r\n\t                options.stricted = param;\r\n\t                options.message = messages_1.Messages.StrictParamDupe;\r\n\t            }\r\n\t        }\r\n\t        else if (!options.firstRestricted) {\r\n\t            if (this.scanner.isRestrictedWord(name)) {\r\n\t                options.firstRestricted = param;\r\n\t                options.message = messages_1.Messages.StrictParamName;\r\n\t            }\r\n\t            else if (this.scanner.isStrictModeReservedWord(name)) {\r\n\t                options.firstRestricted = param;\r\n\t                options.message = messages_1.Messages.StrictReservedWord;\r\n\t            }\r\n\t            else if (Object.prototype.hasOwnProperty.call(options.paramSet, key)) {\r\n\t                options.stricted = param;\r\n\t                options.message = messages_1.Messages.StrictParamDupe;\r\n\t            }\r\n\t        }\r\n\t        /* istanbul ignore next */\r\n\t        if (typeof Object.defineProperty === 'function') {\r\n\t            Object.defineProperty(options.paramSet, key, { value: true, enumerable: true, writable: true, configurable: true });\r\n\t        }\r\n\t        else {\r\n\t            options.paramSet[key] = true;\r\n\t        }\r\n\t    };\r\n\t    Parser.prototype.parseRestElement = function (params) {\r\n\t        var node = this.createNode();\r\n\t        this.expect('...');\r\n\t        var arg = this.parsePattern(params);\r\n\t        if (this.match('=')) {\r\n\t            this.throwError(messages_1.Messages.DefaultRestParameter);\r\n\t        }\r\n\t        if (!this.match(')')) {\r\n\t            this.throwError(messages_1.Messages.ParameterAfterRestParameter);\r\n\t\t\t}\r\n\t        return this.finalize(node, new Node.RestElement(arg));\r\n\t    };\r\n\t    Parser.prototype.parseFormalParameter = function (options) {\r\n\t        var params = [];\r\n\t        var param = this.match('...') ? this.parseRestElement(params) : this.parsePatternWithDefault(params);\r\n\t\t\t\r\n\t\t\tfor (var i = 0; i < params.length; i++) {\r\n\t            this.validateParam(options, params[i], params[i].value);\r\n\t        }\r\n\t        options.simple = options.simple && (param instanceof Node.Identifier);\r\n\t        options.params.push(param);\r\n\t    };\r\n\t    Parser.prototype.parseFormalParameters = function (firstRestricted) {\r\n\t        var options = {\r\n\t            simple: true,\r\n\t            params: [],\r\n\t            firstRestricted: firstRestricted\r\n\t        };\r\n\t        this.expect('(');\r\n\t        if (!this.match(')')) {\r\n\t            options.paramSet = {};\r\n\t            while (this.lookahead.type !== 2 /* EOF */) {\r\n\t                this.parseFormalParameter(options);\r\n\t                if (this.match(')')) {\r\n\t                    break;\r\n\t                }\r\n\t                this.expect(',');\r\n\t                if (this.match(')')) {\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        this.expect(')');\r\n\t        return {\r\n\t            simple: options.simple,\r\n\t            params: options.params,\r\n\t            stricted: options.stricted,\r\n\t            firstRestricted: options.firstRestricted,\r\n\t            message: options.message\r\n\t        };\r\n\t    };\r\n\t    Parser.prototype.matchAsyncFunction = function () {\r\n\t        var match = this.matchContextualKeyword('async');\r\n\t        if (match) {\r\n\t            var state = this.scanner.saveState();\r\n\t            this.scanner.scanComments();\r\n\t            var next = this.scanner.lex();\r\n\t            this.scanner.restoreState(state);\r\n\t            match = (state.lineNumber === next.lineNumber) && (next.type === 4 /* Keyword */) && (next.value === 'function');\r\n\t        }\r\n\t        return match;\r\n\t    };\r\n\t    Parser.prototype.parseFunctionDeclaration = function (identifierIsOptional) {\r\n\t        var node = this.createNode();\r\n\t        var isAsync = this.matchContextualKeyword('async');\r\n\t        if (isAsync) {\r\n\t            this.nextToken();\r\n\t        }\r\n\t        this.expectKeyword('function');\r\n\t        var isGenerator = isAsync ? false : this.match('*');\r\n\t        if (isGenerator) {\r\n\t            this.nextToken();\r\n\t        }\r\n\t        var message;\r\n\t        var id = null;\r\n\t        var firstRestricted = null;\r\n\t        if (!identifierIsOptional || !this.match('(')) {\r\n\t            var token = this.lookahead;\r\n\t            id = this.parseVariableIdentifier();\r\n\t            if (this.context.strict) {\r\n\t                if (this.scanner.isRestrictedWord(token.value)) {\r\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunctionName);\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                if (this.scanner.isRestrictedWord(token.value)) {\r\n\t                    firstRestricted = token;\r\n\t                    message = messages_1.Messages.StrictFunctionName;\r\n\t                }\r\n\t                else if (this.scanner.isStrictModeReservedWord(token.value)) {\r\n\t                    firstRestricted = token;\r\n\t                    message = messages_1.Messages.StrictReservedWord;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        var previousAllowAwait = this.context.await;\r\n\t        var previousAllowYield = this.context.allowYield;\r\n\t        this.context.await = isAsync;\r\n\t        this.context.allowYield = !isGenerator;\r\n\t        var formalParameters = this.parseFormalParameters(firstRestricted);\r\n\t        var params = formalParameters.params;\r\n\t        var stricted = formalParameters.stricted;\r\n\t        firstRestricted = formalParameters.firstRestricted;\r\n\t        if (formalParameters.message) {\r\n\t            message = formalParameters.message;\r\n\t        }\r\n\t        var previousStrict = this.context.strict;\r\n\t        var previousAllowStrictDirective = this.context.allowStrictDirective;\r\n\t        this.context.allowStrictDirective = formalParameters.simple;\r\n\t        var body = this.parseFunctionSourceElements();\r\n\t        if (this.context.strict && firstRestricted) {\r\n\t            this.throwUnexpectedToken(firstRestricted, message);\r\n\t        }\r\n\t        if (this.context.strict && stricted) {\r\n\t            this.tolerateUnexpectedToken(stricted, message);\r\n\t        }\r\n\t        this.context.strict = previousStrict;\r\n\t        this.context.allowStrictDirective = previousAllowStrictDirective;\r\n\t        this.context.await = previousAllowAwait;\r\n\t        this.context.allowYield = previousAllowYield;\r\n\t        return isAsync ? this.finalize(node, new Node.AsyncFunctionDeclaration(id, params, body)) :\r\n\t            this.finalize(node, new Node.FunctionDeclaration(id, params, body, isGenerator));\r\n\t    };\r\n\t    Parser.prototype.parseFunctionExpression = function () {\r\n\t        var node = this.createNode();\r\n\t        var isAsync = this.matchContextualKeyword('async');\r\n\t        if (isAsync) {\r\n\t            this.nextToken();\r\n\t        }\r\n\t        this.expectKeyword('function');\r\n\t        var isGenerator = isAsync ? false : this.match('*');\r\n\t        if (isGenerator) {\r\n\t            this.nextToken();\r\n\t        }\r\n\t        var message;\r\n\t        var id = null;\r\n\t        var firstRestricted;\r\n\t        var previousAllowAwait = this.context.await;\r\n\t        var previousAllowYield = this.context.allowYield;\r\n\t        this.context.await = isAsync;\r\n\t        this.context.allowYield = !isGenerator;\r\n\t        if (!this.match('(')) {\r\n\t            var token = this.lookahead;\r\n\t            id = (!this.context.strict && !isGenerator && this.matchKeyword('yield')) ? this.parseIdentifierName() : this.parseVariableIdentifier();\r\n\t            if (this.context.strict) {\r\n\t                if (this.scanner.isRestrictedWord(token.value)) {\r\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunctionName);\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                if (this.scanner.isRestrictedWord(token.value)) {\r\n\t                    firstRestricted = token;\r\n\t                    message = messages_1.Messages.StrictFunctionName;\r\n\t                }\r\n\t                else if (this.scanner.isStrictModeReservedWord(token.value)) {\r\n\t                    firstRestricted = token;\r\n\t                    message = messages_1.Messages.StrictReservedWord;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        var formalParameters = this.parseFormalParameters(firstRestricted);\r\n\t        var params = formalParameters.params;\r\n\t        var stricted = formalParameters.stricted;\r\n\t        firstRestricted = formalParameters.firstRestricted;\r\n\t        if (formalParameters.message) {\r\n\t            message = formalParameters.message;\r\n\t        }\r\n\t        var previousStrict = this.context.strict;\r\n\t        var previousAllowStrictDirective = this.context.allowStrictDirective;\r\n\t        this.context.allowStrictDirective = formalParameters.simple;\r\n\t        var body = this.parseFunctionSourceElements();\r\n\t        if (this.context.strict && firstRestricted) {\r\n\t            this.throwUnexpectedToken(firstRestricted, message);\r\n\t        }\r\n\t        if (this.context.strict && stricted) {\r\n\t            this.tolerateUnexpectedToken(stricted, message);\r\n\t        }\r\n\t        this.context.strict = previousStrict;\r\n\t        this.context.allowStrictDirective = previousAllowStrictDirective;\r\n\t        this.context.await = previousAllowAwait;\r\n\t        this.context.allowYield = previousAllowYield;\r\n\t        return isAsync ? this.finalize(node, new Node.AsyncFunctionExpression(id, params, body)) :\r\n\t            this.finalize(node, new Node.FunctionExpression(id, params, body, isGenerator));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-directive-prologues-and-the-use-strict-directive\r\n\t    Parser.prototype.parseDirective = function () {\r\n\t        var token = this.lookahead;\r\n\t        var node = this.createNode();\r\n\t        var expr = this.parseExpression();\r\n\t        var directive = (expr.type === syntax_1.Syntax.Literal) ? this.getTokenRaw(token).slice(1, -1) : null;\r\n\t        this.consumeSemicolon();\r\n\t        return this.finalize(node, directive ? new Node.Directive(expr, directive) : new Node.ExpressionStatement(expr));\r\n\t    };\r\n\t    Parser.prototype.parseDirectivePrologues = function () {\r\n\t        var firstRestricted = null;\r\n\t        var body = [];\r\n\t        while (true) {\r\n\t            var token = this.lookahead;\r\n\t            if (token.type !== 8 /* StringLiteral */) {\r\n\t                break;\r\n\t            }\r\n\t            var statement = this.parseDirective();\r\n\t            body.push(statement);\r\n\t            var directive = statement.directive;\r\n\t            if (typeof directive !== 'string') {\r\n\t                break;\r\n\t            }\r\n\t            if (directive === 'use strict') {\r\n\t                this.context.strict = true;\r\n\t                if (firstRestricted) {\r\n\t                    this.tolerateUnexpectedToken(firstRestricted, messages_1.Messages.StrictOctalLiteral);\r\n\t                }\r\n\t                if (!this.context.allowStrictDirective) {\r\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.IllegalLanguageModeDirective);\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                if (!firstRestricted && token.octal) {\r\n\t                    firstRestricted = token;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        return body;\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-method-definitions\r\n\t    Parser.prototype.qualifiedPropertyName = function (token) {\r\n\t        switch (token.type) {\r\n\t            case 3 /* Identifier */:\r\n\t            case 8 /* StringLiteral */:\r\n\t            case 1 /* BooleanLiteral */:\r\n\t            case 5 /* NullLiteral */:\r\n\t            case 6 /* NumericLiteral */:\r\n\t            case 4 /* Keyword */:\r\n\t                return true;\r\n\t            case 7 /* Punctuator */:\r\n\t                return token.value === '[';\r\n\t            default:\r\n\t                break;\r\n\t        }\r\n\t        return false;\r\n\t    };\r\n\t    Parser.prototype.parseGetterMethod = function () {\r\n\t        var node = this.createNode();\r\n\t        var isGenerator = false;\r\n\t        var previousAllowYield = this.context.allowYield;\r\n\t        this.context.allowYield = !isGenerator;\r\n\t        var formalParameters = this.parseFormalParameters();\r\n\t        if (formalParameters.params.length > 0) {\r\n\t            this.tolerateError(messages_1.Messages.BadGetterArity);\r\n\t        }\r\n\t        var method = this.parsePropertyMethod(formalParameters);\r\n\t        this.context.allowYield = previousAllowYield;\r\n\t        return this.finalize(node, new Node.FunctionExpression(null, formalParameters.params, method, isGenerator));\r\n\t    };\r\n\t    Parser.prototype.parseSetterMethod = function () {\r\n\t        var node = this.createNode();\r\n\t        var isGenerator = false;\r\n\t        var previousAllowYield = this.context.allowYield;\r\n\t        this.context.allowYield = !isGenerator;\r\n\t        var formalParameters = this.parseFormalParameters();\r\n\t        if (formalParameters.params.length !== 1) {\r\n\t            this.tolerateError(messages_1.Messages.BadSetterArity);\r\n\t        }\r\n\t        else if (formalParameters.params[0] instanceof Node.RestElement) {\r\n\t            this.tolerateError(messages_1.Messages.BadSetterRestParameter);\r\n\t        }\r\n\t        var method = this.parsePropertyMethod(formalParameters);\r\n\t        this.context.allowYield = previousAllowYield;\r\n\t        return this.finalize(node, new Node.FunctionExpression(null, formalParameters.params, method, isGenerator));\r\n\t    };\r\n\t    Parser.prototype.parseGeneratorMethod = function () {\r\n\t        var node = this.createNode();\r\n\t        var isGenerator = true;\r\n\t        var previousAllowYield = this.context.allowYield;\r\n\t        this.context.allowYield = true;\r\n\t        var params = this.parseFormalParameters();\r\n\t        this.context.allowYield = false;\r\n\t        var method = this.parsePropertyMethod(params);\r\n\t        this.context.allowYield = previousAllowYield;\r\n\t        return this.finalize(node, new Node.FunctionExpression(null, params.params, method, isGenerator));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-generator-function-definitions\r\n\t    Parser.prototype.isStartOfExpression = function () {\r\n\t        var start = true;\r\n\t        var value = this.lookahead.value;\r\n\t        switch (this.lookahead.type) {\r\n\t            case 7 /* Punctuator */:\r\n\t                start = (value === '[') || (value === '(') || (value === '{') ||\r\n\t                    (value === '+') || (value === '-') ||\r\n\t                    (value === '!') || (value === '~') ||\r\n\t                    (value === '++') || (value === '--') ||\r\n\t                    (value === '/') || (value === '/='); // regular expression literal\r\n\t                break;\r\n\t            case 4 /* Keyword */:\r\n\t                start = (value === 'class') || (value === 'delete') ||\r\n\t                    (value === 'function') || (value === 'let') || (value === 'new') ||\r\n\t                    (value === 'super') || (value === 'this') || (value === 'typeof') ||\r\n\t                    (value === 'void') || (value === 'yield');\r\n\t                break;\r\n\t            default:\r\n\t                break;\r\n\t        }\r\n\t        return start;\r\n\t    };\r\n\t    Parser.prototype.parseYieldExpression = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('yield');\r\n\t        var argument = null;\r\n\t        var delegate = false;\r\n\t        if (!this.hasLineTerminator) {\r\n\t            var previousAllowYield = this.context.allowYield;\r\n\t            this.context.allowYield = false;\r\n\t            delegate = this.match('*');\r\n\t            if (delegate) {\r\n\t                this.nextToken();\r\n\t                argument = this.parseAssignmentExpression();\r\n\t            }\r\n\t            else if (this.isStartOfExpression()) {\r\n\t                argument = this.parseAssignmentExpression();\r\n\t            }\r\n\t            this.context.allowYield = previousAllowYield;\r\n\t        }\r\n\t        return this.finalize(node, new Node.YieldExpression(argument, delegate));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-class-definitions\r\n\t    Parser.prototype.parseClassElement = function (hasConstructor) {\r\n\t        var token = this.lookahead;\r\n\t        var node = this.createNode();\r\n\t        var kind = '';\r\n\t        var key = null;\r\n\t        var value = null;\r\n\t        var computed = false;\r\n\t        var method = false;\r\n\t        var isStatic = false;\r\n\t        var isAsync = false;\r\n\t        if (this.match('*')) {\r\n\t            this.nextToken();\r\n\t        }\r\n\t        else {\r\n\t            computed = this.match('[');\r\n\t            key = this.parseObjectPropertyKey();\r\n\t            var id = key;\r\n\t            if (id.name === 'static' && (this.qualifiedPropertyName(this.lookahead) || this.match('*'))) {\r\n\t                token = this.lookahead;\r\n\t                isStatic = true;\r\n\t                computed = this.match('[');\r\n\t                if (this.match('*')) {\r\n\t                    this.nextToken();\r\n\t                }\r\n\t                else {\r\n\t                    key = this.parseObjectPropertyKey();\r\n\t                }\r\n\t            }\r\n\t            if ((token.type === 3 /* Identifier */) && !this.hasLineTerminator && (token.value === 'async')) {\r\n\t                var punctuator = this.lookahead.value;\r\n\t                if (punctuator !== ':' && punctuator !== '(' && punctuator !== '*') {\r\n\t                    isAsync = true;\r\n\t                    token = this.lookahead;\r\n\t                    key = this.parseObjectPropertyKey();\r\n\t                    if (token.type === 3 /* Identifier */ && token.value === 'constructor') {\r\n\t                        this.tolerateUnexpectedToken(token, messages_1.Messages.ConstructorIsAsync);\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        var lookaheadPropertyKey = this.qualifiedPropertyName(this.lookahead);\r\n\t        if (token.type === 3 /* Identifier */) {\r\n\t            if (token.value === 'get' && lookaheadPropertyKey) {\r\n\t                kind = 'get';\r\n\t                computed = this.match('[');\r\n\t                key = this.parseObjectPropertyKey();\r\n\t                this.context.allowYield = false;\r\n\t                value = this.parseGetterMethod();\r\n\t            }\r\n\t            else if (token.value === 'set' && lookaheadPropertyKey) {\r\n\t                kind = 'set';\r\n\t                computed = this.match('[');\r\n\t                key = this.parseObjectPropertyKey();\r\n\t                value = this.parseSetterMethod();\r\n\t            }\r\n\t        }\r\n\t        else if (token.type === 7 /* Punctuator */ && token.value === '*' && lookaheadPropertyKey) {\r\n\t            kind = 'init';\r\n\t            computed = this.match('[');\r\n\t            key = this.parseObjectPropertyKey();\r\n\t            value = this.parseGeneratorMethod();\r\n\t            method = true;\r\n\t        }\r\n\t        if (!kind && key && this.match('(')) {\r\n\t            kind = 'init';\r\n\t            value = isAsync ? this.parsePropertyMethodAsyncFunction() : this.parsePropertyMethodFunction();\r\n\t            method = true;\r\n\t        }\r\n\t        if (!kind) {\r\n\t            this.throwUnexpectedToken(this.lookahead);\r\n\t        }\r\n\t        if (kind === 'init') {\r\n\t            kind = 'method';\r\n\t        }\r\n\t        if (!computed) {\r\n\t            if (isStatic && this.isPropertyKey(key, 'prototype')) {\r\n\t                this.throwUnexpectedToken(token, messages_1.Messages.StaticPrototype);\r\n\t            }\r\n\t            if (!isStatic && this.isPropertyKey(key, 'constructor')) {\r\n\t                if (kind !== 'method' || !method || (value && value.generator)) {\r\n\t                    this.throwUnexpectedToken(token, messages_1.Messages.ConstructorSpecialMethod);\r\n\t                }\r\n\t                if (hasConstructor.value) {\r\n\t                    this.throwUnexpectedToken(token, messages_1.Messages.DuplicateConstructor);\r\n\t                }\r\n\t                else {\r\n\t                    hasConstructor.value = true;\r\n\t                }\r\n\t                kind = 'constructor';\r\n\t            }\r\n\t        }\r\n\t        return this.finalize(node, new Node.MethodDefinition(key, computed, value, kind, isStatic));\r\n\t    };\r\n\t    Parser.prototype.parseClassElementList = function () {\r\n\t        var body = [];\r\n\t        var hasConstructor = { value: false };\r\n\t        this.expect('{');\r\n\t        while (!this.match('}')) {\r\n\t            if (this.match(';')) {\r\n\t                this.nextToken();\r\n\t            }\r\n\t            else {\r\n\t                body.push(this.parseClassElement(hasConstructor));\r\n\t            }\r\n\t        }\r\n\t        this.expect('}');\r\n\t        return body;\r\n\t    };\r\n\t    Parser.prototype.parseClassBody = function () {\r\n\t        var node = this.createNode();\r\n\t        var elementList = this.parseClassElementList();\r\n\t        return this.finalize(node, new Node.ClassBody(elementList));\r\n\t    };\r\n\t    Parser.prototype.parseClassDeclaration = function (identifierIsOptional) {\r\n\t        var node = this.createNode();\r\n\t        var previousStrict = this.context.strict;\r\n\t        this.context.strict = true;\r\n\t        this.expectKeyword('class');\r\n\t        var id = (identifierIsOptional && (this.lookahead.type !== 3 /* Identifier */)) ? null : this.parseVariableIdentifier();\r\n\t        var superClass = null;\r\n\t        if (this.matchKeyword('extends')) {\r\n\t            this.nextToken();\r\n\t            superClass = this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall);\r\n\t        }\r\n\t        var classBody = this.parseClassBody();\r\n\t        this.context.strict = previousStrict;\r\n\t        return this.finalize(node, new Node.ClassDeclaration(id, superClass, classBody));\r\n\t    };\r\n\t    Parser.prototype.parseClassExpression = function () {\r\n\t        var node = this.createNode();\r\n\t        var previousStrict = this.context.strict;\r\n\t        this.context.strict = true;\r\n\t        this.expectKeyword('class');\r\n\t        var id = (this.lookahead.type === 3 /* Identifier */) ? this.parseVariableIdentifier() : null;\r\n\t        var superClass = null;\r\n\t        if (this.matchKeyword('extends')) {\r\n\t            this.nextToken();\r\n\t            superClass = this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall);\r\n\t        }\r\n\t        var classBody = this.parseClassBody();\r\n\t        this.context.strict = previousStrict;\r\n\t        return this.finalize(node, new Node.ClassExpression(id, superClass, classBody));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-scripts\r\n\t    // https://tc39.github.io/ecma262/#sec-modules\r\n\t    Parser.prototype.parseModule = function () {\r\n\t        this.context.strict = true;\r\n\t        this.context.isModule = true;\r\n\t        this.scanner.isModule = true;\r\n\t        var node = this.createNode();\r\n\t        var body = this.parseDirectivePrologues();\r\n\t        while (this.lookahead.type !== 2 /* EOF */) {\r\n\t            body.push(this.parseStatementListItem());\r\n\t        }\r\n\t        return this.finalize(node, new Node.Module(body));\r\n\t    };\r\n\t    Parser.prototype.parseScript = function () {\r\n\t        var node = this.createNode();\r\n\t        var body = this.parseDirectivePrologues();\r\n\t        while (this.lookahead.type !== 2 /* EOF */) {\r\n\t            body.push(this.parseStatementListItem());\r\n\t        }\r\n\t        return this.finalize(node, new Node.Script(body));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-imports\r\n\t    Parser.prototype.parseModuleSpecifier = function () {\r\n\t        var node = this.createNode();\r\n\t        if (this.lookahead.type !== 8 /* StringLiteral */) {\r\n\t            this.throwError(messages_1.Messages.InvalidModuleSpecifier);\r\n\t        }\r\n\t        var token = this.nextToken();\r\n\t        var raw = this.getTokenRaw(token);\r\n\t        return this.finalize(node, new Node.Literal(token.value, raw));\r\n\t    };\r\n\t    // import {<foo as bar>} ...;\r\n\t    Parser.prototype.parseImportSpecifier = function () {\r\n\t        var node = this.createNode();\r\n\t        var imported;\r\n\t        var local;\r\n\t        if (this.lookahead.type === 3 /* Identifier */) {\r\n\t            imported = this.parseVariableIdentifier();\r\n\t            local = imported;\r\n\t            if (this.matchContextualKeyword('as')) {\r\n\t                this.nextToken();\r\n\t                local = this.parseVariableIdentifier();\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            imported = this.parseIdentifierName();\r\n\t            local = imported;\r\n\t            if (this.matchContextualKeyword('as')) {\r\n\t                this.nextToken();\r\n\t                local = this.parseVariableIdentifier();\r\n\t            }\r\n\t            else {\r\n\t                this.throwUnexpectedToken(this.nextToken());\r\n\t            }\r\n\t        }\r\n\t        return this.finalize(node, new Node.ImportSpecifier(local, imported));\r\n\t    };\r\n\t    // {foo, bar as bas}\r\n\t    Parser.prototype.parseNamedImports = function () {\r\n\t        this.expect('{');\r\n\t        var specifiers = [];\r\n\t        while (!this.match('}')) {\r\n\t            specifiers.push(this.parseImportSpecifier());\r\n\t            if (!this.match('}')) {\r\n\t                this.expect(',');\r\n\t            }\r\n\t        }\r\n\t        this.expect('}');\r\n\t        return specifiers;\r\n\t    };\r\n\t    // import <foo> ...;\r\n\t    Parser.prototype.parseImportDefaultSpecifier = function () {\r\n\t        var node = this.createNode();\r\n\t        var local = this.parseIdentifierName();\r\n\t        return this.finalize(node, new Node.ImportDefaultSpecifier(local));\r\n\t    };\r\n\t    // import <* as foo> ...;\r\n\t    Parser.prototype.parseImportNamespaceSpecifier = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expect('*');\r\n\t        if (!this.matchContextualKeyword('as')) {\r\n\t            this.throwError(messages_1.Messages.NoAsAfterImportNamespace);\r\n\t        }\r\n\t        this.nextToken();\r\n\t        var local = this.parseIdentifierName();\r\n\t        return this.finalize(node, new Node.ImportNamespaceSpecifier(local));\r\n\t    };\r\n\t    Parser.prototype.parseImportDeclaration = function () {\r\n\t        if (this.context.inFunctionBody) {\r\n\t            this.throwError(messages_1.Messages.IllegalImportDeclaration);\r\n\t        }\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('import');\r\n\t        var src;\r\n\t        var specifiers = [];\r\n\t        if (this.lookahead.type === 8 /* StringLiteral */) {\r\n\t            // import 'foo';\r\n\t            src = this.parseModuleSpecifier();\r\n\t        }\r\n\t        else {\r\n\t            if (this.match('{')) {\r\n\t                // import {bar}\r\n\t                specifiers = specifiers.concat(this.parseNamedImports());\r\n\t            }\r\n\t            else if (this.match('*')) {\r\n\t                // import * as foo\r\n\t                specifiers.push(this.parseImportNamespaceSpecifier());\r\n\t            }\r\n\t            else if (this.isIdentifierName(this.lookahead) && !this.matchKeyword('default')) {\r\n\t                // import foo\r\n\t                specifiers.push(this.parseImportDefaultSpecifier());\r\n\t                if (this.match(',')) {\r\n\t                    this.nextToken();\r\n\t                    if (this.match('*')) {\r\n\t                        // import foo, * as foo\r\n\t                        specifiers.push(this.parseImportNamespaceSpecifier());\r\n\t                    }\r\n\t                    else if (this.match('{')) {\r\n\t                        // import foo, {bar}\r\n\t                        specifiers = specifiers.concat(this.parseNamedImports());\r\n\t                    }\r\n\t                    else {\r\n\t                        this.throwUnexpectedToken(this.lookahead);\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                this.throwUnexpectedToken(this.nextToken());\r\n\t            }\r\n\t            if (!this.matchContextualKeyword('from')) {\r\n\t                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;\r\n\t                this.throwError(message, this.lookahead.value);\r\n\t            }\r\n\t            this.nextToken();\r\n\t            src = this.parseModuleSpecifier();\r\n\t        }\r\n\t        this.consumeSemicolon();\r\n\t        return this.finalize(node, new Node.ImportDeclaration(specifiers, src));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-exports\r\n\t    Parser.prototype.parseExportSpecifier = function () {\r\n\t        var node = this.createNode();\r\n\t        var local = this.parseIdentifierName();\r\n\t        var exported = local;\r\n\t        if (this.matchContextualKeyword('as')) {\r\n\t            this.nextToken();\r\n\t            exported = this.parseIdentifierName();\r\n\t        }\r\n\t        return this.finalize(node, new Node.ExportSpecifier(local, exported));\r\n\t    };\r\n\t    Parser.prototype.parseExportDeclaration = function () {\r\n\t        if (this.context.inFunctionBody) {\r\n\t            this.throwError(messages_1.Messages.IllegalExportDeclaration);\r\n\t        }\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('export');\r\n\t        var exportDeclaration;\r\n\t        if (this.matchKeyword('default')) {\r\n\t            // export default ...\r\n\t            this.nextToken();\r\n\t            if (this.matchKeyword('function')) {\r\n\t                // export default function foo () {}\r\n\t                // export default function () {}\r\n\t                var declaration = this.parseFunctionDeclaration(true);\r\n\t                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\r\n\t            }\r\n\t            else if (this.matchKeyword('class')) {\r\n\t                // export default class foo {}\r\n\t                var declaration = this.parseClassDeclaration(true);\r\n\t                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\r\n\t            }\r\n\t            else if (this.matchContextualKeyword('async')) {\r\n\t                // export default async function f () {}\r\n\t                // export default async function () {}\r\n\t                // export default async x => x\r\n\t                var declaration = this.matchAsyncFunction() ? this.parseFunctionDeclaration(true) : this.parseAssignmentExpression();\r\n\t                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\r\n\t            }\r\n\t            else {\r\n\t                if (this.matchContextualKeyword('from')) {\r\n\t                    this.throwError(messages_1.Messages.UnexpectedToken, this.lookahead.value);\r\n\t                }\r\n\t                // export default {};\r\n\t                // export default [];\r\n\t                // export default (1 + 2);\r\n\t                var declaration = this.match('{') ? this.parseObjectInitializer() :\r\n\t                    this.match('[') ? this.parseArrayInitializer() : this.parseAssignmentExpression();\r\n\t                this.consumeSemicolon();\r\n\t                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\r\n\t            }\r\n\t        }\r\n\t        else if (this.match('*')) {\r\n\t            // export * from 'foo';\r\n\t            this.nextToken();\r\n\t            if (!this.matchContextualKeyword('from')) {\r\n\t                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;\r\n\t                this.throwError(message, this.lookahead.value);\r\n\t            }\r\n\t            this.nextToken();\r\n\t            var src = this.parseModuleSpecifier();\r\n\t            this.consumeSemicolon();\r\n\t            exportDeclaration = this.finalize(node, new Node.ExportAllDeclaration(src));\r\n\t        }\r\n\t        else if (this.lookahead.type === 4 /* Keyword */) {\r\n\t            // export var f = 1;\r\n\t            var declaration = void 0;\r\n\t            switch (this.lookahead.value) {\r\n\t                case 'let':\r\n\t                case 'const':\r\n\t                    declaration = this.parseLexicalDeclaration({ inFor: false });\r\n\t                    break;\r\n\t                case 'var':\r\n\t                case 'class':\r\n\t                case 'function':\r\n\t                    declaration = this.parseStatementListItem();\r\n\t                    break;\r\n\t                default:\r\n\t                    this.throwUnexpectedToken(this.lookahead);\r\n\t            }\r\n\t            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(declaration, [], null));\r\n\t        }\r\n\t        else if (this.matchAsyncFunction()) {\r\n\t            var declaration = this.parseFunctionDeclaration();\r\n\t            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(declaration, [], null));\r\n\t        }\r\n\t        else {\r\n\t            var specifiers = [];\r\n\t            var source = null;\r\n\t            var isExportFromIdentifier = false;\r\n\t            this.expect('{');\r\n\t            while (!this.match('}')) {\r\n\t                isExportFromIdentifier = isExportFromIdentifier || this.matchKeyword('default');\r\n\t                specifiers.push(this.parseExportSpecifier());\r\n\t                if (!this.match('}')) {\r\n\t                    this.expect(',');\r\n\t                }\r\n\t            }\r\n\t            this.expect('}');\r\n\t            if (this.matchContextualKeyword('from')) {\r\n\t                // export {default} from 'foo';\r\n\t                // export {foo} from 'foo';\r\n\t                this.nextToken();\r\n\t                source = this.parseModuleSpecifier();\r\n\t                this.consumeSemicolon();\r\n\t            }\r\n\t            else if (isExportFromIdentifier) {\r\n\t                // export {default}; // missing fromClause\r\n\t                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;\r\n\t                this.throwError(message, this.lookahead.value);\r\n\t            }\r\n\t            else {\r\n\t                // export {foo};\r\n\t                this.consumeSemicolon();\r\n\t            }\r\n\t            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(null, specifiers, source));\r\n\t        }\r\n\t        return exportDeclaration;\r\n\t    };\r\n\t    return Parser;\r\n\t}());\r\n\texports.Parser = Parser;\r\n\r\n\r\n/***/ },\r\n/* 9 */\r\n/***/ function(module, exports) {\r\n\r\n\t\"use strict\";\r\n\t// Ensure the condition is true, otherwise throw an error.\r\n\t// This is only to have a better contract semantic, i.e. another safety net\r\n\t// to catch a logic error. The condition shall be fulfilled in normal case.\r\n\t// Do NOT use this to enforce a certain condition on any user input.\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tfunction assert(condition, message) {\r\n\t    /* istanbul ignore if */\r\n\t    if (!condition) {\r\n\t        throw new Error('ASSERT: ' + message);\r\n\t    }\r\n\t}\r\n\texports.assert = assert;\r\n\r\n\r\n/***/ },\r\n/* 10 */\r\n/***/ function(module, exports) {\r\n\r\n\t\"use strict\";\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar ErrorHandler = /** @class */ (function () {\r\n\t    function ErrorHandler() {\r\n\t        this.errors = [];\r\n\t        this.tolerant = false;\r\n\t    }\r\n\t    ErrorHandler.prototype.recordError = function (error) {\r\n\t        this.errors.push(error);\r\n\t    };\r\n\t    ErrorHandler.prototype.tolerate = function (error) {\r\n\t        if (this.tolerant) {\r\n\t            this.recordError(error);\r\n\t        }\r\n\t        else {\r\n\t            throw error;\r\n\t        }\r\n\t    };\r\n\t    ErrorHandler.prototype.constructError = function (msg, column) {\r\n\t        var error = new Error(msg);\r\n\t        try {\r\n\t            throw error;\r\n\t        }\r\n\t        catch (base) {\r\n\t            /* istanbul ignore else */\r\n\t            if (Object.create && Object.defineProperty) {\r\n\t                error = Object.create(base);\r\n\t                Object.defineProperty(error, 'column', { value: column });\r\n\t            }\r\n\t        }\r\n\t        /* istanbul ignore next */\r\n\t        return error;\r\n\t    };\r\n\t    ErrorHandler.prototype.createError = function (index, line, col, description) {\r\n\t        var msg = 'Line ' + line + ': ' + description;\r\n\t        var error = this.constructError(msg, col);\r\n\t        error.index = index;\r\n\t        error.lineNumber = line;\r\n\t        error.description = description;\r\n\t        return error;\r\n\t    };\r\n\t    ErrorHandler.prototype.throwError = function (index, line, col, description) {\r\n\t        throw this.createError(index, line, col, description);\r\n\t    };\r\n\t    ErrorHandler.prototype.tolerateError = function (index, line, col, description) {\r\n\t        var error = this.createError(index, line, col, description);\r\n\t        if (this.tolerant) {\r\n\t            this.recordError(error);\r\n\t        }\r\n\t        else {\r\n\t            throw error;\r\n\t        }\r\n\t    };\r\n\t    return ErrorHandler;\r\n\t}());\r\n\texports.ErrorHandler = ErrorHandler;\r\n\r\n\r\n/***/ },\r\n/* 11 */\r\n/***/ function(module, exports) {\r\n\r\n\t\"use strict\";\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t// Error messages should be identical to V8.\r\n\texports.Messages = {\r\n\t    BadImportCallArity: 'Unexpected token',\r\n\t    BadGetterArity: 'Getter must not have any formal parameters',\r\n\t    BadSetterArity: 'Setter must have exactly one formal parameter',\r\n\t    BadSetterRestParameter: 'Setter function argument must not be a rest parameter',\r\n\t    ConstructorIsAsync: 'Class constructor may not be an async method',\r\n\t    ConstructorSpecialMethod: 'Class constructor may not be an accessor',\r\n\t    DeclarationMissingInitializer: 'Missing initializer in %0 declaration',\r\n\t    DefaultRestParameter: 'Unexpected token =',\r\n\t    DefaultRestProperty: 'Unexpected token =',\r\n\t    DuplicateBinding: 'Duplicate binding %0',\r\n\t    DuplicateConstructor: 'A class may only have one constructor',\r\n\t    DuplicateProtoProperty: 'Duplicate __proto__ fields are not allowed in object literals',\r\n\t    ForInOfLoopInitializer: '%0 loop variable declaration may not have an initializer',\r\n\t    GeneratorInLegacyContext: 'Generator declarations are not allowed in legacy contexts',\r\n\t    IllegalBreak: 'Illegal break statement',\r\n\t    IllegalContinue: 'Illegal continue statement',\r\n\t    IllegalExportDeclaration: 'Unexpected token',\r\n\t    IllegalImportDeclaration: 'Unexpected token',\r\n\t    IllegalLanguageModeDirective: 'Illegal \\'use strict\\' directive in function with non-simple parameter list',\r\n\t    IllegalReturn: 'Illegal return statement',\r\n\t    InvalidEscapedReservedWord: 'Keyword must not contain escaped characters',\r\n\t    InvalidHexEscapeSequence: 'Invalid hexadecimal escape sequence',\r\n\t    InvalidLHSInAssignment: 'Invalid left-hand side in assignment',\r\n\t    InvalidLHSInForIn: 'Invalid left-hand side in for-in',\r\n\t    InvalidLHSInForLoop: 'Invalid left-hand side in for-loop',\r\n\t    InvalidModuleSpecifier: 'Unexpected token',\r\n\t    InvalidRegExp: 'Invalid regular expression',\r\n\t    LetInLexicalBinding: 'let is disallowed as a lexically bound name',\r\n\t    MissingFromClause: 'Unexpected token',\r\n\t    MultipleDefaultsInSwitch: 'More than one default clause in switch statement',\r\n\t    NewlineAfterThrow: 'Illegal newline after throw',\r\n\t    NoAsAfterImportNamespace: 'Unexpected token',\r\n\t    NoCatchOrFinally: 'Missing catch or finally after try',\r\n\t    ParameterAfterRestParameter: 'Rest parameter must be last formal parameter',\r\n\t    PropertyAfterRestProperty: 'Unexpected token',\r\n\t    Redeclaration: '%0 \\'%1\\' has already been declared',\r\n\t    StaticPrototype: 'Classes may not have static property named prototype',\r\n\t    StrictCatchVariable: 'Catch variable may not be eval or arguments in strict mode',\r\n\t    StrictDelete: 'Delete of an unqualified identifier in strict mode.',\r\n\t    StrictFunction: 'In strict mode code, functions can only be declared at top level or inside a block',\r\n\t    StrictFunctionName: 'Function name may not be eval or arguments in strict mode',\r\n\t    StrictLHSAssignment: 'Assignment to eval or arguments is not allowed in strict mode',\r\n\t    StrictLHSPostfix: 'Postfix increment/decrement may not have eval or arguments operand in strict mode',\r\n\t    StrictLHSPrefix: 'Prefix increment/decrement may not have eval or arguments operand in strict mode',\r\n\t    StrictModeWith: 'Strict mode code may not include a with statement',\r\n\t    StrictOctalLiteral: 'Octal literals are not allowed in strict mode.',\r\n\t    StrictParamDupe: 'Strict mode function may not have duplicate parameter names',\r\n\t    StrictParamName: 'Parameter name eval or arguments is not allowed in strict mode',\r\n\t    StrictReservedWord: 'Use of future reserved word in strict mode',\r\n\t    StrictVarName: 'Variable name may not be eval or arguments in strict mode',\r\n\t    TemplateOctalLiteral: 'Octal literals are not allowed in template strings.',\r\n\t    UnexpectedEOS: 'Unexpected end of input',\r\n\t    UnexpectedIdentifier: 'Unexpected identifier',\r\n\t    UnexpectedNumber: 'Unexpected number',\r\n\t    UnexpectedReserved: 'Unexpected reserved word',\r\n\t    UnexpectedString: 'Unexpected string',\r\n\t    UnexpectedTemplate: 'Unexpected quasi %0',\r\n\t    UnexpectedToken: 'Unexpected token %0',\r\n\t    UnexpectedTokenIllegal: 'Unexpected token ILLEGAL',\r\n\t    UnknownLabel: 'Undefined label \\'%0\\'',\r\n\t    UnterminatedRegExp: 'Invalid regular expression: missing /'\r\n\t};\r\n\r\n\r\n/***/ },\r\n/* 12 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\"use strict\";\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar assert_1 = __webpack_require__(9);\r\n\tvar character_1 = __webpack_require__(4);\r\n\tvar messages_1 = __webpack_require__(11);\r\n\tfunction hexValue(ch) {\r\n\t    return '0123456789abcdef'.indexOf(ch.toLowerCase());\r\n\t}\r\n\tfunction octalValue(ch) {\r\n\t    return '01234567'.indexOf(ch);\r\n\t}\r\n\tvar Scanner = /** @class */ (function () {\r\n\t    function Scanner(code, handler) {\r\n\t        this.source = code;\r\n\t        this.errorHandler = handler;\r\n\t        this.trackComment = false;\r\n\t        this.isModule = false;\r\n\t        this.length = code.length;\r\n\t        this.index = 0;\r\n\t        this.lineNumber = (code.length > 0) ? 1 : 0;\r\n\t        this.lineStart = 0;\r\n\t        this.curlyStack = [];\r\n\t    }\r\n\t    Scanner.prototype.saveState = function () {\r\n\t        return {\r\n\t            index: this.index,\r\n\t            lineNumber: this.lineNumber,\r\n\t            lineStart: this.lineStart,\r\n\t            curlyStack: this.curlyStack.slice()\r\n\t        };\r\n\t    };\r\n\t    Scanner.prototype.restoreState = function (state) {\r\n\t        this.index = state.index;\r\n\t        this.lineNumber = state.lineNumber;\r\n\t        this.lineStart = state.lineStart;\r\n\t        this.curlyStack = state.curlyStack;\r\n\t    };\r\n\t    Scanner.prototype.eof = function () {\r\n\t        return this.index >= this.length;\r\n\t    };\r\n\t    Scanner.prototype.throwUnexpectedToken = function (message) {\r\n\t        if (message === void 0) { message = messages_1.Messages.UnexpectedTokenIllegal; }\r\n\t        return this.errorHandler.throwError(this.index, this.lineNumber, this.index - this.lineStart + 1, message);\r\n\t    };\r\n\t    Scanner.prototype.tolerateUnexpectedToken = function (message) {\r\n\t        if (message === void 0) { message = messages_1.Messages.UnexpectedTokenIllegal; }\r\n\t        this.errorHandler.tolerateError(this.index, this.lineNumber, this.index - this.lineStart + 1, message);\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-comments\r\n\t    Scanner.prototype.skipSingleLineComment = function (offset) {\r\n\t        var comments = [];\r\n\t        var start, loc;\r\n\t        if (this.trackComment) {\r\n\t            comments = [];\r\n\t            start = this.index - offset;\r\n\t            loc = {\r\n\t                start: {\r\n\t                    line: this.lineNumber,\r\n\t                    column: this.index - this.lineStart - offset\r\n\t                },\r\n\t                end: {}\r\n\t            };\r\n\t        }\r\n\t        while (!this.eof()) {\r\n\t            var ch = this.source.charCodeAt(this.index);\r\n\t            ++this.index;\r\n\t            if (character_1.Character.isLineTerminator(ch)) {\r\n\t                if (this.trackComment) {\r\n\t                    loc.end = {\r\n\t                        line: this.lineNumber,\r\n\t                        column: this.index - this.lineStart - 1\r\n\t                    };\r\n\t                    var entry = {\r\n\t                        multiLine: false,\r\n\t                        slice: [start + offset, this.index - 1],\r\n\t                        range: [start, this.index - 1],\r\n\t                        loc: loc\r\n\t                    };\r\n\t                    comments.push(entry);\r\n\t                }\r\n\t                if (ch === 13 && this.source.charCodeAt(this.index) === 10) {\r\n\t                    ++this.index;\r\n\t                }\r\n\t                ++this.lineNumber;\r\n\t                this.lineStart = this.index;\r\n\t                return comments;\r\n\t            }\r\n\t        }\r\n\t        if (this.trackComment) {\r\n\t            loc.end = {\r\n\t                line: this.lineNumber,\r\n\t                column: this.index - this.lineStart\r\n\t            };\r\n\t            var entry = {\r\n\t                multiLine: false,\r\n\t                slice: [start + offset, this.index],\r\n\t                range: [start, this.index],\r\n\t                loc: loc\r\n\t            };\r\n\t            comments.push(entry);\r\n\t        }\r\n\t        return comments;\r\n\t    };\r\n\t    Scanner.prototype.skipMultiLineComment = function () {\r\n\t        var comments = [];\r\n\t        var start, loc;\r\n\t        if (this.trackComment) {\r\n\t            comments = [];\r\n\t            start = this.index - 2;\r\n\t            loc = {\r\n\t                start: {\r\n\t                    line: this.lineNumber,\r\n\t                    column: this.index - this.lineStart - 2\r\n\t                },\r\n\t                end: {}\r\n\t            };\r\n\t        }\r\n\t        while (!this.eof()) {\r\n\t            var ch = this.source.charCodeAt(this.index);\r\n\t            if (character_1.Character.isLineTerminator(ch)) {\r\n\t                if (ch === 0x0D && this.source.charCodeAt(this.index + 1) === 0x0A) {\r\n\t                    ++this.index;\r\n\t                }\r\n\t                ++this.lineNumber;\r\n\t                ++this.index;\r\n\t                this.lineStart = this.index;\r\n\t            }\r\n\t            else if (ch === 0x2A) {\r\n\t                // Block comment ends with '*/'.\r\n\t                if (this.source.charCodeAt(this.index + 1) === 0x2F) {\r\n\t                    this.index += 2;\r\n\t                    if (this.trackComment) {\r\n\t                        loc.end = {\r\n\t                            line: this.lineNumber,\r\n\t                            column: this.index - this.lineStart\r\n\t                        };\r\n\t                        var entry = {\r\n\t                            multiLine: true,\r\n\t                            slice: [start + 2, this.index - 2],\r\n\t                            range: [start, this.index],\r\n\t                            loc: loc\r\n\t                        };\r\n\t                        comments.push(entry);\r\n\t                    }\r\n\t                    return comments;\r\n\t                }\r\n\t                ++this.index;\r\n\t            }\r\n\t            else {\r\n\t                ++this.index;\r\n\t            }\r\n\t        }\r\n\t        // Ran off the end of the file - the whole thing is a comment\r\n\t        if (this.trackComment) {\r\n\t            loc.end = {\r\n\t                line: this.lineNumber,\r\n\t                column: this.index - this.lineStart\r\n\t            };\r\n\t            var entry = {\r\n\t                multiLine: true,\r\n\t                slice: [start + 2, this.index],\r\n\t                range: [start, this.index],\r\n\t                loc: loc\r\n\t            };\r\n\t            comments.push(entry);\r\n\t        }\r\n\t        this.tolerateUnexpectedToken();\r\n\t        return comments;\r\n\t    };\r\n\t    Scanner.prototype.scanComments = function () {\r\n\t        var comments;\r\n\t        if (this.trackComment) {\r\n\t            comments = [];\r\n\t        }\r\n\t        var start = (this.index === 0);\r\n\t        while (!this.eof()) {\r\n\t            var ch = this.source.charCodeAt(this.index);\r\n\t            if (character_1.Character.isWhiteSpace(ch)) {\r\n\t                ++this.index;\r\n\t            }\r\n\t            else if (character_1.Character.isLineTerminator(ch)) {\r\n\t                ++this.index;\r\n\t                if (ch === 0x0D && this.source.charCodeAt(this.index) === 0x0A) {\r\n\t                    ++this.index;\r\n\t                }\r\n\t                ++this.lineNumber;\r\n\t                this.lineStart = this.index;\r\n\t                start = true;\r\n\t            }\r\n\t            else if (ch === 0x2F) { // U+002F is '/'\r\n\t                ch = this.source.charCodeAt(this.index + 1);\r\n\t                if (ch === 0x2F) {\r\n\t                    this.index += 2;\r\n\t                    var comment = this.skipSingleLineComment(2);\r\n\t                    if (this.trackComment) {\r\n\t                        comments = comments.concat(comment);\r\n\t                    }\r\n\t                    start = true;\r\n\t                }\r\n\t                else if (ch === 0x2A) { // U+002A is '*'\r\n\t                    this.index += 2;\r\n\t                    var comment = this.skipMultiLineComment();\r\n\t                    if (this.trackComment) {\r\n\t                        comments = comments.concat(comment);\r\n\t                    }\r\n\t                }\r\n\t                else {\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\t            else if (start && ch === 0x2D) { // U+002D is '-'\r\n\t                // U+003E is '>'\r\n\t                if ((this.source.charCodeAt(this.index + 1) === 0x2D) && (this.source.charCodeAt(this.index + 2) === 0x3E)) {\r\n\t                    // '-->' is a single-line comment\r\n\t                    this.index += 3;\r\n\t                    var comment = this.skipSingleLineComment(3);\r\n\t                    if (this.trackComment) {\r\n\t                        comments = comments.concat(comment);\r\n\t                    }\r\n\t                }\r\n\t                else {\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\t            else if (ch === 0x3C && !this.isModule) { // U+003C is '<'\r\n\t                if (this.source.slice(this.index + 1, this.index + 4) === '!--') {\r\n\t                    this.index += 4; // `<!--`\r\n\t                    var comment = this.skipSingleLineComment(4);\r\n\t                    if (this.trackComment) {\r\n\t                        comments = comments.concat(comment);\r\n\t                    }\r\n\t                }\r\n\t                else {\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                break;\r\n\t            }\r\n\t        }\r\n\t        return comments;\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-future-reserved-words\r\n\t    Scanner.prototype.isFutureReservedWord = function (id) {\r\n\t        switch (id) {\r\n\t            case 'enum':\r\n\t            case 'export':\r\n\t            case 'import':\r\n\t            case 'super':\r\n\t                return true;\r\n\t            default:\r\n\t                return false;\r\n\t        }\r\n\t    };\r\n\t    Scanner.prototype.isStrictModeReservedWord = function (id) {\r\n\t        switch (id) {\r\n\t            case 'implements':\r\n\t            case 'interface':\r\n\t            case 'package':\r\n\t            case 'private':\r\n\t            case 'protected':\r\n\t            case 'public':\r\n\t            case 'static':\r\n\t            case 'yield':\r\n\t            case 'let':\r\n\t                return true;\r\n\t            default:\r\n\t                return false;\r\n\t        }\r\n\t    };\r\n\t    Scanner.prototype.isRestrictedWord = function (id) {\r\n\t        return id === 'eval' || id === 'arguments';\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-keywords\r\n\t    Scanner.prototype.isKeyword = function (id) {\r\n\t        switch (id.length) {\r\n\t            case 2:\r\n\t                return (id === 'if') || (id === 'in') || (id === 'do');\r\n\t            case 3:\r\n\t                return (id === 'var') || (id === 'for') || (id === 'new') ||\r\n\t                    (id === 'try') || (id === 'let');\r\n\t            case 4:\r\n\t                return (id === 'this') || (id === 'else') || (id === 'case') ||\r\n\t                    (id === 'void') || (id === 'with') || (id === 'enum');\r\n\t            case 5:\r\n\t                return (id === 'while') || (id === 'break') || (id === 'catch') ||\r\n\t                    (id === 'throw') || (id === 'const') || (id === 'yield') ||\r\n\t                    (id === 'class') || (id === 'super');\r\n\t            case 6:\r\n\t                return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\r\n\t                    (id === 'switch') || (id === 'export') || (id === 'import');\r\n\t            case 7:\r\n\t                return (id === 'default') || (id === 'finally') || (id === 'extends');\r\n\t            case 8:\r\n\t                return (id === 'function') || (id === 'continue') || (id === 'debugger');\r\n\t            case 10:\r\n\t                return (id === 'instanceof');\r\n\t            default:\r\n\t                return false;\r\n\t        }\r\n\t    };\r\n\t    Scanner.prototype.codePointAt = function (i) {\r\n\t        var cp = this.source.charCodeAt(i);\r\n\t        if (cp >= 0xD800 && cp <= 0xDBFF) {\r\n\t            var second = this.source.charCodeAt(i + 1);\r\n\t            if (second >= 0xDC00 && second <= 0xDFFF) {\r\n\t                var first = cp;\r\n\t                cp = (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\r\n\t            }\r\n\t        }\r\n\t        return cp;\r\n\t    };\r\n\t    Scanner.prototype.scanHexEscape = function (prefix) {\r\n\t        var len = (prefix === 'u') ? 4 : 2;\r\n\t        var code = 0;\r\n\t        for (var i = 0; i < len; ++i) {\r\n\t            if (!this.eof() && character_1.Character.isHexDigit(this.source.charCodeAt(this.index))) {\r\n\t                code = code * 16 + hexValue(this.source[this.index++]);\r\n\t            }\r\n\t            else {\r\n\t                return null;\r\n\t            }\r\n\t        }\r\n\t        return String.fromCharCode(code);\r\n\t    };\r\n\t    Scanner.prototype.scanUnicodeCodePointEscape = function () {\r\n\t        var ch = this.source[this.index];\r\n\t        var code = 0;\r\n\t        // At least, one hex digit is required.\r\n\t        if (ch === '}') {\r\n\t            this.throwUnexpectedToken();\r\n\t        }\r\n\t        while (!this.eof()) {\r\n\t            ch = this.source[this.index++];\r\n\t            if (!character_1.Character.isHexDigit(ch.charCodeAt(0))) {\r\n\t                break;\r\n\t            }\r\n\t            code = code * 16 + hexValue(ch);\r\n\t        }\r\n\t        if (code > 0x10FFFF || ch !== '}') {\r\n\t            this.throwUnexpectedToken();\r\n\t        }\r\n\t        return character_1.Character.fromCodePoint(code);\r\n\t    };\r\n\t    Scanner.prototype.getIdentifier = function () {\r\n\t        var start = this.index++;\r\n\t        while (!this.eof()) {\r\n\t            var ch = this.source.charCodeAt(this.index);\r\n\t            if (ch === 0x5C) {\r\n\t                // Blackslash (U+005C) marks Unicode escape sequence.\r\n\t                this.index = start;\r\n\t                return this.getComplexIdentifier();\r\n\t            }\r\n\t            else if (ch >= 0xD800 && ch < 0xDFFF) {\r\n\t                // Need to handle surrogate pairs.\r\n\t                this.index = start;\r\n\t                return this.getComplexIdentifier();\r\n\t            }\r\n\t            if (character_1.Character.isIdentifierPart(ch)) {\r\n\t                ++this.index;\r\n\t            }\r\n\t            else {\r\n\t                break;\r\n\t            }\r\n\t        }\r\n\t        return this.source.slice(start, this.index);\r\n\t    };\r\n\t    Scanner.prototype.getComplexIdentifier = function () {\r\n\t        var cp = this.codePointAt(this.index);\r\n\t        var id = character_1.Character.fromCodePoint(cp);\r\n\t        this.index += id.length;\r\n\t        // '\\u' (U+005C, U+0075) denotes an escaped character.\r\n\t        var ch;\r\n\t        if (cp === 0x5C) {\r\n\t            if (this.source.charCodeAt(this.index) !== 0x75) {\r\n\t                this.throwUnexpectedToken();\r\n\t            }\r\n\t            ++this.index;\r\n\t            if (this.source[this.index] === '{') {\r\n\t                ++this.index;\r\n\t                ch = this.scanUnicodeCodePointEscape();\r\n\t            }\r\n\t            else {\r\n\t                ch = this.scanHexEscape('u');\r\n\t                if (ch === null || ch === '\\\\' || !character_1.Character.isIdentifierStart(ch.charCodeAt(0))) {\r\n\t                    this.throwUnexpectedToken();\r\n\t                }\r\n\t            }\r\n\t            id = ch;\r\n\t        }\r\n\t        while (!this.eof()) {\r\n\t            cp = this.codePointAt(this.index);\r\n\t            if (!character_1.Character.isIdentifierPart(cp)) {\r\n\t                break;\r\n\t            }\r\n\t            ch = character_1.Character.fromCodePoint(cp);\r\n\t            id += ch;\r\n\t            this.index += ch.length;\r\n\t            // '\\u' (U+005C, U+0075) denotes an escaped character.\r\n\t            if (cp === 0x5C) {\r\n\t                id = id.substr(0, id.length - 1);\r\n\t                if (this.source.charCodeAt(this.index) !== 0x75) {\r\n\t                    this.throwUnexpectedToken();\r\n\t                }\r\n\t                ++this.index;\r\n\t                if (this.source[this.index] === '{') {\r\n\t                    ++this.index;\r\n\t                    ch = this.scanUnicodeCodePointEscape();\r\n\t                }\r\n\t                else {\r\n\t                    ch = this.scanHexEscape('u');\r\n\t                    if (ch === null || ch === '\\\\' || !character_1.Character.isIdentifierPart(ch.charCodeAt(0))) {\r\n\t                        this.throwUnexpectedToken();\r\n\t                    }\r\n\t                }\r\n\t                id += ch;\r\n\t            }\r\n\t        }\r\n\t        return id;\r\n\t    };\r\n\t    Scanner.prototype.octalToDecimal = function (ch) {\r\n\t        // \\0 is not octal escape sequence\r\n\t        var octal = (ch !== '0');\r\n\t        var code = octalValue(ch);\r\n\t        if (!this.eof() && character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {\r\n\t            octal = true;\r\n\t            code = code * 8 + octalValue(this.source[this.index++]);\r\n\t            // 3 digits are only allowed when string starts\r\n\t            // with 0, 1, 2, 3\r\n\t            if ('0123'.indexOf(ch) >= 0 && !this.eof() && character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {\r\n\t                code = code * 8 + octalValue(this.source[this.index++]);\r\n\t            }\r\n\t        }\r\n\t        return {\r\n\t            code: code,\r\n\t            octal: octal\r\n\t        };\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-names-and-keywords\r\n\t    Scanner.prototype.scanIdentifier = function () {\r\n\t        var type;\r\n\t        var start = this.index;\r\n\t        // Backslash (U+005C) starts an escaped character.\r\n\t        var id = (this.source.charCodeAt(start) === 0x5C) ? this.getComplexIdentifier() : this.getIdentifier();\r\n\t        // There is no keyword or literal with only one character.\r\n\t        // Thus, it must be an identifier.\r\n\t        if (id.length === 1) {\r\n\t            type = 3 /* Identifier */;\r\n\t        }\r\n\t        else if (this.isKeyword(id)) {\r\n\t            type = 4 /* Keyword */;\r\n\t        }\r\n\t        else if (id === 'null') {\r\n\t            type = 5 /* NullLiteral */;\r\n\t        }\r\n\t        else if (id === 'true' || id === 'false') {\r\n\t            type = 1 /* BooleanLiteral */;\r\n\t        }\r\n\t        else {\r\n\t            type = 3 /* Identifier */;\r\n\t        }\r\n\t        if (type !== 3 /* Identifier */ && (start + id.length !== this.index)) {\r\n\t            var restore = this.index;\r\n\t            this.index = start;\r\n\t            this.tolerateUnexpectedToken(messages_1.Messages.InvalidEscapedReservedWord);\r\n\t            this.index = restore;\r\n\t        }\r\n\t        return {\r\n\t            type: type,\r\n\t            value: id,\r\n\t            lineNumber: this.lineNumber,\r\n\t            lineStart: this.lineStart,\r\n\t            start: start,\r\n\t            end: this.index\r\n\t        };\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-punctuators\r\n\t    Scanner.prototype.scanPunctuator = function () {\r\n\t        var start = this.index;\r\n\t        // Check for most common single-character punctuators.\r\n\t        var str = this.source[this.index];\r\n\t        switch (str) {\r\n\t            case '(':\r\n\t            case '{':\r\n\t                if (str === '{') {\r\n\t                    this.curlyStack.push('{');\r\n\t                }\r\n\t                ++this.index;\r\n\t                break;\r\n\t            case '.':\r\n\t                ++this.index;\r\n\t                if (this.source[this.index] === '.' && this.source[this.index + 1] === '.') {\r\n\t                    // Spread operator: ...\r\n\t                    this.index += 2;\r\n\t                    str = '...';\r\n\t                }\r\n\t                break;\r\n\t            case '}':\r\n\t                ++this.index;\r\n\t                this.curlyStack.pop();\r\n\t                break;\r\n\t            case ')':\r\n\t            case ';':\r\n\t            case ',':\r\n\t            case '[':\r\n\t            case ']':\r\n\t            case ':':\r\n\t            case '?':\r\n\t            case '~':\r\n\t                ++this.index;\r\n\t                break;\r\n\t            default:\r\n\t                // 4-character punctuator.\r\n\t                str = this.source.substr(this.index, 4);\r\n\t                if (str === '>>>=') {\r\n\t                    this.index += 4;\r\n\t                }\r\n\t                else {\r\n\t                    // 3-character punctuators.\r\n\t                    str = str.substr(0, 3);\r\n\t                    if (str === '===' || str === '!==' || str === '>>>' ||\r\n\t                        str === '<<=' || str === '>>=' || str === '**=') {\r\n\t                        this.index += 3;\r\n\t                    }\r\n\t                    else {\r\n\t                        // 2-character punctuators.\r\n\t                        str = str.substr(0, 2);\r\n\t                        if (str === '&&' || str === '||' || str === '==' || str === '!=' ||\r\n\t                            str === '+=' || str === '-=' || str === '*=' || str === '/=' ||\r\n\t                            str === '++' || str === '--' || str === '<<' || str === '>>' ||\r\n\t                            str === '&=' || str === '|=' || str === '^=' || str === '%=' ||\r\n\t                            str === '<=' || str === '>=' || str === '=>' || str === '**') {\r\n\t                            this.index += 2;\r\n\t                        }\r\n\t                        else {\r\n\t                            // 1-character punctuators.\r\n\t                            str = this.source[this.index];\r\n\t                            if ('<>=!+-*%&|^/'.indexOf(str) >= 0) {\r\n\t                                ++this.index;\r\n\t                            }\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t        }\r\n\t        if (this.index === start) {\r\n\t            this.throwUnexpectedToken();\r\n\t        }\r\n\t        return {\r\n\t            type: 7 /* Punctuator */,\r\n\t            value: str,\r\n\t            lineNumber: this.lineNumber,\r\n\t            lineStart: this.lineStart,\r\n\t            start: start,\r\n\t            end: this.index\r\n\t        };\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-literals-numeric-literals\r\n\t    Scanner.prototype.scanHexLiteral = function (start) {\r\n\t        var num = '';\r\n\t        while (!this.eof()) {\r\n\t            if (!character_1.Character.isHexDigit(this.source.charCodeAt(this.index))) {\r\n\t                break;\r\n\t            }\r\n\t            num += this.source[this.index++];\r\n\t        }\r\n\t        if (num.length === 0) {\r\n\t            this.throwUnexpectedToken();\r\n\t        }\r\n\t        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index))) {\r\n\t            this.throwUnexpectedToken();\r\n\t        }\r\n\t        return {\r\n\t            type: 6 /* NumericLiteral */,\r\n\t            value: parseInt('0x' + num, 16),\r\n\t            lineNumber: this.lineNumber,\r\n\t            lineStart: this.lineStart,\r\n\t            start: start,\r\n\t            end: this.index\r\n\t        };\r\n\t    };\r\n\t    Scanner.prototype.scanBinaryLiteral = function (start) {\r\n\t        var num = '';\r\n\t        var ch;\r\n\t        while (!this.eof()) {\r\n\t            ch = this.source[this.index];\r\n\t            if (ch !== '0' && ch !== '1') {\r\n\t                break;\r\n\t            }\r\n\t            num += this.source[this.index++];\r\n\t        }\r\n\t        if (num.length === 0) {\r\n\t            // only 0b or 0B\r\n\t            this.throwUnexpectedToken();\r\n\t        }\r\n\t        if (!this.eof()) {\r\n\t            ch = this.source.charCodeAt(this.index);\r\n\t            /* istanbul ignore else */\r\n\t            if (character_1.Character.isIdentifierStart(ch) || character_1.Character.isDecimalDigit(ch)) {\r\n\t                this.throwUnexpectedToken();\r\n\t            }\r\n\t        }\r\n\t        return {\r\n\t            type: 6 /* NumericLiteral */,\r\n\t            value: parseInt(num, 2),\r\n\t            lineNumber: this.lineNumber,\r\n\t            lineStart: this.lineStart,\r\n\t            start: start,\r\n\t            end: this.index\r\n\t        };\r\n\t    };\r\n\t    Scanner.prototype.scanOctalLiteral = function (prefix, start) {\r\n\t        var num = '';\r\n\t        var octal = false;\r\n\t        if (character_1.Character.isOctalDigit(prefix.charCodeAt(0))) {\r\n\t            octal = true;\r\n\t            num = '0' + this.source[this.index++];\r\n\t        }\r\n\t        else {\r\n\t            ++this.index;\r\n\t        }\r\n\t        while (!this.eof()) {\r\n\t            if (!character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {\r\n\t                break;\r\n\t            }\r\n\t            num += this.source[this.index++];\r\n\t        }\r\n\t        if (!octal && num.length === 0) {\r\n\t            // only 0o or 0O\r\n\t            this.throwUnexpectedToken();\r\n\t        }\r\n\t        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index)) || character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\r\n\t            this.throwUnexpectedToken();\r\n\t        }\r\n\t        return {\r\n\t            type: 6 /* NumericLiteral */,\r\n\t            value: parseInt(num, 8),\r\n\t            octal: octal,\r\n\t            lineNumber: this.lineNumber,\r\n\t            lineStart: this.lineStart,\r\n\t            start: start,\r\n\t            end: this.index\r\n\t        };\r\n\t    };\r\n\t    Scanner.prototype.isImplicitOctalLiteral = function () {\r\n\t        // Implicit octal, unless there is a non-octal digit.\r\n\t        // (Annex B.1.1 on Numeric Literals)\r\n\t        for (var i = this.index + 1; i < this.length; ++i) {\r\n\t            var ch = this.source[i];\r\n\t            if (ch === '8' || ch === '9') {\r\n\t                return false;\r\n\t            }\r\n\t            if (!character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\r\n\t                return true;\r\n\t            }\r\n\t        }\r\n\t        return true;\r\n\t    };\r\n\t    Scanner.prototype.scanNumericLiteral = function () {\r\n\t        var start = this.index;\r\n\t        var ch = this.source[start];\r\n\t        assert_1.assert(character_1.Character.isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'), 'Numeric literal must start with a decimal digit or a decimal point');\r\n\t        var num = '';\r\n\t        if (ch !== '.') {\r\n\t            num = this.source[this.index++];\r\n\t            ch = this.source[this.index];\r\n\t            // Hex number starts with '0x'.\r\n\t            // Octal number starts with '0'.\r\n\t            // Octal number in ES6 starts with '0o'.\r\n\t            // Binary number in ES6 starts with '0b'.\r\n\t            if (num === '0') {\r\n\t                if (ch === 'x' || ch === 'X') {\r\n\t                    ++this.index;\r\n\t                    return this.scanHexLiteral(start);\r\n\t                }\r\n\t                if (ch === 'b' || ch === 'B') {\r\n\t                    ++this.index;\r\n\t                    return this.scanBinaryLiteral(start);\r\n\t                }\r\n\t                if (ch === 'o' || ch === 'O') {\r\n\t                    return this.scanOctalLiteral(ch, start);\r\n\t                }\r\n\t                if (ch && character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\r\n\t                    if (this.isImplicitOctalLiteral()) {\r\n\t                        return this.scanOctalLiteral(ch, start);\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\r\n\t                num += this.source[this.index++];\r\n\t            }\r\n\t            ch = this.source[this.index];\r\n\t        }\r\n\t        if (ch === '.') {\r\n\t            num += this.source[this.index++];\r\n\t            while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\r\n\t                num += this.source[this.index++];\r\n\t            }\r\n\t            ch = this.source[this.index];\r\n\t        }\r\n\t        if (ch === 'e' || ch === 'E') {\r\n\t            num += this.source[this.index++];\r\n\t            ch = this.source[this.index];\r\n\t            if (ch === '+' || ch === '-') {\r\n\t                num += this.source[this.index++];\r\n\t            }\r\n\t            if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\r\n\t                while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\r\n\t                    num += this.source[this.index++];\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                this.throwUnexpectedToken();\r\n\t            }\r\n\t        }\r\n\t        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index))) {\r\n\t            this.throwUnexpectedToken();\r\n\t        }\r\n\t        return {\r\n\t            type: 6 /* NumericLiteral */,\r\n\t            value: parseFloat(num),\r\n\t            lineNumber: this.lineNumber,\r\n\t            lineStart: this.lineStart,\r\n\t            start: start,\r\n\t            end: this.index\r\n\t        };\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-literals-string-literals\r\n\t    Scanner.prototype.scanStringLiteral = function () {\r\n\t        var start = this.index;\r\n\t        var quote = this.source[start];\r\n\t        assert_1.assert((quote === '\\'' || quote === '\"'), 'String literal must starts with a quote');\r\n\t        ++this.index;\r\n\t        var octal = false;\r\n\t        var str = '';\r\n\t        while (!this.eof()) {\r\n\t            var ch = this.source[this.index++];\r\n\t            if (ch === quote) {\r\n\t                quote = '';\r\n\t                break;\r\n\t            }\r\n\t            else if (ch === '\\\\') {\r\n\t                ch = this.source[this.index++];\r\n\t                if (!ch || !character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\r\n\t                    switch (ch) {\r\n\t                        case 'u':\r\n\t                            if (this.source[this.index] === '{') {\r\n\t                                ++this.index;\r\n\t                                str += this.scanUnicodeCodePointEscape();\r\n\t                            }\r\n\t                            else {\r\n\t                                var unescapedChar = this.scanHexEscape(ch);\r\n\t                                if (unescapedChar === null) {\r\n\t                                    this.throwUnexpectedToken();\r\n\t                                }\r\n\t                                str += unescapedChar;\r\n\t                            }\r\n\t                            break;\r\n\t                        case 'x':\r\n\t                            var unescaped = this.scanHexEscape(ch);\r\n\t                            if (unescaped === null) {\r\n\t                                this.throwUnexpectedToken(messages_1.Messages.InvalidHexEscapeSequence);\r\n\t                            }\r\n\t                            str += unescaped;\r\n\t                            break;\r\n\t                        case 'n':\r\n\t                            str += '\\n';\r\n\t                            break;\r\n\t                        case 'r':\r\n\t                            str += '\\r';\r\n\t                            break;\r\n\t                        case 't':\r\n\t                            str += '\\t';\r\n\t                            break;\r\n\t                        case 'b':\r\n\t                            str += '\\b';\r\n\t                            break;\r\n\t                        case 'f':\r\n\t                            str += '\\f';\r\n\t                            break;\r\n\t                        case 'v':\r\n\t                            str += '\\x0B';\r\n\t                            break;\r\n\t                        case '8':\r\n\t                        case '9':\r\n\t                            str += ch;\r\n\t                            this.tolerateUnexpectedToken();\r\n\t                            break;\r\n\t                        default:\r\n\t                            if (ch && character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\r\n\t                                var octToDec = this.octalToDecimal(ch);\r\n\t                                octal = octToDec.octal || octal;\r\n\t                                str += String.fromCharCode(octToDec.code);\r\n\t                            }\r\n\t                            else {\r\n\t                                str += ch;\r\n\t                            }\r\n\t                            break;\r\n\t                    }\r\n\t                }\r\n\t                else {\r\n\t                    ++this.lineNumber;\r\n\t                    if (ch === '\\r' && this.source[this.index] === '\\n') {\r\n\t                        ++this.index;\r\n\t                    }\r\n\t                    this.lineStart = this.index;\r\n\t                }\r\n\t            }\r\n\t            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\r\n\t                break;\r\n\t            }\r\n\t            else {\r\n\t                str += ch;\r\n\t            }\r\n\t        }\r\n\t        if (quote !== '') {\r\n\t            this.index = start;\r\n\t            this.throwUnexpectedToken();\r\n\t        }\r\n\t        return {\r\n\t            type: 8 /* StringLiteral */,\r\n\t            value: str,\r\n\t            octal: octal,\r\n\t            lineNumber: this.lineNumber,\r\n\t            lineStart: this.lineStart,\r\n\t            start: start,\r\n\t            end: this.index\r\n\t        };\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-template-literal-lexical-components\r\n\t    Scanner.prototype.scanTemplate = function () {\r\n\t        var cooked = '';\r\n\t        var terminated = false;\r\n\t        var start = this.index;\r\n\t        var head = (this.source[start] === '`');\r\n\t        var tail = false;\r\n\t        var rawOffset = 2;\r\n\t        ++this.index;\r\n\t        while (!this.eof()) {\r\n\t            var ch = this.source[this.index++];\r\n\t            if (ch === '`') {\r\n\t                rawOffset = 1;\r\n\t                tail = true;\r\n\t                terminated = true;\r\n\t                break;\r\n\t            }\r\n\t            else if (ch === '$') {\r\n\t                if (this.source[this.index] === '{') {\r\n\t                    this.curlyStack.push('${');\r\n\t                    ++this.index;\r\n\t                    terminated = true;\r\n\t                    break;\r\n\t                }\r\n\t                cooked += ch;\r\n\t            }\r\n\t            else if (ch === '\\\\') {\r\n\t                ch = this.source[this.index++];\r\n\t                if (!character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\r\n\t                    switch (ch) {\r\n\t                        case 'n':\r\n\t                            cooked += '\\n';\r\n\t                            break;\r\n\t                        case 'r':\r\n\t                            cooked += '\\r';\r\n\t                            break;\r\n\t                        case 't':\r\n\t                            cooked += '\\t';\r\n\t                            break;\r\n\t                        case 'u':\r\n\t                            if (this.source[this.index] === '{') {\r\n\t                                ++this.index;\r\n\t                                cooked += this.scanUnicodeCodePointEscape();\r\n\t                            }\r\n\t                            else {\r\n\t                                var restore = this.index;\r\n\t                                var unescapedChar = this.scanHexEscape(ch);\r\n\t                                if (unescapedChar !== null) {\r\n\t                                    cooked += unescapedChar;\r\n\t                                }\r\n\t                                else {\r\n\t                                    this.index = restore;\r\n\t                                    cooked += ch;\r\n\t                                }\r\n\t                            }\r\n\t                            break;\r\n\t                        case 'x':\r\n\t                            var unescaped = this.scanHexEscape(ch);\r\n\t                            if (unescaped === null) {\r\n\t                                this.throwUnexpectedToken(messages_1.Messages.InvalidHexEscapeSequence);\r\n\t                            }\r\n\t                            cooked += unescaped;\r\n\t                            break;\r\n\t                        case 'b':\r\n\t                            cooked += '\\b';\r\n\t                            break;\r\n\t                        case 'f':\r\n\t                            cooked += '\\f';\r\n\t                            break;\r\n\t                        case 'v':\r\n\t                            cooked += '\\v';\r\n\t                            break;\r\n\t                        default:\r\n\t                            if (ch === '0') {\r\n\t                                if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\r\n\t                                    // Illegal: \\01 \\02 and so on\r\n\t                                    this.throwUnexpectedToken(messages_1.Messages.TemplateOctalLiteral);\r\n\t                                }\r\n\t                                cooked += '\\0';\r\n\t                            }\r\n\t                            else if (character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\r\n\t                                // Illegal: \\1 \\2\r\n\t                                this.throwUnexpectedToken(messages_1.Messages.TemplateOctalLiteral);\r\n\t                            }\r\n\t                            else {\r\n\t                                cooked += ch;\r\n\t                            }\r\n\t                            break;\r\n\t                    }\r\n\t                }\r\n\t                else {\r\n\t                    ++this.lineNumber;\r\n\t                    if (ch === '\\r' && this.source[this.index] === '\\n') {\r\n\t                        ++this.index;\r\n\t                    }\r\n\t                    this.lineStart = this.index;\r\n\t                }\r\n\t            }\r\n\t            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\r\n\t                ++this.lineNumber;\r\n\t                if (ch === '\\r' && this.source[this.index] === '\\n') {\r\n\t                    ++this.index;\r\n\t                }\r\n\t                this.lineStart = this.index;\r\n\t                cooked += '\\n';\r\n\t            }\r\n\t            else {\r\n\t                cooked += ch;\r\n\t            }\r\n\t        }\r\n\t        if (!terminated) {\r\n\t            this.throwUnexpectedToken();\r\n\t        }\r\n\t        if (!head) {\r\n\t            this.curlyStack.pop();\r\n\t        }\r\n\t        return {\r\n\t            type: 10 /* Template */,\r\n\t            value: this.source.slice(start + 1, this.index - rawOffset),\r\n\t            cooked: cooked,\r\n\t            head: head,\r\n\t            tail: tail,\r\n\t            lineNumber: this.lineNumber,\r\n\t            lineStart: this.lineStart,\r\n\t            start: start,\r\n\t            end: this.index\r\n\t        };\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-literals-regular-expression-literals\r\n\t    Scanner.prototype.testRegExp = function (pattern, flags) {\r\n\t        var _this = this;\r\n\t        // The BMP character to use as a replacement for astral symbols when\r\n\t        // translating an ES6 \"u\"-flagged pattern to an ES5-compatible\r\n\t        // approximation.\r\n\t        // Note: replacing with '\\uFFFF' enables false positives in unlikely\r\n\t        // scenarios. For example, `[\\u{1044f}-\\u{10440}]` is an invalid\r\n\t        // pattern that would not be detected by this substitution.\r\n\t        var astralSubstitute = '\\uFFFF';\r\n\t        var tmp = pattern;\r\n\t        if (flags.indexOf('u') >= 0) {\r\n\t            tmp = tmp\r\n\t                // Replace every Unicode escape sequence with the equivalent\r\n\t                // BMP character or a constant ASCII code point in the case of\r\n\t                // astral symbols. (See the above note on `astralSubstitute`\r\n\t                // for more information.)\r\n\t                .replace(/\\\\u\\{([0-9a-fA-F]+)\\}|\\\\u([a-fA-F0-9]{4})/g, function ($0, $1, $2) {\r\n\t                var codePoint = parseInt($1 || $2, 16);\r\n\t                if (codePoint > 0x10FFFF) {\r\n\t                    _this.throwUnexpectedToken(messages_1.Messages.InvalidRegExp);\r\n\t                }\r\n\t                if (codePoint <= 0xFFFF) {\r\n\t                    return String.fromCharCode(codePoint);\r\n\t                }\r\n\t                return astralSubstitute;\r\n\t            })\r\n\t                // Replace each paired surrogate with a single ASCII symbol to\r\n\t                // avoid throwing on regular expressions that are only valid in\r\n\t                // combination with the \"u\" flag.\r\n\t                .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, astralSubstitute);\r\n\t        }\r\n\t        // First, detect invalid regular expressions.\r\n\t        try {\r\n\t            RegExp(tmp);\r\n\t        }\r\n\t        catch (e) {\r\n\t            this.throwUnexpectedToken(messages_1.Messages.InvalidRegExp);\r\n\t        }\r\n\t        // Return a regular expression object for this pattern-flag pair, or\r\n\t        // `null` in case the current environment doesn't support the flags it\r\n\t        // uses.\r\n\t        try {\r\n\t            return new RegExp(pattern, flags);\r\n\t        }\r\n\t        catch (exception) {\r\n\t            /* istanbul ignore next */\r\n\t            return null;\r\n\t        }\r\n\t    };\r\n\t    Scanner.prototype.scanRegExpBody = function () {\r\n\t        var ch = this.source[this.index];\r\n\t        assert_1.assert(ch === '/', 'Regular expression literal must start with a slash');\r\n\t        var str = this.source[this.index++];\r\n\t        var classMarker = false;\r\n\t        var terminated = false;\r\n\t        while (!this.eof()) {\r\n\t            ch = this.source[this.index++];\r\n\t            str += ch;\r\n\t            if (ch === '\\\\') {\r\n\t                ch = this.source[this.index++];\r\n\t                // https://tc39.github.io/ecma262/#sec-literals-regular-expression-literals\r\n\t                if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\r\n\t                    this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);\r\n\t                }\r\n\t                str += ch;\r\n\t            }\r\n\t            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\r\n\t                this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);\r\n\t            }\r\n\t            else if (classMarker) {\r\n\t                if (ch === ']') {\r\n\t                    classMarker = false;\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                if (ch === '/') {\r\n\t                    terminated = true;\r\n\t                    break;\r\n\t                }\r\n\t                else if (ch === '[') {\r\n\t                    classMarker = true;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        if (!terminated) {\r\n\t            this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);\r\n\t        }\r\n\t        // Exclude leading and trailing slash.\r\n\t        return str.substr(1, str.length - 2);\r\n\t    };\r\n\t    Scanner.prototype.scanRegExpFlags = function () {\r\n\t        var str = '';\r\n\t        var flags = '';\r\n\t        while (!this.eof()) {\r\n\t            var ch = this.source[this.index];\r\n\t            if (!character_1.Character.isIdentifierPart(ch.charCodeAt(0))) {\r\n\t                break;\r\n\t            }\r\n\t            ++this.index;\r\n\t            if (ch === '\\\\' && !this.eof()) {\r\n\t                ch = this.source[this.index];\r\n\t                if (ch === 'u') {\r\n\t                    ++this.index;\r\n\t                    var restore = this.index;\r\n\t                    var char = this.scanHexEscape('u');\r\n\t                    if (char !== null) {\r\n\t                        flags += char;\r\n\t                        for (str += '\\\\u'; restore < this.index; ++restore) {\r\n\t                            str += this.source[restore];\r\n\t                        }\r\n\t                    }\r\n\t                    else {\r\n\t                        this.index = restore;\r\n\t                        flags += 'u';\r\n\t                        str += '\\\\u';\r\n\t                    }\r\n\t                    this.tolerateUnexpectedToken();\r\n\t                }\r\n\t                else {\r\n\t                    str += '\\\\';\r\n\t                    this.tolerateUnexpectedToken();\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                flags += ch;\r\n\t                str += ch;\r\n\t            }\r\n\t        }\r\n\t        return flags;\r\n\t    };\r\n\t    Scanner.prototype.scanRegExp = function () {\r\n\t        var start = this.index;\r\n\t        var pattern = this.scanRegExpBody();\r\n\t        var flags = this.scanRegExpFlags();\r\n\t        var value = this.testRegExp(pattern, flags);\r\n\t        return {\r\n\t            type: 9 /* RegularExpression */,\r\n\t            value: '',\r\n\t            pattern: pattern,\r\n\t            flags: flags,\r\n\t            regex: value,\r\n\t            lineNumber: this.lineNumber,\r\n\t            lineStart: this.lineStart,\r\n\t            start: start,\r\n\t            end: this.index\r\n\t        };\r\n\t    };\r\n\t    Scanner.prototype.lex = function () {\r\n\t        if (this.eof()) {\r\n\t            return {\r\n\t                type: 2 /* EOF */,\r\n\t                value: '',\r\n\t                lineNumber: this.lineNumber,\r\n\t                lineStart: this.lineStart,\r\n\t                start: this.index,\r\n\t                end: this.index\r\n\t            };\r\n\t        }\r\n\t        var cp = this.source.charCodeAt(this.index);\r\n\t        if (character_1.Character.isIdentifierStart(cp)) {\r\n\t            return this.scanIdentifier();\r\n\t        }\r\n\t        // Very common: ( and ) and ;\r\n\t        if (cp === 0x28 || cp === 0x29 || cp === 0x3B) {\r\n\t            return this.scanPunctuator();\r\n\t        }\r\n\t        // String literal starts with single quote (U+0027) or double quote (U+0022).\r\n\t        if (cp === 0x27 || cp === 0x22) {\r\n\t            return this.scanStringLiteral();\r\n\t        }\r\n\t        // Dot (.) U+002E can also start a floating-point number, hence the need\r\n\t        // to check the next character.\r\n\t        if (cp === 0x2E) {\r\n\t            if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index + 1))) {\r\n\t                return this.scanNumericLiteral();\r\n\t            }\r\n\t            return this.scanPunctuator();\r\n\t        }\r\n\t        if (character_1.Character.isDecimalDigit(cp)) {\r\n\t            return this.scanNumericLiteral();\r\n\t        }\r\n\t        // Template literals start with ` (U+0060) for template head\r\n\t        // or } (U+007D) for template middle or template tail.\r\n\t        if (cp === 0x60 || (cp === 0x7D && this.curlyStack[this.curlyStack.length - 1] === '${')) {\r\n\t            return this.scanTemplate();\r\n\t        }\r\n\t        // Possible identifier start in a surrogate pair.\r\n\t        if (cp >= 0xD800 && cp < 0xDFFF) {\r\n\t            if (character_1.Character.isIdentifierStart(this.codePointAt(this.index))) {\r\n\t                return this.scanIdentifier();\r\n\t            }\r\n\t        }\r\n\t        return this.scanPunctuator();\r\n\t    };\r\n\t    return Scanner;\r\n\t}());\r\n\texports.Scanner = Scanner;\r\n\r\n\r\n/***/ },\r\n/* 13 */\r\n/***/ function(module, exports) {\r\n\r\n\t\"use strict\";\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\texports.TokenName = {};\r\n\texports.TokenName[1 /* BooleanLiteral */] = 'Boolean';\r\n\texports.TokenName[2 /* EOF */] = '<end>';\r\n\texports.TokenName[3 /* Identifier */] = 'Identifier';\r\n\texports.TokenName[4 /* Keyword */] = 'Keyword';\r\n\texports.TokenName[5 /* NullLiteral */] = 'Null';\r\n\texports.TokenName[6 /* NumericLiteral */] = 'Numeric';\r\n\texports.TokenName[7 /* Punctuator */] = 'Punctuator';\r\n\texports.TokenName[8 /* StringLiteral */] = 'String';\r\n\texports.TokenName[9 /* RegularExpression */] = 'RegularExpression';\r\n\texports.TokenName[10 /* Template */] = 'Template';\r\n\r\n\r\n/***/ },\r\n/* 14 */\r\n/***/ function(module, exports) {\r\n\r\n\t\"use strict\";\r\n\t// Generated by generate-xhtml-entities.js. DO NOT MODIFY!\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\texports.XHTMLEntities = {\r\n\t    quot: '\\u0022',\r\n\t    amp: '\\u0026',\r\n\t    apos: '\\u0027',\r\n\t    gt: '\\u003E',\r\n\t    nbsp: '\\u00A0',\r\n\t    iexcl: '\\u00A1',\r\n\t    cent: '\\u00A2',\r\n\t    pound: '\\u00A3',\r\n\t    curren: '\\u00A4',\r\n\t    yen: '\\u00A5',\r\n\t    brvbar: '\\u00A6',\r\n\t    sect: '\\u00A7',\r\n\t    uml: '\\u00A8',\r\n\t    copy: '\\u00A9',\r\n\t    ordf: '\\u00AA',\r\n\t    laquo: '\\u00AB',\r\n\t    not: '\\u00AC',\r\n\t    shy: '\\u00AD',\r\n\t    reg: '\\u00AE',\r\n\t    macr: '\\u00AF',\r\n\t    deg: '\\u00B0',\r\n\t    plusmn: '\\u00B1',\r\n\t    sup2: '\\u00B2',\r\n\t    sup3: '\\u00B3',\r\n\t    acute: '\\u00B4',\r\n\t    micro: '\\u00B5',\r\n\t    para: '\\u00B6',\r\n\t    middot: '\\u00B7',\r\n\t    cedil: '\\u00B8',\r\n\t    sup1: '\\u00B9',\r\n\t    ordm: '\\u00BA',\r\n\t    raquo: '\\u00BB',\r\n\t    frac14: '\\u00BC',\r\n\t    frac12: '\\u00BD',\r\n\t    frac34: '\\u00BE',\r\n\t    iquest: '\\u00BF',\r\n\t    Agrave: '\\u00C0',\r\n\t    Aacute: '\\u00C1',\r\n\t    Acirc: '\\u00C2',\r\n\t    Atilde: '\\u00C3',\r\n\t    Auml: '\\u00C4',\r\n\t    Aring: '\\u00C5',\r\n\t    AElig: '\\u00C6',\r\n\t    Ccedil: '\\u00C7',\r\n\t    Egrave: '\\u00C8',\r\n\t    Eacute: '\\u00C9',\r\n\t    Ecirc: '\\u00CA',\r\n\t    Euml: '\\u00CB',\r\n\t    Igrave: '\\u00CC',\r\n\t    Iacute: '\\u00CD',\r\n\t    Icirc: '\\u00CE',\r\n\t    Iuml: '\\u00CF',\r\n\t    ETH: '\\u00D0',\r\n\t    Ntilde: '\\u00D1',\r\n\t    Ograve: '\\u00D2',\r\n\t    Oacute: '\\u00D3',\r\n\t    Ocirc: '\\u00D4',\r\n\t    Otilde: '\\u00D5',\r\n\t    Ouml: '\\u00D6',\r\n\t    times: '\\u00D7',\r\n\t    Oslash: '\\u00D8',\r\n\t    Ugrave: '\\u00D9',\r\n\t    Uacute: '\\u00DA',\r\n\t    Ucirc: '\\u00DB',\r\n\t    Uuml: '\\u00DC',\r\n\t    Yacute: '\\u00DD',\r\n\t    THORN: '\\u00DE',\r\n\t    szlig: '\\u00DF',\r\n\t    agrave: '\\u00E0',\r\n\t    aacute: '\\u00E1',\r\n\t    acirc: '\\u00E2',\r\n\t    atilde: '\\u00E3',\r\n\t    auml: '\\u00E4',\r\n\t    aring: '\\u00E5',\r\n\t    aelig: '\\u00E6',\r\n\t    ccedil: '\\u00E7',\r\n\t    egrave: '\\u00E8',\r\n\t    eacute: '\\u00E9',\r\n\t    ecirc: '\\u00EA',\r\n\t    euml: '\\u00EB',\r\n\t    igrave: '\\u00EC',\r\n\t    iacute: '\\u00ED',\r\n\t    icirc: '\\u00EE',\r\n\t    iuml: '\\u00EF',\r\n\t    eth: '\\u00F0',\r\n\t    ntilde: '\\u00F1',\r\n\t    ograve: '\\u00F2',\r\n\t    oacute: '\\u00F3',\r\n\t    ocirc: '\\u00F4',\r\n\t    otilde: '\\u00F5',\r\n\t    ouml: '\\u00F6',\r\n\t    divide: '\\u00F7',\r\n\t    oslash: '\\u00F8',\r\n\t    ugrave: '\\u00F9',\r\n\t    uacute: '\\u00FA',\r\n\t    ucirc: '\\u00FB',\r\n\t    uuml: '\\u00FC',\r\n\t    yacute: '\\u00FD',\r\n\t    thorn: '\\u00FE',\r\n\t    yuml: '\\u00FF',\r\n\t    OElig: '\\u0152',\r\n\t    oelig: '\\u0153',\r\n\t    Scaron: '\\u0160',\r\n\t    scaron: '\\u0161',\r\n\t    Yuml: '\\u0178',\r\n\t    fnof: '\\u0192',\r\n\t    circ: '\\u02C6',\r\n\t    tilde: '\\u02DC',\r\n\t    Alpha: '\\u0391',\r\n\t    Beta: '\\u0392',\r\n\t    Gamma: '\\u0393',\r\n\t    Delta: '\\u0394',\r\n\t    Epsilon: '\\u0395',\r\n\t    Zeta: '\\u0396',\r\n\t    Eta: '\\u0397',\r\n\t    Theta: '\\u0398',\r\n\t    Iota: '\\u0399',\r\n\t    Kappa: '\\u039A',\r\n\t    Lambda: '\\u039B',\r\n\t    Mu: '\\u039C',\r\n\t    Nu: '\\u039D',\r\n\t    Xi: '\\u039E',\r\n\t    Omicron: '\\u039F',\r\n\t    Pi: '\\u03A0',\r\n\t    Rho: '\\u03A1',\r\n\t    Sigma: '\\u03A3',\r\n\t    Tau: '\\u03A4',\r\n\t    Upsilon: '\\u03A5',\r\n\t    Phi: '\\u03A6',\r\n\t    Chi: '\\u03A7',\r\n\t    Psi: '\\u03A8',\r\n\t    Omega: '\\u03A9',\r\n\t    alpha: '\\u03B1',\r\n\t    beta: '\\u03B2',\r\n\t    gamma: '\\u03B3',\r\n\t    delta: '\\u03B4',\r\n\t    epsilon: '\\u03B5',\r\n\t    zeta: '\\u03B6',\r\n\t    eta: '\\u03B7',\r\n\t    theta: '\\u03B8',\r\n\t    iota: '\\u03B9',\r\n\t    kappa: '\\u03BA',\r\n\t    lambda: '\\u03BB',\r\n\t    mu: '\\u03BC',\r\n\t    nu: '\\u03BD',\r\n\t    xi: '\\u03BE',\r\n\t    omicron: '\\u03BF',\r\n\t    pi: '\\u03C0',\r\n\t    rho: '\\u03C1',\r\n\t    sigmaf: '\\u03C2',\r\n\t    sigma: '\\u03C3',\r\n\t    tau: '\\u03C4',\r\n\t    upsilon: '\\u03C5',\r\n\t    phi: '\\u03C6',\r\n\t    chi: '\\u03C7',\r\n\t    psi: '\\u03C8',\r\n\t    omega: '\\u03C9',\r\n\t    thetasym: '\\u03D1',\r\n\t    upsih: '\\u03D2',\r\n\t    piv: '\\u03D6',\r\n\t    ensp: '\\u2002',\r\n\t    emsp: '\\u2003',\r\n\t    thinsp: '\\u2009',\r\n\t    zwnj: '\\u200C',\r\n\t    zwj: '\\u200D',\r\n\t    lrm: '\\u200E',\r\n\t    rlm: '\\u200F',\r\n\t    ndash: '\\u2013',\r\n\t    mdash: '\\u2014',\r\n\t    lsquo: '\\u2018',\r\n\t    rsquo: '\\u2019',\r\n\t    sbquo: '\\u201A',\r\n\t    ldquo: '\\u201C',\r\n\t    rdquo: '\\u201D',\r\n\t    bdquo: '\\u201E',\r\n\t    dagger: '\\u2020',\r\n\t    Dagger: '\\u2021',\r\n\t    bull: '\\u2022',\r\n\t    hellip: '\\u2026',\r\n\t    permil: '\\u2030',\r\n\t    prime: '\\u2032',\r\n\t    Prime: '\\u2033',\r\n\t    lsaquo: '\\u2039',\r\n\t    rsaquo: '\\u203A',\r\n\t    oline: '\\u203E',\r\n\t    frasl: '\\u2044',\r\n\t    euro: '\\u20AC',\r\n\t    image: '\\u2111',\r\n\t    weierp: '\\u2118',\r\n\t    real: '\\u211C',\r\n\t    trade: '\\u2122',\r\n\t    alefsym: '\\u2135',\r\n\t    larr: '\\u2190',\r\n\t    uarr: '\\u2191',\r\n\t    rarr: '\\u2192',\r\n\t    darr: '\\u2193',\r\n\t    harr: '\\u2194',\r\n\t    crarr: '\\u21B5',\r\n\t    lArr: '\\u21D0',\r\n\t    uArr: '\\u21D1',\r\n\t    rArr: '\\u21D2',\r\n\t    dArr: '\\u21D3',\r\n\t    hArr: '\\u21D4',\r\n\t    forall: '\\u2200',\r\n\t    part: '\\u2202',\r\n\t    exist: '\\u2203',\r\n\t    empty: '\\u2205',\r\n\t    nabla: '\\u2207',\r\n\t    isin: '\\u2208',\r\n\t    notin: '\\u2209',\r\n\t    ni: '\\u220B',\r\n\t    prod: '\\u220F',\r\n\t    sum: '\\u2211',\r\n\t    minus: '\\u2212',\r\n\t    lowast: '\\u2217',\r\n\t    radic: '\\u221A',\r\n\t    prop: '\\u221D',\r\n\t    infin: '\\u221E',\r\n\t    ang: '\\u2220',\r\n\t    and: '\\u2227',\r\n\t    or: '\\u2228',\r\n\t    cap: '\\u2229',\r\n\t    cup: '\\u222A',\r\n\t    int: '\\u222B',\r\n\t    there4: '\\u2234',\r\n\t    sim: '\\u223C',\r\n\t    cong: '\\u2245',\r\n\t    asymp: '\\u2248',\r\n\t    ne: '\\u2260',\r\n\t    equiv: '\\u2261',\r\n\t    le: '\\u2264',\r\n\t    ge: '\\u2265',\r\n\t    sub: '\\u2282',\r\n\t    sup: '\\u2283',\r\n\t    nsub: '\\u2284',\r\n\t    sube: '\\u2286',\r\n\t    supe: '\\u2287',\r\n\t    oplus: '\\u2295',\r\n\t    otimes: '\\u2297',\r\n\t    perp: '\\u22A5',\r\n\t    sdot: '\\u22C5',\r\n\t    lceil: '\\u2308',\r\n\t    rceil: '\\u2309',\r\n\t    lfloor: '\\u230A',\r\n\t    rfloor: '\\u230B',\r\n\t    loz: '\\u25CA',\r\n\t    spades: '\\u2660',\r\n\t    clubs: '\\u2663',\r\n\t    hearts: '\\u2665',\r\n\t    diams: '\\u2666',\r\n\t    lang: '\\u27E8',\r\n\t    rang: '\\u27E9'\r\n\t};\r\n\r\n\r\n/***/ },\r\n/* 15 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\"use strict\";\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar error_handler_1 = __webpack_require__(10);\r\n\tvar scanner_1 = __webpack_require__(12);\r\n\tvar token_1 = __webpack_require__(13);\r\n\tvar Reader = /** @class */ (function () {\r\n\t    function Reader() {\r\n\t        this.values = [];\r\n\t        this.curly = this.paren = -1;\r\n\t    }\r\n\t    // A function following one of those tokens is an expression.\r\n\t    Reader.prototype.beforeFunctionExpression = function (t) {\r\n\t        return ['(', '{', '[', 'in', 'typeof', 'instanceof', 'new',\r\n\t            'return', 'case', 'delete', 'throw', 'void',\r\n\t            // assignment operators\r\n\t            '=', '+=', '-=', '*=', '**=', '/=', '%=', '<<=', '>>=', '>>>=',\r\n\t            '&=', '|=', '^=', ',',\r\n\t            // binary/unary operators\r\n\t            '+', '-', '*', '**', '/', '%', '++', '--', '<<', '>>', '>>>', '&',\r\n\t            '|', '^', '!', '~', '&&', '||', '?', ':', '===', '==', '>=',\r\n\t            '<=', '<', '>', '!=', '!=='].indexOf(t) >= 0;\r\n\t    };\r\n\t    // Determine if forward slash (/) is an operator or part of a regular expression\r\n\t    // https://github.com/mozilla/sweet.js/wiki/design\r\n\t    Reader.prototype.isRegexStart = function () {\r\n\t        var previous = this.values[this.values.length - 1];\r\n\t        var regex = (previous !== null);\r\n\t        switch (previous) {\r\n\t            case 'this':\r\n\t            case ']':\r\n\t                regex = false;\r\n\t                break;\r\n\t            case ')':\r\n\t                var keyword = this.values[this.paren - 1];\r\n\t                regex = (keyword === 'if' || keyword === 'while' || keyword === 'for' || keyword === 'with');\r\n\t                break;\r\n\t            case '}':\r\n\t                // Dividing a function by anything makes little sense,\r\n\t                // but we have to check for that.\r\n\t                regex = true;\r\n\t                if (this.values[this.curly - 3] === 'function') {\r\n\t                    // Anonymous function, e.g. function(){} /42\r\n\t                    var check = this.values[this.curly - 4];\r\n\t                    regex = check ? !this.beforeFunctionExpression(check) : false;\r\n\t                }\r\n\t                else if (this.values[this.curly - 4] === 'function') {\r\n\t                    // Named function, e.g. function f(){} /42/\r\n\t                    var check = this.values[this.curly - 5];\r\n\t                    regex = check ? !this.beforeFunctionExpression(check) : true;\r\n\t                }\r\n\t                break;\r\n\t            default:\r\n\t                break;\r\n\t        }\r\n\t        return regex;\r\n\t    };\r\n\t    Reader.prototype.push = function (token) {\r\n\t        if (token.type === 7 /* Punctuator */ || token.type === 4 /* Keyword */) {\r\n\t            if (token.value === '{') {\r\n\t                this.curly = this.values.length;\r\n\t            }\r\n\t            else if (token.value === '(') {\r\n\t                this.paren = this.values.length;\r\n\t            }\r\n\t            this.values.push(token.value);\r\n\t        }\r\n\t        else {\r\n\t            this.values.push(null);\r\n\t        }\r\n\t    };\r\n\t    return Reader;\r\n\t}());\r\n\tvar Tokenizer = /** @class */ (function () {\r\n\t    function Tokenizer(code, config) {\r\n\t        this.errorHandler = new error_handler_1.ErrorHandler();\r\n\t        this.errorHandler.tolerant = config ? (typeof config.tolerant === 'boolean' && config.tolerant) : false;\r\n\t        this.scanner = new scanner_1.Scanner(code, this.errorHandler);\r\n\t        this.scanner.trackComment = config ? (typeof config.comment === 'boolean' && config.comment) : false;\r\n\t        this.trackRange = config ? (typeof config.range === 'boolean' && config.range) : false;\r\n\t        this.trackLoc = config ? (typeof config.loc === 'boolean' && config.loc) : false;\r\n\t        this.buffer = [];\r\n\t        this.reader = new Reader();\r\n\t    }\r\n\t    Tokenizer.prototype.errors = function () {\r\n\t        return this.errorHandler.errors;\r\n\t    };\r\n\t    Tokenizer.prototype.getNextToken = function () {\r\n\t        if (this.buffer.length === 0) {\r\n\t\t\t\tvar comments = this.scanner.scanComments();\r\n\t            if (this.scanner.trackComment) {\r\n\t                for (var i = 0; i < comments.length; ++i) {\r\n\t                    var e = comments[i];\r\n\t                    var value = this.scanner.source.slice(e.slice[0], e.slice[1]);\r\n\t                    var comment = {\r\n\t                        type: e.multiLine ? 'BlockComment' : 'LineComment',\r\n\t                        value: value\r\n\t                    };\r\n\t                    if (this.trackRange) {\r\n\t                        comment.range = e.range;\r\n\t                    }\r\n\t                    if (this.trackLoc) {\r\n\t                        comment.loc = e.loc;\r\n\t                    }\r\n\t                    this.buffer.push(comment);\r\n\t                }\r\n\t            }\r\n\t            if (!this.scanner.eof()) {\r\n\t                var loc = void 0;\r\n\t                if (this.trackLoc) {\r\n\t                    loc = {\r\n\t                        start: {\r\n\t                            line: this.scanner.lineNumber,\r\n\t                            column: this.scanner.index - this.scanner.lineStart\r\n\t                        },\r\n\t                        end: {}\r\n\t                    };\r\n\t                }\r\n\t                var maybeRegex = (this.scanner.source[this.scanner.index] === '/') && this.reader.isRegexStart();\r\n\t                var token = void 0;\r\n\t                if (maybeRegex) {\r\n\t                    var state = this.scanner.saveState();\r\n\t                    try {\r\n\t                        token = this.scanner.scanRegExp();\r\n\t                    }\r\n\t                    catch (e) {\r\n\t                        this.scanner.restoreState(state);\r\n\t                        token = this.scanner.lex();\r\n\t                    }\r\n\t                }\r\n\t                else {\r\n\t                    token = this.scanner.lex();\r\n\t                }\r\n\t                this.reader.push(token);\r\n\t                var entry = {\r\n\t                    type: token_1.TokenName[token.type],\r\n\t                    value: this.scanner.source.slice(token.start, token.end)\r\n\t                };\r\n\t                if (this.trackRange) {\r\n\t                    entry.range = [token.start, token.end];\r\n\t                }\r\n\t                if (this.trackLoc) {\r\n\t                    loc.end = {\r\n\t                        line: this.scanner.lineNumber,\r\n\t                        column: this.scanner.index - this.scanner.lineStart\r\n\t                    };\r\n\t                    entry.loc = loc;\r\n\t                }\r\n\t                if (token.type === 9 /* RegularExpression */) {\r\n\t                    var pattern = token.pattern;\r\n\t                    var flags = token.flags;\r\n\t                    entry.regex = { pattern: pattern, flags: flags };\r\n\t                }\r\n\t                this.buffer.push(entry);\r\n\t            }\r\n\t        }\r\n\t        return this.buffer.shift();\r\n\t    };\r\n\t    return Tokenizer;\r\n\t}());\r\n\texports.Tokenizer = Tokenizer;\r\n\r\n\r\n/***/ }\r\n/******/ ])\r\n});\r\n;","export default (function a() {\r\n\r\n\t(function webpackUniversalModuleDefinition(root, factory) {\r\n\t\t/* istanbul ignore next */\r\n\t\tif (typeof exports === 'object' && typeof module === 'object')\r\n\t\t\twindow.esprima = module.exports = factory();\r\n\t\telse if (typeof define === 'function' && define.amd)\r\n\t\t\tdefine([], factory);\r\n\t\t/* istanbul ignore next */\r\n\t\telse if (typeof exports === 'object')\r\n\t\t\texports[\"esprima\"] = factory();\r\n\t\telse\r\n\t\t\troot[\"esprima\"] = factory();\r\n\t})(this, function () {\r\n\t\treturn /******/ (function (modules) { // webpackBootstrap\r\n\t\t/******/ \t// The module cache\r\n\t\t/******/ \tvar installedModules = {};\r\n\r\n\t\t/******/ \t// The require function\r\n\t\t/******/ \tfunction __webpack_require__(moduleId) {\r\n\r\n\t\t/******/ \t\t// Check if module is in cache\r\n\t\t/* istanbul ignore if */\r\n\t\t/******/ \t\tif (installedModules[moduleId])\r\n\t\t/******/ \t\t\treturn installedModules[moduleId].exports;\r\n\r\n\t\t/******/ \t\t// Create a new module (and put it into the cache)\r\n\t\t/******/ \t\tvar module = installedModules[moduleId] = {\r\n\t\t/******/ \t\t\texports: {},\r\n\t\t/******/ \t\t\tid: moduleId,\r\n\t\t/******/ \t\t\tloaded: false\r\n\t\t\t\t\t/******/\r\n};\r\n\r\n\t\t/******/ \t\t// Execute the module function\r\n\t\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\r\n\r\n\t\t/******/ \t\t// Flag the module as loaded\r\n\t\t/******/ \t\tmodule.loaded = true;\r\n\r\n\t\t/******/ \t\t// Return the exports of the module\r\n\t\t/******/ \t\treturn module.exports;\r\n\t\t\t\t/******/\r\n}\r\n\r\n\r\n\t\t/******/ \t// expose the modules object (__webpack_modules__)\r\n\t\t/******/ \t__webpack_require__.m = modules;\r\n\r\n\t\t/******/ \t// expose the module cache\r\n\t\t/******/ \t__webpack_require__.c = installedModules;\r\n\r\n\t\t/******/ \t// __webpack_public_path__\r\n\t\t/******/ \t__webpack_require__.p = \"\";\r\n\r\n\t\t/******/ \t// Load entry module and return exports\r\n\t\t/******/ \treturn __webpack_require__(0);\r\n\t\t\t/******/\r\n})\r\n\t\t/************************************************************************/\r\n\t\t/******/([\r\n\t\t/* 0 */\r\n\t\t/***/ function (module, exports, __webpack_require__) {\r\n\r\n\t\t\t\t\"use strict\";\r\n\t\t\t\t/*\r\n\t\t\t\t  Copyright JS Foundation and other contributors, https://js.foundation/\r\n\t\t\t\r\n\t\t\t\t  Redistribution and use in source and binary forms, with or without\r\n\t\t\t\t  modification, are permitted provided that the following conditions are met:\r\n\t\t\t\r\n\t\t\t\t\t* Redistributions of source code must retain the above copyright\r\n\t\t\t\t\t  notice, this list of conditions and the following disclaimer.\r\n\t\t\t\t\t* Redistributions in binary form must reproduce the above copyright\r\n\t\t\t\t\t  notice, this list of conditions and the following disclaimer in the\r\n\t\t\t\t\t  documentation and/or other materials provided with the distribution.\r\n\t\t\t\r\n\t\t\t\t  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n\t\t\t\t  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n\t\t\t\t  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n\t\t\t\t  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\r\n\t\t\t\t  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n\t\t\t\t  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n\t\t\t\t  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n\t\t\t\t  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n\t\t\t\t  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\r\n\t\t\t\t  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\t\t\t\t*/\r\n\t\t\t\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t\t\t\tvar comment_handler_1 = __webpack_require__(1);\r\n\t\t\t\tvar jsx_parser_1 = __webpack_require__(3);\r\n\t\t\t\tvar parser_1 = __webpack_require__(8);\r\n\t\t\t\tvar tokenizer_1 = __webpack_require__(15);\r\n\t\t\t\tfunction parse(code, options, delegate) {\r\n\t\t\t\t\tvar commentHandler = null;\r\n\t\t\t\t\tvar proxyDelegate = function (node, metadata) {\r\n\t\t\t\t\t\tif (delegate) {\r\n\t\t\t\t\t\t\tdelegate(node, metadata);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (commentHandler) {\r\n\t\t\t\t\t\t\tcommentHandler.visit(node, metadata);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t\tvar parserDelegate = (typeof delegate === 'function') ? proxyDelegate : null;\r\n\t\t\t\t\tvar collectComment = false;\r\n\t\t\t\t\tif (options) {\r\n\t\t\t\t\t\tcollectComment = (typeof options.comment === 'boolean' && options.comment);\r\n\t\t\t\t\t\tvar attachComment = (typeof options.attachComment === 'boolean' && options.attachComment);\r\n\t\t\t\t\t\tif (collectComment || attachComment) {\r\n\t\t\t\t\t\t\tcommentHandler = new comment_handler_1.CommentHandler();\r\n\t\t\t\t\t\t\tcommentHandler.attach = attachComment;\r\n\t\t\t\t\t\t\toptions.comment = true;\r\n\t\t\t\t\t\t\tparserDelegate = proxyDelegate;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar isModule = false;\r\n\t\t\t\t\tif (options && typeof options.sourceType === 'string') {\r\n\t\t\t\t\t\tisModule = (options.sourceType === 'module');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar parser;\r\n\t\t\t\t\tif (options && typeof options.jsx === 'boolean' && options.jsx) {\r\n\t\t\t\t\t\tparser = new jsx_parser_1.JSXParser(code, options, parserDelegate);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tparser = new parser_1.Parser(code, options, parserDelegate);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar program = isModule ? parser.parseModule() : parser.parseScript();\r\n\t\t\t\t\tvar ast = program;\r\n\t\t\t\t\tif (collectComment && commentHandler) {\r\n\t\t\t\t\t\tast.comments = commentHandler.comments;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (parser.config.tokens) {\r\n\t\t\t\t\t\tast.tokens = parser.tokens;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (parser.config.tolerant) {\r\n\t\t\t\t\t\tast.errors = parser.errorHandler.errors;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn ast;\r\n\t\t\t\t}\r\n\t\t\t\texports.parse = parse;\r\n\t\t\t\tfunction parseModule(code, options, delegate) {\r\n\t\t\t\t\tvar parsingOptions = options || {};\r\n\t\t\t\t\tparsingOptions.sourceType = 'module';\r\n\t\t\t\t\treturn parse(code, parsingOptions, delegate);\r\n\t\t\t\t}\r\n\t\t\t\texports.parseModule = parseModule;\r\n\t\t\t\tfunction parseScript(code, options, delegate) {\r\n\t\t\t\t\tvar parsingOptions = options || {};\r\n\t\t\t\t\tparsingOptions.sourceType = 'script';\r\n\t\t\t\t\treturn parse(code, parsingOptions, delegate);\r\n\t\t\t\t}\r\n\t\t\t\texports.parseScript = parseScript;\r\n\t\t\t\tfunction tokenize(code, options, delegate) {\r\n\t\t\t\t\tvar tokenizer = new tokenizer_1.Tokenizer(code, options);\r\n\t\t\t\t\tvar tokens = [];\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\twhile (true) {\r\n\t\t\t\t\t\t\tvar token = tokenizer.getNextToken();\r\n\t\t\t\t\t\t\tif (!token) {\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (delegate) {\r\n\t\t\t\t\t\t\t\ttoken = delegate(token);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\ttokens.push(token);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch (e) {\r\n\t\t\t\t\t\ttokenizer.errorHandler.tolerate(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (tokenizer.errorHandler.tolerant) {\r\n\t\t\t\t\t\ttokens.errors = tokenizer.errors();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn tokens;\r\n\t\t\t\t}\r\n\t\t\t\texports.tokenize = tokenize;\r\n\t\t\t\tvar syntax_1 = __webpack_require__(2);\r\n\t\t\t\texports.Syntax = syntax_1.Syntax;\r\n\t\t\t\t// Sync with *.json manifests.\r\n\t\t\t\texports.version = '4.0.0-dev';\r\n\r\n\r\n\t\t\t\t/***/\r\n},\r\n\t\t/* 1 */\r\n\t\t/***/ function (module, exports, __webpack_require__) {\r\n\r\n\t\t\t\t\"use strict\";\r\n\t\t\t\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t\t\t\tvar syntax_1 = __webpack_require__(2);\r\n\t\t\t\tvar CommentHandler = /** @class */ (function () {\r\n\t\t\t\t\tfunction CommentHandler() {\r\n\t\t\t\t\t\tthis.attach = false;\r\n\t\t\t\t\t\tthis.comments = [];\r\n\t\t\t\t\t\tthis.stack = [];\r\n\t\t\t\t\t\tthis.leading = [];\r\n\t\t\t\t\t\tthis.trailing = [];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tCommentHandler.prototype.insertInnerComments = function (node, metadata) {\r\n\t\t\t\t\t\t//  innnerComments for properties empty block\r\n\t\t\t\t\t\t//  `function a() {/** comments **\\/}`\r\n\t\t\t\t\t\tif (node.type === syntax_1.Syntax.BlockStatement && node.body.length === 0) {\r\n\t\t\t\t\t\t\tvar innerComments = [];\r\n\t\t\t\t\t\t\tfor (var i = this.leading.length - 1; i >= 0; --i) {\r\n\t\t\t\t\t\t\t\tvar entry = this.leading[i];\r\n\t\t\t\t\t\t\t\tif (metadata.end.offset >= entry.start) {\r\n\t\t\t\t\t\t\t\t\tinnerComments.unshift(entry.comment);\r\n\t\t\t\t\t\t\t\t\tthis.leading.splice(i, 1);\r\n\t\t\t\t\t\t\t\t\tthis.trailing.splice(i, 1);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (innerComments.length) {\r\n\t\t\t\t\t\t\t\tnode.innerComments = innerComments;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t\tCommentHandler.prototype.findTrailingComments = function (metadata) {\r\n\t\t\t\t\t\tvar trailingComments = [];\r\n\t\t\t\t\t\tif (this.trailing.length > 0) {\r\n\t\t\t\t\t\t\tfor (var i = this.trailing.length - 1; i >= 0; --i) {\r\n\t\t\t\t\t\t\t\tvar entry = this.trailing[i];\r\n\t\t\t\t\t\t\t\tif (entry.start >= metadata.end.offset) {\r\n\t\t\t\t\t\t\t\t\ttrailingComments.unshift(entry.comment);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.trailing.length = 0;\r\n\t\t\t\t\t\t\treturn trailingComments;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar last = this.stack[this.stack.length - 1];\r\n\t\t\t\t\t\tif (last && last.node.trailingComments) {\r\n\t\t\t\t\t\t\tvar firstComment = last.node.trailingComments[0];\r\n\t\t\t\t\t\t\tif (firstComment && firstComment.range[0] >= metadata.end.offset) {\r\n\t\t\t\t\t\t\t\ttrailingComments = last.node.trailingComments;\r\n\t\t\t\t\t\t\t\tdelete last.node.trailingComments;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn trailingComments;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tCommentHandler.prototype.findLeadingComments = function (metadata) {\r\n\t\t\t\t\t\tvar leadingComments = [];\r\n\t\t\t\t\t\tvar target;\r\n\t\t\t\t\t\twhile (this.stack.length > 0) {\r\n\t\t\t\t\t\t\tvar entry = this.stack[this.stack.length - 1];\r\n\t\t\t\t\t\t\tif (entry && entry.start >= metadata.start.offset) {\r\n\t\t\t\t\t\t\t\ttarget = entry.node;\r\n\t\t\t\t\t\t\t\tthis.stack.pop();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (target) {\r\n\t\t\t\t\t\t\tvar count = target.leadingComments ? target.leadingComments.length : 0;\r\n\t\t\t\t\t\t\tfor (var i = count - 1; i >= 0; --i) {\r\n\t\t\t\t\t\t\t\tvar comment = target.leadingComments[i];\r\n\t\t\t\t\t\t\t\tif (comment.range[1] <= metadata.start.offset) {\r\n\t\t\t\t\t\t\t\t\tleadingComments.unshift(comment);\r\n\t\t\t\t\t\t\t\t\ttarget.leadingComments.splice(i, 1);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (target.leadingComments && target.leadingComments.length === 0) {\r\n\t\t\t\t\t\t\t\tdelete target.leadingComments;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn leadingComments;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (var i = this.leading.length - 1; i >= 0; --i) {\r\n\t\t\t\t\t\t\tvar entry = this.leading[i];\r\n\t\t\t\t\t\t\tif (entry.start <= metadata.start.offset) {\r\n\t\t\t\t\t\t\t\tleadingComments.unshift(entry.comment);\r\n\t\t\t\t\t\t\t\tthis.leading.splice(i, 1);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn leadingComments;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tCommentHandler.prototype.visitNode = function (node, metadata) {\r\n\t\t\t\t\t\tif (node.type === syntax_1.Syntax.Program && node.body.length > 0) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.insertInnerComments(node, metadata);\r\n\t\t\t\t\t\tvar trailingComments = this.findTrailingComments(metadata);\r\n\t\t\t\t\t\tvar leadingComments = this.findLeadingComments(metadata);\r\n\t\t\t\t\t\tif (leadingComments.length > 0) {\r\n\t\t\t\t\t\t\tnode.leadingComments = leadingComments;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (trailingComments.length > 0) {\r\n\t\t\t\t\t\t\tnode.trailingComments = trailingComments;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.stack.push({\r\n\t\t\t\t\t\t\tnode: node,\r\n\t\t\t\t\t\t\tstart: metadata.start.offset\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t};\r\n\t\t\t\t\tCommentHandler.prototype.visitComment = function (node, metadata) {\r\n\t\t\t\t\t\tvar type = (node.type[0] === 'L') ? 'Line' : 'Block';\r\n\t\t\t\t\t\tvar comment = {\r\n\t\t\t\t\t\t\ttype: type,\r\n\t\t\t\t\t\t\tvalue: node.value\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tif (node.range) {\r\n\t\t\t\t\t\t\tcomment.range = node.range;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (node.loc) {\r\n\t\t\t\t\t\t\tcomment.loc = node.loc;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.comments.push(comment);\r\n\t\t\t\t\t\tif (this.attach) {\r\n\t\t\t\t\t\t\tvar entry = {\r\n\t\t\t\t\t\t\t\tcomment: {\r\n\t\t\t\t\t\t\t\t\ttype: type,\r\n\t\t\t\t\t\t\t\t\tvalue: node.value,\r\n\t\t\t\t\t\t\t\t\trange: [metadata.start.offset, metadata.end.offset]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tstart: metadata.start.offset\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tif (node.loc) {\r\n\t\t\t\t\t\t\t\tentry.comment.loc = node.loc;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tnode.type = type;\r\n\t\t\t\t\t\t\tthis.leading.push(entry);\r\n\t\t\t\t\t\t\tthis.trailing.push(entry);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t\tCommentHandler.prototype.visit = function (node, metadata) {\r\n\t\t\t\t\t\tif (node.type === 'LineComment') {\r\n\t\t\t\t\t\t\tthis.visitComment(node, metadata);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (node.type === 'BlockComment') {\r\n\t\t\t\t\t\t\tthis.visitComment(node, metadata);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (this.attach) {\r\n\t\t\t\t\t\t\tthis.visitNode(node, metadata);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t\treturn CommentHandler;\r\n\t\t\t\t}());\r\n\t\t\t\texports.CommentHandler = CommentHandler;\r\n\r\n\r\n\t\t\t\t/***/\r\n},\r\n\t\t/* 2 */\r\n\t\t/***/ function (module, exports) {\r\n\r\n\t\t\t\t\"use strict\";\r\n\t\t\t\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t\t\t\texports.Syntax = {\r\n\t\t\t\t\tAssignmentExpression: 'AssignmentExpression',\r\n\t\t\t\t\tAssignmentPattern: 'AssignmentPattern',\r\n\t\t\t\t\tArrayExpression: 'ArrayExpression',\r\n\t\t\t\t\tArrayPattern: 'ArrayPattern',\r\n\t\t\t\t\tArrowFunctionExpression: 'ArrowFunctionExpression',\r\n\t\t\t\t\tAwaitExpression: 'AwaitExpression',\r\n\t\t\t\t\tBlockStatement: 'BlockStatement',\r\n\t\t\t\t\tBinaryExpression: 'BinaryExpression',\r\n\t\t\t\t\tBreakStatement: 'BreakStatement',\r\n\t\t\t\t\tCallExpression: 'CallExpression',\r\n\t\t\t\t\tCatchClause: 'CatchClause',\r\n\t\t\t\t\tClassBody: 'ClassBody',\r\n\t\t\t\t\tClassDeclaration: 'ClassDeclaration',\r\n\t\t\t\t\tClassExpression: 'ClassExpression',\r\n\t\t\t\t\tConditionalExpression: 'ConditionalExpression',\r\n\t\t\t\t\tContinueStatement: 'ContinueStatement',\r\n\t\t\t\t\tDoWhileStatement: 'DoWhileStatement',\r\n\t\t\t\t\tDebuggerStatement: 'DebuggerStatement',\r\n\t\t\t\t\tEmptyStatement: 'EmptyStatement',\r\n\t\t\t\t\tExportAllDeclaration: 'ExportAllDeclaration',\r\n\t\t\t\t\tExportDefaultDeclaration: 'ExportDefaultDeclaration',\r\n\t\t\t\t\tExportNamedDeclaration: 'ExportNamedDeclaration',\r\n\t\t\t\t\tExportSpecifier: 'ExportSpecifier',\r\n\t\t\t\t\tExpressionStatement: 'ExpressionStatement',\r\n\t\t\t\t\tForStatement: 'ForStatement',\r\n\t\t\t\t\tForOfStatement: 'ForOfStatement',\r\n\t\t\t\t\tForInStatement: 'ForInStatement',\r\n\t\t\t\t\tFunctionDeclaration: 'FunctionDeclaration',\r\n\t\t\t\t\tFunctionExpression: 'FunctionExpression',\r\n\t\t\t\t\tIdentifier: 'Identifier',\r\n\t\t\t\t\tIfStatement: 'IfStatement',\r\n\t\t\t\t\tImport: 'Import',\r\n\t\t\t\t\tImportDeclaration: 'ImportDeclaration',\r\n\t\t\t\t\tImportDefaultSpecifier: 'ImportDefaultSpecifier',\r\n\t\t\t\t\tImportNamespaceSpecifier: 'ImportNamespaceSpecifier',\r\n\t\t\t\t\tImportSpecifier: 'ImportSpecifier',\r\n\t\t\t\t\tLiteral: 'Literal',\r\n\t\t\t\t\tLabeledStatement: 'LabeledStatement',\r\n\t\t\t\t\tLogicalExpression: 'LogicalExpression',\r\n\t\t\t\t\tMemberExpression: 'MemberExpression',\r\n\t\t\t\t\tMetaProperty: 'MetaProperty',\r\n\t\t\t\t\tMethodDefinition: 'MethodDefinition',\r\n\t\t\t\t\tNewExpression: 'NewExpression',\r\n\t\t\t\t\tObjectExpression: 'ObjectExpression',\r\n\t\t\t\t\tObjectPattern: 'ObjectPattern',\r\n\t\t\t\t\tProgram: 'Program',\r\n\t\t\t\t\tProperty: 'Property',\r\n\t\t\t\t\tRestElement: 'RestElement',\r\n\t\t\t\t\tReturnStatement: 'ReturnStatement',\r\n\t\t\t\t\tSequenceExpression: 'SequenceExpression',\r\n\t\t\t\t\tSpreadElement: 'SpreadElement',\r\n\t\t\t\t\tSuper: 'Super',\r\n\t\t\t\t\tSwitchCase: 'SwitchCase',\r\n\t\t\t\t\tSwitchStatement: 'SwitchStatement',\r\n\t\t\t\t\tTaggedTemplateExpression: 'TaggedTemplateExpression',\r\n\t\t\t\t\tTemplateElement: 'TemplateElement',\r\n\t\t\t\t\tTemplateLiteral: 'TemplateLiteral',\r\n\t\t\t\t\tThisExpression: 'ThisExpression',\r\n\t\t\t\t\tThrowStatement: 'ThrowStatement',\r\n\t\t\t\t\tTryStatement: 'TryStatement',\r\n\t\t\t\t\tUnaryExpression: 'UnaryExpression',\r\n\t\t\t\t\tUpdateExpression: 'UpdateExpression',\r\n\t\t\t\t\tVariableDeclaration: 'VariableDeclaration',\r\n\t\t\t\t\tVariableDeclarator: 'VariableDeclarator',\r\n\t\t\t\t\tWhileStatement: 'WhileStatement',\r\n\t\t\t\t\tWithStatement: 'WithStatement',\r\n\t\t\t\t\tYieldExpression: 'YieldExpression'\r\n\t\t\t\t};\r\n\r\n\r\n\t\t\t\t/***/\r\n},\r\n\t\t/* 3 */\r\n\t\t/***/ function (module, exports, __webpack_require__) {\r\n\r\n\t\t\t\t\"use strict\";\r\n\t\t\t\t/* istanbul ignore next */\r\n\t\t\t\tvar __extends = (this && this.__extends) || (function () {\r\n\t\t\t\t\tvar extendStatics = function (d, b) {\r\n\t\t\t\t\t\textendStatics = Object.setPrototypeOf ||\r\n\t\t\t\t\t\t\t({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t\t\t\t\t\t\tfunction (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t\t\t\t\t\treturn extendStatics(d, b);\r\n\t\t\t\t\t};\r\n\t\t\t\t\treturn function (d, b) {\r\n\t\t\t\t\t\textendStatics(d, b);\r\n\t\t\t\t\t\tfunction __() { this.constructor = d; }\r\n\t\t\t\t\t\td.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t\t\t\t\t};\r\n\t\t\t\t})();\r\n\t\t\t\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t\t\t\tvar character_1 = __webpack_require__(4);\r\n\t\t\t\tvar JSXNode = __webpack_require__(5);\r\n\t\t\t\tvar jsx_syntax_1 = __webpack_require__(6);\r\n\t\t\t\tvar Node = __webpack_require__(7);\r\n\t\t\t\tvar parser_1 = __webpack_require__(8);\r\n\t\t\t\tvar token_1 = __webpack_require__(13);\r\n\t\t\t\tvar xhtml_entities_1 = __webpack_require__(14);\r\n\t\t\t\ttoken_1.TokenName[100 /* Identifier */] = 'JSXIdentifier';\r\n\t\t\t\ttoken_1.TokenName[101 /* Text */] = 'JSXText';\r\n\t\t\t\t// Fully qualified element name, e.g. <svg:path> returns \"svg:path\"\r\n\t\t\t\tfunction getQualifiedElementName(elementName) {\r\n\t\t\t\t\tvar qualifiedName;\r\n\t\t\t\t\tswitch (elementName.type) {\r\n\t\t\t\t\t\tcase jsx_syntax_1.JSXSyntax.JSXIdentifier:\r\n\t\t\t\t\t\t\tvar id = elementName;\r\n\t\t\t\t\t\t\tqualifiedName = id.name;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase jsx_syntax_1.JSXSyntax.JSXNamespacedName:\r\n\t\t\t\t\t\t\tvar ns = elementName;\r\n\t\t\t\t\t\t\tqualifiedName = getQualifiedElementName(ns.namespace) + ':' +\r\n\t\t\t\t\t\t\t\tgetQualifiedElementName(ns.name);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase jsx_syntax_1.JSXSyntax.JSXMemberExpression:\r\n\t\t\t\t\t\t\tvar expr = elementName;\r\n\t\t\t\t\t\t\tqualifiedName = getQualifiedElementName(expr.object) + '.' +\r\n\t\t\t\t\t\t\t\tgetQualifiedElementName(expr.property);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t/* istanbul ignore next */\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn qualifiedName;\r\n\t\t\t\t}\r\n\t\t\t\tvar JSXParser = /** @class */ (function (_super) {\r\n\t\t\t\t\t__extends(JSXParser, _super);\r\n\t\t\t\t\tfunction JSXParser(code, options, delegate) {\r\n\t\t\t\t\t\treturn _super.call(this, code, options, delegate) || this;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tJSXParser.prototype.parsePrimaryExpression = function () {\r\n\t\t\t\t\t\treturn this.match('<') ? this.parseJSXRoot() : _super.prototype.parsePrimaryExpression.call(this);\r\n\t\t\t\t\t};\r\n\t\t\t\t\tJSXParser.prototype.startJSX = function () {\r\n\t\t\t\t\t\t// Unwind the scanner before the lookahead token.\r\n\t\t\t\t\t\tthis.scanner.index = this.startMarker.index;\r\n\t\t\t\t\t\tthis.scanner.lineNumber = this.startMarker.line;\r\n\t\t\t\t\t\tthis.scanner.lineStart = this.startMarker.index - this.startMarker.column;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tJSXParser.prototype.finishJSX = function () {\r\n\t\t\t\t\t\t// Prime the next lookahead.\r\n\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t};\r\n\t\t\t\t\tJSXParser.prototype.reenterJSX = function () {\r\n\t\t\t\t\t\tthis.startJSX();\r\n\t\t\t\t\t\tthis.expectJSX('}');\r\n\t\t\t\t\t\t// Pop the closing '}' added from the lookahead.\r\n\t\t\t\t\t\tif (this.config.tokens) {\r\n\t\t\t\t\t\t\tthis.tokens.pop();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t\tJSXParser.prototype.createJSXNode = function () {\r\n\t\t\t\t\t\tthis.collectComments();\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tindex: this.scanner.index,\r\n\t\t\t\t\t\t\tline: this.scanner.lineNumber,\r\n\t\t\t\t\t\t\tcolumn: this.scanner.index - this.scanner.lineStart\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t};\r\n\t\t\t\t\tJSXParser.prototype.createJSXChildNode = function () {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tindex: this.scanner.index,\r\n\t\t\t\t\t\t\tline: this.scanner.lineNumber,\r\n\t\t\t\t\t\t\tcolumn: this.scanner.index - this.scanner.lineStart\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t};\r\n\t\t\t\t\tJSXParser.prototype.scanXHTMLEntity = function (quote) {\r\n\t\t\t\t\t\tvar result = '&';\r\n\t\t\t\t\t\tvar valid = true;\r\n\t\t\t\t\t\tvar terminated = false;\r\n\t\t\t\t\t\tvar numeric = false;\r\n\t\t\t\t\t\tvar hex = false;\r\n\t\t\t\t\t\twhile (!this.scanner.eof() && valid && !terminated) {\r\n\t\t\t\t\t\t\tvar ch = this.scanner.source[this.scanner.index];\r\n\t\t\t\t\t\t\tif (ch === quote) {\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tterminated = (ch === ';');\r\n\t\t\t\t\t\t\tresult += ch;\r\n\t\t\t\t\t\t\t++this.scanner.index;\r\n\t\t\t\t\t\t\tif (!terminated) {\r\n\t\t\t\t\t\t\t\tswitch (result.length) {\r\n\t\t\t\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\t\t\t\t// e.g. '&#123;'\r\n\t\t\t\t\t\t\t\t\t\tnumeric = (ch === '#');\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t\t\t\t\tif (numeric) {\r\n\t\t\t\t\t\t\t\t\t\t\t// e.g. '&#x41;'\r\n\t\t\t\t\t\t\t\t\t\t\thex = (ch === 'x');\r\n\t\t\t\t\t\t\t\t\t\t\tvalid = hex || character_1.Character.isDecimalDigit(ch.charCodeAt(0));\r\n\t\t\t\t\t\t\t\t\t\t\tnumeric = numeric && !hex;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\tvalid = valid && !(numeric && !character_1.Character.isDecimalDigit(ch.charCodeAt(0)));\r\n\t\t\t\t\t\t\t\t\t\tvalid = valid && !(hex && !character_1.Character.isHexDigit(ch.charCodeAt(0)));\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (valid && terminated && result.length > 2) {\r\n\t\t\t\t\t\t\t// e.g. '&#x41;' becomes just '#x41'\r\n\t\t\t\t\t\t\tvar str = result.substr(1, result.length - 2);\r\n\t\t\t\t\t\t\tif (numeric && str.length > 1) {\r\n\t\t\t\t\t\t\t\tresult = String.fromCharCode(parseInt(str.substr(1), 10));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (hex && str.length > 2) {\r\n\t\t\t\t\t\t\t\tresult = String.fromCharCode(parseInt('0' + str.substr(1), 16));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (!numeric && !hex && xhtml_entities_1.XHTMLEntities[str]) {\r\n\t\t\t\t\t\t\t\tresult = xhtml_entities_1.XHTMLEntities[str];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// Scan the next JSX token. This replaces Scanner#lex when in JSX mode.\r\n\t\t\t\t\tJSXParser.prototype.lexJSX = function () {\r\n\t\t\t\t\t\tvar cp = this.scanner.source.charCodeAt(this.scanner.index);\r\n\t\t\t\t\t\t// < > / : = { }\r\n\t\t\t\t\t\tif (cp === 60 || cp === 62 || cp === 47 || cp === 58 || cp === 61 || cp === 123 || cp === 125) {\r\n\t\t\t\t\t\t\tvar value = this.scanner.source[this.scanner.index++];\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\ttype: 7 /* Punctuator */,\r\n\t\t\t\t\t\t\t\tvalue: value,\r\n\t\t\t\t\t\t\t\tlineNumber: this.scanner.lineNumber,\r\n\t\t\t\t\t\t\t\tlineStart: this.scanner.lineStart,\r\n\t\t\t\t\t\t\t\tstart: this.scanner.index - 1,\r\n\t\t\t\t\t\t\t\tend: this.scanner.index\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// \" '\r\n\t\t\t\t\t\tif (cp === 34 || cp === 39) {\r\n\t\t\t\t\t\t\tvar start = this.scanner.index;\r\n\t\t\t\t\t\t\tvar quote = this.scanner.source[this.scanner.index++];\r\n\t\t\t\t\t\t\tvar str = '';\r\n\t\t\t\t\t\t\twhile (!this.scanner.eof()) {\r\n\t\t\t\t\t\t\t\tvar ch = this.scanner.source[this.scanner.index++];\r\n\t\t\t\t\t\t\t\tif (ch === quote) {\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse if (ch === '&') {\r\n\t\t\t\t\t\t\t\t\tstr += this.scanXHTMLEntity(quote);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tstr += ch;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\ttype: 8 /* StringLiteral */,\r\n\t\t\t\t\t\t\t\tvalue: str,\r\n\t\t\t\t\t\t\t\tlineNumber: this.scanner.lineNumber,\r\n\t\t\t\t\t\t\t\tlineStart: this.scanner.lineStart,\r\n\t\t\t\t\t\t\t\tstart: start,\r\n\t\t\t\t\t\t\t\tend: this.scanner.index\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// ... or .\r\n\t\t\t\t\t\tif (cp === 46) {\r\n\t\t\t\t\t\t\tvar n1 = this.scanner.source.charCodeAt(this.scanner.index + 1);\r\n\t\t\t\t\t\t\tvar n2 = this.scanner.source.charCodeAt(this.scanner.index + 2);\r\n\t\t\t\t\t\t\tvar value = (n1 === 46 && n2 === 46) ? '...' : '.';\r\n\t\t\t\t\t\t\tvar start = this.scanner.index;\r\n\t\t\t\t\t\t\tthis.scanner.index += value.length;\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\ttype: 7 /* Punctuator */,\r\n\t\t\t\t\t\t\t\tvalue: value,\r\n\t\t\t\t\t\t\t\tlineNumber: this.scanner.lineNumber,\r\n\t\t\t\t\t\t\t\tlineStart: this.scanner.lineStart,\r\n\t\t\t\t\t\t\t\tstart: start,\r\n\t\t\t\t\t\t\t\tend: this.scanner.index\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// `\r\n\t\t\t\t\t\tif (cp === 96) {\r\n\t\t\t\t\t\t\t// Only placeholder, since it will be rescanned as a real assignment expression.\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\ttype: 10 /* Template */,\r\n\t\t\t\t\t\t\t\tvalue: '',\r\n\t\t\t\t\t\t\t\tlineNumber: this.scanner.lineNumber,\r\n\t\t\t\t\t\t\t\tlineStart: this.scanner.lineStart,\r\n\t\t\t\t\t\t\t\tstart: this.scanner.index,\r\n\t\t\t\t\t\t\t\tend: this.scanner.index\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// Identifer can not contain backslash (char code 92).\r\n\t\t\t\t\t\tif (character_1.Character.isIdentifierStart(cp) && (cp !== 92)) {\r\n\t\t\t\t\t\t\tvar start = this.scanner.index;\r\n\t\t\t\t\t\t\t++this.scanner.index;\r\n\t\t\t\t\t\t\twhile (!this.scanner.eof()) {\r\n\t\t\t\t\t\t\t\tvar ch = this.scanner.source.charCodeAt(this.scanner.index);\r\n\t\t\t\t\t\t\t\tif (character_1.Character.isIdentifierPart(ch) && (ch !== 92)) {\r\n\t\t\t\t\t\t\t\t\t++this.scanner.index;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse if (ch === 45) {\r\n\t\t\t\t\t\t\t\t\t// Hyphen (char code 45) can be part of an identifier.\r\n\t\t\t\t\t\t\t\t\t++this.scanner.index;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvar id = this.scanner.source.slice(start, this.scanner.index);\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\ttype: 100 /* Identifier */,\r\n\t\t\t\t\t\t\t\tvalue: id,\r\n\t\t\t\t\t\t\t\tlineNumber: this.scanner.lineNumber,\r\n\t\t\t\t\t\t\t\tlineStart: this.scanner.lineStart,\r\n\t\t\t\t\t\t\t\tstart: start,\r\n\t\t\t\t\t\t\t\tend: this.scanner.index\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn this.scanner.lex();\r\n\t\t\t\t\t};\r\n\t\t\t\t\tJSXParser.prototype.nextJSXToken = function () {\r\n\t\t\t\t\t\tthis.collectComments();\r\n\t\t\t\t\t\tthis.startMarker.index = this.scanner.index;\r\n\t\t\t\t\t\tthis.startMarker.line = this.scanner.lineNumber;\r\n\t\t\t\t\t\tthis.startMarker.column = this.scanner.index - this.scanner.lineStart;\r\n\t\t\t\t\t\tvar token = this.lexJSX();\r\n\t\t\t\t\t\tthis.lastMarker.index = this.scanner.index;\r\n\t\t\t\t\t\tthis.lastMarker.line = this.scanner.lineNumber;\r\n\t\t\t\t\t\tthis.lastMarker.column = this.scanner.index - this.scanner.lineStart;\r\n\t\t\t\t\t\tif (this.config.tokens) {\r\n\t\t\t\t\t\t\tthis.tokens.push(this.convertToken(token));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn token;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tJSXParser.prototype.nextJSXText = function () {\r\n\t\t\t\t\t\tthis.startMarker.index = this.scanner.index;\r\n\t\t\t\t\t\tthis.startMarker.line = this.scanner.lineNumber;\r\n\t\t\t\t\t\tthis.startMarker.column = this.scanner.index - this.scanner.lineStart;\r\n\t\t\t\t\t\tvar start = this.scanner.index;\r\n\t\t\t\t\t\tvar text = '';\r\n\t\t\t\t\t\twhile (!this.scanner.eof()) {\r\n\t\t\t\t\t\t\tvar ch = this.scanner.source[this.scanner.index];\r\n\t\t\t\t\t\t\tif (ch === '{' || ch === '<') {\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t++this.scanner.index;\r\n\t\t\t\t\t\t\ttext += ch;\r\n\t\t\t\t\t\t\tif (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\r\n\t\t\t\t\t\t\t\t++this.scanner.lineNumber;\r\n\t\t\t\t\t\t\t\tif (ch === '\\r' && this.scanner.source[this.scanner.index] === '\\n') {\r\n\t\t\t\t\t\t\t\t\t++this.scanner.index;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tthis.scanner.lineStart = this.scanner.index;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.lastMarker.index = this.scanner.index;\r\n\t\t\t\t\t\tthis.lastMarker.line = this.scanner.lineNumber;\r\n\t\t\t\t\t\tthis.lastMarker.column = this.scanner.index - this.scanner.lineStart;\r\n\t\t\t\t\t\tvar token = {\r\n\t\t\t\t\t\t\ttype: 101 /* Text */,\r\n\t\t\t\t\t\t\tvalue: text,\r\n\t\t\t\t\t\t\tlineNumber: this.scanner.lineNumber,\r\n\t\t\t\t\t\t\tlineStart: this.scanner.lineStart,\r\n\t\t\t\t\t\t\tstart: start,\r\n\t\t\t\t\t\t\tend: this.scanner.index\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tif ((text.length > 0) && this.config.tokens) {\r\n\t\t\t\t\t\t\tthis.tokens.push(this.convertToken(token));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn token;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tJSXParser.prototype.peekJSXToken = function () {\r\n\t\t\t\t\t\tvar state = this.scanner.saveState();\r\n\t\t\t\t\t\tthis.scanner.scanComments();\r\n\t\t\t\t\t\tvar next = this.lexJSX();\r\n\t\t\t\t\t\tthis.scanner.restoreState(state);\r\n\t\t\t\t\t\treturn next;\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// Expect the next JSX token to match the specified punctuator.\r\n\t\t\t\t\t// If not, an exception will be thrown.\r\n\t\t\t\t\tJSXParser.prototype.expectJSX = function (value) {\r\n\t\t\t\t\t\tvar token = this.nextJSXToken();\r\n\t\t\t\t\t\tif (token.type !== 7 /* Punctuator */ || token.value !== value) {\r\n\t\t\t\t\t\t\tthis.throwUnexpectedToken(token);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// Return true if the next JSX token matches the specified punctuator.\r\n\t\t\t\t\tJSXParser.prototype.matchJSX = function (value) {\r\n\t\t\t\t\t\tvar next = this.peekJSXToken();\r\n\t\t\t\t\t\treturn next.type === 7 /* Punctuator */ && next.value === value;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tJSXParser.prototype.parseJSXIdentifier = function () {\r\n\t\t\t\t\t\tvar node = this.createJSXNode();\r\n\t\t\t\t\t\tvar token = this.nextJSXToken();\r\n\t\t\t\t\t\tif (token.type !== 100 /* Identifier */) {\r\n\t\t\t\t\t\t\tthis.throwUnexpectedToken(token);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn this.finalize(node, new JSXNode.JSXIdentifier(token.value));\r\n\t\t\t\t\t};\r\n\t\t\t\t\tJSXParser.prototype.parseJSXElementName = function () {\r\n\t\t\t\t\t\tvar node = this.createJSXNode();\r\n\t\t\t\t\t\tvar elementName = this.parseJSXIdentifier();\r\n\t\t\t\t\t\tif (this.matchJSX(':')) {\r\n\t\t\t\t\t\t\tvar namespace = elementName;\r\n\t\t\t\t\t\t\tthis.expectJSX(':');\r\n\t\t\t\t\t\t\tvar name_1 = this.parseJSXIdentifier();\r\n\t\t\t\t\t\t\telementName = this.finalize(node, new JSXNode.JSXNamespacedName(namespace, name_1));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (this.matchJSX('.')) {\r\n\t\t\t\t\t\t\twhile (this.matchJSX('.')) {\r\n\t\t\t\t\t\t\t\tvar object = elementName;\r\n\t\t\t\t\t\t\t\tthis.expectJSX('.');\r\n\t\t\t\t\t\t\t\tvar property = this.parseJSXIdentifier();\r\n\t\t\t\t\t\t\t\telementName = this.finalize(node, new JSXNode.JSXMemberExpression(object, property));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn elementName;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tJSXParser.prototype.parseJSXAttributeName = function () {\r\n\t\t\t\t\t\tvar node = this.createJSXNode();\r\n\t\t\t\t\t\tvar attributeName;\r\n\t\t\t\t\t\tvar identifier = this.parseJSXIdentifier();\r\n\t\t\t\t\t\tif (this.matchJSX(':')) {\r\n\t\t\t\t\t\t\tvar namespace = identifier;\r\n\t\t\t\t\t\t\tthis.expectJSX(':');\r\n\t\t\t\t\t\t\tvar name_2 = this.parseJSXIdentifier();\r\n\t\t\t\t\t\t\tattributeName = this.finalize(node, new JSXNode.JSXNamespacedName(namespace, name_2));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tattributeName = identifier;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn attributeName;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tJSXParser.prototype.parseJSXStringLiteralAttribute = function () {\r\n\t\t\t\t\t\tvar node = this.createJSXNode();\r\n\t\t\t\t\t\tvar token = this.nextJSXToken();\r\n\t\t\t\t\t\tif (token.type !== 8 /* StringLiteral */) {\r\n\t\t\t\t\t\t\tthis.throwUnexpectedToken(token);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar raw = this.getTokenRaw(token);\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.Literal(token.value, raw));\r\n\t\t\t\t\t};\r\n\t\t\t\t\tJSXParser.prototype.parseJSXExpressionAttribute = function () {\r\n\t\t\t\t\t\tvar node = this.createJSXNode();\r\n\t\t\t\t\t\tthis.expectJSX('{');\r\n\t\t\t\t\t\tthis.finishJSX();\r\n\t\t\t\t\t\tif (this.match('}')) {\r\n\t\t\t\t\t\t\tthis.tolerateError('JSX attributes must only be assigned a non-empty expression');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar expression = this.parseAssignmentExpression();\r\n\t\t\t\t\t\tthis.reenterJSX();\r\n\t\t\t\t\t\treturn this.finalize(node, new JSXNode.JSXExpressionContainer(expression));\r\n\t\t\t\t\t};\r\n\t\t\t\t\tJSXParser.prototype.parseJSXAttributeValue = function () {\r\n\t\t\t\t\t\treturn this.matchJSX('{') ? this.parseJSXExpressionAttribute() :\r\n\t\t\t\t\t\t\tthis.matchJSX('<') ? this.parseJSXElement() : this.parseJSXStringLiteralAttribute();\r\n\t\t\t\t\t};\r\n\t\t\t\t\tJSXParser.prototype.parseJSXNameValueAttribute = function () {\r\n\t\t\t\t\t\tvar node = this.createJSXNode();\r\n\t\t\t\t\t\tvar name = this.parseJSXAttributeName();\r\n\t\t\t\t\t\tvar value = null;\r\n\t\t\t\t\t\tif (this.matchJSX('=')) {\r\n\t\t\t\t\t\t\tthis.expectJSX('=');\r\n\t\t\t\t\t\t\tvalue = this.parseJSXAttributeValue();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn this.finalize(node, new JSXNode.JSXAttribute(name, value));\r\n\t\t\t\t\t};\r\n\t\t\t\t\tJSXParser.prototype.parseJSXSpreadAttribute = function () {\r\n\t\t\t\t\t\tvar node = this.createJSXNode();\r\n\t\t\t\t\t\tthis.expectJSX('{');\r\n\t\t\t\t\t\tthis.expectJSX('...');\r\n\t\t\t\t\t\tthis.finishJSX();\r\n\t\t\t\t\t\tvar argument = this.parseAssignmentExpression();\r\n\t\t\t\t\t\tthis.reenterJSX();\r\n\t\t\t\t\t\treturn this.finalize(node, new JSXNode.JSXSpreadAttribute(argument));\r\n\t\t\t\t\t};\r\n\t\t\t\t\tJSXParser.prototype.parseJSXAttributes = function () {\r\n\t\t\t\t\t\tvar attributes = [];\r\n\t\t\t\t\t\twhile (!this.matchJSX('/') && !this.matchJSX('>')) {\r\n\t\t\t\t\t\t\tvar attribute = this.matchJSX('{') ? this.parseJSXSpreadAttribute() :\r\n\t\t\t\t\t\t\t\tthis.parseJSXNameValueAttribute();\r\n\t\t\t\t\t\t\tattributes.push(attribute);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn attributes;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tJSXParser.prototype.parseJSXOpeningElement = function () {\r\n\t\t\t\t\t\tvar node = this.createJSXNode();\r\n\t\t\t\t\t\tthis.expectJSX('<');\r\n\t\t\t\t\t\tvar name = this.parseJSXElementName();\r\n\t\t\t\t\t\tvar attributes = this.parseJSXAttributes();\r\n\t\t\t\t\t\tvar selfClosing = this.matchJSX('/');\r\n\t\t\t\t\t\tif (selfClosing) {\r\n\t\t\t\t\t\t\tthis.expectJSX('/');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.expectJSX('>');\r\n\t\t\t\t\t\treturn this.finalize(node, new JSXNode.JSXOpeningElement(name, selfClosing, attributes));\r\n\t\t\t\t\t};\r\n\t\t\t\t\tJSXParser.prototype.parseJSXBoundaryElement = function () {\r\n\t\t\t\t\t\tvar node = this.createJSXNode();\r\n\t\t\t\t\t\tthis.expectJSX('<');\r\n\t\t\t\t\t\tif (this.matchJSX('/')) {\r\n\t\t\t\t\t\t\tthis.expectJSX('/');\r\n\t\t\t\t\t\t\tvar elementName = this.parseJSXElementName();\r\n\t\t\t\t\t\t\tthis.expectJSX('>');\r\n\t\t\t\t\t\t\treturn this.finalize(node, new JSXNode.JSXClosingElement(elementName));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar name = this.parseJSXElementName();\r\n\t\t\t\t\t\tvar attributes = this.parseJSXAttributes();\r\n\t\t\t\t\t\tvar selfClosing = this.matchJSX('/');\r\n\t\t\t\t\t\tif (selfClosing) {\r\n\t\t\t\t\t\t\tthis.expectJSX('/');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.expectJSX('>');\r\n\t\t\t\t\t\treturn this.finalize(node, new JSXNode.JSXOpeningElement(name, selfClosing, attributes));\r\n\t\t\t\t\t};\r\n\t\t\t\t\tJSXParser.prototype.parseJSXEmptyExpression = function () {\r\n\t\t\t\t\t\tvar node = this.createJSXChildNode();\r\n\t\t\t\t\t\tthis.collectComments();\r\n\t\t\t\t\t\tthis.lastMarker.index = this.scanner.index;\r\n\t\t\t\t\t\tthis.lastMarker.line = this.scanner.lineNumber;\r\n\t\t\t\t\t\tthis.lastMarker.column = this.scanner.index - this.scanner.lineStart;\r\n\t\t\t\t\t\treturn this.finalize(node, new JSXNode.JSXEmptyExpression());\r\n\t\t\t\t\t};\r\n\t\t\t\t\tJSXParser.prototype.parseJSXExpressionContainer = function () {\r\n\t\t\t\t\t\tvar node = this.createJSXNode();\r\n\t\t\t\t\t\tthis.expectJSX('{');\r\n\t\t\t\t\t\tvar expression;\r\n\t\t\t\t\t\tif (this.matchJSX('}')) {\r\n\t\t\t\t\t\t\texpression = this.parseJSXEmptyExpression();\r\n\t\t\t\t\t\t\tthis.expectJSX('}');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.finishJSX();\r\n\t\t\t\t\t\t\texpression = this.parseAssignmentExpression();\r\n\t\t\t\t\t\t\tthis.reenterJSX();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn this.finalize(node, new JSXNode.JSXExpressionContainer(expression));\r\n\t\t\t\t\t};\r\n\t\t\t\t\tJSXParser.prototype.parseJSXChildren = function () {\r\n\t\t\t\t\t\tvar children = [];\r\n\t\t\t\t\t\twhile (!this.scanner.eof()) {\r\n\t\t\t\t\t\t\tvar node = this.createJSXChildNode();\r\n\t\t\t\t\t\t\tvar token = this.nextJSXText();\r\n\t\t\t\t\t\t\tif (token.start < token.end) {\r\n\t\t\t\t\t\t\t\tvar raw = this.getTokenRaw(token);\r\n\t\t\t\t\t\t\t\tvar child = this.finalize(node, new JSXNode.JSXText(token.value, raw));\r\n\t\t\t\t\t\t\t\tchildren.push(child);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (this.scanner.source[this.scanner.index] === '{') {\r\n\t\t\t\t\t\t\t\tvar container = this.parseJSXExpressionContainer();\r\n\t\t\t\t\t\t\t\tchildren.push(container);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn children;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tJSXParser.prototype.parseComplexJSXElement = function (el) {\r\n\t\t\t\t\t\tvar stack = [];\r\n\t\t\t\t\t\twhile (!this.scanner.eof()) {\r\n\t\t\t\t\t\t\tel.children = el.children.concat(this.parseJSXChildren());\r\n\t\t\t\t\t\t\tvar node = this.createJSXChildNode();\r\n\t\t\t\t\t\t\tvar element = this.parseJSXBoundaryElement();\r\n\t\t\t\t\t\t\tif (element.type === jsx_syntax_1.JSXSyntax.JSXOpeningElement) {\r\n\t\t\t\t\t\t\t\tvar opening = element;\r\n\t\t\t\t\t\t\t\tif (opening.selfClosing) {\r\n\t\t\t\t\t\t\t\t\tvar child = this.finalize(node, new JSXNode.JSXElement(opening, [], null));\r\n\t\t\t\t\t\t\t\t\tel.children.push(child);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tstack.push(el);\r\n\t\t\t\t\t\t\t\t\tel = { node: node, opening: opening, closing: null, children: [] };\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (element.type === jsx_syntax_1.JSXSyntax.JSXClosingElement) {\r\n\t\t\t\t\t\t\t\tel.closing = element;\r\n\t\t\t\t\t\t\t\tvar open_1 = getQualifiedElementName(el.opening.name);\r\n\t\t\t\t\t\t\t\tvar close_1 = getQualifiedElementName(el.closing.name);\r\n\t\t\t\t\t\t\t\tif (open_1 !== close_1) {\r\n\t\t\t\t\t\t\t\t\tthis.tolerateError('Expected corresponding JSX closing tag for %0', open_1);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (stack.length > 0) {\r\n\t\t\t\t\t\t\t\t\tvar child = this.finalize(el.node, new JSXNode.JSXElement(el.opening, el.children, el.closing));\r\n\t\t\t\t\t\t\t\t\tel = stack[stack.length - 1];\r\n\t\t\t\t\t\t\t\t\tel.children.push(child);\r\n\t\t\t\t\t\t\t\t\tstack.pop();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn el;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tJSXParser.prototype.parseJSXElement = function () {\r\n\t\t\t\t\t\tvar node = this.createJSXNode();\r\n\t\t\t\t\t\tvar opening = this.parseJSXOpeningElement();\r\n\t\t\t\t\t\tvar children = [];\r\n\t\t\t\t\t\tvar closing = null;\r\n\t\t\t\t\t\tif (!opening.selfClosing) {\r\n\t\t\t\t\t\t\tvar el = this.parseComplexJSXElement({ node: node, opening: opening, closing: closing, children: children });\r\n\t\t\t\t\t\t\tchildren = el.children;\r\n\t\t\t\t\t\t\tclosing = el.closing;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn this.finalize(node, new JSXNode.JSXElement(opening, children, closing));\r\n\t\t\t\t\t};\r\n\t\t\t\t\tJSXParser.prototype.parseJSXRoot = function () {\r\n\t\t\t\t\t\t// Pop the opening '<' added from the lookahead.\r\n\t\t\t\t\t\tif (this.config.tokens) {\r\n\t\t\t\t\t\t\tthis.tokens.pop();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.startJSX();\r\n\t\t\t\t\t\tvar element = this.parseJSXElement();\r\n\t\t\t\t\t\tthis.finishJSX();\r\n\t\t\t\t\t\treturn element;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tJSXParser.prototype.isStartOfExpression = function () {\r\n\t\t\t\t\t\treturn _super.prototype.isStartOfExpression.call(this) || this.match('<');\r\n\t\t\t\t\t};\r\n\t\t\t\t\treturn JSXParser;\r\n\t\t\t\t}(parser_1.Parser));\r\n\t\t\t\texports.JSXParser = JSXParser;\r\n\r\n\r\n\t\t\t\t/***/\r\n},\r\n\t\t/* 4 */\r\n\t\t/***/ function (module, exports) {\r\n\r\n\t\t\t\t\"use strict\";\r\n\t\t\t\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t\t\t\t// See also tools/generate-unicode-regex.js.\r\n\t\t\t\tvar Regex = {\r\n\t\t\t\t\t// Unicode v12.1.0 NonAsciiIdentifierStart:\r\n\t\t\t\t\tNonAsciiIdentifierStart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEF\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7C6\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB67\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD23\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF45\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD44\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC5F\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDEB8\\uDF00-\\uDF1A]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCDF\\uDCFF\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDEE0-\\uDEF2]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE7F\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD4E\\uDEC0-\\uDEEB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43\\uDD4B]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]/,\r\n\t\t\t\t\t// Unicode v12.1.0 NonAsciiIdentifierPart:\r\n\t\t\t\t\t// eslint-disable-next-line no-misleading-character-class\r\n\t\t\t\t\tNonAsciiIdentifierPart: /[\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u07FD\\u0800-\\u082D\\u0840-\\u085B\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D3-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u09FC\\u09FE\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9-\\u0AFF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D00-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CD0-\\u1CD2\\u1CD4-\\u1CFA\\u1D00-\\u1DF9\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEF\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7C6\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB67\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD27\\uDD30-\\uDD39\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF50\\uDFE0-\\uDFF6]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD44-\\uDD46\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDC9-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3B-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC5E\\uDC5F\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDC00-\\uDC3A\\uDCA0-\\uDCE9\\uDCFF\\uDDA0-\\uDDA7\\uDDAA-\\uDDD7\\uDDDA-\\uDDE1\\uDDE3\\uDDE4\\uDE00-\\uDE3E\\uDE47\\uDE50-\\uDE99\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC59\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD36\\uDD3A\\uDD3C\\uDD3D\\uDD3F-\\uDD47\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD8E\\uDD90\\uDD91\\uDD93-\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF6]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE7F\\uDF00-\\uDF4A\\uDF4F-\\uDF87\\uDF8F-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A\\uDD00-\\uDD2C\\uDD30-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDEC0-\\uDEF9]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6\\uDD00-\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/\r\n\t\t\t\t};\r\n\t\t\t\texports.Character = {\r\n\t\t\t\t\tfromCodePoint: function (cp) {\r\n\t\t\t\t\t\treturn (cp < 0x10000) ? String.fromCharCode(cp) :\r\n\t\t\t\t\t\t\tString.fromCharCode(0xD800 + ((cp - 0x10000) >> 10)) +\r\n\t\t\t\t\t\t\tString.fromCharCode(0xDC00 + ((cp - 0x10000) & 1023));\r\n\t\t\t\t\t},\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-white-space\r\n\t\t\t\t\tisWhiteSpace: function (cp) {\r\n\t\t\t\t\t\treturn (cp === 0x20) || (cp === 0x09) || (cp === 0x0B) || (cp === 0x0C) || (cp === 0xA0) ||\r\n\t\t\t\t\t\t\t(cp >= 0x1680 && [0x1680, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(cp) >= 0);\r\n\t\t\t\t\t},\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-line-terminators\r\n\t\t\t\t\tisLineTerminator: function (cp) {\r\n\t\t\t\t\t\treturn (cp === 0x0A) || (cp === 0x0D) || (cp === 0x2028) || (cp === 0x2029);\r\n\t\t\t\t\t},\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-names-and-keywords\r\n\t\t\t\t\tisIdentifierStart: function (cp) {\r\n\t\t\t\t\t\treturn (cp === 0x24) || (cp === 0x5F) || // $ (dollar) and _ (underscore)\r\n\t\t\t\t\t\t\t(cp >= 0x41 && cp <= 0x5A) || // A..Z\r\n\t\t\t\t\t\t\t(cp >= 0x61 && cp <= 0x7A) || // a..z\r\n\t\t\t\t\t\t\t(cp === 0x5C) || // \\ (backslash)\r\n\t\t\t\t\t\t\t((cp >= 0x80) && Regex.NonAsciiIdentifierStart.test(exports.Character.fromCodePoint(cp)));\r\n\t\t\t\t\t},\r\n\t\t\t\t\tisIdentifierPart: function (cp) {\r\n\t\t\t\t\t\treturn (cp === 0x24) || (cp === 0x5F) || // $ (dollar) and _ (underscore)\r\n\t\t\t\t\t\t\t(cp >= 0x41 && cp <= 0x5A) || // A..Z\r\n\t\t\t\t\t\t\t(cp >= 0x61 && cp <= 0x7A) || // a..z\r\n\t\t\t\t\t\t\t(cp >= 0x30 && cp <= 0x39) || // 0..9\r\n\t\t\t\t\t\t\t(cp === 0x5C) || // \\ (backslash)\r\n\t\t\t\t\t\t\t((cp >= 0x80) && Regex.NonAsciiIdentifierPart.test(exports.Character.fromCodePoint(cp)));\r\n\t\t\t\t\t},\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-literals-numeric-literals\r\n\t\t\t\t\tisDecimalDigit: function (cp) {\r\n\t\t\t\t\t\treturn (cp >= 0x30 && cp <= 0x39); // 0..9\r\n\t\t\t\t\t},\r\n\t\t\t\t\tisHexDigit: function (cp) {\r\n\t\t\t\t\t\treturn (cp >= 0x30 && cp <= 0x39) || // 0..9\r\n\t\t\t\t\t\t\t(cp >= 0x41 && cp <= 0x46) || // A..F\r\n\t\t\t\t\t\t\t(cp >= 0x61 && cp <= 0x66); // a..f\r\n\t\t\t\t\t},\r\n\t\t\t\t\tisOctalDigit: function (cp) {\r\n\t\t\t\t\t\treturn (cp >= 0x30 && cp <= 0x37); // 0..7\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\r\n\t\t\t\t/***/\r\n},\r\n\t\t/* 5 */\r\n\t\t/***/ function (module, exports, __webpack_require__) {\r\n\r\n\t\t\t\t\"use strict\";\r\n\t\t\t\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t\t\t\tvar jsx_syntax_1 = __webpack_require__(6);\r\n\t\t\t\tvar JSXClosingElement = /** @class */ (function () {\r\n\t\t\t\t\tfunction JSXClosingElement(name) {\r\n\t\t\t\t\t\tthis.type = jsx_syntax_1.JSXSyntax.JSXClosingElement;\r\n\t\t\t\t\t\tthis.name = name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn JSXClosingElement;\r\n\t\t\t\t}());\r\n\t\t\t\texports.JSXClosingElement = JSXClosingElement;\r\n\t\t\t\tvar JSXElement = /** @class */ (function () {\r\n\t\t\t\t\tfunction JSXElement(openingElement, children, closingElement) {\r\n\t\t\t\t\t\tthis.type = jsx_syntax_1.JSXSyntax.JSXElement;\r\n\t\t\t\t\t\tthis.openingElement = openingElement;\r\n\t\t\t\t\t\tthis.children = children;\r\n\t\t\t\t\t\tthis.closingElement = closingElement;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn JSXElement;\r\n\t\t\t\t}());\r\n\t\t\t\texports.JSXElement = JSXElement;\r\n\t\t\t\tvar JSXEmptyExpression = /** @class */ (function () {\r\n\t\t\t\t\tfunction JSXEmptyExpression() {\r\n\t\t\t\t\t\tthis.type = jsx_syntax_1.JSXSyntax.JSXEmptyExpression;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn JSXEmptyExpression;\r\n\t\t\t\t}());\r\n\t\t\t\texports.JSXEmptyExpression = JSXEmptyExpression;\r\n\t\t\t\tvar JSXExpressionContainer = /** @class */ (function () {\r\n\t\t\t\t\tfunction JSXExpressionContainer(expression) {\r\n\t\t\t\t\t\tthis.type = jsx_syntax_1.JSXSyntax.JSXExpressionContainer;\r\n\t\t\t\t\t\tthis.expression = expression;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn JSXExpressionContainer;\r\n\t\t\t\t}());\r\n\t\t\t\texports.JSXExpressionContainer = JSXExpressionContainer;\r\n\t\t\t\tvar JSXIdentifier = /** @class */ (function () {\r\n\t\t\t\t\tfunction JSXIdentifier(name) {\r\n\t\t\t\t\t\tthis.type = jsx_syntax_1.JSXSyntax.JSXIdentifier;\r\n\t\t\t\t\t\tthis.name = name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn JSXIdentifier;\r\n\t\t\t\t}());\r\n\t\t\t\texports.JSXIdentifier = JSXIdentifier;\r\n\t\t\t\tvar JSXMemberExpression = /** @class */ (function () {\r\n\t\t\t\t\tfunction JSXMemberExpression(object, property) {\r\n\t\t\t\t\t\tthis.type = jsx_syntax_1.JSXSyntax.JSXMemberExpression;\r\n\t\t\t\t\t\tthis.object = object;\r\n\t\t\t\t\t\tthis.property = property;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn JSXMemberExpression;\r\n\t\t\t\t}());\r\n\t\t\t\texports.JSXMemberExpression = JSXMemberExpression;\r\n\t\t\t\tvar JSXAttribute = /** @class */ (function () {\r\n\t\t\t\t\tfunction JSXAttribute(name, value) {\r\n\t\t\t\t\t\tthis.type = jsx_syntax_1.JSXSyntax.JSXAttribute;\r\n\t\t\t\t\t\tthis.name = name;\r\n\t\t\t\t\t\tthis.value = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn JSXAttribute;\r\n\t\t\t\t}());\r\n\t\t\t\texports.JSXAttribute = JSXAttribute;\r\n\t\t\t\tvar JSXNamespacedName = /** @class */ (function () {\r\n\t\t\t\t\tfunction JSXNamespacedName(namespace, name) {\r\n\t\t\t\t\t\tthis.type = jsx_syntax_1.JSXSyntax.JSXNamespacedName;\r\n\t\t\t\t\t\tthis.namespace = namespace;\r\n\t\t\t\t\t\tthis.name = name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn JSXNamespacedName;\r\n\t\t\t\t}());\r\n\t\t\t\texports.JSXNamespacedName = JSXNamespacedName;\r\n\t\t\t\tvar JSXOpeningElement = /** @class */ (function () {\r\n\t\t\t\t\tfunction JSXOpeningElement(name, selfClosing, attributes) {\r\n\t\t\t\t\t\tthis.type = jsx_syntax_1.JSXSyntax.JSXOpeningElement;\r\n\t\t\t\t\t\tthis.name = name;\r\n\t\t\t\t\t\tthis.selfClosing = selfClosing;\r\n\t\t\t\t\t\tthis.attributes = attributes;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn JSXOpeningElement;\r\n\t\t\t\t}());\r\n\t\t\t\texports.JSXOpeningElement = JSXOpeningElement;\r\n\t\t\t\tvar JSXSpreadAttribute = /** @class */ (function () {\r\n\t\t\t\t\tfunction JSXSpreadAttribute(argument) {\r\n\t\t\t\t\t\tthis.type = jsx_syntax_1.JSXSyntax.JSXSpreadAttribute;\r\n\t\t\t\t\t\tthis.argument = argument;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn JSXSpreadAttribute;\r\n\t\t\t\t}());\r\n\t\t\t\texports.JSXSpreadAttribute = JSXSpreadAttribute;\r\n\t\t\t\tvar JSXText = /** @class */ (function () {\r\n\t\t\t\t\tfunction JSXText(value, raw) {\r\n\t\t\t\t\t\tthis.type = jsx_syntax_1.JSXSyntax.JSXText;\r\n\t\t\t\t\t\tthis.value = value;\r\n\t\t\t\t\t\tthis.raw = raw;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn JSXText;\r\n\t\t\t\t}());\r\n\t\t\t\texports.JSXText = JSXText;\r\n\r\n\r\n\t\t\t\t/***/\r\n},\r\n\t\t/* 6 */\r\n\t\t/***/ function (module, exports) {\r\n\r\n\t\t\t\t\"use strict\";\r\n\t\t\t\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t\t\t\texports.JSXSyntax = {\r\n\t\t\t\t\tJSXAttribute: 'JSXAttribute',\r\n\t\t\t\t\tJSXClosingElement: 'JSXClosingElement',\r\n\t\t\t\t\tJSXElement: 'JSXElement',\r\n\t\t\t\t\tJSXEmptyExpression: 'JSXEmptyExpression',\r\n\t\t\t\t\tJSXExpressionContainer: 'JSXExpressionContainer',\r\n\t\t\t\t\tJSXIdentifier: 'JSXIdentifier',\r\n\t\t\t\t\tJSXMemberExpression: 'JSXMemberExpression',\r\n\t\t\t\t\tJSXNamespacedName: 'JSXNamespacedName',\r\n\t\t\t\t\tJSXOpeningElement: 'JSXOpeningElement',\r\n\t\t\t\t\tJSXSpreadAttribute: 'JSXSpreadAttribute',\r\n\t\t\t\t\tJSXText: 'JSXText'\r\n\t\t\t\t};\r\n\r\n\r\n\t\t\t\t/***/\r\n},\r\n\t\t/* 7 */\r\n\t\t/***/ function (module, exports, __webpack_require__) {\r\n\r\n\t\t\t\t\"use strict\";\r\n\t\t\t\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t\t\t\tvar syntax_1 = __webpack_require__(2);\r\n\t\t\t\tvar ArrayExpression = /** @class */ (function () {\r\n\t\t\t\t\tfunction ArrayExpression(elements) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.ArrayExpression;\r\n\t\t\t\t\t\tthis.elements = elements;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn ArrayExpression;\r\n\t\t\t\t}());\r\n\t\t\t\texports.ArrayExpression = ArrayExpression;\r\n\t\t\t\tvar ArrayPattern = /** @class */ (function () {\r\n\t\t\t\t\tfunction ArrayPattern(elements) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.ArrayPattern;\r\n\t\t\t\t\t\tthis.elements = elements;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn ArrayPattern;\r\n\t\t\t\t}());\r\n\t\t\t\texports.ArrayPattern = ArrayPattern;\r\n\t\t\t\tvar ArrowFunctionExpression = /** @class */ (function () {\r\n\t\t\t\t\tfunction ArrowFunctionExpression(params, body, expression) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.ArrowFunctionExpression;\r\n\t\t\t\t\t\tthis.id = null;\r\n\t\t\t\t\t\tthis.params = params;\r\n\t\t\t\t\t\tthis.body = body;\r\n\t\t\t\t\t\tthis.generator = false;\r\n\t\t\t\t\t\tthis.expression = expression;\r\n\t\t\t\t\t\tthis.async = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn ArrowFunctionExpression;\r\n\t\t\t\t}());\r\n\t\t\t\texports.ArrowFunctionExpression = ArrowFunctionExpression;\r\n\t\t\t\tvar AssignmentExpression = /** @class */ (function () {\r\n\t\t\t\t\tfunction AssignmentExpression(operator, left, right) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.AssignmentExpression;\r\n\t\t\t\t\t\tthis.operator = operator;\r\n\t\t\t\t\t\tthis.left = left;\r\n\t\t\t\t\t\tthis.right = right;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn AssignmentExpression;\r\n\t\t\t\t}());\r\n\t\t\t\texports.AssignmentExpression = AssignmentExpression;\r\n\t\t\t\tvar AssignmentPattern = /** @class */ (function () {\r\n\t\t\t\t\tfunction AssignmentPattern(left, right) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.AssignmentPattern;\r\n\t\t\t\t\t\tthis.left = left;\r\n\t\t\t\t\t\tthis.right = right;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn AssignmentPattern;\r\n\t\t\t\t}());\r\n\t\t\t\texports.AssignmentPattern = AssignmentPattern;\r\n\t\t\t\tvar AsyncArrowFunctionExpression = /** @class */ (function () {\r\n\t\t\t\t\tfunction AsyncArrowFunctionExpression(params, body, expression) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.ArrowFunctionExpression;\r\n\t\t\t\t\t\tthis.id = null;\r\n\t\t\t\t\t\tthis.params = params;\r\n\t\t\t\t\t\tthis.body = body;\r\n\t\t\t\t\t\tthis.generator = false;\r\n\t\t\t\t\t\tthis.expression = expression;\r\n\t\t\t\t\t\tthis.async = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn AsyncArrowFunctionExpression;\r\n\t\t\t\t}());\r\n\t\t\t\texports.AsyncArrowFunctionExpression = AsyncArrowFunctionExpression;\r\n\t\t\t\tvar AsyncFunctionDeclaration = /** @class */ (function () {\r\n\t\t\t\t\tfunction AsyncFunctionDeclaration(id, params, body) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.FunctionDeclaration;\r\n\t\t\t\t\t\tthis.id = id;\r\n\t\t\t\t\t\tthis.params = params;\r\n\t\t\t\t\t\tthis.body = body;\r\n\t\t\t\t\t\tthis.generator = false;\r\n\t\t\t\t\t\tthis.expression = false;\r\n\t\t\t\t\t\tthis.async = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn AsyncFunctionDeclaration;\r\n\t\t\t\t}());\r\n\t\t\t\texports.AsyncFunctionDeclaration = AsyncFunctionDeclaration;\r\n\t\t\t\tvar AsyncFunctionExpression = /** @class */ (function () {\r\n\t\t\t\t\tfunction AsyncFunctionExpression(id, params, body) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.FunctionExpression;\r\n\t\t\t\t\t\tthis.id = id;\r\n\t\t\t\t\t\tthis.params = params;\r\n\t\t\t\t\t\tthis.body = body;\r\n\t\t\t\t\t\tthis.generator = false;\r\n\t\t\t\t\t\tthis.expression = false;\r\n\t\t\t\t\t\tthis.async = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn AsyncFunctionExpression;\r\n\t\t\t\t}());\r\n\t\t\t\texports.AsyncFunctionExpression = AsyncFunctionExpression;\r\n\t\t\t\tvar AwaitExpression = /** @class */ (function () {\r\n\t\t\t\t\tfunction AwaitExpression(argument) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.AwaitExpression;\r\n\t\t\t\t\t\tthis.argument = argument;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn AwaitExpression;\r\n\t\t\t\t}());\r\n\t\t\t\texports.AwaitExpression = AwaitExpression;\r\n\t\t\t\tvar BinaryExpression = /** @class */ (function () {\r\n\t\t\t\t\tfunction BinaryExpression(operator, left, right) {\r\n\t\t\t\t\t\tvar logical = (operator === '||' || operator === '&&');\r\n\t\t\t\t\t\tthis.type = logical ? syntax_1.Syntax.LogicalExpression : syntax_1.Syntax.BinaryExpression;\r\n\t\t\t\t\t\tthis.operator = operator;\r\n\t\t\t\t\t\tthis.left = left;\r\n\t\t\t\t\t\tthis.right = right;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn BinaryExpression;\r\n\t\t\t\t}());\r\n\t\t\t\texports.BinaryExpression = BinaryExpression;\r\n\t\t\t\tvar BlockStatement = /** @class */ (function () {\r\n\t\t\t\t\tfunction BlockStatement(body) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.BlockStatement;\r\n\t\t\t\t\t\tthis.body = body;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn BlockStatement;\r\n\t\t\t\t}());\r\n\t\t\t\texports.BlockStatement = BlockStatement;\r\n\t\t\t\tvar BreakStatement = /** @class */ (function () {\r\n\t\t\t\t\tfunction BreakStatement(label) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.BreakStatement;\r\n\t\t\t\t\t\tthis.label = label;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn BreakStatement;\r\n\t\t\t\t}());\r\n\t\t\t\texports.BreakStatement = BreakStatement;\r\n\t\t\t\tvar CallExpression = /** @class */ (function () {\r\n\t\t\t\t\tfunction CallExpression(callee, args) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.CallExpression;\r\n\t\t\t\t\t\tthis.callee = callee;\r\n\t\t\t\t\t\tthis.arguments = args;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn CallExpression;\r\n\t\t\t\t}());\r\n\t\t\t\texports.CallExpression = CallExpression;\r\n\t\t\t\tvar CatchClause = /** @class */ (function () {\r\n\t\t\t\t\tfunction CatchClause(param, body) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.CatchClause;\r\n\t\t\t\t\t\tthis.param = param;\r\n\t\t\t\t\t\tthis.body = body;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn CatchClause;\r\n\t\t\t\t}());\r\n\t\t\t\texports.CatchClause = CatchClause;\r\n\t\t\t\tvar ClassBody = /** @class */ (function () {\r\n\t\t\t\t\tfunction ClassBody(body) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.ClassBody;\r\n\t\t\t\t\t\tthis.body = body;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn ClassBody;\r\n\t\t\t\t}());\r\n\t\t\t\texports.ClassBody = ClassBody;\r\n\t\t\t\tvar ClassDeclaration = /** @class */ (function () {\r\n\t\t\t\t\tfunction ClassDeclaration(id, superClass, body) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.ClassDeclaration;\r\n\t\t\t\t\t\tthis.id = id;\r\n\t\t\t\t\t\tthis.superClass = superClass;\r\n\t\t\t\t\t\tthis.body = body;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn ClassDeclaration;\r\n\t\t\t\t}());\r\n\t\t\t\texports.ClassDeclaration = ClassDeclaration;\r\n\t\t\t\tvar ClassExpression = /** @class */ (function () {\r\n\t\t\t\t\tfunction ClassExpression(id, superClass, body) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.ClassExpression;\r\n\t\t\t\t\t\tthis.id = id;\r\n\t\t\t\t\t\tthis.superClass = superClass;\r\n\t\t\t\t\t\tthis.body = body;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn ClassExpression;\r\n\t\t\t\t}());\r\n\t\t\t\texports.ClassExpression = ClassExpression;\r\n\t\t\t\tvar ComputedMemberExpression = /** @class */ (function () {\r\n\t\t\t\t\tfunction ComputedMemberExpression(object, property) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.MemberExpression;\r\n\t\t\t\t\t\tthis.computed = true;\r\n\t\t\t\t\t\tthis.object = object;\r\n\t\t\t\t\t\tthis.property = property;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn ComputedMemberExpression;\r\n\t\t\t\t}());\r\n\t\t\t\texports.ComputedMemberExpression = ComputedMemberExpression;\r\n\t\t\t\tvar ConditionalExpression = /** @class */ (function () {\r\n\t\t\t\t\tfunction ConditionalExpression(test, consequent, alternate) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.ConditionalExpression;\r\n\t\t\t\t\t\tthis.test = test;\r\n\t\t\t\t\t\tthis.consequent = consequent;\r\n\t\t\t\t\t\tthis.alternate = alternate;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn ConditionalExpression;\r\n\t\t\t\t}());\r\n\t\t\t\texports.ConditionalExpression = ConditionalExpression;\r\n\t\t\t\tvar ContinueStatement = /** @class */ (function () {\r\n\t\t\t\t\tfunction ContinueStatement(label) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.ContinueStatement;\r\n\t\t\t\t\t\tthis.label = label;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn ContinueStatement;\r\n\t\t\t\t}());\r\n\t\t\t\texports.ContinueStatement = ContinueStatement;\r\n\t\t\t\tvar DebuggerStatement = /** @class */ (function () {\r\n\t\t\t\t\tfunction DebuggerStatement() {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.DebuggerStatement;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn DebuggerStatement;\r\n\t\t\t\t}());\r\n\t\t\t\texports.DebuggerStatement = DebuggerStatement;\r\n\t\t\t\tvar Directive = /** @class */ (function () {\r\n\t\t\t\t\tfunction Directive(expression, directive) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.ExpressionStatement;\r\n\t\t\t\t\t\tthis.expression = expression;\r\n\t\t\t\t\t\tthis.directive = directive;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn Directive;\r\n\t\t\t\t}());\r\n\t\t\t\texports.Directive = Directive;\r\n\t\t\t\tvar DoWhileStatement = /** @class */ (function () {\r\n\t\t\t\t\tfunction DoWhileStatement(body, test) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.DoWhileStatement;\r\n\t\t\t\t\t\tthis.body = body;\r\n\t\t\t\t\t\tthis.test = test;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn DoWhileStatement;\r\n\t\t\t\t}());\r\n\t\t\t\texports.DoWhileStatement = DoWhileStatement;\r\n\t\t\t\tvar EmptyStatement = /** @class */ (function () {\r\n\t\t\t\t\tfunction EmptyStatement() {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.EmptyStatement;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn EmptyStatement;\r\n\t\t\t\t}());\r\n\t\t\t\texports.EmptyStatement = EmptyStatement;\r\n\t\t\t\tvar ExportAllDeclaration = /** @class */ (function () {\r\n\t\t\t\t\tfunction ExportAllDeclaration(source) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.ExportAllDeclaration;\r\n\t\t\t\t\t\tthis.source = source;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn ExportAllDeclaration;\r\n\t\t\t\t}());\r\n\t\t\t\texports.ExportAllDeclaration = ExportAllDeclaration;\r\n\t\t\t\tvar ExportDefaultDeclaration = /** @class */ (function () {\r\n\t\t\t\t\tfunction ExportDefaultDeclaration(declaration) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.ExportDefaultDeclaration;\r\n\t\t\t\t\t\tthis.declaration = declaration;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn ExportDefaultDeclaration;\r\n\t\t\t\t}());\r\n\t\t\t\texports.ExportDefaultDeclaration = ExportDefaultDeclaration;\r\n\t\t\t\tvar ExportNamedDeclaration = /** @class */ (function () {\r\n\t\t\t\t\tfunction ExportNamedDeclaration(declaration, specifiers, source) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.ExportNamedDeclaration;\r\n\t\t\t\t\t\tthis.declaration = declaration;\r\n\t\t\t\t\t\tthis.specifiers = specifiers;\r\n\t\t\t\t\t\tthis.source = source;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn ExportNamedDeclaration;\r\n\t\t\t\t}());\r\n\t\t\t\texports.ExportNamedDeclaration = ExportNamedDeclaration;\r\n\t\t\t\tvar ExportSpecifier = /** @class */ (function () {\r\n\t\t\t\t\tfunction ExportSpecifier(local, exported) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.ExportSpecifier;\r\n\t\t\t\t\t\tthis.exported = exported;\r\n\t\t\t\t\t\tthis.local = local;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn ExportSpecifier;\r\n\t\t\t\t}());\r\n\t\t\t\texports.ExportSpecifier = ExportSpecifier;\r\n\t\t\t\tvar ExpressionStatement = /** @class */ (function () {\r\n\t\t\t\t\tfunction ExpressionStatement(expression) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.ExpressionStatement;\r\n\t\t\t\t\t\tthis.expression = expression;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn ExpressionStatement;\r\n\t\t\t\t}());\r\n\t\t\t\texports.ExpressionStatement = ExpressionStatement;\r\n\t\t\t\tvar ForInStatement = /** @class */ (function () {\r\n\t\t\t\t\tfunction ForInStatement(left, right, body) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.ForInStatement;\r\n\t\t\t\t\t\tthis.left = left;\r\n\t\t\t\t\t\tthis.right = right;\r\n\t\t\t\t\t\tthis.body = body;\r\n\t\t\t\t\t\tthis.each = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn ForInStatement;\r\n\t\t\t\t}());\r\n\t\t\t\texports.ForInStatement = ForInStatement;\r\n\t\t\t\tvar ForOfStatement = /** @class */ (function () {\r\n\t\t\t\t\tfunction ForOfStatement(left, right, body) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.ForOfStatement;\r\n\t\t\t\t\t\tthis.left = left;\r\n\t\t\t\t\t\tthis.right = right;\r\n\t\t\t\t\t\tthis.body = body;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn ForOfStatement;\r\n\t\t\t\t}());\r\n\t\t\t\texports.ForOfStatement = ForOfStatement;\r\n\t\t\t\tvar ForStatement = /** @class */ (function () {\r\n\t\t\t\t\tfunction ForStatement(init, test, update, body) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.ForStatement;\r\n\t\t\t\t\t\tthis.init = init;\r\n\t\t\t\t\t\tthis.test = test;\r\n\t\t\t\t\t\tthis.update = update;\r\n\t\t\t\t\t\tthis.body = body;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn ForStatement;\r\n\t\t\t\t}());\r\n\t\t\t\texports.ForStatement = ForStatement;\r\n\t\t\t\tvar FunctionDeclaration = /** @class */ (function () {\r\n\t\t\t\t\tfunction FunctionDeclaration(id, params, body, generator) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.FunctionDeclaration;\r\n\t\t\t\t\t\tthis.id = id;\r\n\t\t\t\t\t\tthis.params = params;\r\n\t\t\t\t\t\tthis.body = body;\r\n\t\t\t\t\t\tthis.generator = generator;\r\n\t\t\t\t\t\tthis.expression = false;\r\n\t\t\t\t\t\tthis.async = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn FunctionDeclaration;\r\n\t\t\t\t}());\r\n\t\t\t\texports.FunctionDeclaration = FunctionDeclaration;\r\n\t\t\t\tvar FunctionExpression = /** @class */ (function () {\r\n\t\t\t\t\tfunction FunctionExpression(id, params, body, generator) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.FunctionExpression;\r\n\t\t\t\t\t\tthis.id = id;\r\n\t\t\t\t\t\tthis.params = params;\r\n\t\t\t\t\t\tthis.body = body;\r\n\t\t\t\t\t\tthis.generator = generator;\r\n\t\t\t\t\t\tthis.expression = false;\r\n\t\t\t\t\t\tthis.async = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn FunctionExpression;\r\n\t\t\t\t}());\r\n\t\t\t\texports.FunctionExpression = FunctionExpression;\r\n\t\t\t\tvar Identifier = /** @class */ (function () {\r\n\t\t\t\t\tfunction Identifier(name) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.Identifier;\r\n\t\t\t\t\t\tthis.name = name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn Identifier;\r\n\t\t\t\t}());\r\n\t\t\t\texports.Identifier = Identifier;\r\n\t\t\t\tvar IfStatement = /** @class */ (function () {\r\n\t\t\t\t\tfunction IfStatement(test, consequent, alternate) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.IfStatement;\r\n\t\t\t\t\t\tthis.test = test;\r\n\t\t\t\t\t\tthis.consequent = consequent;\r\n\t\t\t\t\t\tthis.alternate = alternate;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn IfStatement;\r\n\t\t\t\t}());\r\n\t\t\t\texports.IfStatement = IfStatement;\r\n\t\t\t\tvar Import = /** @class */ (function () {\r\n\t\t\t\t\tfunction Import() {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.Import;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn Import;\r\n\t\t\t\t}());\r\n\t\t\t\texports.Import = Import;\r\n\t\t\t\tvar ImportDeclaration = /** @class */ (function () {\r\n\t\t\t\t\tfunction ImportDeclaration(specifiers, source) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.ImportDeclaration;\r\n\t\t\t\t\t\tthis.specifiers = specifiers;\r\n\t\t\t\t\t\tthis.source = source;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn ImportDeclaration;\r\n\t\t\t\t}());\r\n\t\t\t\texports.ImportDeclaration = ImportDeclaration;\r\n\t\t\t\tvar ImportDefaultSpecifier = /** @class */ (function () {\r\n\t\t\t\t\tfunction ImportDefaultSpecifier(local) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.ImportDefaultSpecifier;\r\n\t\t\t\t\t\tthis.local = local;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn ImportDefaultSpecifier;\r\n\t\t\t\t}());\r\n\t\t\t\texports.ImportDefaultSpecifier = ImportDefaultSpecifier;\r\n\t\t\t\tvar ImportNamespaceSpecifier = /** @class */ (function () {\r\n\t\t\t\t\tfunction ImportNamespaceSpecifier(local) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.ImportNamespaceSpecifier;\r\n\t\t\t\t\t\tthis.local = local;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn ImportNamespaceSpecifier;\r\n\t\t\t\t}());\r\n\t\t\t\texports.ImportNamespaceSpecifier = ImportNamespaceSpecifier;\r\n\t\t\t\tvar ImportSpecifier = /** @class */ (function () {\r\n\t\t\t\t\tfunction ImportSpecifier(local, imported) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.ImportSpecifier;\r\n\t\t\t\t\t\tthis.local = local;\r\n\t\t\t\t\t\tthis.imported = imported;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn ImportSpecifier;\r\n\t\t\t\t}());\r\n\t\t\t\texports.ImportSpecifier = ImportSpecifier;\r\n\t\t\t\tvar LabeledStatement = /** @class */ (function () {\r\n\t\t\t\t\tfunction LabeledStatement(label, body) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.LabeledStatement;\r\n\t\t\t\t\t\tthis.label = label;\r\n\t\t\t\t\t\tthis.body = body;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn LabeledStatement;\r\n\t\t\t\t}());\r\n\t\t\t\texports.LabeledStatement = LabeledStatement;\r\n\t\t\t\tvar Literal = /** @class */ (function () {\r\n\t\t\t\t\tfunction Literal(value, raw) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.Literal;\r\n\t\t\t\t\t\tthis.value = value;\r\n\t\t\t\t\t\tthis.raw = raw;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn Literal;\r\n\t\t\t\t}());\r\n\t\t\t\texports.Literal = Literal;\r\n\t\t\t\tvar MetaProperty = /** @class */ (function () {\r\n\t\t\t\t\tfunction MetaProperty(meta, property) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.MetaProperty;\r\n\t\t\t\t\t\tthis.meta = meta;\r\n\t\t\t\t\t\tthis.property = property;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn MetaProperty;\r\n\t\t\t\t}());\r\n\t\t\t\texports.MetaProperty = MetaProperty;\r\n\t\t\t\tvar MethodDefinition = /** @class */ (function () {\r\n\t\t\t\t\tfunction MethodDefinition(key, computed, value, kind, isStatic) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.MethodDefinition;\r\n\t\t\t\t\t\tthis.key = key;\r\n\t\t\t\t\t\tthis.computed = computed;\r\n\t\t\t\t\t\tthis.value = value;\r\n\t\t\t\t\t\tthis.kind = kind;\r\n\t\t\t\t\t\tthis.static = isStatic;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn MethodDefinition;\r\n\t\t\t\t}());\r\n\t\t\t\texports.MethodDefinition = MethodDefinition;\r\n\t\t\t\tvar Module = /** @class */ (function () {\r\n\t\t\t\t\tfunction Module(body) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.Program;\r\n\t\t\t\t\t\tthis.body = body;\r\n\t\t\t\t\t\tthis.sourceType = 'module';\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn Module;\r\n\t\t\t\t}());\r\n\t\t\t\texports.Module = Module;\r\n\t\t\t\tvar NewExpression = /** @class */ (function () {\r\n\t\t\t\t\tfunction NewExpression(callee, args) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.NewExpression;\r\n\t\t\t\t\t\tthis.callee = callee;\r\n\t\t\t\t\t\tthis.arguments = args;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn NewExpression;\r\n\t\t\t\t}());\r\n\t\t\t\texports.NewExpression = NewExpression;\r\n\t\t\t\tvar ObjectExpression = /** @class */ (function () {\r\n\t\t\t\t\tfunction ObjectExpression(properties) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.ObjectExpression;\r\n\t\t\t\t\t\tthis.properties = properties;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn ObjectExpression;\r\n\t\t\t\t}());\r\n\t\t\t\texports.ObjectExpression = ObjectExpression;\r\n\t\t\t\tvar ObjectPattern = /** @class */ (function () {\r\n\t\t\t\t\tfunction ObjectPattern(properties) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.ObjectPattern;\r\n\t\t\t\t\t\tthis.properties = properties;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn ObjectPattern;\r\n\t\t\t\t}());\r\n\t\t\t\texports.ObjectPattern = ObjectPattern;\r\n\t\t\t\tvar Property = /** @class */ (function () {\r\n\t\t\t\t\tfunction Property(kind, key, computed, value, method, shorthand) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.Property;\r\n\t\t\t\t\t\tthis.key = key;\r\n\t\t\t\t\t\tthis.computed = computed;\r\n\t\t\t\t\t\tthis.value = value;\r\n\t\t\t\t\t\tthis.kind = kind;\r\n\t\t\t\t\t\tthis.method = method;\r\n\t\t\t\t\t\tthis.shorthand = shorthand;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn Property;\r\n\t\t\t\t}());\r\n\t\t\t\texports.Property = Property;\r\n\t\t\t\tvar RegexLiteral = /** @class */ (function () {\r\n\t\t\t\t\tfunction RegexLiteral(value, raw, pattern, flags) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.Literal;\r\n\t\t\t\t\t\tthis.value = value;\r\n\t\t\t\t\t\tthis.raw = raw;\r\n\t\t\t\t\t\tthis.regex = { pattern: pattern, flags: flags };\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn RegexLiteral;\r\n\t\t\t\t}());\r\n\t\t\t\texports.RegexLiteral = RegexLiteral;\r\n\t\t\t\tvar RestElement = /** @class */ (function () {\r\n\t\t\t\t\tfunction RestElement(argument) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.RestElement;\r\n\t\t\t\t\t\tthis.argument = argument;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn RestElement;\r\n\t\t\t\t}());\r\n\t\t\t\texports.RestElement = RestElement;\r\n\t\t\t\tvar ReturnStatement = /** @class */ (function () {\r\n\t\t\t\t\tfunction ReturnStatement(argument) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.ReturnStatement;\r\n\t\t\t\t\t\tthis.argument = argument;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn ReturnStatement;\r\n\t\t\t\t}());\r\n\t\t\t\texports.ReturnStatement = ReturnStatement;\r\n\t\t\t\tvar Script = /** @class */ (function () {\r\n\t\t\t\t\tfunction Script(body) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.Program;\r\n\t\t\t\t\t\tthis.body = body;\r\n\t\t\t\t\t\tthis.sourceType = 'script';\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn Script;\r\n\t\t\t\t}());\r\n\t\t\t\texports.Script = Script;\r\n\t\t\t\tvar SequenceExpression = /** @class */ (function () {\r\n\t\t\t\t\tfunction SequenceExpression(expressions) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.SequenceExpression;\r\n\t\t\t\t\t\tthis.expressions = expressions;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn SequenceExpression;\r\n\t\t\t\t}());\r\n\t\t\t\texports.SequenceExpression = SequenceExpression;\r\n\t\t\t\tvar SpreadElement = /** @class */ (function () {\r\n\t\t\t\t\tfunction SpreadElement(argument) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.SpreadElement;\r\n\t\t\t\t\t\tthis.argument = argument;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn SpreadElement;\r\n\t\t\t\t}());\r\n\t\t\t\texports.SpreadElement = SpreadElement;\r\n\t\t\t\tvar StaticMemberExpression = /** @class */ (function () {\r\n\t\t\t\t\tfunction StaticMemberExpression(object, property) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.MemberExpression;\r\n\t\t\t\t\t\tthis.computed = false;\r\n\t\t\t\t\t\tthis.object = object;\r\n\t\t\t\t\t\tthis.property = property;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn StaticMemberExpression;\r\n\t\t\t\t}());\r\n\t\t\t\texports.StaticMemberExpression = StaticMemberExpression;\r\n\t\t\t\tvar Super = /** @class */ (function () {\r\n\t\t\t\t\tfunction Super() {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.Super;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn Super;\r\n\t\t\t\t}());\r\n\t\t\t\texports.Super = Super;\r\n\t\t\t\tvar SwitchCase = /** @class */ (function () {\r\n\t\t\t\t\tfunction SwitchCase(test, consequent) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.SwitchCase;\r\n\t\t\t\t\t\tthis.test = test;\r\n\t\t\t\t\t\tthis.consequent = consequent;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn SwitchCase;\r\n\t\t\t\t}());\r\n\t\t\t\texports.SwitchCase = SwitchCase;\r\n\t\t\t\tvar SwitchStatement = /** @class */ (function () {\r\n\t\t\t\t\tfunction SwitchStatement(discriminant, cases) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.SwitchStatement;\r\n\t\t\t\t\t\tthis.discriminant = discriminant;\r\n\t\t\t\t\t\tthis.cases = cases;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn SwitchStatement;\r\n\t\t\t\t}());\r\n\t\t\t\texports.SwitchStatement = SwitchStatement;\r\n\t\t\t\tvar TaggedTemplateExpression = /** @class */ (function () {\r\n\t\t\t\t\tfunction TaggedTemplateExpression(tag, quasi) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.TaggedTemplateExpression;\r\n\t\t\t\t\t\tthis.tag = tag;\r\n\t\t\t\t\t\tthis.quasi = quasi;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn TaggedTemplateExpression;\r\n\t\t\t\t}());\r\n\t\t\t\texports.TaggedTemplateExpression = TaggedTemplateExpression;\r\n\t\t\t\tvar TemplateElement = /** @class */ (function () {\r\n\t\t\t\t\tfunction TemplateElement(value, tail) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.TemplateElement;\r\n\t\t\t\t\t\tthis.value = value;\r\n\t\t\t\t\t\tthis.tail = tail;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn TemplateElement;\r\n\t\t\t\t}());\r\n\t\t\t\texports.TemplateElement = TemplateElement;\r\n\t\t\t\tvar TemplateLiteral = /** @class */ (function () {\r\n\t\t\t\t\tfunction TemplateLiteral(quasis, expressions) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.TemplateLiteral;\r\n\t\t\t\t\t\tthis.quasis = quasis;\r\n\t\t\t\t\t\tthis.expressions = expressions;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn TemplateLiteral;\r\n\t\t\t\t}());\r\n\t\t\t\texports.TemplateLiteral = TemplateLiteral;\r\n\t\t\t\tvar ThisExpression = /** @class */ (function () {\r\n\t\t\t\t\tfunction ThisExpression() {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.ThisExpression;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn ThisExpression;\r\n\t\t\t\t}());\r\n\t\t\t\texports.ThisExpression = ThisExpression;\r\n\t\t\t\tvar ThrowStatement = /** @class */ (function () {\r\n\t\t\t\t\tfunction ThrowStatement(argument) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.ThrowStatement;\r\n\t\t\t\t\t\tthis.argument = argument;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn ThrowStatement;\r\n\t\t\t\t}());\r\n\t\t\t\texports.ThrowStatement = ThrowStatement;\r\n\t\t\t\tvar TryStatement = /** @class */ (function () {\r\n\t\t\t\t\tfunction TryStatement(block, handler, finalizer) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.TryStatement;\r\n\t\t\t\t\t\tthis.block = block;\r\n\t\t\t\t\t\tthis.handler = handler;\r\n\t\t\t\t\t\tthis.finalizer = finalizer;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn TryStatement;\r\n\t\t\t\t}());\r\n\t\t\t\texports.TryStatement = TryStatement;\r\n\t\t\t\tvar UnaryExpression = /** @class */ (function () {\r\n\t\t\t\t\tfunction UnaryExpression(operator, argument) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.UnaryExpression;\r\n\t\t\t\t\t\tthis.operator = operator;\r\n\t\t\t\t\t\tthis.argument = argument;\r\n\t\t\t\t\t\tthis.prefix = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn UnaryExpression;\r\n\t\t\t\t}());\r\n\t\t\t\texports.UnaryExpression = UnaryExpression;\r\n\t\t\t\tvar UpdateExpression = /** @class */ (function () {\r\n\t\t\t\t\tfunction UpdateExpression(operator, argument, prefix) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.UpdateExpression;\r\n\t\t\t\t\t\tthis.operator = operator;\r\n\t\t\t\t\t\tthis.argument = argument;\r\n\t\t\t\t\t\tthis.prefix = prefix;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn UpdateExpression;\r\n\t\t\t\t}());\r\n\t\t\t\texports.UpdateExpression = UpdateExpression;\r\n\t\t\t\tvar VariableDeclaration = /** @class */ (function () {\r\n\t\t\t\t\tfunction VariableDeclaration(declarations, kind) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.VariableDeclaration;\r\n\t\t\t\t\t\tthis.declarations = declarations;\r\n\t\t\t\t\t\tthis.kind = kind;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn VariableDeclaration;\r\n\t\t\t\t}());\r\n\t\t\t\texports.VariableDeclaration = VariableDeclaration;\r\n\t\t\t\tvar VariableDeclarator = /** @class */ (function () {\r\n\t\t\t\t\tfunction VariableDeclarator(id, init) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.VariableDeclarator;\r\n\t\t\t\t\t\tthis.id = id;\r\n\t\t\t\t\t\tthis.init = init;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn VariableDeclarator;\r\n\t\t\t\t}());\r\n\t\t\t\texports.VariableDeclarator = VariableDeclarator;\r\n\t\t\t\tvar WhileStatement = /** @class */ (function () {\r\n\t\t\t\t\tfunction WhileStatement(test, body) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.WhileStatement;\r\n\t\t\t\t\t\tthis.test = test;\r\n\t\t\t\t\t\tthis.body = body;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn WhileStatement;\r\n\t\t\t\t}());\r\n\t\t\t\texports.WhileStatement = WhileStatement;\r\n\t\t\t\tvar WithStatement = /** @class */ (function () {\r\n\t\t\t\t\tfunction WithStatement(object, body) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.WithStatement;\r\n\t\t\t\t\t\tthis.object = object;\r\n\t\t\t\t\t\tthis.body = body;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn WithStatement;\r\n\t\t\t\t}());\r\n\t\t\t\texports.WithStatement = WithStatement;\r\n\t\t\t\tvar YieldExpression = /** @class */ (function () {\r\n\t\t\t\t\tfunction YieldExpression(argument, delegate) {\r\n\t\t\t\t\t\tthis.type = syntax_1.Syntax.YieldExpression;\r\n\t\t\t\t\t\tthis.argument = argument;\r\n\t\t\t\t\t\tthis.delegate = delegate;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn YieldExpression;\r\n\t\t\t\t}());\r\n\t\t\t\texports.YieldExpression = YieldExpression;\r\n\r\n\r\n\t\t\t\t/***/\r\n},\r\n\t\t/* 8 */\r\n\t\t/***/ function (module, exports, __webpack_require__) {\r\n\r\n\t\t\t\t\"use strict\";\r\n\t\t\t\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t\t\t\tvar assert_1 = __webpack_require__(9);\r\n\t\t\t\tvar error_handler_1 = __webpack_require__(10);\r\n\t\t\t\tvar messages_1 = __webpack_require__(11);\r\n\t\t\t\tvar Node = __webpack_require__(7);\r\n\t\t\t\tvar scanner_1 = __webpack_require__(12);\r\n\t\t\t\tvar syntax_1 = __webpack_require__(2);\r\n\t\t\t\tvar token_1 = __webpack_require__(13);\r\n\t\t\t\tvar ArrowParameterPlaceHolder = 'ArrowParameterPlaceHolder';\r\n\t\t\t\t/* eslint-disable @typescript-eslint/unbound-method */\r\n\t\t\t\tvar Parser = /** @class */ (function () {\r\n\t\t\t\t\tfunction Parser(code, options, delegate) {\r\n\t\t\t\t\t\tif (options === void 0) { options = {}; }\r\n\t\t\t\t\t\tthis.config = {\r\n\t\t\t\t\t\t\trange: (typeof options.range === 'boolean') && options.range,\r\n\t\t\t\t\t\t\tloc: (typeof options.loc === 'boolean') && options.loc,\r\n\t\t\t\t\t\t\tsource: null,\r\n\t\t\t\t\t\t\ttokens: (typeof options.tokens === 'boolean') && options.tokens,\r\n\t\t\t\t\t\t\tcomment: (typeof options.comment === 'boolean') && options.comment,\r\n\t\t\t\t\t\t\ttolerant: (typeof options.tolerant === 'boolean') && options.tolerant\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tif (this.config.loc && options.source && options.source !== null) {\r\n\t\t\t\t\t\t\tthis.config.source = String(options.source);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.delegate = delegate;\r\n\t\t\t\t\t\tthis.errorHandler = new error_handler_1.ErrorHandler();\r\n\t\t\t\t\t\tthis.errorHandler.tolerant = this.config.tolerant;\r\n\t\t\t\t\t\tthis.scanner = new scanner_1.Scanner(code, this.errorHandler);\r\n\t\t\t\t\t\tthis.scanner.trackComment = this.config.comment;\r\n\t\t\t\t\t\tthis.operatorPrecedence = {\r\n\t\t\t\t\t\t\t')': 0,\r\n\t\t\t\t\t\t\t';': 0,\r\n\t\t\t\t\t\t\t',': 0,\r\n\t\t\t\t\t\t\t'=': 0,\r\n\t\t\t\t\t\t\t']': 0,\r\n\t\t\t\t\t\t\t'||': 1,\r\n\t\t\t\t\t\t\t'&&': 2,\r\n\t\t\t\t\t\t\t'|': 3,\r\n\t\t\t\t\t\t\t'^': 4,\r\n\t\t\t\t\t\t\t'&': 5,\r\n\t\t\t\t\t\t\t'==': 6,\r\n\t\t\t\t\t\t\t'!=': 6,\r\n\t\t\t\t\t\t\t'===': 6,\r\n\t\t\t\t\t\t\t'!==': 6,\r\n\t\t\t\t\t\t\t'<': 7,\r\n\t\t\t\t\t\t\t'>': 7,\r\n\t\t\t\t\t\t\t'<=': 7,\r\n\t\t\t\t\t\t\t'>=': 7,\r\n\t\t\t\t\t\t\t'<<': 8,\r\n\t\t\t\t\t\t\t'>>': 8,\r\n\t\t\t\t\t\t\t'>>>': 8,\r\n\t\t\t\t\t\t\t'+': 9,\r\n\t\t\t\t\t\t\t'-': 9,\r\n\t\t\t\t\t\t\t'*': 11,\r\n\t\t\t\t\t\t\t'/': 11,\r\n\t\t\t\t\t\t\t'%': 11\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tthis.lookahead = {\r\n\t\t\t\t\t\t\ttype: 2 /* EOF */,\r\n\t\t\t\t\t\t\tvalue: '',\r\n\t\t\t\t\t\t\tlineNumber: this.scanner.lineNumber,\r\n\t\t\t\t\t\t\tlineStart: 0,\r\n\t\t\t\t\t\t\tstart: 0,\r\n\t\t\t\t\t\t\tend: 0\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tthis.hasLineTerminator = false;\r\n\t\t\t\t\t\tthis.context = {\r\n\t\t\t\t\t\t\tisModule: false,\r\n\t\t\t\t\t\t\tawait: false,\r\n\t\t\t\t\t\t\tallowIn: true,\r\n\t\t\t\t\t\t\tallowStrictDirective: true,\r\n\t\t\t\t\t\t\tallowYield: true,\r\n\t\t\t\t\t\t\tfirstCoverInitializedNameError: null,\r\n\t\t\t\t\t\t\tisAssignmentTarget: false,\r\n\t\t\t\t\t\t\tisBindingElement: false,\r\n\t\t\t\t\t\t\tinFunctionBody: false,\r\n\t\t\t\t\t\t\tinIteration: false,\r\n\t\t\t\t\t\t\tinSwitch: false,\r\n\t\t\t\t\t\t\tlabelSet: {},\r\n\t\t\t\t\t\t\tstrict: false\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tthis.tokens = [];\r\n\t\t\t\t\t\tthis.startMarker = {\r\n\t\t\t\t\t\t\tindex: 0,\r\n\t\t\t\t\t\t\tline: this.scanner.lineNumber,\r\n\t\t\t\t\t\t\tcolumn: 0\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tthis.lastMarker = {\r\n\t\t\t\t\t\t\tindex: 0,\r\n\t\t\t\t\t\t\tline: this.scanner.lineNumber,\r\n\t\t\t\t\t\t\tcolumn: 0\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\tthis.lastMarker = {\r\n\t\t\t\t\t\t\tindex: this.scanner.index,\r\n\t\t\t\t\t\t\tline: this.scanner.lineNumber,\r\n\t\t\t\t\t\t\tcolumn: this.scanner.index - this.scanner.lineStart\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t\tParser.prototype.throwError = function (messageFormat) {\r\n\t\t\t\t\t\tvar values = [];\r\n\t\t\t\t\t\tfor (var _i = 1; _i < arguments.length; _i++) {\r\n\t\t\t\t\t\t\tvalues[_i - 1] = arguments[_i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar args = values.slice();\r\n\t\t\t\t\t\tvar msg = messageFormat.replace(/%(\\d)/g, function (whole, idx) {\r\n\t\t\t\t\t\t\tassert_1.assert(idx < args.length, 'Message reference must be in range');\r\n\t\t\t\t\t\t\treturn args[idx];\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tvar index = this.lastMarker.index;\r\n\t\t\t\t\t\tvar line = this.lastMarker.line;\r\n\t\t\t\t\t\tvar column = this.lastMarker.column + 1;\r\n\t\t\t\t\t\tthrow this.errorHandler.createError(index, line, column, msg);\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.tolerateError = function (messageFormat) {\r\n\t\t\t\t\t\tvar values = [];\r\n\t\t\t\t\t\tfor (var _i = 1; _i < arguments.length; _i++) {\r\n\t\t\t\t\t\t\tvalues[_i - 1] = arguments[_i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar args = values.slice();\r\n\t\t\t\t\t\tvar msg = messageFormat.replace(/%(\\d)/g, function (whole, idx) {\r\n\t\t\t\t\t\t\tassert_1.assert(idx < args.length, 'Message reference must be in range');\r\n\t\t\t\t\t\t\treturn args[idx];\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tvar index = this.lastMarker.index;\r\n\t\t\t\t\t\tvar line = this.scanner.lineNumber;\r\n\t\t\t\t\t\tvar column = this.lastMarker.column + 1;\r\n\t\t\t\t\t\tthis.errorHandler.tolerateError(index, line, column, msg);\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// Throw an exception because of the token.\r\n\t\t\t\t\tParser.prototype.unexpectedTokenError = function (token, message) {\r\n\t\t\t\t\t\tvar msg = message || messages_1.Messages.UnexpectedToken;\r\n\t\t\t\t\t\tvar value;\r\n\t\t\t\t\t\tif (token) {\r\n\t\t\t\t\t\t\tif (!message) {\r\n\t\t\t\t\t\t\t\tmsg = (token.type === 2 /* EOF */) ? messages_1.Messages.UnexpectedEOS :\r\n\t\t\t\t\t\t\t\t\t(token.type === 3 /* Identifier */) ? messages_1.Messages.UnexpectedIdentifier :\r\n\t\t\t\t\t\t\t\t\t\t(token.type === 6 /* NumericLiteral */) ? messages_1.Messages.UnexpectedNumber :\r\n\t\t\t\t\t\t\t\t\t\t\t(token.type === 8 /* StringLiteral */) ? messages_1.Messages.UnexpectedString :\r\n\t\t\t\t\t\t\t\t\t\t\t\t(token.type === 10 /* Template */) ? messages_1.Messages.UnexpectedTemplate :\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmessages_1.Messages.UnexpectedToken;\r\n\t\t\t\t\t\t\t\tif (token.type === 4 /* Keyword */) {\r\n\t\t\t\t\t\t\t\t\tif (this.scanner.isFutureReservedWord(token.value)) {\r\n\t\t\t\t\t\t\t\t\t\tmsg = messages_1.Messages.UnexpectedReserved;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (this.context.strict && this.scanner.isStrictModeReservedWord(token.value)) {\r\n\t\t\t\t\t\t\t\t\t\tmsg = messages_1.Messages.StrictReservedWord;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvalue = token.value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tvalue = 'ILLEGAL';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tmsg = msg.replace('%0', value);\r\n\t\t\t\t\t\tif (token && typeof token.lineNumber === 'number') {\r\n\t\t\t\t\t\t\tvar index = token.start;\r\n\t\t\t\t\t\t\tvar line = token.lineNumber;\r\n\t\t\t\t\t\t\tvar lastMarkerLineStart = this.lastMarker.index - this.lastMarker.column;\r\n\t\t\t\t\t\t\tvar column = token.start - lastMarkerLineStart + 1;\r\n\t\t\t\t\t\t\treturn this.errorHandler.createError(index, line, column, msg);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tvar index = this.lastMarker.index;\r\n\t\t\t\t\t\t\tvar line = this.lastMarker.line;\r\n\t\t\t\t\t\t\tvar column = this.lastMarker.column + 1;\r\n\t\t\t\t\t\t\treturn this.errorHandler.createError(index, line, column, msg);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.throwUnexpectedToken = function (token, message) {\r\n\t\t\t\t\t\tthrow this.unexpectedTokenError(token, message);\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.tolerateUnexpectedToken = function (token, message) {\r\n\t\t\t\t\t\tthis.errorHandler.tolerate(this.unexpectedTokenError(token, message));\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.collectComments = function () {\r\n\t\t\t\t\t\tif (!this.config.comment) {\r\n\t\t\t\t\t\t\tthis.scanner.scanComments();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tvar comments = this.scanner.scanComments();\r\n\t\t\t\t\t\t\tif (comments.length > 0 && this.delegate) {\r\n\t\t\t\t\t\t\t\tfor (var i = 0; i < comments.length; ++i) {\r\n\t\t\t\t\t\t\t\t\tvar e = comments[i];\r\n\t\t\t\t\t\t\t\t\tvar node = {\r\n\t\t\t\t\t\t\t\t\t\ttype: e.multiLine ? 'BlockComment' : 'LineComment',\r\n\t\t\t\t\t\t\t\t\t\tvalue: this.scanner.source.slice(e.slice[0], e.slice[1])\r\n\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\tif (this.config.range) {\r\n\t\t\t\t\t\t\t\t\t\tnode.range = e.range;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif (this.config.loc) {\r\n\t\t\t\t\t\t\t\t\t\tnode.loc = e.loc;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tvar metadata = {\r\n\t\t\t\t\t\t\t\t\t\tstart: {\r\n\t\t\t\t\t\t\t\t\t\t\tline: e.loc.start.line,\r\n\t\t\t\t\t\t\t\t\t\t\tcolumn: e.loc.start.column,\r\n\t\t\t\t\t\t\t\t\t\t\toffset: e.range[0]\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\tend: {\r\n\t\t\t\t\t\t\t\t\t\t\tline: e.loc.end.line,\r\n\t\t\t\t\t\t\t\t\t\t\tcolumn: e.loc.end.column,\r\n\t\t\t\t\t\t\t\t\t\t\toffset: e.range[1]\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\tthis.delegate(node, metadata);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// From internal representation to an external structure\r\n\t\t\t\t\tParser.prototype.getTokenRaw = function (token) {\r\n\t\t\t\t\t\treturn this.scanner.source.slice(token.start, token.end);\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.convertToken = function (token) {\r\n\t\t\t\t\t\tvar t = {\r\n\t\t\t\t\t\t\ttype: token_1.TokenName[token.type],\r\n\t\t\t\t\t\t\tvalue: this.getTokenRaw(token)\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tif (this.config.range) {\r\n\t\t\t\t\t\t\tt.range = [token.start, token.end];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (this.config.loc) {\r\n\t\t\t\t\t\t\tt.loc = {\r\n\t\t\t\t\t\t\t\tstart: {\r\n\t\t\t\t\t\t\t\t\tline: this.startMarker.line,\r\n\t\t\t\t\t\t\t\t\tcolumn: this.startMarker.column\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tend: {\r\n\t\t\t\t\t\t\t\t\tline: this.scanner.lineNumber,\r\n\t\t\t\t\t\t\t\t\tcolumn: this.scanner.index - this.scanner.lineStart\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (token.type === 9 /* RegularExpression */) {\r\n\t\t\t\t\t\t\tvar pattern = token.pattern;\r\n\t\t\t\t\t\t\tvar flags = token.flags;\r\n\t\t\t\t\t\t\tt.regex = { pattern: pattern, flags: flags };\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn t;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.nextToken = function () {\r\n\t\t\t\t\t\tvar token = this.lookahead;\r\n\t\t\t\t\t\tthis.lastMarker.index = this.scanner.index;\r\n\t\t\t\t\t\tthis.lastMarker.line = this.scanner.lineNumber;\r\n\t\t\t\t\t\tthis.lastMarker.column = this.scanner.index - this.scanner.lineStart;\r\n\t\t\t\t\t\tthis.collectComments();\r\n\t\t\t\t\t\tif (this.scanner.index !== this.startMarker.index) {\r\n\t\t\t\t\t\t\tthis.startMarker.index = this.scanner.index;\r\n\t\t\t\t\t\t\tthis.startMarker.line = this.scanner.lineNumber;\r\n\t\t\t\t\t\t\tthis.startMarker.column = this.scanner.index - this.scanner.lineStart;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar next = this.scanner.lex();\r\n\t\t\t\t\t\tthis.hasLineTerminator = (token.lineNumber !== next.lineNumber);\r\n\t\t\t\t\t\tif (next && this.context.strict && next.type === 3 /* Identifier */) {\r\n\t\t\t\t\t\t\tif (this.scanner.isStrictModeReservedWord(next.value)) {\r\n\t\t\t\t\t\t\t\tnext.type = 4 /* Keyword */;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.lookahead = next;\r\n\t\t\t\t\t\tif (this.config.tokens && next.type !== 2 /* EOF */) {\r\n\t\t\t\t\t\t\tthis.tokens.push(this.convertToken(next));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn token;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.nextRegexToken = function () {\r\n\t\t\t\t\t\tthis.collectComments();\r\n\t\t\t\t\t\tvar token = this.scanner.scanRegExp();\r\n\t\t\t\t\t\tif (this.config.tokens) {\r\n\t\t\t\t\t\t\t// Pop the previous token, '/' or '/='\r\n\t\t\t\t\t\t\t// This is added from the lookahead token.\r\n\t\t\t\t\t\t\tthis.tokens.pop();\r\n\t\t\t\t\t\t\tthis.tokens.push(this.convertToken(token));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// Prime the next lookahead.\r\n\t\t\t\t\t\tthis.lookahead = token;\r\n\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\treturn token;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.createNode = function () {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tindex: this.startMarker.index,\r\n\t\t\t\t\t\t\tline: this.startMarker.line,\r\n\t\t\t\t\t\t\tcolumn: this.startMarker.column\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.startNode = function (token, lastLineStart) {\r\n\t\t\t\t\t\tif (lastLineStart === void 0) { lastLineStart = 0; }\r\n\t\t\t\t\t\tvar column = token.start - token.lineStart;\r\n\t\t\t\t\t\tvar line = token.lineNumber;\r\n\t\t\t\t\t\tif (column < 0) {\r\n\t\t\t\t\t\t\tcolumn += lastLineStart;\r\n\t\t\t\t\t\t\tline--;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tindex: token.start,\r\n\t\t\t\t\t\t\tline: line,\r\n\t\t\t\t\t\t\tcolumn: column\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.finalize = function (marker, node) {\r\n\t\t\t\t\t\tif (this.config.range) {\r\n\t\t\t\t\t\t\tnode.range = [marker.index, this.lastMarker.index];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (this.config.loc) {\r\n\t\t\t\t\t\t\tnode.loc = {\r\n\t\t\t\t\t\t\t\tstart: {\r\n\t\t\t\t\t\t\t\t\tline: marker.line,\r\n\t\t\t\t\t\t\t\t\tcolumn: marker.column,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tend: {\r\n\t\t\t\t\t\t\t\t\tline: this.lastMarker.line,\r\n\t\t\t\t\t\t\t\t\tcolumn: this.lastMarker.column\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tif (this.config.source) {\r\n\t\t\t\t\t\t\t\tnode.loc.source = this.config.source;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (this.delegate) {\r\n\t\t\t\t\t\t\tvar metadata = {\r\n\t\t\t\t\t\t\t\tstart: {\r\n\t\t\t\t\t\t\t\t\tline: marker.line,\r\n\t\t\t\t\t\t\t\t\tcolumn: marker.column,\r\n\t\t\t\t\t\t\t\t\toffset: marker.index\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tend: {\r\n\t\t\t\t\t\t\t\t\tline: this.lastMarker.line,\r\n\t\t\t\t\t\t\t\t\tcolumn: this.lastMarker.column,\r\n\t\t\t\t\t\t\t\t\toffset: this.lastMarker.index\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tthis.delegate(node, metadata);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn node;\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// Expect the next token to match the specified punctuator.\r\n\t\t\t\t\t// If not, an exception will be thrown.\r\n\t\t\t\t\tParser.prototype.expect = function (value) {\r\n\t\t\t\t\t\tvar token = this.nextToken();\r\n\t\t\t\t\t\tif (token.type !== 7 /* Punctuator */ || token.value !== value) {\r\n\t\t\t\t\t\t\tthis.throwUnexpectedToken(token);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// Quietly expect a comma when in tolerant mode, otherwise delegates to expect().\r\n\t\t\t\t\tParser.prototype.expectCommaSeparator = function () {\r\n\t\t\t\t\t\tif (this.config.tolerant) {\r\n\t\t\t\t\t\t\tvar token = this.lookahead;\r\n\t\t\t\t\t\t\tif (token.type === 7 /* Punctuator */ && token.value === ',') {\r\n\t\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (token.type === 7 /* Punctuator */ && token.value === ';') {\r\n\t\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\t\tthis.tolerateUnexpectedToken(token);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tthis.tolerateUnexpectedToken(token, messages_1.Messages.UnexpectedToken);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.expect(',');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// Expect the next token to match the specified keyword.\r\n\t\t\t\t\t// If not, an exception will be thrown.\r\n\t\t\t\t\tParser.prototype.expectKeyword = function (keyword) {\r\n\t\t\t\t\t\tvar token = this.nextToken();\r\n\t\t\t\t\t\tif (token.type !== 4 /* Keyword */ || token.value !== keyword) {\r\n\t\t\t\t\t\t\tthis.throwUnexpectedToken(token);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// Return true if the next token matches the specified punctuator.\r\n\t\t\t\t\tParser.prototype.match = function (value) {\r\n\t\t\t\t\t\treturn this.lookahead.type === 7 /* Punctuator */ && this.lookahead.value === value;\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// Return true if the next token matches the specified keyword\r\n\t\t\t\t\tParser.prototype.matchKeyword = function (keyword) {\r\n\t\t\t\t\t\treturn this.lookahead.type === 4 /* Keyword */ && this.lookahead.value === keyword;\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// Return true if the next token matches the specified contextual keyword\r\n\t\t\t\t\t// (where an identifier is sometimes a keyword depending on the context)\r\n\t\t\t\t\tParser.prototype.matchContextualKeyword = function (keyword) {\r\n\t\t\t\t\t\treturn this.lookahead.type === 3 /* Identifier */ && this.lookahead.value === keyword;\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// Return true if the next token is an assignment operator\r\n\t\t\t\t\tParser.prototype.matchAssign = function () {\r\n\t\t\t\t\t\tif (this.lookahead.type !== 7 /* Punctuator */) {\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar op = this.lookahead.value;\r\n\t\t\t\t\t\treturn op === '=' ||\r\n\t\t\t\t\t\t\top === '*=' ||\r\n\t\t\t\t\t\t\top === '**=' ||\r\n\t\t\t\t\t\t\top === '/=' ||\r\n\t\t\t\t\t\t\top === '%=' ||\r\n\t\t\t\t\t\t\top === '+=' ||\r\n\t\t\t\t\t\t\top === '-=' ||\r\n\t\t\t\t\t\t\top === '<<=' ||\r\n\t\t\t\t\t\t\top === '>>=' ||\r\n\t\t\t\t\t\t\top === '>>>=' ||\r\n\t\t\t\t\t\t\top === '&=' ||\r\n\t\t\t\t\t\t\top === '^=' ||\r\n\t\t\t\t\t\t\top === '|=';\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// Cover grammar support.\r\n\t\t\t\t\t//\r\n\t\t\t\t\t// When an assignment expression position starts with an left parenthesis, the determination of the type\r\n\t\t\t\t\t// of the syntax is to be deferred arbitrarily long until the end of the parentheses pair (plus a lookahead)\r\n\t\t\t\t\t// or the first comma. This situation also defers the determination of all the expressions nested in the pair.\r\n\t\t\t\t\t//\r\n\t\t\t\t\t// There are three productions that can be parsed in a parentheses pair that needs to be determined\r\n\t\t\t\t\t// after the outermost pair is closed. They are:\r\n\t\t\t\t\t//\r\n\t\t\t\t\t//   1. AssignmentExpression\r\n\t\t\t\t\t//   2. BindingElements\r\n\t\t\t\t\t//   3. AssignmentTargets\r\n\t\t\t\t\t//\r\n\t\t\t\t\t// In order to avoid exponential backtracking, we use two flags to denote if the production can be\r\n\t\t\t\t\t// binding element or assignment target.\r\n\t\t\t\t\t//\r\n\t\t\t\t\t// The three productions have the relationship:\r\n\t\t\t\t\t//\r\n\t\t\t\t\t//   BindingElements ⊆ AssignmentTargets ⊆ AssignmentExpression\r\n\t\t\t\t\t//\r\n\t\t\t\t\t// with a single exception that CoverInitializedName when used directly in an Expression, generates\r\n\t\t\t\t\t// an early error. Therefore, we need the third state, firstCoverInitializedNameError, to track the\r\n\t\t\t\t\t// first usage of CoverInitializedName and report it when we reached the end of the parentheses pair.\r\n\t\t\t\t\t//\r\n\t\t\t\t\t// isolateCoverGrammar function runs the given parser function with a new cover grammar context, and it does not\r\n\t\t\t\t\t// effect the current flags. This means the production the parser parses is only used as an expression. Therefore\r\n\t\t\t\t\t// the CoverInitializedName check is conducted.\r\n\t\t\t\t\t//\r\n\t\t\t\t\t// inheritCoverGrammar function runs the given parse function with a new cover grammar context, and it propagates\r\n\t\t\t\t\t// the flags outside of the parser. This means the production the parser parses is used as a part of a potential\r\n\t\t\t\t\t// pattern. The CoverInitializedName check is deferred.\r\n\t\t\t\t\tParser.prototype.isolateCoverGrammar = function (parseFunction) {\r\n\t\t\t\t\t\tvar previousIsBindingElement = this.context.isBindingElement;\r\n\t\t\t\t\t\tvar previousIsAssignmentTarget = this.context.isAssignmentTarget;\r\n\t\t\t\t\t\tvar previousFirstCoverInitializedNameError = this.context.firstCoverInitializedNameError;\r\n\t\t\t\t\t\tthis.context.isBindingElement = true;\r\n\t\t\t\t\t\tthis.context.isAssignmentTarget = true;\r\n\t\t\t\t\t\tthis.context.firstCoverInitializedNameError = null;\r\n\t\t\t\t\t\tvar result = parseFunction.call(this);\r\n\t\t\t\t\t\tif (this.context.firstCoverInitializedNameError !== null) {\r\n\t\t\t\t\t\t\tthis.throwUnexpectedToken(this.context.firstCoverInitializedNameError);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.context.isBindingElement = previousIsBindingElement;\r\n\t\t\t\t\t\tthis.context.isAssignmentTarget = previousIsAssignmentTarget;\r\n\t\t\t\t\t\tthis.context.firstCoverInitializedNameError = previousFirstCoverInitializedNameError;\r\n\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.inheritCoverGrammar = function (parseFunction) {\r\n\t\t\t\t\t\tvar previousIsBindingElement = this.context.isBindingElement;\r\n\t\t\t\t\t\tvar previousIsAssignmentTarget = this.context.isAssignmentTarget;\r\n\t\t\t\t\t\tvar previousFirstCoverInitializedNameError = this.context.firstCoverInitializedNameError;\r\n\t\t\t\t\t\tthis.context.isBindingElement = true;\r\n\t\t\t\t\t\tthis.context.isAssignmentTarget = true;\r\n\t\t\t\t\t\tthis.context.firstCoverInitializedNameError = null;\r\n\t\t\t\t\t\tvar result = parseFunction.call(this);\r\n\t\t\t\t\t\tthis.context.isBindingElement = this.context.isBindingElement && previousIsBindingElement;\r\n\t\t\t\t\t\tthis.context.isAssignmentTarget = this.context.isAssignmentTarget && previousIsAssignmentTarget;\r\n\t\t\t\t\t\tthis.context.firstCoverInitializedNameError = previousFirstCoverInitializedNameError || this.context.firstCoverInitializedNameError;\r\n\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.consumeSemicolon = function () {\r\n\t\t\t\t\t\tif (this.match(';')) {\r\n\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (!this.hasLineTerminator) {\r\n\t\t\t\t\t\t\tif (this.lookahead.type !== 2 /* EOF */ && !this.match('}')) {\r\n\t\t\t\t\t\t\t\tthis.throwUnexpectedToken(this.lookahead);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.lastMarker.index = this.startMarker.index;\r\n\t\t\t\t\t\t\tthis.lastMarker.line = this.startMarker.line;\r\n\t\t\t\t\t\t\tthis.lastMarker.column = this.startMarker.column;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-primary-expression\r\n\t\t\t\t\tParser.prototype.parsePrimaryExpression = function () {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tvar expr;\r\n\t\t\t\t\t\tvar token, raw;\r\n\t\t\t\t\t\tswitch (this.lookahead.type) {\r\n\t\t\t\t\t\t\tcase 3 /* Identifier */:\r\n\t\t\t\t\t\t\t\tif ((this.context.isModule || this.context.await) && this.lookahead.value === 'await') {\r\n\t\t\t\t\t\t\t\t\tthis.tolerateUnexpectedToken(this.lookahead);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\texpr = this.matchAsyncFunction() ? this.parseFunctionExpression() : this.finalize(node, new Node.Identifier(this.nextToken().value));\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 6 /* NumericLiteral */:\r\n\t\t\t\t\t\t\tcase 8 /* StringLiteral */:\r\n\t\t\t\t\t\t\t\tif (this.context.strict && this.lookahead.octal) {\r\n\t\t\t\t\t\t\t\t\tthis.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.StrictOctalLiteral);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tthis.context.isAssignmentTarget = false;\r\n\t\t\t\t\t\t\t\tthis.context.isBindingElement = false;\r\n\t\t\t\t\t\t\t\ttoken = this.nextToken();\r\n\t\t\t\t\t\t\t\traw = this.getTokenRaw(token);\r\n\t\t\t\t\t\t\t\texpr = this.finalize(node, new Node.Literal(token.value, raw));\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 1 /* BooleanLiteral */:\r\n\t\t\t\t\t\t\t\tthis.context.isAssignmentTarget = false;\r\n\t\t\t\t\t\t\t\tthis.context.isBindingElement = false;\r\n\t\t\t\t\t\t\t\ttoken = this.nextToken();\r\n\t\t\t\t\t\t\t\traw = this.getTokenRaw(token);\r\n\t\t\t\t\t\t\t\texpr = this.finalize(node, new Node.Literal(token.value === 'true', raw));\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 5 /* NullLiteral */:\r\n\t\t\t\t\t\t\t\tthis.context.isAssignmentTarget = false;\r\n\t\t\t\t\t\t\t\tthis.context.isBindingElement = false;\r\n\t\t\t\t\t\t\t\ttoken = this.nextToken();\r\n\t\t\t\t\t\t\t\traw = this.getTokenRaw(token);\r\n\t\t\t\t\t\t\t\texpr = this.finalize(node, new Node.Literal(null, raw));\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 10 /* Template */:\r\n\t\t\t\t\t\t\t\texpr = this.parseTemplateLiteral();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 7 /* Punctuator */:\r\n\t\t\t\t\t\t\t\tswitch (this.lookahead.value) {\r\n\t\t\t\t\t\t\t\t\tcase '(':\r\n\t\t\t\t\t\t\t\t\t\tthis.context.isBindingElement = false;\r\n\t\t\t\t\t\t\t\t\t\texpr = this.inheritCoverGrammar(this.parseGroupExpression);\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tcase '[':\r\n\t\t\t\t\t\t\t\t\t\texpr = this.inheritCoverGrammar(this.parseArrayInitializer);\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tcase '{':\r\n\t\t\t\t\t\t\t\t\t\texpr = this.inheritCoverGrammar(this.parseObjectInitializer);\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tcase '/':\r\n\t\t\t\t\t\t\t\t\tcase '/=':\r\n\t\t\t\t\t\t\t\t\t\tthis.context.isAssignmentTarget = false;\r\n\t\t\t\t\t\t\t\t\t\tthis.context.isBindingElement = false;\r\n\t\t\t\t\t\t\t\t\t\tthis.scanner.index = this.startMarker.index;\r\n\t\t\t\t\t\t\t\t\t\ttoken = this.nextRegexToken();\r\n\t\t\t\t\t\t\t\t\t\traw = this.Raw(token);\r\n\t\t\t\t\t\t\t\t\t\texpr = this.finalize(node, new Node.RegexLiteral(token.regex, raw, token.pattern, token.flags));\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\texpr = this.throwUnexpectedToken(this.nextToken());\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 4 /* Keyword */:\r\n\t\t\t\t\t\t\t\tif (!this.context.strict && this.context.allowYield && this.matchKeyword('yield')) {\r\n\t\t\t\t\t\t\t\t\texpr = this.parseIdentifierName();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse if (!this.context.strict && this.matchKeyword('let')) {\r\n\t\t\t\t\t\t\t\t\texpr = this.finalize(node, new Node.Identifier(this.nextToken().value));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tthis.context.isAssignmentTarget = false;\r\n\t\t\t\t\t\t\t\t\tthis.context.isBindingElement = false;\r\n\t\t\t\t\t\t\t\t\tif (this.matchKeyword('function')) {\r\n\t\t\t\t\t\t\t\t\t\texpr = this.parseFunctionExpression();\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (this.matchKeyword('this')) {\r\n\t\t\t\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\t\t\t\texpr = this.finalize(node, new Node.ThisExpression());\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (this.matchKeyword('class')) {\r\n\t\t\t\t\t\t\t\t\t\texpr = this.parseClassExpression();\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (this.matchImportCall()) {\r\n\t\t\t\t\t\t\t\t\t\texpr = this.parseImportCall();\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\texpr = this.throwUnexpectedToken(this.nextToken());\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\texpr = this.throwUnexpectedToken(this.nextToken());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn expr;\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-array-initializer\r\n\t\t\t\t\tParser.prototype.parseSpreadElement = function () {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tthis.expect('...');\r\n\t\t\t\t\t\tvar arg = this.inheritCoverGrammar(this.parseAssignmentExpression);\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.SpreadElement(arg));\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseArrayInitializer = function () {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tvar elements = [];\r\n\t\t\t\t\t\tthis.expect('[');\r\n\t\t\t\t\t\twhile (!this.match(']')) {\r\n\t\t\t\t\t\t\tif (this.match(',')) {\r\n\t\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\t\telements.push(null);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (this.match('...')) {\r\n\t\t\t\t\t\t\t\tvar element = this.parseSpreadElement();\r\n\t\t\t\t\t\t\t\tif (!this.match(']')) {\r\n\t\t\t\t\t\t\t\t\tthis.context.isAssignmentTarget = false;\r\n\t\t\t\t\t\t\t\t\tthis.context.isBindingElement = false;\r\n\t\t\t\t\t\t\t\t\tthis.expect(',');\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telements.push(element);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\telements.push(this.inheritCoverGrammar(this.parseAssignmentExpression));\r\n\t\t\t\t\t\t\t\tif (!this.match(']')) {\r\n\t\t\t\t\t\t\t\t\tthis.expect(',');\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.expect(']');\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.ArrayExpression(elements));\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-object-initializer\r\n\t\t\t\t\tParser.prototype.parsePropertyMethod = function (params) {\r\n\t\t\t\t\t\tthis.context.isAssignmentTarget = false;\r\n\t\t\t\t\t\tthis.context.isBindingElement = false;\r\n\t\t\t\t\t\tvar previousStrict = this.context.strict;\r\n\t\t\t\t\t\tvar previousAllowStrictDirective = this.context.allowStrictDirective;\r\n\t\t\t\t\t\tthis.context.allowStrictDirective = params.simple;\r\n\t\t\t\t\t\tvar body = this.isolateCoverGrammar(this.parseFunctionSourceElements);\r\n\t\t\t\t\t\tif (this.context.strict && params.firstRestricted) {\r\n\t\t\t\t\t\t\tthis.tolerateUnexpectedToken(params.firstRestricted, params.message);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (this.context.strict && params.stricted) {\r\n\t\t\t\t\t\t\tthis.tolerateUnexpectedToken(params.stricted, params.message);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.context.strict = previousStrict;\r\n\t\t\t\t\t\tthis.context.allowStrictDirective = previousAllowStrictDirective;\r\n\t\t\t\t\t\treturn body;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parsePropertyMethodFunction = function () {\r\n\t\t\t\t\t\tvar isGenerator = false;\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tvar previousAllowYield = this.context.allowYield;\r\n\t\t\t\t\t\tthis.context.allowYield = true;\r\n\t\t\t\t\t\tvar params = this.parseFormalParameters();\r\n\t\t\t\t\t\tvar method = this.parsePropertyMethod(params);\r\n\t\t\t\t\t\tthis.context.allowYield = previousAllowYield;\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.FunctionExpression(null, params.params, method, isGenerator));\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parsePropertyMethodAsyncFunction = function () {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tvar previousAllowYield = this.context.allowYield;\r\n\t\t\t\t\t\tvar previousAwait = this.context.await;\r\n\t\t\t\t\t\tthis.context.allowYield = false;\r\n\t\t\t\t\t\tthis.context.await = true;\r\n\t\t\t\t\t\tvar params = this.parseFormalParameters();\r\n\t\t\t\t\t\tvar method = this.parsePropertyMethod(params);\r\n\t\t\t\t\t\tthis.context.allowYield = previousAllowYield;\r\n\t\t\t\t\t\tthis.context.await = previousAwait;\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.AsyncFunctionExpression(null, params.params, method));\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseObjectPropertyKey = function () {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tvar token = this.nextToken();\r\n\t\t\t\t\t\tvar key;\r\n\t\t\t\t\t\tswitch (token.type) {\r\n\t\t\t\t\t\t\tcase 8 /* StringLiteral */:\r\n\t\t\t\t\t\t\tcase 6 /* NumericLiteral */:\r\n\t\t\t\t\t\t\t\tif (this.context.strict && token.octal) {\r\n\t\t\t\t\t\t\t\t\tthis.tolerateUnexpectedToken(token, messages_1.Messages.StrictOctalLiteral);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tvar raw = this.getTokenRaw(token);\r\n\t\t\t\t\t\t\t\tkey = this.finalize(node, new Node.Literal(token.value, raw));\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 3 /* Identifier */:\r\n\t\t\t\t\t\t\tcase 1 /* BooleanLiteral */:\r\n\t\t\t\t\t\t\tcase 5 /* NullLiteral */:\r\n\t\t\t\t\t\t\tcase 4 /* Keyword */:\r\n\t\t\t\t\t\t\t\tkey = this.finalize(node, new Node.Identifier(token.value));\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 7 /* Punctuator */:\r\n\t\t\t\t\t\t\t\tif (token.value === '[') {\r\n\t\t\t\t\t\t\t\t\tkey = this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t\t\t\t\t\t\t\t\tthis.expect(']');\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tkey = this.throwUnexpectedToken(token);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tkey = this.throwUnexpectedToken(token);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn key;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.isPropertyKey = function (key, value) {\r\n\t\t\t\t\t\treturn (key.type === syntax_1.Syntax.Identifier && key.name === value) ||\r\n\t\t\t\t\t\t\t(key.type === syntax_1.Syntax.Literal && key.value === value);\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseObjectProperty = function (hasProto) {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tvar token = this.lookahead;\r\n\t\t\t\t\t\tvar kind;\r\n\t\t\t\t\t\tvar key = null;\r\n\t\t\t\t\t\tvar value = null;\r\n\t\t\t\t\t\tvar computed = false;\r\n\t\t\t\t\t\tvar method = false;\r\n\t\t\t\t\t\tvar shorthand = false;\r\n\t\t\t\t\t\tvar isAsync = false;\r\n\t\t\t\t\t\tif (token.type === 3 /* Identifier */) {\r\n\t\t\t\t\t\t\tvar id = token.value;\r\n\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\tcomputed = this.match('[');\r\n\t\t\t\t\t\t\tisAsync = !this.hasLineTerminator && (id === 'async') &&\r\n\t\t\t\t\t\t\t\t!this.match(':') && !this.match('(') && !this.match('*') && !this.match(',');\r\n\t\t\t\t\t\t\tkey = isAsync ? this.parseObjectPropertyKey() : this.finalize(node, new Node.Identifier(id));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (this.match('*')) {\r\n\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tcomputed = this.match('[');\r\n\t\t\t\t\t\t\tkey = this.parseObjectPropertyKey();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar lookaheadPropertyKey = this.qualifiedPropertyName(this.lookahead);\r\n\t\t\t\t\t\tif (token.type === 3 /* Identifier */ && !isAsync && token.value === 'get' && lookaheadPropertyKey) {\r\n\t\t\t\t\t\t\tkind = 'get';\r\n\t\t\t\t\t\t\tcomputed = this.match('[');\r\n\t\t\t\t\t\t\tkey = this.parseObjectPropertyKey();\r\n\t\t\t\t\t\t\tthis.context.allowYield = false;\r\n\t\t\t\t\t\t\tvalue = this.parseGetterMethod();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (token.type === 3 /* Identifier */ && !isAsync && token.value === 'set' && lookaheadPropertyKey) {\r\n\t\t\t\t\t\t\tkind = 'set';\r\n\t\t\t\t\t\t\tcomputed = this.match('[');\r\n\t\t\t\t\t\t\tkey = this.parseObjectPropertyKey();\r\n\t\t\t\t\t\t\tvalue = this.parseSetterMethod();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (token.type === 7 /* Punctuator */ && token.value === '*' && lookaheadPropertyKey) {\r\n\t\t\t\t\t\t\tkind = 'init';\r\n\t\t\t\t\t\t\tcomputed = this.match('[');\r\n\t\t\t\t\t\t\tkey = this.parseObjectPropertyKey();\r\n\t\t\t\t\t\t\tvalue = this.parseGeneratorMethod();\r\n\t\t\t\t\t\t\tmethod = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tif (!key) {\r\n\t\t\t\t\t\t\t\tthis.throwUnexpectedToken(this.lookahead);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tkind = 'init';\r\n\t\t\t\t\t\t\tif (this.match(':') && !isAsync) {\r\n\t\t\t\t\t\t\t\tif (!computed && this.isPropertyKey(key, '__proto__')) {\r\n\t\t\t\t\t\t\t\t\tif (hasProto.value) {\r\n\t\t\t\t\t\t\t\t\t\tthis.tolerateError(messages_1.Messages.DuplicateProtoProperty);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\thasProto.value = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\t\tvalue = this.inheritCoverGrammar(this.parseAssignmentExpression);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (this.match('(')) {\r\n\t\t\t\t\t\t\t\tvalue = isAsync ? this.parsePropertyMethodAsyncFunction() : this.parsePropertyMethodFunction();\r\n\t\t\t\t\t\t\t\tmethod = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (token.type === 3 /* Identifier */) {\r\n\t\t\t\t\t\t\t\tvar id = this.finalize(node, new Node.Identifier(token.value));\r\n\t\t\t\t\t\t\t\tif (this.match('=')) {\r\n\t\t\t\t\t\t\t\t\tthis.context.firstCoverInitializedNameError = this.lookahead;\r\n\t\t\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\t\t\tshorthand = true;\r\n\t\t\t\t\t\t\t\t\tvar init = this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t\t\t\t\t\t\t\t\tvalue = this.finalize(node, new Node.AssignmentPattern(id, init));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tshorthand = true;\r\n\t\t\t\t\t\t\t\t\tvalue = id;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tthis.throwUnexpectedToken(this.nextToken());\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.Property(kind, key, computed, value, method, shorthand));\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseObjectInitializer = function () {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tthis.expect('{');\r\n\t\t\t\t\t\tvar properties = [];\r\n\t\t\t\t\t\tvar hasProto = { value: false };\r\n\t\t\t\t\t\twhile (!this.match('}')) {\r\n\t\t\t\t\t\t\tproperties.push(this.match('...') ? this.parseSpreadElement() : this.parseObjectProperty(hasProto));\r\n\t\t\t\t\t\t\tif (!this.match('}')) {\r\n\t\t\t\t\t\t\t\tthis.expectCommaSeparator();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.expect('}');\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.ObjectExpression(properties));\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-template-literals\r\n\t\t\t\t\tParser.prototype.parseTemplateHead = function () {\r\n\t\t\t\t\t\tassert_1.assert(this.lookahead.head, 'Template literal must start with a template head');\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tvar token = this.nextToken();\r\n\t\t\t\t\t\tvar raw = token.value;\r\n\t\t\t\t\t\tvar cooked = token.cooked;\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.TemplateElement({ raw: raw, cooked: cooked }, token.tail));\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseTemplateElement = function () {\r\n\t\t\t\t\t\tif (this.lookahead.type !== 10 /* Template */) {\r\n\t\t\t\t\t\t\tthis.throwUnexpectedToken();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tvar token = this.nextToken();\r\n\t\t\t\t\t\tvar raw = token.value;\r\n\t\t\t\t\t\tvar cooked = token.cooked;\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.TemplateElement({ raw: raw, cooked: cooked }, token.tail));\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseTemplateLiteral = function () {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tvar expressions = [];\r\n\t\t\t\t\t\tvar quasis = [];\r\n\t\t\t\t\t\tvar quasi = this.parseTemplateHead();\r\n\t\t\t\t\t\tquasis.push(quasi);\r\n\t\t\t\t\t\twhile (!quasi.tail) {\r\n\t\t\t\t\t\t\texpressions.push(this.parseExpression());\r\n\t\t\t\t\t\t\tquasi = this.parseTemplateElement();\r\n\t\t\t\t\t\t\tquasis.push(quasi);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.TemplateLiteral(quasis, expressions));\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-grouping-operator\r\n\t\t\t\t\tParser.prototype.reinterpretExpressionAsPattern = function (expr) {\r\n\t\t\t\t\t\tswitch (expr.type) {\r\n\t\t\t\t\t\t\tcase syntax_1.Syntax.Identifier:\r\n\t\t\t\t\t\t\tcase syntax_1.Syntax.MemberExpression:\r\n\t\t\t\t\t\t\tcase syntax_1.Syntax.RestElement:\r\n\t\t\t\t\t\t\tcase syntax_1.Syntax.AssignmentPattern:\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase syntax_1.Syntax.SpreadElement:\r\n\t\t\t\t\t\t\t\texpr.type = syntax_1.Syntax.RestElement;\r\n\t\t\t\t\t\t\t\tthis.reinterpretExpressionAsPattern(expr.argument);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase syntax_1.Syntax.ArrayExpression:\r\n\t\t\t\t\t\t\t\texpr.type = syntax_1.Syntax.ArrayPattern;\r\n\t\t\t\t\t\t\t\tfor (var i = 0; i < expr.elements.length; i++) {\r\n\t\t\t\t\t\t\t\t\tif (expr.elements[i] !== null) {\r\n\t\t\t\t\t\t\t\t\t\tthis.reinterpretExpressionAsPattern(expr.elements[i]);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase syntax_1.Syntax.ObjectExpression:\r\n\t\t\t\t\t\t\t\texpr.type = syntax_1.Syntax.ObjectPattern;\r\n\t\t\t\t\t\t\t\tfor (var i = 0; i < expr.properties.length; i++) {\r\n\t\t\t\t\t\t\t\t\tvar property = expr.properties[i];\r\n\t\t\t\t\t\t\t\t\tthis.reinterpretExpressionAsPattern(property.type === syntax_1.Syntax.SpreadElement ? property : property.value);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase syntax_1.Syntax.AssignmentExpression:\r\n\t\t\t\t\t\t\t\texpr.type = syntax_1.Syntax.AssignmentPattern;\r\n\t\t\t\t\t\t\t\tdelete expr.operator;\r\n\t\t\t\t\t\t\t\tthis.reinterpretExpressionAsPattern(expr.left);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t// Allow other node type for tolerant parsing.\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseGroupExpression = function () {\r\n\t\t\t\t\t\tvar expr;\r\n\t\t\t\t\t\tthis.expect('(');\r\n\t\t\t\t\t\tif (this.match(')')) {\r\n\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\tif (!this.match('=>')) {\r\n\t\t\t\t\t\t\t\tthis.expect('=>');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\texpr = {\r\n\t\t\t\t\t\t\t\ttype: ArrowParameterPlaceHolder,\r\n\t\t\t\t\t\t\t\tparams: [],\r\n\t\t\t\t\t\t\t\tasync: false\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tvar startToken = this.lookahead;\r\n\t\t\t\t\t\t\tvar params = [];\r\n\t\t\t\t\t\t\tif (this.match('...')) {\r\n\t\t\t\t\t\t\t\texpr = this.parseRestElement(params);\r\n\t\t\t\t\t\t\t\tthis.expect(')');\r\n\t\t\t\t\t\t\t\tif (!this.match('=>')) {\r\n\t\t\t\t\t\t\t\t\tthis.expect('=>');\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\texpr = {\r\n\t\t\t\t\t\t\t\t\ttype: ArrowParameterPlaceHolder,\r\n\t\t\t\t\t\t\t\t\tparams: [expr],\r\n\t\t\t\t\t\t\t\t\tasync: false\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tvar arrow = false;\r\n\t\t\t\t\t\t\t\tthis.context.isBindingElement = true;\r\n\t\t\t\t\t\t\t\texpr = this.inheritCoverGrammar(this.parseAssignmentExpression);\r\n\t\t\t\t\t\t\t\tif (this.match(',')) {\r\n\t\t\t\t\t\t\t\t\tvar expressions = [];\r\n\t\t\t\t\t\t\t\t\tthis.context.isAssignmentTarget = false;\r\n\t\t\t\t\t\t\t\t\texpressions.push(expr);\r\n\t\t\t\t\t\t\t\t\twhile (this.lookahead.type !== 2 /* EOF */) {\r\n\t\t\t\t\t\t\t\t\t\tif (!this.match(',')) {\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\t\t\t\tif (this.match(')')) {\r\n\t\t\t\t\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\t\t\t\t\tfor (var i = 0; i < expressions.length; i++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.reinterpretExpressionAsPattern(expressions[i]);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tarrow = true;\r\n\t\t\t\t\t\t\t\t\t\t\texpr = {\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype: ArrowParameterPlaceHolder,\r\n\t\t\t\t\t\t\t\t\t\t\t\tparams: expressions,\r\n\t\t\t\t\t\t\t\t\t\t\t\tasync: false\r\n\t\t\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse if (this.match('...')) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (!this.context.isBindingElement) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.throwUnexpectedToken(this.lookahead);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\texpressions.push(this.parseRestElement(params));\r\n\t\t\t\t\t\t\t\t\t\t\tthis.expect(')');\r\n\t\t\t\t\t\t\t\t\t\t\tif (!this.match('=>')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.expect('=>');\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tthis.context.isBindingElement = false;\r\n\t\t\t\t\t\t\t\t\t\t\tfor (var i = 0; i < expressions.length; i++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.reinterpretExpressionAsPattern(expressions[i]);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tarrow = true;\r\n\t\t\t\t\t\t\t\t\t\t\texpr = {\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype: ArrowParameterPlaceHolder,\r\n\t\t\t\t\t\t\t\t\t\t\t\tparams: expressions,\r\n\t\t\t\t\t\t\t\t\t\t\t\tasync: false\r\n\t\t\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\texpressions.push(this.inheritCoverGrammar(this.parseAssignmentExpression));\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tif (arrow) {\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif (!arrow) {\r\n\t\t\t\t\t\t\t\t\t\texpr = this.finalize(this.startNode(startToken), new Node.SequenceExpression(expressions));\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (!arrow) {\r\n\t\t\t\t\t\t\t\t\tthis.expect(')');\r\n\t\t\t\t\t\t\t\t\tif (this.match('=>')) {\r\n\t\t\t\t\t\t\t\t\t\tif (expr.type === syntax_1.Syntax.Identifier && expr.name === 'yield') {\r\n\t\t\t\t\t\t\t\t\t\t\tarrow = true;\r\n\t\t\t\t\t\t\t\t\t\t\texpr = {\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype: ArrowParameterPlaceHolder,\r\n\t\t\t\t\t\t\t\t\t\t\t\tparams: [expr],\r\n\t\t\t\t\t\t\t\t\t\t\t\tasync: false\r\n\t\t\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tif (!arrow) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (!this.context.isBindingElement) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.throwUnexpectedToken(this.lookahead);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tif (expr.type === syntax_1.Syntax.SequenceExpression) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tfor (var i = 0; i < expr.expressions.length; i++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.reinterpretExpressionAsPattern(expr.expressions[i]);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.reinterpretExpressionAsPattern(expr);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tvar parameters = (expr.type === syntax_1.Syntax.SequenceExpression ? expr.expressions : [expr]);\r\n\t\t\t\t\t\t\t\t\t\t\texpr = {\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype: ArrowParameterPlaceHolder,\r\n\t\t\t\t\t\t\t\t\t\t\t\tparams: parameters,\r\n\t\t\t\t\t\t\t\t\t\t\t\tasync: false\r\n\t\t\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tthis.context.isBindingElement = false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn expr;\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-left-hand-side-expressions\r\n\t\t\t\t\tParser.prototype.parseArguments = function () {\r\n\t\t\t\t\t\tthis.expect('(');\r\n\t\t\t\t\t\tvar args = [];\r\n\t\t\t\t\t\tif (!this.match(')')) {\r\n\t\t\t\t\t\t\twhile (true) {\r\n\t\t\t\t\t\t\t\tvar expr = this.match('...') ? this.parseSpreadElement() :\r\n\t\t\t\t\t\t\t\t\tthis.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t\t\t\t\t\t\t\targs.push(expr);\r\n\t\t\t\t\t\t\t\tif (this.match(')')) {\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tthis.expectCommaSeparator();\r\n\t\t\t\t\t\t\t\tif (this.match(')')) {\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.expect(')');\r\n\t\t\t\t\t\treturn args;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.isIdentifierName = function (token) {\r\n\t\t\t\t\t\treturn token.type === 3 /* Identifier */ ||\r\n\t\t\t\t\t\t\ttoken.type === 4 /* Keyword */ ||\r\n\t\t\t\t\t\t\ttoken.type === 1 /* BooleanLiteral */ ||\r\n\t\t\t\t\t\t\ttoken.type === 5 /* NullLiteral */;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseIdentifierName = function () {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tvar token = this.nextToken();\r\n\t\t\t\t\t\tif (!this.isIdentifierName(token)) {\r\n\t\t\t\t\t\t\tthis.throwUnexpectedToken(token);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.Identifier(token.value));\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseNewExpression = function () {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tvar id = this.parseIdentifierName();\r\n\t\t\t\t\t\tassert_1.assert(id.name === 'new', 'New expression must start with `new`');\r\n\t\t\t\t\t\tvar expr;\r\n\t\t\t\t\t\tif (this.match('.')) {\r\n\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\tif (this.lookahead.type === 3 /* Identifier */ && this.context.inFunctionBody && this.lookahead.value === 'target') {\r\n\t\t\t\t\t\t\t\tvar property = this.parseIdentifierName();\r\n\t\t\t\t\t\t\t\texpr = new Node.MetaProperty(id, property);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tthis.throwUnexpectedToken(this.lookahead);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (this.matchKeyword('import')) {\r\n\t\t\t\t\t\t\tthis.throwUnexpectedToken(this.lookahead);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tvar callee = this.isolateCoverGrammar(this.parseLeftHandSideExpression);\r\n\t\t\t\t\t\t\tvar args = this.match('(') ? this.parseArguments() : [];\r\n\t\t\t\t\t\t\texpr = new Node.NewExpression(callee, args);\r\n\t\t\t\t\t\t\tthis.context.isAssignmentTarget = false;\r\n\t\t\t\t\t\t\tthis.context.isBindingElement = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn this.finalize(node, expr);\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseAsyncArgument = function () {\r\n\t\t\t\t\t\tvar arg = this.parseAssignmentExpression();\r\n\t\t\t\t\t\tthis.context.firstCoverInitializedNameError = null;\r\n\t\t\t\t\t\treturn arg;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseAsyncArguments = function () {\r\n\t\t\t\t\t\tthis.expect('(');\r\n\t\t\t\t\t\tvar args = [];\r\n\t\t\t\t\t\tif (!this.match(')')) {\r\n\t\t\t\t\t\t\twhile (true) {\r\n\t\t\t\t\t\t\t\tvar expr = this.match('...') ? this.parseSpreadElement() :\r\n\t\t\t\t\t\t\t\t\tthis.isolateCoverGrammar(this.parseAsyncArgument);\r\n\t\t\t\t\t\t\t\targs.push(expr);\r\n\t\t\t\t\t\t\t\tif (this.match(')')) {\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tthis.expectCommaSeparator();\r\n\t\t\t\t\t\t\t\tif (this.match(')')) {\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.expect(')');\r\n\t\t\t\t\t\treturn args;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.matchImportCall = function () {\r\n\t\t\t\t\t\tvar match = this.matchKeyword('import');\r\n\t\t\t\t\t\tif (match) {\r\n\t\t\t\t\t\t\tvar state = this.scanner.saveState();\r\n\t\t\t\t\t\t\tthis.scanner.scanComments();\r\n\t\t\t\t\t\t\tvar next = this.scanner.lex();\r\n\t\t\t\t\t\t\tthis.scanner.restoreState(state);\r\n\t\t\t\t\t\t\tmatch = (next.type === 7 /* Punctuator */) && (next.value === '(');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn match;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseImportCall = function () {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tthis.expectKeyword('import');\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.Import());\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseLeftHandSideExpressionAllowCall = function () {\r\n\t\t\t\t\t\tvar startToken = this.lookahead;\r\n\t\t\t\t\t\tvar maybeAsync = this.matchContextualKeyword('async');\r\n\t\t\t\t\t\tvar previousAllowIn = this.context.allowIn;\r\n\t\t\t\t\t\tthis.context.allowIn = true;\r\n\t\t\t\t\t\tvar expr;\r\n\t\t\t\t\t\tif (this.matchKeyword('super') && this.context.inFunctionBody) {\r\n\t\t\t\t\t\t\texpr = this.createNode();\r\n\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\texpr = this.finalize(expr, new Node.Super());\r\n\t\t\t\t\t\t\tif (!this.match('(') && !this.match('.') && !this.match('[')) {\r\n\t\t\t\t\t\t\t\tthis.throwUnexpectedToken(this.lookahead);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\texpr = this.inheritCoverGrammar(this.matchKeyword('new') ? this.parseNewExpression : this.parsePrimaryExpression);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\twhile (true) {\r\n\t\t\t\t\t\t\tif (this.match('.')) {\r\n\t\t\t\t\t\t\t\tthis.context.isBindingElement = false;\r\n\t\t\t\t\t\t\t\tthis.context.isAssignmentTarget = true;\r\n\t\t\t\t\t\t\t\tthis.expect('.');\r\n\t\t\t\t\t\t\t\tvar property = this.parseIdentifierName();\r\n\t\t\t\t\t\t\t\texpr = this.finalize(this.startNode(startToken), new Node.StaticMemberExpression(expr, property));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (this.match('(')) {\r\n\t\t\t\t\t\t\t\tvar asyncArrow = maybeAsync && (startToken.lineNumber === this.lookahead.lineNumber);\r\n\t\t\t\t\t\t\t\tthis.context.isBindingElement = false;\r\n\t\t\t\t\t\t\t\tthis.context.isAssignmentTarget = false;\r\n\t\t\t\t\t\t\t\tvar args = asyncArrow ? this.parseAsyncArguments() : this.parseArguments();\r\n\t\t\t\t\t\t\t\tif (expr.type === syntax_1.Syntax.Import && args.length !== 1) {\r\n\t\t\t\t\t\t\t\t\tthis.tolerateError(messages_1.Messages.BadImportCallArity);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\texpr = this.finalize(this.startNode(startToken), new Node.CallExpression(expr, args));\r\n\t\t\t\t\t\t\t\tif (asyncArrow && this.match('=>')) {\r\n\t\t\t\t\t\t\t\t\tfor (var i = 0; i < args.length; ++i) {\r\n\t\t\t\t\t\t\t\t\t\tthis.reinterpretExpressionAsPattern(args[i]);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\texpr = {\r\n\t\t\t\t\t\t\t\t\t\ttype: ArrowParameterPlaceHolder,\r\n\t\t\t\t\t\t\t\t\t\tparams: args,\r\n\t\t\t\t\t\t\t\t\t\tasync: true\r\n\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (this.match('[')) {\r\n\t\t\t\t\t\t\t\tthis.context.isBindingElement = false;\r\n\t\t\t\t\t\t\t\tthis.context.isAssignmentTarget = true;\r\n\t\t\t\t\t\t\t\tthis.expect('[');\r\n\t\t\t\t\t\t\t\tvar property = this.isolateCoverGrammar(this.parseExpression);\r\n\t\t\t\t\t\t\t\tthis.expect(']');\r\n\t\t\t\t\t\t\t\texpr = this.finalize(this.startNode(startToken), new Node.ComputedMemberExpression(expr, property));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (this.lookahead.type === 10 /* Template */ && this.lookahead.head) {\r\n\t\t\t\t\t\t\t\tvar quasi = this.parseTemplateLiteral();\r\n\t\t\t\t\t\t\t\texpr = this.finalize(this.startNode(startToken), new Node.TaggedTemplateExpression(expr, quasi));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.context.allowIn = previousAllowIn;\r\n\t\t\t\t\t\treturn expr;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseSuper = function () {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tthis.expectKeyword('super');\r\n\t\t\t\t\t\tif (!this.match('[') && !this.match('.')) {\r\n\t\t\t\t\t\t\tthis.throwUnexpectedToken(this.lookahead);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.Super());\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseLeftHandSideExpression = function () {\r\n\t\t\t\t\t\tassert_1.assert(this.context.allowIn, 'callee of new expression always allow in keyword.');\r\n\t\t\t\t\t\tvar node = this.startNode(this.lookahead);\r\n\t\t\t\t\t\tvar expr = (this.matchKeyword('super') && this.context.inFunctionBody) ? this.parseSuper() :\r\n\t\t\t\t\t\t\tthis.inheritCoverGrammar(this.matchKeyword('new') ? this.parseNewExpression : this.parsePrimaryExpression);\r\n\t\t\t\t\t\twhile (true) {\r\n\t\t\t\t\t\t\tif (this.match('[')) {\r\n\t\t\t\t\t\t\t\tthis.context.isBindingElement = false;\r\n\t\t\t\t\t\t\t\tthis.context.isAssignmentTarget = true;\r\n\t\t\t\t\t\t\t\tthis.expect('[');\r\n\t\t\t\t\t\t\t\tvar property = this.isolateCoverGrammar(this.parseExpression);\r\n\t\t\t\t\t\t\t\tthis.expect(']');\r\n\t\t\t\t\t\t\t\texpr = this.finalize(node, new Node.ComputedMemberExpression(expr, property));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (this.match('.')) {\r\n\t\t\t\t\t\t\t\tthis.context.isBindingElement = false;\r\n\t\t\t\t\t\t\t\tthis.context.isAssignmentTarget = true;\r\n\t\t\t\t\t\t\t\tthis.expect('.');\r\n\t\t\t\t\t\t\t\tvar property = this.parseIdentifierName();\r\n\t\t\t\t\t\t\t\texpr = this.finalize(node, new Node.StaticMemberExpression(expr, property));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (this.lookahead.type === 10 /* Template */ && this.lookahead.head) {\r\n\t\t\t\t\t\t\t\tvar quasi = this.parseTemplateLiteral();\r\n\t\t\t\t\t\t\t\texpr = this.finalize(node, new Node.TaggedTemplateExpression(expr, quasi));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn expr;\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-update-expressions\r\n\t\t\t\t\tParser.prototype.parseUpdateExpression = function () {\r\n\t\t\t\t\t\tvar expr;\r\n\t\t\t\t\t\tvar startToken = this.lookahead;\r\n\t\t\t\t\t\tif (this.match('++') || this.match('--')) {\r\n\t\t\t\t\t\t\tvar node = this.startNode(startToken);\r\n\t\t\t\t\t\t\tvar token = this.nextToken();\r\n\t\t\t\t\t\t\texpr = this.inheritCoverGrammar(this.parseUnaryExpression);\r\n\t\t\t\t\t\t\tif (this.context.strict && expr.type === syntax_1.Syntax.Identifier && this.scanner.isRestrictedWord(expr.name)) {\r\n\t\t\t\t\t\t\t\tthis.tolerateError(messages_1.Messages.StrictLHSPrefix);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (!this.context.isAssignmentTarget) {\r\n\t\t\t\t\t\t\t\tthis.tolerateError(messages_1.Messages.InvalidLHSInAssignment);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvar prefix = true;\r\n\t\t\t\t\t\t\texpr = this.finalize(node, new Node.UpdateExpression(token.value, expr, prefix));\r\n\t\t\t\t\t\t\tthis.context.isAssignmentTarget = false;\r\n\t\t\t\t\t\t\tthis.context.isBindingElement = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\texpr = this.inheritCoverGrammar(this.parseLeftHandSideExpressionAllowCall);\r\n\t\t\t\t\t\t\tif (!this.hasLineTerminator && this.lookahead.type === 7 /* Punctuator */) {\r\n\t\t\t\t\t\t\t\tif (this.match('++') || this.match('--')) {\r\n\t\t\t\t\t\t\t\t\tif (this.context.strict && expr.type === syntax_1.Syntax.Identifier && this.scanner.isRestrictedWord(expr.name)) {\r\n\t\t\t\t\t\t\t\t\t\tthis.tolerateError(messages_1.Messages.StrictLHSPostfix);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif (!this.context.isAssignmentTarget) {\r\n\t\t\t\t\t\t\t\t\t\tthis.tolerateError(messages_1.Messages.InvalidLHSInAssignment);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tthis.context.isAssignmentTarget = false;\r\n\t\t\t\t\t\t\t\t\tthis.context.isBindingElement = false;\r\n\t\t\t\t\t\t\t\t\tvar operator = this.nextToken().value;\r\n\t\t\t\t\t\t\t\t\tvar prefix = false;\r\n\t\t\t\t\t\t\t\t\texpr = this.finalize(this.startNode(startToken), new Node.UpdateExpression(operator, expr, prefix));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn expr;\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-unary-operators\r\n\t\t\t\t\tParser.prototype.parseAwaitExpression = function () {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\tvar argument = this.parseUnaryExpression();\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.AwaitExpression(argument));\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseUnaryExpression = function () {\r\n\t\t\t\t\t\tvar expr;\r\n\t\t\t\t\t\tif (this.match('+') || this.match('-') || this.match('~') || this.match('!') ||\r\n\t\t\t\t\t\t\tthis.matchKeyword('delete') || this.matchKeyword('void') || this.matchKeyword('typeof')) {\r\n\t\t\t\t\t\t\tvar node = this.startNode(this.lookahead);\r\n\t\t\t\t\t\t\tvar token = this.nextToken();\r\n\t\t\t\t\t\t\texpr = this.inheritCoverGrammar(this.parseUnaryExpression);\r\n\t\t\t\t\t\t\texpr = this.finalize(node, new Node.UnaryExpression(token.value, expr));\r\n\t\t\t\t\t\t\tif (this.context.strict && expr.operator === 'delete' && expr.argument.type === syntax_1.Syntax.Identifier) {\r\n\t\t\t\t\t\t\t\tthis.tolerateError(messages_1.Messages.StrictDelete);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.context.isAssignmentTarget = false;\r\n\t\t\t\t\t\t\tthis.context.isBindingElement = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (this.context.await && this.matchContextualKeyword('await')) {\r\n\t\t\t\t\t\t\texpr = this.parseAwaitExpression();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\texpr = this.parseUpdateExpression();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn expr;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseExponentiationExpression = function () {\r\n\t\t\t\t\t\tvar startToken = this.lookahead;\r\n\t\t\t\t\t\tvar expr = this.inheritCoverGrammar(this.parseUnaryExpression);\r\n\t\t\t\t\t\tif (expr.type !== syntax_1.Syntax.UnaryExpression && this.match('**')) {\r\n\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\tthis.context.isAssignmentTarget = false;\r\n\t\t\t\t\t\t\tthis.context.isBindingElement = false;\r\n\t\t\t\t\t\t\tvar left = expr;\r\n\t\t\t\t\t\t\tvar right = this.isolateCoverGrammar(this.parseExponentiationExpression);\r\n\t\t\t\t\t\t\texpr = this.finalize(this.startNode(startToken), new Node.BinaryExpression('**', left, right));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn expr;\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-exp-operator\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-multiplicative-operators\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-additive-operators\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-bitwise-shift-operators\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-relational-operators\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-equality-operators\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-binary-bitwise-operators\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-binary-logical-operators\r\n\t\t\t\t\tParser.prototype.binaryPrecedence = function (token) {\r\n\t\t\t\t\t\tvar op = token.value;\r\n\t\t\t\t\t\tvar precedence;\r\n\t\t\t\t\t\tif (token.type === 7 /* Punctuator */) {\r\n\t\t\t\t\t\t\tprecedence = this.operatorPrecedence[op] || 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (token.type === 4 /* Keyword */) {\r\n\t\t\t\t\t\t\tprecedence = (op === 'instanceof' || (this.context.allowIn && op === 'in')) ? 7 : 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tprecedence = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn precedence;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseBinaryExpression = function () {\r\n\t\t\t\t\t\tvar startToken = this.lookahead;\r\n\t\t\t\t\t\tvar expr = this.inheritCoverGrammar(this.parseExponentiationExpression);\r\n\t\t\t\t\t\tvar token = this.lookahead;\r\n\t\t\t\t\t\tvar prec = this.binaryPrecedence(token);\r\n\t\t\t\t\t\tif (prec > 0) {\r\n\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\tthis.context.isAssignmentTarget = false;\r\n\t\t\t\t\t\t\tthis.context.isBindingElement = false;\r\n\t\t\t\t\t\t\tvar markers = [startToken, this.lookahead];\r\n\t\t\t\t\t\t\tvar left = expr;\r\n\t\t\t\t\t\t\tvar right = this.isolateCoverGrammar(this.parseExponentiationExpression);\r\n\t\t\t\t\t\t\tvar stack = [left, token.value, right];\r\n\t\t\t\t\t\t\tvar precedences = [prec];\r\n\t\t\t\t\t\t\twhile (true) {\r\n\t\t\t\t\t\t\t\tprec = this.binaryPrecedence(this.lookahead);\r\n\t\t\t\t\t\t\t\tif (prec <= 0) {\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// Reduce: make a binary expression from the three topmost entries.\r\n\t\t\t\t\t\t\t\twhile ((stack.length > 2) && (prec <= precedences[precedences.length - 1])) {\r\n\t\t\t\t\t\t\t\t\tright = stack.pop();\r\n\t\t\t\t\t\t\t\t\tvar operator = stack.pop();\r\n\t\t\t\t\t\t\t\t\tprecedences.pop();\r\n\t\t\t\t\t\t\t\t\tleft = stack.pop();\r\n\t\t\t\t\t\t\t\t\tmarkers.pop();\r\n\t\t\t\t\t\t\t\t\tvar node = this.startNode(markers[markers.length - 1]);\r\n\t\t\t\t\t\t\t\t\tstack.push(this.finalize(node, new Node.BinaryExpression(operator, left, right)));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// Shift.\r\n\t\t\t\t\t\t\t\tstack.push(this.nextToken().value);\r\n\t\t\t\t\t\t\t\tprecedences.push(prec);\r\n\t\t\t\t\t\t\t\tmarkers.push(this.lookahead);\r\n\t\t\t\t\t\t\t\tstack.push(this.isolateCoverGrammar(this.parseExponentiationExpression));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// Final reduce to clean-up the stack.\r\n\t\t\t\t\t\t\tvar i = stack.length - 1;\r\n\t\t\t\t\t\t\texpr = stack[i];\r\n\t\t\t\t\t\t\tvar lastMarker = markers.pop();\r\n\t\t\t\t\t\t\twhile (i > 1) {\r\n\t\t\t\t\t\t\t\tvar marker = markers.pop();\r\n\t\t\t\t\t\t\t\tvar lastLineStart = lastMarker && lastMarker.lineStart;\r\n\t\t\t\t\t\t\t\tvar node = this.startNode(marker, lastLineStart);\r\n\t\t\t\t\t\t\t\tvar operator = stack[i - 1];\r\n\t\t\t\t\t\t\t\texpr = this.finalize(node, new Node.BinaryExpression(operator, stack[i - 2], expr));\r\n\t\t\t\t\t\t\t\ti -= 2;\r\n\t\t\t\t\t\t\t\tlastMarker = marker;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn expr;\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-conditional-operator\r\n\t\t\t\t\tParser.prototype.parseConditionalExpression = function () {\r\n\t\t\t\t\t\tvar startToken = this.lookahead;\r\n\t\t\t\t\t\tvar expr = this.inheritCoverGrammar(this.parseBinaryExpression);\r\n\t\t\t\t\t\tif (this.match('?')) {\r\n\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\tvar previousAllowIn = this.context.allowIn;\r\n\t\t\t\t\t\t\tthis.context.allowIn = true;\r\n\t\t\t\t\t\t\tvar consequent = this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t\t\t\t\t\t\tthis.context.allowIn = previousAllowIn;\r\n\t\t\t\t\t\t\tthis.expect(':');\r\n\t\t\t\t\t\t\tvar alternate = this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t\t\t\t\t\t\texpr = this.finalize(this.startNode(startToken), new Node.ConditionalExpression(expr, consequent, alternate));\r\n\t\t\t\t\t\t\tthis.context.isAssignmentTarget = false;\r\n\t\t\t\t\t\t\tthis.context.isBindingElement = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn expr;\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-assignment-operators\r\n\t\t\t\t\tParser.prototype.checkPatternParam = function (options, param) {\r\n\t\t\t\t\t\tswitch (param.type) {\r\n\t\t\t\t\t\t\tcase syntax_1.Syntax.Identifier:\r\n\t\t\t\t\t\t\t\tthis.validateParam(options, param, param.name);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase syntax_1.Syntax.RestElement:\r\n\t\t\t\t\t\t\t\tthis.checkPatternParam(options, param.argument);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase syntax_1.Syntax.AssignmentPattern:\r\n\t\t\t\t\t\t\t\tthis.checkPatternParam(options, param.left);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase syntax_1.Syntax.ArrayPattern:\r\n\t\t\t\t\t\t\t\tfor (var i = 0; i < param.elements.length; i++) {\r\n\t\t\t\t\t\t\t\t\tif (param.elements[i] !== null) {\r\n\t\t\t\t\t\t\t\t\t\tthis.checkPatternParam(options, param.elements[i]);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase syntax_1.Syntax.ObjectPattern:\r\n\t\t\t\t\t\t\t\tfor (var i = 0; i < param.properties.length; i++) {\r\n\t\t\t\t\t\t\t\t\tvar property = param.properties[i];\r\n\t\t\t\t\t\t\t\t\tthis.checkPatternParam(options, (property.type === syntax_1.Syntax.RestElement) ? property : property.value);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\toptions.simple = options.simple && (param instanceof Node.Identifier);\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.reinterpretAsCoverFormalsList = function (expr) {\r\n\t\t\t\t\t\tvar params = [expr];\r\n\t\t\t\t\t\tvar options = {\r\n\t\t\t\t\t\t\tsimple: true,\r\n\t\t\t\t\t\t\tparamSet: {}\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tvar asyncArrow = false;\r\n\t\t\t\t\t\tswitch (expr.type) {\r\n\t\t\t\t\t\t\tcase syntax_1.Syntax.Identifier:\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase ArrowParameterPlaceHolder:\r\n\t\t\t\t\t\t\t\tparams = expr.params;\r\n\t\t\t\t\t\t\t\tasyncArrow = expr.async;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (var i = 0; i < params.length; ++i) {\r\n\t\t\t\t\t\t\tvar param = params[i];\r\n\t\t\t\t\t\t\tif (param.type === syntax_1.Syntax.AssignmentPattern) {\r\n\t\t\t\t\t\t\t\tif (param.right.type === syntax_1.Syntax.YieldExpression) {\r\n\t\t\t\t\t\t\t\t\tif (param.right.argument) {\r\n\t\t\t\t\t\t\t\t\t\tthis.throwUnexpectedToken(this.lookahead);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tparam.right.type = syntax_1.Syntax.Identifier;\r\n\t\t\t\t\t\t\t\t\tparam.right.name = 'yield';\r\n\t\t\t\t\t\t\t\t\tdelete param.right.argument;\r\n\t\t\t\t\t\t\t\t\tdelete param.right.delegate;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (asyncArrow && param.type === syntax_1.Syntax.Identifier && param.name === 'await') {\r\n\t\t\t\t\t\t\t\tthis.throwUnexpectedToken(this.lookahead);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.checkPatternParam(options, param);\r\n\t\t\t\t\t\t\tparams[i] = param;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (this.context.strict || !this.context.allowYield) {\r\n\t\t\t\t\t\t\tfor (var i = 0; i < params.length; ++i) {\r\n\t\t\t\t\t\t\t\tvar param = params[i];\r\n\t\t\t\t\t\t\t\tif (param.type === syntax_1.Syntax.YieldExpression) {\r\n\t\t\t\t\t\t\t\t\tthis.throwUnexpectedToken(this.lookahead);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (options.message === messages_1.Messages.StrictParamDupe) {\r\n\t\t\t\t\t\t\tvar token = this.context.strict ? options.stricted : options.firstRestricted;\r\n\t\t\t\t\t\t\tthis.throwUnexpectedToken(token, options.message);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tsimple: options.simple,\r\n\t\t\t\t\t\t\tparams: params,\r\n\t\t\t\t\t\t\tstricted: options.stricted,\r\n\t\t\t\t\t\t\tfirstRestricted: options.firstRestricted,\r\n\t\t\t\t\t\t\tmessage: options.message\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseAssignmentExpression = function () {\r\n\t\t\t\t\t\tvar expr;\r\n\t\t\t\t\t\tif (!this.context.allowYield && this.matchKeyword('yield')) {\r\n\t\t\t\t\t\t\texpr = this.parseYieldExpression();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tvar startToken = this.lookahead;\r\n\t\t\t\t\t\t\tvar token = startToken;\r\n\t\t\t\t\t\t\texpr = this.parseConditionalExpression();\r\n\t\t\t\t\t\t\tif (token.type === 3 /* Identifier */ && (token.lineNumber === this.lookahead.lineNumber) && token.value === 'async') {\r\n\t\t\t\t\t\t\t\tif (this.lookahead.type === 3 /* Identifier */ || this.matchKeyword('yield')) {\r\n\t\t\t\t\t\t\t\t\tvar arg = this.parsePrimaryExpression();\r\n\t\t\t\t\t\t\t\t\tthis.reinterpretExpressionAsPattern(arg);\r\n\t\t\t\t\t\t\t\t\texpr = {\r\n\t\t\t\t\t\t\t\t\t\ttype: ArrowParameterPlaceHolder,\r\n\t\t\t\t\t\t\t\t\t\tparams: [arg],\r\n\t\t\t\t\t\t\t\t\t\tasync: true\r\n\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (expr.type === ArrowParameterPlaceHolder || this.match('=>')) {\r\n\t\t\t\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-arrow-function-definitions\r\n\t\t\t\t\t\t\t\tthis.context.isAssignmentTarget = false;\r\n\t\t\t\t\t\t\t\tthis.context.isBindingElement = false;\r\n\t\t\t\t\t\t\t\tvar isAsync = expr.async;\r\n\t\t\t\t\t\t\t\tvar list = this.reinterpretAsCoverFormalsList(expr);\r\n\t\t\t\t\t\t\t\tif (list) {\r\n\t\t\t\t\t\t\t\t\tif (this.hasLineTerminator) {\r\n\t\t\t\t\t\t\t\t\t\tthis.tolerateUnexpectedToken(this.lookahead);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tthis.context.firstCoverInitializedNameError = null;\r\n\t\t\t\t\t\t\t\t\tvar previousStrict = this.context.strict;\r\n\t\t\t\t\t\t\t\t\tvar previousAllowStrictDirective = this.context.allowStrictDirective;\r\n\t\t\t\t\t\t\t\t\tthis.context.allowStrictDirective = list.simple;\r\n\t\t\t\t\t\t\t\t\tvar previousAllowYield = this.context.allowYield;\r\n\t\t\t\t\t\t\t\t\tvar previousAwait = this.context.await;\r\n\t\t\t\t\t\t\t\t\tthis.context.allowYield = true;\r\n\t\t\t\t\t\t\t\t\tthis.context.await = isAsync;\r\n\t\t\t\t\t\t\t\t\tvar node = this.startNode(startToken);\r\n\t\t\t\t\t\t\t\t\tthis.expect('=>');\r\n\t\t\t\t\t\t\t\t\tvar body = void 0;\r\n\t\t\t\t\t\t\t\t\tif (this.match('{')) {\r\n\t\t\t\t\t\t\t\t\t\tvar previousAllowIn = this.context.allowIn;\r\n\t\t\t\t\t\t\t\t\t\tthis.context.allowIn = true;\r\n\t\t\t\t\t\t\t\t\t\tbody = this.parseFunctionSourceElements();\r\n\t\t\t\t\t\t\t\t\t\tthis.context.allowIn = previousAllowIn;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tbody = this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tvar expression = body.type !== syntax_1.Syntax.BlockStatement;\r\n\t\t\t\t\t\t\t\t\tif (this.context.strict && list.firstRestricted) {\r\n\t\t\t\t\t\t\t\t\t\tthis.throwUnexpectedToken(list.firstRestricted, list.message);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif (this.context.strict && list.stricted) {\r\n\t\t\t\t\t\t\t\t\t\tthis.tolerateUnexpectedToken(list.stricted, list.message);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\texpr = isAsync ? this.finalize(node, new Node.AsyncArrowFunctionExpression(list.params, body, expression)) :\r\n\t\t\t\t\t\t\t\t\t\tthis.finalize(node, new Node.ArrowFunctionExpression(list.params, body, expression));\r\n\t\t\t\t\t\t\t\t\tthis.context.strict = previousStrict;\r\n\t\t\t\t\t\t\t\t\tthis.context.allowStrictDirective = previousAllowStrictDirective;\r\n\t\t\t\t\t\t\t\t\tthis.context.allowYield = previousAllowYield;\r\n\t\t\t\t\t\t\t\t\tthis.context.await = previousAwait;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tif (this.matchAssign()) {\r\n\t\t\t\t\t\t\t\t\tif (!this.context.isAssignmentTarget) {\r\n\t\t\t\t\t\t\t\t\t\tthis.tolerateError(messages_1.Messages.InvalidLHSInAssignment);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif (this.context.strict && expr.type === syntax_1.Syntax.Identifier) {\r\n\t\t\t\t\t\t\t\t\t\tvar id = expr;\r\n\t\t\t\t\t\t\t\t\t\tif (this.scanner.isRestrictedWord(id.name)) {\r\n\t\t\t\t\t\t\t\t\t\t\tthis.tolerateUnexpectedToken(token, messages_1.Messages.StrictLHSAssignment);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tif (this.scanner.isStrictModeReservedWord(id.name)) {\r\n\t\t\t\t\t\t\t\t\t\t\tthis.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif (!this.match('=')) {\r\n\t\t\t\t\t\t\t\t\t\tthis.context.isAssignmentTarget = false;\r\n\t\t\t\t\t\t\t\t\t\tthis.context.isBindingElement = false;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tthis.reinterpretExpressionAsPattern(expr);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\ttoken = this.nextToken();\r\n\t\t\t\t\t\t\t\t\tvar operator = token.value;\r\n\t\t\t\t\t\t\t\t\tvar right = this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t\t\t\t\t\t\t\t\texpr = this.finalize(this.startNode(startToken), new Node.AssignmentExpression(operator, expr, right));\r\n\t\t\t\t\t\t\t\t\tthis.context.firstCoverInitializedNameError = null;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn expr;\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-comma-operator\r\n\t\t\t\t\tParser.prototype.parseExpression = function () {\r\n\t\t\t\t\t\tvar startToken = this.lookahead;\r\n\t\t\t\t\t\tvar expr = this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t\t\t\t\t\tif (this.match(',')) {\r\n\t\t\t\t\t\t\tvar expressions = [];\r\n\t\t\t\t\t\t\texpressions.push(expr);\r\n\t\t\t\t\t\t\twhile (this.lookahead.type !== 2 /* EOF */) {\r\n\t\t\t\t\t\t\t\tif (!this.match(',')) {\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\t\texpressions.push(this.isolateCoverGrammar(this.parseAssignmentExpression));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\texpr = this.finalize(this.startNode(startToken), new Node.SequenceExpression(expressions));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn expr;\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-block\r\n\t\t\t\t\tParser.prototype.parseStatementListItem = function () {\r\n\t\t\t\t\t\tvar statement;\r\n\t\t\t\t\t\tthis.context.isAssignmentTarget = true;\r\n\t\t\t\t\t\tthis.context.isBindingElement = true;\r\n\t\t\t\t\t\tif (this.lookahead.type === 4 /* Keyword */) {\r\n\t\t\t\t\t\t\tswitch (this.lookahead.value) {\r\n\t\t\t\t\t\t\t\tcase 'export':\r\n\t\t\t\t\t\t\t\t\tif (!this.context.isModule) {\r\n\t\t\t\t\t\t\t\t\t\tthis.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.IllegalExportDeclaration);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tstatement = this.parseExportDeclaration();\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase 'import':\r\n\t\t\t\t\t\t\t\t\tif (this.matchImportCall()) {\r\n\t\t\t\t\t\t\t\t\t\tstatement = this.parseExpressionStatement();\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tif (!this.context.isModule) {\r\n\t\t\t\t\t\t\t\t\t\t\tthis.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.IllegalImportDeclaration);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tstatement = this.parseImportDeclaration();\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase 'const':\r\n\t\t\t\t\t\t\t\t\tstatement = this.parseLexicalDeclaration({ inFor: false });\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase 'function':\r\n\t\t\t\t\t\t\t\t\tstatement = this.parseFunctionDeclaration();\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase 'class':\r\n\t\t\t\t\t\t\t\t\tstatement = this.parseClassDeclaration();\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase 'let':\r\n\t\t\t\t\t\t\t\t\tstatement = this.isLexicalDeclaration() ? this.parseLexicalDeclaration({ inFor: false }) : this.parseStatement();\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\tstatement = this.parseStatement();\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tstatement = this.parseStatement();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn statement;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseBlock = function () {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tthis.expect('{');\r\n\t\t\t\t\t\tvar block = [];\r\n\t\t\t\t\t\twhile (true) {\r\n\t\t\t\t\t\t\tif (this.match('}')) {\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tblock.push(this.parseStatementListItem());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.expect('}');\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.BlockStatement(block));\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-let-and-const-declarations\r\n\t\t\t\t\tParser.prototype.parseLexicalBinding = function (kind, options) {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tvar params = [];\r\n\t\t\t\t\t\tvar id = this.parsePattern(params, kind);\r\n\t\t\t\t\t\tif (this.context.strict && id.type === syntax_1.Syntax.Identifier) {\r\n\t\t\t\t\t\t\tif (this.scanner.isRestrictedWord(id.name)) {\r\n\t\t\t\t\t\t\t\tthis.tolerateError(messages_1.Messages.StrictVarName);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar init = null;\r\n\t\t\t\t\t\tif (kind === 'const') {\r\n\t\t\t\t\t\t\tif (!this.matchKeyword('in') && !this.matchContextualKeyword('of')) {\r\n\t\t\t\t\t\t\t\tif (this.match('=')) {\r\n\t\t\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\t\t\tinit = this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tthis.throwError(messages_1.Messages.DeclarationMissingInitializer, 'const');\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if ((!options.inFor && id.type !== syntax_1.Syntax.Identifier) || this.match('=')) {\r\n\t\t\t\t\t\t\tthis.expect('=');\r\n\t\t\t\t\t\t\tinit = this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.VariableDeclarator(id, init));\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseBindingList = function (kind, options) {\r\n\t\t\t\t\t\tvar list = [this.parseLexicalBinding(kind, options)];\r\n\t\t\t\t\t\twhile (this.match(',')) {\r\n\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\tlist.push(this.parseLexicalBinding(kind, options));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn list;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.isLexicalDeclaration = function () {\r\n\t\t\t\t\t\tvar state = this.scanner.saveState();\r\n\t\t\t\t\t\tthis.scanner.scanComments();\r\n\t\t\t\t\t\tvar next = this.scanner.lex();\r\n\t\t\t\t\t\tthis.scanner.restoreState(state);\r\n\t\t\t\t\t\treturn (next.type === 3 /* Identifier */) ||\r\n\t\t\t\t\t\t\t(next.type === 7 /* Punctuator */ && next.value === '[') ||\r\n\t\t\t\t\t\t\t(next.type === 7 /* Punctuator */ && next.value === '{') ||\r\n\t\t\t\t\t\t\t(next.type === 4 /* Keyword */ && next.value === 'let') ||\r\n\t\t\t\t\t\t\t(next.type === 4 /* Keyword */ && next.value === 'yield');\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseLexicalDeclaration = function (options) {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tvar kind = this.nextToken().value;\r\n\t\t\t\t\t\tassert_1.assert(kind === 'let' || kind === 'const', 'Lexical declaration must be either let or const');\r\n\t\t\t\t\t\tvar declarations = this.parseBindingList(kind, options);\r\n\t\t\t\t\t\tthis.consumeSemicolon();\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.VariableDeclaration(declarations, kind));\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-destructuring-binding-patterns\r\n\t\t\t\t\tParser.prototype.parseBindingRestElement = function (params, kind) {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tthis.expect('...');\r\n\t\t\t\t\t\tvar arg = this.parsePattern(params, kind);\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.RestElement(arg));\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseArrayPattern = function (params, kind) {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tthis.expect('[');\r\n\t\t\t\t\t\tvar elements = [];\r\n\t\t\t\t\t\twhile (!this.match(']')) {\r\n\t\t\t\t\t\t\tif (this.match(',')) {\r\n\t\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\t\telements.push(null);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tif (this.match('...')) {\r\n\t\t\t\t\t\t\t\t\telements.push(this.parseBindingRestElement(params, kind));\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\telements.push(this.parsePatternWithDefault(params, kind));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (!this.match(']')) {\r\n\t\t\t\t\t\t\t\t\tthis.expect(',');\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.expect(']');\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.ArrayPattern(elements));\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parsePropertyPattern = function (params, kind) {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tvar computed = false;\r\n\t\t\t\t\t\tvar shorthand = false;\r\n\t\t\t\t\t\tvar method = false;\r\n\t\t\t\t\t\tvar key;\r\n\t\t\t\t\t\tvar value;\r\n\t\t\t\t\t\tif (this.lookahead.type === 3 /* Identifier */) {\r\n\t\t\t\t\t\t\tvar keyToken = this.lookahead;\r\n\t\t\t\t\t\t\tkey = this.parseVariableIdentifier();\r\n\t\t\t\t\t\t\tvar init = this.finalize(node, new Node.Identifier(keyToken.value));\r\n\t\t\t\t\t\t\tif (this.match('=')) {\r\n\t\t\t\t\t\t\t\tparams.push(keyToken);\r\n\t\t\t\t\t\t\t\tshorthand = true;\r\n\t\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\t\tvar expr = this.parseAssignmentExpression();\r\n\t\t\t\t\t\t\t\tvalue = this.finalize(this.startNode(keyToken), new Node.AssignmentPattern(init, expr));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (!this.match(':')) {\r\n\t\t\t\t\t\t\t\tparams.push(keyToken);\r\n\t\t\t\t\t\t\t\tshorthand = true;\r\n\t\t\t\t\t\t\t\tvalue = init;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tthis.expect(':');\r\n\t\t\t\t\t\t\t\tvalue = this.parsePatternWithDefault(params, kind);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tcomputed = this.match('[');\r\n\t\t\t\t\t\t\tkey = this.parseObjectPropertyKey();\r\n\t\t\t\t\t\t\tthis.expect(':');\r\n\t\t\t\t\t\t\tvalue = this.parsePatternWithDefault(params, kind);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.Property('init', key, computed, value, method, shorthand));\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseRestProperty = function (params, kind) {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tthis.expect('...');\r\n\t\t\t\t\t\tvar arg = this.parsePattern(params);\r\n\t\t\t\t\t\tif (this.match('=')) {\r\n\t\t\t\t\t\t\tthis.throwError(messages_1.Messages.DefaultRestProperty);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!this.match('}')) {\r\n\t\t\t\t\t\t\tthis.throwError(messages_1.Messages.PropertyAfterRestProperty);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.RestElement(arg));\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseObjectPattern = function (params, kind) {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tvar properties = [];\r\n\t\t\t\t\t\tthis.expect('{');\r\n\t\t\t\t\t\twhile (!this.match('}')) {\r\n\t\t\t\t\t\t\tproperties.push(this.match('...') ? this.parseRestProperty(params, kind) : this.parsePropertyPattern(params, kind));\r\n\t\t\t\t\t\t\tif (!this.match('}')) {\r\n\t\t\t\t\t\t\t\tthis.expect(',');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.expect('}');\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.ObjectPattern(properties));\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parsePattern = function (params, kind) {\r\n\t\t\t\t\t\tvar pattern;\r\n\t\t\t\t\t\tif (this.match('[')) {\r\n\t\t\t\t\t\t\tpattern = this.parseArrayPattern(params, kind);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (this.match('{')) {\r\n\t\t\t\t\t\t\tpattern = this.parseObjectPattern(params, kind);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tif (this.matchKeyword('let') && (kind === 'const' || kind === 'let')) {\r\n\t\t\t\t\t\t\t\tthis.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.LetInLexicalBinding);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tparams.push(this.lookahead);\r\n\t\t\t\t\t\t\tpattern = this.parseVariableIdentifier(kind);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn pattern;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parsePatternWithDefault = function (params, kind) {\r\n\t\t\t\t\t\tvar startToken = this.lookahead;\r\n\t\t\t\t\t\tvar pattern = this.parsePattern(params, kind);\r\n\t\t\t\t\t\tif (this.match('=')) {\r\n\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\tvar previousAllowYield = this.context.allowYield;\r\n\t\t\t\t\t\t\tthis.context.allowYield = true;\r\n\t\t\t\t\t\t\tvar right = this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t\t\t\t\t\t\tthis.context.allowYield = previousAllowYield;\r\n\t\t\t\t\t\t\tpattern = this.finalize(this.startNode(startToken), new Node.AssignmentPattern(pattern, right));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn pattern;\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-variable-statement\r\n\t\t\t\t\tParser.prototype.parseVariableIdentifier = function (kind) {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tvar token = this.nextToken();\r\n\t\t\t\t\t\tif (token.type === 4 /* Keyword */ && token.value === 'yield') {\r\n\t\t\t\t\t\t\tif (this.context.strict) {\r\n\t\t\t\t\t\t\t\tthis.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (!this.context.allowYield) {\r\n\t\t\t\t\t\t\t\tthis.throwUnexpectedToken(token);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (token.type !== 3 /* Identifier */) {\r\n\t\t\t\t\t\t\tif (this.context.strict && token.type === 4 /* Keyword */ && this.scanner.isStrictModeReservedWord(token.value)) {\r\n\t\t\t\t\t\t\t\tthis.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tif (this.context.strict || token.value !== 'let' || kind !== 'var') {\r\n\t\t\t\t\t\t\t\t\tthis.throwUnexpectedToken(token);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if ((this.context.isModule || this.context.await) && token.type === 3 /* Identifier */ && token.value === 'await') {\r\n\t\t\t\t\t\t\tthis.tolerateUnexpectedToken(token);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.Identifier(token.value));\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseVariableDeclaration = function (options) {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tvar params = [];\r\n\t\t\t\t\t\tvar id = this.parsePattern(params, 'var');\r\n\t\t\t\t\t\tif (this.context.strict && id.type === syntax_1.Syntax.Identifier) {\r\n\t\t\t\t\t\t\tif (this.scanner.isRestrictedWord(id.name)) {\r\n\t\t\t\t\t\t\t\tthis.tolerateError(messages_1.Messages.StrictVarName);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar init = null;\r\n\t\t\t\t\t\tif (this.match('=')) {\r\n\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\tinit = this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (id.type !== syntax_1.Syntax.Identifier && !options.inFor) {\r\n\t\t\t\t\t\t\tthis.expect('=');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.VariableDeclarator(id, init));\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseVariableDeclarationList = function (options) {\r\n\t\t\t\t\t\tvar opt = { inFor: options.inFor };\r\n\t\t\t\t\t\tvar list = [];\r\n\t\t\t\t\t\tlist.push(this.parseVariableDeclaration(opt));\r\n\t\t\t\t\t\twhile (this.match(',')) {\r\n\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\tlist.push(this.parseVariableDeclaration(opt));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn list;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseVariableStatement = function () {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tthis.expectKeyword('var');\r\n\t\t\t\t\t\tvar declarations = this.parseVariableDeclarationList({ inFor: false });\r\n\t\t\t\t\t\tthis.consumeSemicolon();\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.VariableDeclaration(declarations, 'var'));\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-empty-statement\r\n\t\t\t\t\tParser.prototype.parseEmptyStatement = function () {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tthis.expect(';');\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.EmptyStatement());\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-expression-statement\r\n\t\t\t\t\tParser.prototype.parseExpressionStatement = function () {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tvar expr = this.parseExpression();\r\n\t\t\t\t\t\tthis.consumeSemicolon();\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.ExpressionStatement(expr));\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-if-statement\r\n\t\t\t\t\tParser.prototype.parseIfClause = function () {\r\n\t\t\t\t\t\tif (this.context.strict && this.matchKeyword('function')) {\r\n\t\t\t\t\t\t\tthis.tolerateError(messages_1.Messages.StrictFunction);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn this.parseStatement();\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseIfStatement = function () {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tvar consequent;\r\n\t\t\t\t\t\tvar alternate = null;\r\n\t\t\t\t\t\tthis.expectKeyword('if');\r\n\t\t\t\t\t\tthis.expect('(');\r\n\t\t\t\t\t\tvar test = this.parseExpression();\r\n\t\t\t\t\t\tif (!this.match(')') && this.config.tolerant) {\r\n\t\t\t\t\t\t\tthis.tolerateUnexpectedToken(this.nextToken());\r\n\t\t\t\t\t\t\tconsequent = this.finalize(this.createNode(), new Node.EmptyStatement());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.expect(')');\r\n\t\t\t\t\t\t\tconsequent = this.parseIfClause();\r\n\t\t\t\t\t\t\tif (this.matchKeyword('else')) {\r\n\t\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\t\talternate = this.parseIfClause();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.IfStatement(test, consequent, alternate));\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-do-while-statement\r\n\t\t\t\t\tParser.prototype.parseDoWhileStatement = function () {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tthis.expectKeyword('do');\r\n\t\t\t\t\t\tvar previousInIteration = this.context.inIteration;\r\n\t\t\t\t\t\tthis.context.inIteration = true;\r\n\t\t\t\t\t\tvar body = this.parseStatement();\r\n\t\t\t\t\t\tthis.context.inIteration = previousInIteration;\r\n\t\t\t\t\t\tthis.expectKeyword('while');\r\n\t\t\t\t\t\tthis.expect('(');\r\n\t\t\t\t\t\tvar test = this.parseExpression();\r\n\t\t\t\t\t\tif (!this.match(')') && this.config.tolerant) {\r\n\t\t\t\t\t\t\tthis.tolerateUnexpectedToken(this.nextToken());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.expect(')');\r\n\t\t\t\t\t\t\tif (this.match(';')) {\r\n\t\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.DoWhileStatement(body, test));\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-while-statement\r\n\t\t\t\t\tParser.prototype.parseWhileStatement = function () {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tvar body;\r\n\t\t\t\t\t\tthis.expectKeyword('while');\r\n\t\t\t\t\t\tthis.expect('(');\r\n\t\t\t\t\t\tvar test = this.parseExpression();\r\n\t\t\t\t\t\tif (!this.match(')') && this.config.tolerant) {\r\n\t\t\t\t\t\t\tthis.tolerateUnexpectedToken(this.nextToken());\r\n\t\t\t\t\t\t\tbody = this.finalize(this.createNode(), new Node.EmptyStatement());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.expect(')');\r\n\t\t\t\t\t\t\tvar previousInIteration = this.context.inIteration;\r\n\t\t\t\t\t\t\tthis.context.inIteration = true;\r\n\t\t\t\t\t\t\tbody = this.parseStatement();\r\n\t\t\t\t\t\t\tthis.context.inIteration = previousInIteration;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.WhileStatement(test, body));\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-for-statement\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-for-in-and-for-of-statements\r\n\t\t\t\t\tParser.prototype.parseForStatement = function () {\r\n\t\t\t\t\t\tvar init = null;\r\n\t\t\t\t\t\tvar test = null;\r\n\t\t\t\t\t\tvar update = null;\r\n\t\t\t\t\t\tvar forIn = true;\r\n\t\t\t\t\t\tvar left, right;\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tthis.expectKeyword('for');\r\n\t\t\t\t\t\tthis.expect('(');\r\n\t\t\t\t\t\tif (this.match(';')) {\r\n\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tif (this.matchKeyword('var')) {\r\n\t\t\t\t\t\t\t\tinit = this.createNode();\r\n\t\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\t\tvar previousAllowIn = this.context.allowIn;\r\n\t\t\t\t\t\t\t\tthis.context.allowIn = false;\r\n\t\t\t\t\t\t\t\tvar declarations = this.parseVariableDeclarationList({ inFor: true });\r\n\t\t\t\t\t\t\t\tthis.context.allowIn = previousAllowIn;\r\n\t\t\t\t\t\t\t\tif (declarations.length === 1 && this.matchKeyword('in')) {\r\n\t\t\t\t\t\t\t\t\tvar decl = declarations[0];\r\n\t\t\t\t\t\t\t\t\tif (decl.init && (decl.id.type === syntax_1.Syntax.ArrayPattern || decl.id.type === syntax_1.Syntax.ObjectPattern || this.context.strict)) {\r\n\t\t\t\t\t\t\t\t\t\tthis.tolerateError(messages_1.Messages.ForInOfLoopInitializer, 'for-in');\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tinit = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));\r\n\t\t\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\t\t\tleft = init;\r\n\t\t\t\t\t\t\t\t\tright = this.parseExpression();\r\n\t\t\t\t\t\t\t\t\tinit = null;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse if (declarations.length === 1 && declarations[0].init === null && this.matchContextualKeyword('of')) {\r\n\t\t\t\t\t\t\t\t\tinit = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));\r\n\t\t\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\t\t\tleft = init;\r\n\t\t\t\t\t\t\t\t\tright = this.parseAssignmentExpression();\r\n\t\t\t\t\t\t\t\t\tinit = null;\r\n\t\t\t\t\t\t\t\t\tforIn = false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tinit = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));\r\n\t\t\t\t\t\t\t\t\tthis.expect(';');\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (this.matchKeyword('const') || this.matchKeyword('let')) {\r\n\t\t\t\t\t\t\t\tinit = this.createNode();\r\n\t\t\t\t\t\t\t\tvar kind = this.nextToken().value;\r\n\t\t\t\t\t\t\t\tif (!this.context.strict && this.lookahead.value === 'in') {\r\n\t\t\t\t\t\t\t\t\tinit = this.finalize(init, new Node.Identifier(kind));\r\n\t\t\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\t\t\tleft = init;\r\n\t\t\t\t\t\t\t\t\tright = this.parseExpression();\r\n\t\t\t\t\t\t\t\t\tinit = null;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tvar previousAllowIn = this.context.allowIn;\r\n\t\t\t\t\t\t\t\t\tthis.context.allowIn = false;\r\n\t\t\t\t\t\t\t\t\tvar declarations = this.parseBindingList(kind, { inFor: true });\r\n\t\t\t\t\t\t\t\t\tthis.context.allowIn = previousAllowIn;\r\n\t\t\t\t\t\t\t\t\tif (declarations.length === 1 && declarations[0].init === null && this.matchKeyword('in')) {\r\n\t\t\t\t\t\t\t\t\t\tinit = this.finalize(init, new Node.VariableDeclaration(declarations, kind));\r\n\t\t\t\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\t\t\t\tleft = init;\r\n\t\t\t\t\t\t\t\t\t\tright = this.parseExpression();\r\n\t\t\t\t\t\t\t\t\t\tinit = null;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (declarations.length === 1 && declarations[0].init === null && this.matchContextualKeyword('of')) {\r\n\t\t\t\t\t\t\t\t\t\tinit = this.finalize(init, new Node.VariableDeclaration(declarations, kind));\r\n\t\t\t\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\t\t\t\tleft = init;\r\n\t\t\t\t\t\t\t\t\t\tright = this.parseAssignmentExpression();\r\n\t\t\t\t\t\t\t\t\t\tinit = null;\r\n\t\t\t\t\t\t\t\t\t\tforIn = false;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tthis.consumeSemicolon();\r\n\t\t\t\t\t\t\t\t\t\tinit = this.finalize(init, new Node.VariableDeclaration(declarations, kind));\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tvar initStartToken = this.lookahead;\r\n\t\t\t\t\t\t\t\tvar previousIsBindingElement = this.context.isBindingElement;\r\n\t\t\t\t\t\t\t\tvar previousIsAssignmentTarget = this.context.isAssignmentTarget;\r\n\t\t\t\t\t\t\t\tvar previousFirstCoverInitializedNameError = this.context.firstCoverInitializedNameError;\r\n\t\t\t\t\t\t\t\tvar previousAllowIn = this.context.allowIn;\r\n\t\t\t\t\t\t\t\tthis.context.allowIn = false;\r\n\t\t\t\t\t\t\t\tinit = this.inheritCoverGrammar(this.parseAssignmentExpression);\r\n\t\t\t\t\t\t\t\tthis.context.allowIn = previousAllowIn;\r\n\t\t\t\t\t\t\t\tif (this.matchKeyword('in')) {\r\n\t\t\t\t\t\t\t\t\tif (!this.context.isAssignmentTarget || init.type === syntax_1.Syntax.AssignmentExpression) {\r\n\t\t\t\t\t\t\t\t\t\tthis.tolerateError(messages_1.Messages.InvalidLHSInForIn);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\t\t\tthis.reinterpretExpressionAsPattern(init);\r\n\t\t\t\t\t\t\t\t\tleft = init;\r\n\t\t\t\t\t\t\t\t\tright = this.parseExpression();\r\n\t\t\t\t\t\t\t\t\tinit = null;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse if (this.matchContextualKeyword('of')) {\r\n\t\t\t\t\t\t\t\t\tif (!this.context.isAssignmentTarget || init.type === syntax_1.Syntax.AssignmentExpression) {\r\n\t\t\t\t\t\t\t\t\t\tthis.tolerateError(messages_1.Messages.InvalidLHSInForLoop);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\t\t\tthis.reinterpretExpressionAsPattern(init);\r\n\t\t\t\t\t\t\t\t\tleft = init;\r\n\t\t\t\t\t\t\t\t\tright = this.parseAssignmentExpression();\r\n\t\t\t\t\t\t\t\t\tinit = null;\r\n\t\t\t\t\t\t\t\t\tforIn = false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t// The `init` node was not parsed isolated, but we would have wanted it to.\r\n\t\t\t\t\t\t\t\t\tthis.context.isBindingElement = previousIsBindingElement;\r\n\t\t\t\t\t\t\t\t\tthis.context.isAssignmentTarget = previousIsAssignmentTarget;\r\n\t\t\t\t\t\t\t\t\tthis.context.firstCoverInitializedNameError = previousFirstCoverInitializedNameError;\r\n\t\t\t\t\t\t\t\t\tif (this.match(',')) {\r\n\t\t\t\t\t\t\t\t\t\tvar initSeq = [init];\r\n\t\t\t\t\t\t\t\t\t\twhile (this.match(',')) {\r\n\t\t\t\t\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\t\t\t\t\tinitSeq.push(this.isolateCoverGrammar(this.parseAssignmentExpression));\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tinit = this.finalize(this.startNode(initStartToken), new Node.SequenceExpression(initSeq));\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tthis.expect(';');\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (typeof left === 'undefined') {\r\n\t\t\t\t\t\t\tif (!this.match(';')) {\r\n\t\t\t\t\t\t\t\ttest = this.isolateCoverGrammar(this.parseExpression);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.expect(';');\r\n\t\t\t\t\t\t\tif (!this.match(')')) {\r\n\t\t\t\t\t\t\t\tupdate = this.isolateCoverGrammar(this.parseExpression);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar body;\r\n\t\t\t\t\t\tif (!this.match(')') && this.config.tolerant) {\r\n\t\t\t\t\t\t\tthis.tolerateUnexpectedToken(this.nextToken());\r\n\t\t\t\t\t\t\tbody = this.finalize(this.createNode(), new Node.EmptyStatement());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.expect(')');\r\n\t\t\t\t\t\t\tvar previousInIteration = this.context.inIteration;\r\n\t\t\t\t\t\t\tthis.context.inIteration = true;\r\n\t\t\t\t\t\t\tbody = this.isolateCoverGrammar(this.parseStatement);\r\n\t\t\t\t\t\t\tthis.context.inIteration = previousInIteration;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn (typeof left === 'undefined') ?\r\n\t\t\t\t\t\t\tthis.finalize(node, new Node.ForStatement(init, test, update, body)) :\r\n\t\t\t\t\t\t\tforIn ? this.finalize(node, new Node.ForInStatement(left, right, body)) :\r\n\t\t\t\t\t\t\t\tthis.finalize(node, new Node.ForOfStatement(left, right, body));\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-continue-statement\r\n\t\t\t\t\tParser.prototype.parseContinueStatement = function () {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tthis.expectKeyword('continue');\r\n\t\t\t\t\t\tvar label = null;\r\n\t\t\t\t\t\tif (this.lookahead.type === 3 /* Identifier */ && !this.hasLineTerminator) {\r\n\t\t\t\t\t\t\tvar id = this.parseVariableIdentifier();\r\n\t\t\t\t\t\t\tlabel = id;\r\n\t\t\t\t\t\t\tvar key = '$' + id.name;\r\n\t\t\t\t\t\t\tif (!Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {\r\n\t\t\t\t\t\t\t\tthis.throwError(messages_1.Messages.UnknownLabel, id.name);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.consumeSemicolon();\r\n\t\t\t\t\t\tif (label === null && !this.context.inIteration) {\r\n\t\t\t\t\t\t\tthis.throwError(messages_1.Messages.IllegalContinue);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.ContinueStatement(label));\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-break-statement\r\n\t\t\t\t\tParser.prototype.parseBreakStatement = function () {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tthis.expectKeyword('break');\r\n\t\t\t\t\t\tvar label = null;\r\n\t\t\t\t\t\tif (this.lookahead.type === 3 /* Identifier */ && !this.hasLineTerminator) {\r\n\t\t\t\t\t\t\tvar id = this.parseVariableIdentifier();\r\n\t\t\t\t\t\t\tvar key = '$' + id.name;\r\n\t\t\t\t\t\t\tif (!Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {\r\n\t\t\t\t\t\t\t\tthis.throwError(messages_1.Messages.UnknownLabel, id.name);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlabel = id;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.consumeSemicolon();\r\n\t\t\t\t\t\tif (label === null && !this.context.inIteration && !this.context.inSwitch) {\r\n\t\t\t\t\t\t\tthis.throwError(messages_1.Messages.IllegalBreak);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.BreakStatement(label));\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-return-statement\r\n\t\t\t\t\tParser.prototype.parseReturnStatement = function () {\r\n\t\t\t\t\t\tif (!this.context.inFunctionBody) {\r\n\t\t\t\t\t\t\tthis.tolerateError(messages_1.Messages.IllegalReturn);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tthis.expectKeyword('return');\r\n\t\t\t\t\t\tvar hasArgument = (!this.match(';') && !this.match('}') &&\r\n\t\t\t\t\t\t\t!this.hasLineTerminator && this.lookahead.type !== 2 /* EOF */) ||\r\n\t\t\t\t\t\t\tthis.lookahead.type === 8 /* StringLiteral */ ||\r\n\t\t\t\t\t\t\tthis.lookahead.type === 10 /* Template */;\r\n\t\t\t\t\t\tvar argument = hasArgument ? this.parseExpression() : null;\r\n\t\t\t\t\t\tthis.consumeSemicolon();\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.ReturnStatement(argument));\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-with-statement\r\n\t\t\t\t\tParser.prototype.parseWithStatement = function () {\r\n\t\t\t\t\t\tif (this.context.strict) {\r\n\t\t\t\t\t\t\tthis.tolerateError(messages_1.Messages.StrictModeWith);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tvar body;\r\n\t\t\t\t\t\tthis.expectKeyword('with');\r\n\t\t\t\t\t\tthis.expect('(');\r\n\t\t\t\t\t\tvar object = this.parseExpression();\r\n\t\t\t\t\t\tif (!this.match(')') && this.config.tolerant) {\r\n\t\t\t\t\t\t\tthis.tolerateUnexpectedToken(this.nextToken());\r\n\t\t\t\t\t\t\tbody = this.finalize(this.createNode(), new Node.EmptyStatement());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.expect(')');\r\n\t\t\t\t\t\t\tbody = this.parseStatement();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.WithStatement(object, body));\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-switch-statement\r\n\t\t\t\t\tParser.prototype.parseSwitchCase = function () {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tvar test;\r\n\t\t\t\t\t\tif (this.matchKeyword('default')) {\r\n\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\ttest = null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.expectKeyword('case');\r\n\t\t\t\t\t\t\ttest = this.parseExpression();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.expect(':');\r\n\t\t\t\t\t\tvar consequent = [];\r\n\t\t\t\t\t\twhile (true) {\r\n\t\t\t\t\t\t\tif (this.match('}') || this.matchKeyword('default') || this.matchKeyword('case')) {\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tconsequent.push(this.parseStatementListItem());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.SwitchCase(test, consequent));\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseSwitchStatement = function () {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tthis.expectKeyword('switch');\r\n\t\t\t\t\t\tthis.expect('(');\r\n\t\t\t\t\t\tvar discriminant = this.parseExpression();\r\n\t\t\t\t\t\tthis.expect(')');\r\n\t\t\t\t\t\tvar previousInSwitch = this.context.inSwitch;\r\n\t\t\t\t\t\tthis.context.inSwitch = true;\r\n\t\t\t\t\t\tvar cases = [];\r\n\t\t\t\t\t\tvar defaultFound = false;\r\n\t\t\t\t\t\tthis.expect('{');\r\n\t\t\t\t\t\twhile (true) {\r\n\t\t\t\t\t\t\tif (this.match('}')) {\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvar clause = this.parseSwitchCase();\r\n\t\t\t\t\t\t\tif (clause.test === null) {\r\n\t\t\t\t\t\t\t\tif (defaultFound) {\r\n\t\t\t\t\t\t\t\t\tthis.throwError(messages_1.Messages.MultipleDefaultsInSwitch);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tdefaultFound = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcases.push(clause);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.expect('}');\r\n\t\t\t\t\t\tthis.context.inSwitch = previousInSwitch;\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.SwitchStatement(discriminant, cases));\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-labelled-statements\r\n\t\t\t\t\tParser.prototype.parseLabelledStatement = function () {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tvar expr = this.parseExpression();\r\n\t\t\t\t\t\tvar statement;\r\n\t\t\t\t\t\tif ((expr.type === syntax_1.Syntax.Identifier) && this.match(':')) {\r\n\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\tvar id = expr;\r\n\t\t\t\t\t\t\tvar key = '$' + id.name;\r\n\t\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {\r\n\t\t\t\t\t\t\t\tthis.throwError(messages_1.Messages.Redeclaration, 'Label', id.name);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.context.labelSet[key] = true;\r\n\t\t\t\t\t\t\tvar body = void 0;\r\n\t\t\t\t\t\t\tif (this.matchKeyword('class')) {\r\n\t\t\t\t\t\t\t\tthis.tolerateUnexpectedToken(this.lookahead);\r\n\t\t\t\t\t\t\t\tbody = this.parseClassDeclaration();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (this.matchKeyword('function')) {\r\n\t\t\t\t\t\t\t\tvar token = this.lookahead;\r\n\t\t\t\t\t\t\t\tvar declaration = this.parseFunctionDeclaration();\r\n\t\t\t\t\t\t\t\tif (this.context.strict) {\r\n\t\t\t\t\t\t\t\t\tthis.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunction);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse if (declaration.generator) {\r\n\t\t\t\t\t\t\t\t\tthis.tolerateUnexpectedToken(token, messages_1.Messages.GeneratorInLegacyContext);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbody = declaration;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tbody = this.parseStatement();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tdelete this.context.labelSet[key];\r\n\t\t\t\t\t\t\tstatement = new Node.LabeledStatement(id, body);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.consumeSemicolon();\r\n\t\t\t\t\t\t\tstatement = new Node.ExpressionStatement(expr);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn this.finalize(node, statement);\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-throw-statement\r\n\t\t\t\t\tParser.prototype.parseThrowStatement = function () {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tthis.expectKeyword('throw');\r\n\t\t\t\t\t\tif (this.hasLineTerminator) {\r\n\t\t\t\t\t\t\tthis.throwError(messages_1.Messages.NewlineAfterThrow);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar argument = this.parseExpression();\r\n\t\t\t\t\t\tthis.consumeSemicolon();\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.ThrowStatement(argument));\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-try-statement\r\n\t\t\t\t\tParser.prototype.parseCatchClause = function () {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tthis.expectKeyword('catch');\r\n\t\t\t\t\t\tthis.expect('(');\r\n\t\t\t\t\t\tif (this.match(')')) {\r\n\t\t\t\t\t\t\tthis.throwUnexpectedToken(this.lookahead);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar params = [];\r\n\t\t\t\t\t\tvar param = this.parsePattern(params);\r\n\t\t\t\t\t\tvar paramMap = {};\r\n\t\t\t\t\t\tfor (var i = 0; i < params.length; i++) {\r\n\t\t\t\t\t\t\tvar key = '$' + params[i].value;\r\n\t\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(paramMap, key)) {\r\n\t\t\t\t\t\t\t\tthis.tolerateError(messages_1.Messages.DuplicateBinding, params[i].value);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tparamMap[key] = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (this.context.strict && param.type === syntax_1.Syntax.Identifier) {\r\n\t\t\t\t\t\t\tif (this.scanner.isRestrictedWord(param.name)) {\r\n\t\t\t\t\t\t\t\tthis.tolerateError(messages_1.Messages.StrictCatchVariable);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.expect(')');\r\n\t\t\t\t\t\tvar body = this.parseBlock();\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.CatchClause(param, body));\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseFinallyClause = function () {\r\n\t\t\t\t\t\tthis.expectKeyword('finally');\r\n\t\t\t\t\t\treturn this.parseBlock();\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseTryStatement = function () {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tthis.expectKeyword('try');\r\n\t\t\t\t\t\tvar block = this.parseBlock();\r\n\t\t\t\t\t\tvar handler = this.matchKeyword('catch') ? this.parseCatchClause() : null;\r\n\t\t\t\t\t\tvar finalizer = this.matchKeyword('finally') ? this.parseFinallyClause() : null;\r\n\t\t\t\t\t\tif (!handler && !finalizer) {\r\n\t\t\t\t\t\t\tthis.throwError(messages_1.Messages.NoCatchOrFinally);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.TryStatement(block, handler, finalizer));\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-debugger-statement\r\n\t\t\t\t\tParser.prototype.parseDebuggerStatement = function () {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tthis.expectKeyword('debugger');\r\n\t\t\t\t\t\tthis.consumeSemicolon();\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.DebuggerStatement());\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-ecmascript-language-statements-and-declarations\r\n\t\t\t\t\tParser.prototype.parseStatement = function () {\r\n\t\t\t\t\t\tvar statement;\r\n\t\t\t\t\t\tswitch (this.lookahead.type) {\r\n\t\t\t\t\t\t\tcase 1 /* BooleanLiteral */:\r\n\t\t\t\t\t\t\tcase 5 /* NullLiteral */:\r\n\t\t\t\t\t\t\tcase 6 /* NumericLiteral */:\r\n\t\t\t\t\t\t\tcase 8 /* StringLiteral */:\r\n\t\t\t\t\t\t\tcase 10 /* Template */:\r\n\t\t\t\t\t\t\tcase 9 /* RegularExpression */:\r\n\t\t\t\t\t\t\t\tstatement = this.parseExpressionStatement();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 7 /* Punctuator */:\r\n\t\t\t\t\t\t\t\tvar value = this.lookahead.value;\r\n\t\t\t\t\t\t\t\tif (value === '{') {\r\n\t\t\t\t\t\t\t\t\tstatement = this.parseBlock();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse if (value === '(') {\r\n\t\t\t\t\t\t\t\t\tstatement = this.parseExpressionStatement();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse if (value === ';') {\r\n\t\t\t\t\t\t\t\t\tstatement = this.parseEmptyStatement();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tstatement = this.parseExpressionStatement();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 3 /* Identifier */:\r\n\t\t\t\t\t\t\t\tstatement = this.matchAsyncFunction() ? this.parseFunctionDeclaration() : this.parseLabelledStatement();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 4 /* Keyword */:\r\n\t\t\t\t\t\t\t\tswitch (this.lookahead.value) {\r\n\t\t\t\t\t\t\t\t\tcase 'break':\r\n\t\t\t\t\t\t\t\t\t\tstatement = this.parseBreakStatement();\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tcase 'continue':\r\n\t\t\t\t\t\t\t\t\t\tstatement = this.parseContinueStatement();\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tcase 'debugger':\r\n\t\t\t\t\t\t\t\t\t\tstatement = this.parseDebuggerStatement();\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tcase 'do':\r\n\t\t\t\t\t\t\t\t\t\tstatement = this.parseDoWhileStatement();\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tcase 'for':\r\n\t\t\t\t\t\t\t\t\t\tstatement = this.parseForStatement();\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tcase 'function':\r\n\t\t\t\t\t\t\t\t\t\tstatement = this.parseFunctionDeclaration();\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tcase 'if':\r\n\t\t\t\t\t\t\t\t\t\tstatement = this.parseIfStatement();\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tcase 'return':\r\n\t\t\t\t\t\t\t\t\t\tstatement = this.parseReturnStatement();\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tcase 'switch':\r\n\t\t\t\t\t\t\t\t\t\tstatement = this.parseSwitchStatement();\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tcase 'throw':\r\n\t\t\t\t\t\t\t\t\t\tstatement = this.parseThrowStatement();\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tcase 'try':\r\n\t\t\t\t\t\t\t\t\t\tstatement = this.parseTryStatement();\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tcase 'var':\r\n\t\t\t\t\t\t\t\t\t\tstatement = this.parseVariableStatement();\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tcase 'while':\r\n\t\t\t\t\t\t\t\t\t\tstatement = this.parseWhileStatement();\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tcase 'with':\r\n\t\t\t\t\t\t\t\t\t\tstatement = this.parseWithStatement();\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\tstatement = this.parseExpressionStatement();\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tstatement = this.throwUnexpectedToken(this.lookahead);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn statement;\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-function-definitions\r\n\t\t\t\t\tParser.prototype.parseFunctionSourceElements = function () {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tthis.expect('{');\r\n\t\t\t\t\t\tvar body = this.parseDirectivePrologues();\r\n\t\t\t\t\t\tvar previousLabelSet = this.context.labelSet;\r\n\t\t\t\t\t\tvar previousInIteration = this.context.inIteration;\r\n\t\t\t\t\t\tvar previousInSwitch = this.context.inSwitch;\r\n\t\t\t\t\t\tvar previousInFunctionBody = this.context.inFunctionBody;\r\n\t\t\t\t\t\tthis.context.labelSet = {};\r\n\t\t\t\t\t\tthis.context.inIteration = false;\r\n\t\t\t\t\t\tthis.context.inSwitch = false;\r\n\t\t\t\t\t\tthis.context.inFunctionBody = true;\r\n\t\t\t\t\t\twhile (this.lookahead.type !== 2 /* EOF */) {\r\n\t\t\t\t\t\t\tif (this.match('}')) {\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbody.push(this.parseStatementListItem());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.expect('}');\r\n\t\t\t\t\t\tthis.context.labelSet = previousLabelSet;\r\n\t\t\t\t\t\tthis.context.inIteration = previousInIteration;\r\n\t\t\t\t\t\tthis.context.inSwitch = previousInSwitch;\r\n\t\t\t\t\t\tthis.context.inFunctionBody = previousInFunctionBody;\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.BlockStatement(body));\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.validateParam = function (options, param, name) {\r\n\t\t\t\t\t\tvar key = '$' + name;\r\n\t\t\t\t\t\tif (this.context.strict) {\r\n\t\t\t\t\t\t\tif (this.scanner.isRestrictedWord(name)) {\r\n\t\t\t\t\t\t\t\toptions.stricted = param;\r\n\t\t\t\t\t\t\t\toptions.message = messages_1.Messages.StrictParamName;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(options.paramSet, key)) {\r\n\t\t\t\t\t\t\t\toptions.stricted = param;\r\n\t\t\t\t\t\t\t\toptions.message = messages_1.Messages.StrictParamDupe;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (!options.firstRestricted) {\r\n\t\t\t\t\t\t\tif (this.scanner.isRestrictedWord(name)) {\r\n\t\t\t\t\t\t\t\toptions.firstRestricted = param;\r\n\t\t\t\t\t\t\t\toptions.message = messages_1.Messages.StrictParamName;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (this.scanner.isStrictModeReservedWord(name)) {\r\n\t\t\t\t\t\t\t\toptions.firstRestricted = param;\r\n\t\t\t\t\t\t\t\toptions.message = messages_1.Messages.StrictReservedWord;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (Object.prototype.hasOwnProperty.call(options.paramSet, key)) {\r\n\t\t\t\t\t\t\t\toptions.stricted = param;\r\n\t\t\t\t\t\t\t\toptions.message = messages_1.Messages.StrictParamDupe;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/* istanbul ignore next */\r\n\t\t\t\t\t\tif (typeof Object.defineProperty === 'function') {\r\n\t\t\t\t\t\t\tObject.defineProperty(options.paramSet, key, { value: true, enumerable: true, writable: true, configurable: true });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\toptions.paramSet[key] = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseRestElement = function (params) {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tthis.expect('...');\r\n\t\t\t\t\t\tvar arg = this.parsePattern(params);\r\n\t\t\t\t\t\tif (this.match('=')) {\r\n\t\t\t\t\t\t\tthis.throwError(messages_1.Messages.DefaultRestParameter);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!this.match(')')) {\r\n\t\t\t\t\t\t\tthis.throwError(messages_1.Messages.ParameterAfterRestParameter);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.RestElement(arg));\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseFormalParameter = function (options) {\r\n\t\t\t\t\t\tvar params = [];\r\n\t\t\t\t\t\tvar param = this.match('...') ? this.parseRestElement(params) : this.parsePatternWithDefault(params);\r\n\t\t\t\t\t\tfor (var i = 0; i < params.length; i++) {\r\n\t\t\t\t\t\t\tthis.validateParam(options, params[i], params[i].value);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\toptions.simple = options.simple && (param instanceof Node.Identifier);\r\n\t\t\t\t\t\toptions.params.push(param);\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseFormalParameters = function (firstRestricted) {\r\n\t\t\t\t\t\tvar options = {\r\n\t\t\t\t\t\t\tsimple: true,\r\n\t\t\t\t\t\t\tparams: [],\r\n\t\t\t\t\t\t\tfirstRestricted: firstRestricted\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tthis.expect('(');\r\n\t\t\t\t\t\tif (!this.match(')')) {\r\n\t\t\t\t\t\t\toptions.paramSet = {};\r\n\t\t\t\t\t\t\twhile (this.lookahead.type !== 2 /* EOF */) {\r\n\t\t\t\t\t\t\t\tthis.parseFormalParameter(options);\r\n\t\t\t\t\t\t\t\tif (this.match(')')) {\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tthis.expect(',');\r\n\t\t\t\t\t\t\t\tif (this.match(')')) {\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.expect(')');\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tsimple: options.simple,\r\n\t\t\t\t\t\t\tparams: options.params,\r\n\t\t\t\t\t\t\tstricted: options.stricted,\r\n\t\t\t\t\t\t\tfirstRestricted: options.firstRestricted,\r\n\t\t\t\t\t\t\tmessage: options.message\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.matchAsyncFunction = function () {\r\n\t\t\t\t\t\tvar match = this.matchContextualKeyword('async');\r\n\t\t\t\t\t\tif (match) {\r\n\t\t\t\t\t\t\tvar state = this.scanner.saveState();\r\n\t\t\t\t\t\t\tthis.scanner.scanComments();\r\n\t\t\t\t\t\t\tvar next = this.scanner.lex();\r\n\t\t\t\t\t\t\tthis.scanner.restoreState(state);\r\n\t\t\t\t\t\t\tmatch = (state.lineNumber === next.lineNumber) && (next.type === 4 /* Keyword */) && (next.value === 'function');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn match;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseFunctionDeclaration = function (identifierIsOptional) {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tvar isAsync = this.matchContextualKeyword('async');\r\n\t\t\t\t\t\tif (isAsync) {\r\n\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.expectKeyword('function');\r\n\t\t\t\t\t\tvar isGenerator = isAsync ? false : this.match('*');\r\n\t\t\t\t\t\tif (isGenerator) {\r\n\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar message;\r\n\t\t\t\t\t\tvar id = null;\r\n\t\t\t\t\t\tvar firstRestricted = null;\r\n\t\t\t\t\t\tif (!identifierIsOptional || !this.match('(')) {\r\n\t\t\t\t\t\t\tvar token = this.lookahead;\r\n\t\t\t\t\t\t\tid = this.parseVariableIdentifier();\r\n\t\t\t\t\t\t\tif (this.context.strict) {\r\n\t\t\t\t\t\t\t\tif (this.scanner.isRestrictedWord(token.value)) {\r\n\t\t\t\t\t\t\t\t\tthis.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunctionName);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tif (this.scanner.isRestrictedWord(token.value)) {\r\n\t\t\t\t\t\t\t\t\tfirstRestricted = token;\r\n\t\t\t\t\t\t\t\t\tmessage = messages_1.Messages.StrictFunctionName;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse if (this.scanner.isStrictModeReservedWord(token.value)) {\r\n\t\t\t\t\t\t\t\t\tfirstRestricted = token;\r\n\t\t\t\t\t\t\t\t\tmessage = messages_1.Messages.StrictReservedWord;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar previousAllowAwait = this.context.await;\r\n\t\t\t\t\t\tvar previousAllowYield = this.context.allowYield;\r\n\t\t\t\t\t\tthis.context.await = isAsync;\r\n\t\t\t\t\t\tthis.context.allowYield = !isGenerator;\r\n\t\t\t\t\t\tvar formalParameters = this.parseFormalParameters(firstRestricted);\r\n\t\t\t\t\t\tvar params = formalParameters.params;\r\n\t\t\t\t\t\tvar stricted = formalParameters.stricted;\r\n\t\t\t\t\t\tfirstRestricted = formalParameters.firstRestricted;\r\n\t\t\t\t\t\tif (formalParameters.message) {\r\n\t\t\t\t\t\t\tmessage = formalParameters.message;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar previousStrict = this.context.strict;\r\n\t\t\t\t\t\tvar previousAllowStrictDirective = this.context.allowStrictDirective;\r\n\t\t\t\t\t\tthis.context.allowStrictDirective = formalParameters.simple;\r\n\t\t\t\t\t\tvar body = this.parseFunctionSourceElements();\r\n\t\t\t\t\t\tif (this.context.strict && firstRestricted) {\r\n\t\t\t\t\t\t\tthis.throwUnexpectedToken(firstRestricted, message);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (this.context.strict && stricted) {\r\n\t\t\t\t\t\t\tthis.tolerateUnexpectedToken(stricted, message);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.context.strict = previousStrict;\r\n\t\t\t\t\t\tthis.context.allowStrictDirective = previousAllowStrictDirective;\r\n\t\t\t\t\t\tthis.context.await = previousAllowAwait;\r\n\t\t\t\t\t\tthis.context.allowYield = previousAllowYield;\r\n\t\t\t\t\t\treturn isAsync ? this.finalize(node, new Node.AsyncFunctionDeclaration(id, params, body)) :\r\n\t\t\t\t\t\t\tthis.finalize(node, new Node.FunctionDeclaration(id, params, body, isGenerator));\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseFunctionExpression = function () {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tvar isAsync = this.matchContextualKeyword('async');\r\n\t\t\t\t\t\tif (isAsync) {\r\n\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.expectKeyword('function');\r\n\t\t\t\t\t\tvar isGenerator = isAsync ? false : this.match('*');\r\n\t\t\t\t\t\tif (isGenerator) {\r\n\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar message;\r\n\t\t\t\t\t\tvar id = null;\r\n\t\t\t\t\t\tvar firstRestricted;\r\n\t\t\t\t\t\tvar previousAllowAwait = this.context.await;\r\n\t\t\t\t\t\tvar previousAllowYield = this.context.allowYield;\r\n\t\t\t\t\t\tthis.context.await = isAsync;\r\n\t\t\t\t\t\tthis.context.allowYield = !isGenerator;\r\n\t\t\t\t\t\tif (!this.match('(')) {\r\n\t\t\t\t\t\t\tvar token = this.lookahead;\r\n\t\t\t\t\t\t\tid = (!this.context.strict && !isGenerator && this.matchKeyword('yield')) ? this.parseIdentifierName() : this.parseVariableIdentifier();\r\n\t\t\t\t\t\t\tif (this.context.strict) {\r\n\t\t\t\t\t\t\t\tif (this.scanner.isRestrictedWord(token.value)) {\r\n\t\t\t\t\t\t\t\t\tthis.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunctionName);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tif (this.scanner.isRestrictedWord(token.value)) {\r\n\t\t\t\t\t\t\t\t\tfirstRestricted = token;\r\n\t\t\t\t\t\t\t\t\tmessage = messages_1.Messages.StrictFunctionName;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse if (this.scanner.isStrictModeReservedWord(token.value)) {\r\n\t\t\t\t\t\t\t\t\tfirstRestricted = token;\r\n\t\t\t\t\t\t\t\t\tmessage = messages_1.Messages.StrictReservedWord;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar formalParameters = this.parseFormalParameters(firstRestricted);\r\n\t\t\t\t\t\tvar params = formalParameters.params;\r\n\t\t\t\t\t\tvar stricted = formalParameters.stricted;\r\n\t\t\t\t\t\tfirstRestricted = formalParameters.firstRestricted;\r\n\t\t\t\t\t\tif (formalParameters.message) {\r\n\t\t\t\t\t\t\tmessage = formalParameters.message;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar previousStrict = this.context.strict;\r\n\t\t\t\t\t\tvar previousAllowStrictDirective = this.context.allowStrictDirective;\r\n\t\t\t\t\t\tthis.context.allowStrictDirective = formalParameters.simple;\r\n\t\t\t\t\t\tvar body = this.parseFunctionSourceElements();\r\n\t\t\t\t\t\tif (this.context.strict && firstRestricted) {\r\n\t\t\t\t\t\t\tthis.throwUnexpectedToken(firstRestricted, message);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (this.context.strict && stricted) {\r\n\t\t\t\t\t\t\tthis.tolerateUnexpectedToken(stricted, message);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.context.strict = previousStrict;\r\n\t\t\t\t\t\tthis.context.allowStrictDirective = previousAllowStrictDirective;\r\n\t\t\t\t\t\tthis.context.await = previousAllowAwait;\r\n\t\t\t\t\t\tthis.context.allowYield = previousAllowYield;\r\n\t\t\t\t\t\treturn isAsync ? this.finalize(node, new Node.AsyncFunctionExpression(id, params, body)) :\r\n\t\t\t\t\t\t\tthis.finalize(node, new Node.FunctionExpression(id, params, body, isGenerator));\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-directive-prologues-and-the-use-strict-directive\r\n\t\t\t\t\tParser.prototype.parseDirective = function () {\r\n\t\t\t\t\t\tvar token = this.lookahead;\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tvar expr = this.parseExpression();\r\n\t\t\t\t\t\tvar directive = (expr.type === syntax_1.Syntax.Literal) ? this.getTokenRaw(token).slice(1, -1) : null;\r\n\t\t\t\t\t\tthis.consumeSemicolon();\r\n\t\t\t\t\t\treturn this.finalize(node, directive ? new Node.Directive(expr, directive) : new Node.ExpressionStatement(expr));\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseDirectivePrologues = function () {\r\n\t\t\t\t\t\tvar firstRestricted = null;\r\n\t\t\t\t\t\tvar body = [];\r\n\t\t\t\t\t\twhile (true) {\r\n\t\t\t\t\t\t\tvar token = this.lookahead;\r\n\t\t\t\t\t\t\tif (token.type !== 8 /* StringLiteral */) {\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvar statement = this.parseDirective();\r\n\t\t\t\t\t\t\tbody.push(statement);\r\n\t\t\t\t\t\t\tvar directive = statement.directive;\r\n\t\t\t\t\t\t\tif (typeof directive !== 'string') {\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (directive === 'use strict') {\r\n\t\t\t\t\t\t\t\tthis.context.strict = true;\r\n\t\t\t\t\t\t\t\tif (firstRestricted) {\r\n\t\t\t\t\t\t\t\t\tthis.tolerateUnexpectedToken(firstRestricted, messages_1.Messages.StrictOctalLiteral);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (!this.context.allowStrictDirective) {\r\n\t\t\t\t\t\t\t\t\tthis.tolerateUnexpectedToken(token, messages_1.Messages.IllegalLanguageModeDirective);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tif (!firstRestricted && token.octal) {\r\n\t\t\t\t\t\t\t\t\tfirstRestricted = token;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn body;\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-method-definitions\r\n\t\t\t\t\tParser.prototype.qualifiedPropertyName = function (token) {\r\n\t\t\t\t\t\tswitch (token.type) {\r\n\t\t\t\t\t\t\tcase 3 /* Identifier */:\r\n\t\t\t\t\t\t\tcase 8 /* StringLiteral */:\r\n\t\t\t\t\t\t\tcase 1 /* BooleanLiteral */:\r\n\t\t\t\t\t\t\tcase 5 /* NullLiteral */:\r\n\t\t\t\t\t\t\tcase 6 /* NumericLiteral */:\r\n\t\t\t\t\t\t\tcase 4 /* Keyword */:\r\n\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\tcase 7 /* Punctuator */:\r\n\t\t\t\t\t\t\t\treturn token.value === '[';\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseGetterMethod = function () {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tvar isGenerator = false;\r\n\t\t\t\t\t\tvar previousAllowYield = this.context.allowYield;\r\n\t\t\t\t\t\tthis.context.allowYield = !isGenerator;\r\n\t\t\t\t\t\tvar formalParameters = this.parseFormalParameters();\r\n\t\t\t\t\t\tif (formalParameters.params.length > 0) {\r\n\t\t\t\t\t\t\tthis.tolerateError(messages_1.Messages.BadGetterArity);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar method = this.parsePropertyMethod(formalParameters);\r\n\t\t\t\t\t\tthis.context.allowYield = previousAllowYield;\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.FunctionExpression(null, formalParameters.params, method, isGenerator));\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseSetterMethod = function () {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tvar isGenerator = false;\r\n\t\t\t\t\t\tvar previousAllowYield = this.context.allowYield;\r\n\t\t\t\t\t\tthis.context.allowYield = !isGenerator;\r\n\t\t\t\t\t\tvar formalParameters = this.parseFormalParameters();\r\n\t\t\t\t\t\tif (formalParameters.params.length !== 1) {\r\n\t\t\t\t\t\t\tthis.tolerateError(messages_1.Messages.BadSetterArity);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (formalParameters.params[0] instanceof Node.RestElement) {\r\n\t\t\t\t\t\t\tthis.tolerateError(messages_1.Messages.BadSetterRestParameter);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar method = this.parsePropertyMethod(formalParameters);\r\n\t\t\t\t\t\tthis.context.allowYield = previousAllowYield;\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.FunctionExpression(null, formalParameters.params, method, isGenerator));\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseGeneratorMethod = function () {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tvar isGenerator = true;\r\n\t\t\t\t\t\tvar previousAllowYield = this.context.allowYield;\r\n\t\t\t\t\t\tthis.context.allowYield = true;\r\n\t\t\t\t\t\tvar params = this.parseFormalParameters();\r\n\t\t\t\t\t\tthis.context.allowYield = false;\r\n\t\t\t\t\t\tvar method = this.parsePropertyMethod(params);\r\n\t\t\t\t\t\tthis.context.allowYield = previousAllowYield;\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.FunctionExpression(null, params.params, method, isGenerator));\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-generator-function-definitions\r\n\t\t\t\t\tParser.prototype.isStartOfExpression = function () {\r\n\t\t\t\t\t\tvar start = true;\r\n\t\t\t\t\t\tvar value = this.lookahead.value;\r\n\t\t\t\t\t\tswitch (this.lookahead.type) {\r\n\t\t\t\t\t\t\tcase 7 /* Punctuator */:\r\n\t\t\t\t\t\t\t\tstart = (value === '[') || (value === '(') || (value === '{') ||\r\n\t\t\t\t\t\t\t\t\t(value === '+') || (value === '-') ||\r\n\t\t\t\t\t\t\t\t\t(value === '!') || (value === '~') ||\r\n\t\t\t\t\t\t\t\t\t(value === '++') || (value === '--') ||\r\n\t\t\t\t\t\t\t\t\t(value === '/') || (value === '/='); // regular expression literal\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 4 /* Keyword */:\r\n\t\t\t\t\t\t\t\tstart = (value === 'class') || (value === 'delete') ||\r\n\t\t\t\t\t\t\t\t\t(value === 'function') || (value === 'let') || (value === 'new') ||\r\n\t\t\t\t\t\t\t\t\t(value === 'super') || (value === 'this') || (value === 'typeof') ||\r\n\t\t\t\t\t\t\t\t\t(value === 'void') || (value === 'yield');\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn start;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseYieldExpression = function () {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tthis.expectKeyword('yield');\r\n\t\t\t\t\t\tvar argument = null;\r\n\t\t\t\t\t\tvar delegate = false;\r\n\t\t\t\t\t\tif (!this.hasLineTerminator) {\r\n\t\t\t\t\t\t\tvar previousAllowYield = this.context.allowYield;\r\n\t\t\t\t\t\t\tthis.context.allowYield = false;\r\n\t\t\t\t\t\t\tdelegate = this.match('*');\r\n\t\t\t\t\t\t\tif (delegate) {\r\n\t\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\t\targument = this.parseAssignmentExpression();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (this.isStartOfExpression()) {\r\n\t\t\t\t\t\t\t\targument = this.parseAssignmentExpression();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.context.allowYield = previousAllowYield;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.YieldExpression(argument, delegate));\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-class-definitions\r\n\t\t\t\t\tParser.prototype.parseClassElement = function (hasConstructor) {\r\n\t\t\t\t\t\tvar token = this.lookahead;\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tvar kind = '';\r\n\t\t\t\t\t\tvar key = null;\r\n\t\t\t\t\t\tvar value = null;\r\n\t\t\t\t\t\tvar computed = false;\r\n\t\t\t\t\t\tvar method = false;\r\n\t\t\t\t\t\tvar isStatic = false;\r\n\t\t\t\t\t\tvar isAsync = false;\r\n\t\t\t\t\t\tif (this.match('*')) {\r\n\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tcomputed = this.match('[');\r\n\t\t\t\t\t\t\tkey = this.parseObjectPropertyKey();\r\n\t\t\t\t\t\t\tvar id = key;\r\n\t\t\t\t\t\t\tif (id.name === 'static' && (this.qualifiedPropertyName(this.lookahead) || this.match('*'))) {\r\n\t\t\t\t\t\t\t\ttoken = this.lookahead;\r\n\t\t\t\t\t\t\t\tisStatic = true;\r\n\t\t\t\t\t\t\t\tcomputed = this.match('[');\r\n\t\t\t\t\t\t\t\tif (this.match('*')) {\r\n\t\t\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tkey = this.parseObjectPropertyKey();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif ((token.type === 3 /* Identifier */) && !this.hasLineTerminator && (token.value === 'async')) {\r\n\t\t\t\t\t\t\t\tvar punctuator = this.lookahead.value;\r\n\t\t\t\t\t\t\t\tif (punctuator !== ':' && punctuator !== '(' && punctuator !== '*') {\r\n\t\t\t\t\t\t\t\t\tisAsync = true;\r\n\t\t\t\t\t\t\t\t\ttoken = this.lookahead;\r\n\t\t\t\t\t\t\t\t\tkey = this.parseObjectPropertyKey();\r\n\t\t\t\t\t\t\t\t\tif (token.type === 3 /* Identifier */ && token.value === 'constructor') {\r\n\t\t\t\t\t\t\t\t\t\tthis.tolerateUnexpectedToken(token, messages_1.Messages.ConstructorIsAsync);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar lookaheadPropertyKey = this.qualifiedPropertyName(this.lookahead);\r\n\t\t\t\t\t\tif (token.type === 3 /* Identifier */) {\r\n\t\t\t\t\t\t\tif (token.value === 'get' && lookaheadPropertyKey) {\r\n\t\t\t\t\t\t\t\tkind = 'get';\r\n\t\t\t\t\t\t\t\tcomputed = this.match('[');\r\n\t\t\t\t\t\t\t\tkey = this.parseObjectPropertyKey();\r\n\t\t\t\t\t\t\t\tthis.context.allowYield = false;\r\n\t\t\t\t\t\t\t\tvalue = this.parseGetterMethod();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (token.value === 'set' && lookaheadPropertyKey) {\r\n\t\t\t\t\t\t\t\tkind = 'set';\r\n\t\t\t\t\t\t\t\tcomputed = this.match('[');\r\n\t\t\t\t\t\t\t\tkey = this.parseObjectPropertyKey();\r\n\t\t\t\t\t\t\t\tvalue = this.parseSetterMethod();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (token.type === 7 /* Punctuator */ && token.value === '*' && lookaheadPropertyKey) {\r\n\t\t\t\t\t\t\tkind = 'init';\r\n\t\t\t\t\t\t\tcomputed = this.match('[');\r\n\t\t\t\t\t\t\tkey = this.parseObjectPropertyKey();\r\n\t\t\t\t\t\t\tvalue = this.parseGeneratorMethod();\r\n\t\t\t\t\t\t\tmethod = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!kind && key && this.match('(')) {\r\n\t\t\t\t\t\t\tkind = 'init';\r\n\t\t\t\t\t\t\tvalue = isAsync ? this.parsePropertyMethodAsyncFunction() : this.parsePropertyMethodFunction();\r\n\t\t\t\t\t\t\tmethod = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!kind) {\r\n\t\t\t\t\t\t\tthis.throwUnexpectedToken(this.lookahead);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (kind === 'init') {\r\n\t\t\t\t\t\t\tkind = 'method';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!computed) {\r\n\t\t\t\t\t\t\tif (isStatic && this.isPropertyKey(key, 'prototype')) {\r\n\t\t\t\t\t\t\t\tthis.throwUnexpectedToken(token, messages_1.Messages.StaticPrototype);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (!isStatic && this.isPropertyKey(key, 'constructor')) {\r\n\t\t\t\t\t\t\t\tif (kind !== 'method' || !method || (value && value.generator)) {\r\n\t\t\t\t\t\t\t\t\tthis.throwUnexpectedToken(token, messages_1.Messages.ConstructorSpecialMethod);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (hasConstructor.value) {\r\n\t\t\t\t\t\t\t\t\tthis.throwUnexpectedToken(token, messages_1.Messages.DuplicateConstructor);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\thasConstructor.value = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tkind = 'constructor';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.MethodDefinition(key, computed, value, kind, isStatic));\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseClassElementList = function () {\r\n\t\t\t\t\t\tvar body = [];\r\n\t\t\t\t\t\tvar hasConstructor = { value: false };\r\n\t\t\t\t\t\tthis.expect('{');\r\n\t\t\t\t\t\twhile (!this.match('}')) {\r\n\t\t\t\t\t\t\tif (this.match(';')) {\r\n\t\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tbody.push(this.parseClassElement(hasConstructor));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.expect('}');\r\n\t\t\t\t\t\treturn body;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseClassBody = function () {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tvar elementList = this.parseClassElementList();\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.ClassBody(elementList));\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseClassDeclaration = function (identifierIsOptional) {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tvar previousStrict = this.context.strict;\r\n\t\t\t\t\t\tthis.context.strict = true;\r\n\t\t\t\t\t\tthis.expectKeyword('class');\r\n\t\t\t\t\t\tvar id = (identifierIsOptional && (this.lookahead.type !== 3 /* Identifier */)) ? null : this.parseVariableIdentifier();\r\n\t\t\t\t\t\tvar superClass = null;\r\n\t\t\t\t\t\tif (this.matchKeyword('extends')) {\r\n\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\tsuperClass = this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar classBody = this.parseClassBody();\r\n\t\t\t\t\t\tthis.context.strict = previousStrict;\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.ClassDeclaration(id, superClass, classBody));\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseClassExpression = function () {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tvar previousStrict = this.context.strict;\r\n\t\t\t\t\t\tthis.context.strict = true;\r\n\t\t\t\t\t\tthis.expectKeyword('class');\r\n\t\t\t\t\t\tvar id = (this.lookahead.type === 3 /* Identifier */) ? this.parseVariableIdentifier() : null;\r\n\t\t\t\t\t\tvar superClass = null;\r\n\t\t\t\t\t\tif (this.matchKeyword('extends')) {\r\n\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\tsuperClass = this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar classBody = this.parseClassBody();\r\n\t\t\t\t\t\tthis.context.strict = previousStrict;\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.ClassExpression(id, superClass, classBody));\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-scripts\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-modules\r\n\t\t\t\t\tParser.prototype.parseModule = function () {\r\n\t\t\t\t\t\tthis.context.strict = true;\r\n\t\t\t\t\t\tthis.context.isModule = true;\r\n\t\t\t\t\t\tthis.scanner.isModule = true;\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tvar body = this.parseDirectivePrologues();\r\n\t\t\t\t\t\twhile (this.lookahead.type !== 2 /* EOF */) {\r\n\t\t\t\t\t\t\tbody.push(this.parseStatementListItem());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.Module(body));\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseScript = function () {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tvar body = this.parseDirectivePrologues();\r\n\t\t\t\t\t\twhile (this.lookahead.type !== 2 /* EOF */) {\r\n\t\t\t\t\t\t\tbody.push(this.parseStatementListItem());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.Script(body));\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-imports\r\n\t\t\t\t\tParser.prototype.parseModuleSpecifier = function () {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tif (this.lookahead.type !== 8 /* StringLiteral */) {\r\n\t\t\t\t\t\t\tthis.throwError(messages_1.Messages.InvalidModuleSpecifier);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar token = this.nextToken();\r\n\t\t\t\t\t\tvar raw = this.getTokenRaw(token);\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.Literal(token.value, raw));\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// import {<foo as bar>} ...;\r\n\t\t\t\t\tParser.prototype.parseImportSpecifier = function () {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tvar imported;\r\n\t\t\t\t\t\tvar local;\r\n\t\t\t\t\t\tif (this.lookahead.type === 3 /* Identifier */) {\r\n\t\t\t\t\t\t\timported = this.parseVariableIdentifier();\r\n\t\t\t\t\t\t\tlocal = imported;\r\n\t\t\t\t\t\t\tif (this.matchContextualKeyword('as')) {\r\n\t\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\t\tlocal = this.parseVariableIdentifier();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\timported = this.parseIdentifierName();\r\n\t\t\t\t\t\t\tlocal = imported;\r\n\t\t\t\t\t\t\tif (this.matchContextualKeyword('as')) {\r\n\t\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\t\tlocal = this.parseVariableIdentifier();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tthis.throwUnexpectedToken(this.nextToken());\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.ImportSpecifier(local, imported));\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// {foo, bar as bas}\r\n\t\t\t\t\tParser.prototype.parseNamedImports = function () {\r\n\t\t\t\t\t\tthis.expect('{');\r\n\t\t\t\t\t\tvar specifiers = [];\r\n\t\t\t\t\t\twhile (!this.match('}')) {\r\n\t\t\t\t\t\t\tspecifiers.push(this.parseImportSpecifier());\r\n\t\t\t\t\t\t\tif (!this.match('}')) {\r\n\t\t\t\t\t\t\t\tthis.expect(',');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.expect('}');\r\n\t\t\t\t\t\treturn specifiers;\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// import <foo> ...;\r\n\t\t\t\t\tParser.prototype.parseImportDefaultSpecifier = function () {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tvar local = this.parseIdentifierName();\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.ImportDefaultSpecifier(local));\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// import <* as foo> ...;\r\n\t\t\t\t\tParser.prototype.parseImportNamespaceSpecifier = function () {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tthis.expect('*');\r\n\t\t\t\t\t\tif (!this.matchContextualKeyword('as')) {\r\n\t\t\t\t\t\t\tthis.throwError(messages_1.Messages.NoAsAfterImportNamespace);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\tvar local = this.parseIdentifierName();\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.ImportNamespaceSpecifier(local));\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseImportDeclaration = function () {\r\n\t\t\t\t\t\tif (this.context.inFunctionBody) {\r\n\t\t\t\t\t\t\tthis.throwError(messages_1.Messages.IllegalImportDeclaration);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tthis.expectKeyword('import');\r\n\t\t\t\t\t\tvar src;\r\n\t\t\t\t\t\tvar specifiers = [];\r\n\t\t\t\t\t\tif (this.lookahead.type === 8 /* StringLiteral */) {\r\n\t\t\t\t\t\t\t// import 'foo';\r\n\t\t\t\t\t\t\tsrc = this.parseModuleSpecifier();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tif (this.match('{')) {\r\n\t\t\t\t\t\t\t\t// import {bar}\r\n\t\t\t\t\t\t\t\tspecifiers = specifiers.concat(this.parseNamedImports());\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (this.match('*')) {\r\n\t\t\t\t\t\t\t\t// import * as foo\r\n\t\t\t\t\t\t\t\tspecifiers.push(this.parseImportNamespaceSpecifier());\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (this.isIdentifierName(this.lookahead) && !this.matchKeyword('default')) {\r\n\t\t\t\t\t\t\t\t// import foo\r\n\t\t\t\t\t\t\t\tspecifiers.push(this.parseImportDefaultSpecifier());\r\n\t\t\t\t\t\t\t\tif (this.match(',')) {\r\n\t\t\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\t\t\tif (this.match('*')) {\r\n\t\t\t\t\t\t\t\t\t\t// import foo, * as foo\r\n\t\t\t\t\t\t\t\t\t\tspecifiers.push(this.parseImportNamespaceSpecifier());\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (this.match('{')) {\r\n\t\t\t\t\t\t\t\t\t\t// import foo, {bar}\r\n\t\t\t\t\t\t\t\t\t\tspecifiers = specifiers.concat(this.parseNamedImports());\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tthis.throwUnexpectedToken(this.lookahead);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tthis.throwUnexpectedToken(this.nextToken());\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (!this.matchContextualKeyword('from')) {\r\n\t\t\t\t\t\t\t\tvar message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;\r\n\t\t\t\t\t\t\t\tthis.throwError(message, this.lookahead.value);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\tsrc = this.parseModuleSpecifier();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.consumeSemicolon();\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.ImportDeclaration(specifiers, src));\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-exports\r\n\t\t\t\t\tParser.prototype.parseExportSpecifier = function () {\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tvar local = this.parseIdentifierName();\r\n\t\t\t\t\t\tvar exported = local;\r\n\t\t\t\t\t\tif (this.matchContextualKeyword('as')) {\r\n\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\texported = this.parseIdentifierName();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn this.finalize(node, new Node.ExportSpecifier(local, exported));\r\n\t\t\t\t\t};\r\n\t\t\t\t\tParser.prototype.parseExportDeclaration = function () {\r\n\t\t\t\t\t\tif (this.context.inFunctionBody) {\r\n\t\t\t\t\t\t\tthis.throwError(messages_1.Messages.IllegalExportDeclaration);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar node = this.createNode();\r\n\t\t\t\t\t\tthis.expectKeyword('export');\r\n\t\t\t\t\t\tvar exportDeclaration;\r\n\t\t\t\t\t\tif (this.matchKeyword('default')) {\r\n\t\t\t\t\t\t\t// export default ...\r\n\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\tif (this.matchKeyword('function')) {\r\n\t\t\t\t\t\t\t\t// export default function foo () {}\r\n\t\t\t\t\t\t\t\t// export default function () {}\r\n\t\t\t\t\t\t\t\tvar declaration = this.parseFunctionDeclaration(true);\r\n\t\t\t\t\t\t\t\texportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (this.matchKeyword('class')) {\r\n\t\t\t\t\t\t\t\t// export default class foo {}\r\n\t\t\t\t\t\t\t\tvar declaration = this.parseClassDeclaration(true);\r\n\t\t\t\t\t\t\t\texportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (this.matchContextualKeyword('async')) {\r\n\t\t\t\t\t\t\t\t// export default async function f () {}\r\n\t\t\t\t\t\t\t\t// export default async function () {}\r\n\t\t\t\t\t\t\t\t// export default async x => x\r\n\t\t\t\t\t\t\t\tvar declaration = this.matchAsyncFunction() ? this.parseFunctionDeclaration(true) : this.parseAssignmentExpression();\r\n\t\t\t\t\t\t\t\texportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tif (this.matchContextualKeyword('from')) {\r\n\t\t\t\t\t\t\t\t\tthis.throwError(messages_1.Messages.UnexpectedToken, this.lookahead.value);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// export default {};\r\n\t\t\t\t\t\t\t\t// export default [];\r\n\t\t\t\t\t\t\t\t// export default (1 + 2);\r\n\t\t\t\t\t\t\t\tvar declaration = this.match('{') ? this.parseObjectInitializer() :\r\n\t\t\t\t\t\t\t\t\tthis.match('[') ? this.parseArrayInitializer() : this.parseAssignmentExpression();\r\n\t\t\t\t\t\t\t\tthis.consumeSemicolon();\r\n\t\t\t\t\t\t\t\texportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (this.match('*')) {\r\n\t\t\t\t\t\t\t// export * from 'foo';\r\n\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\tif (!this.matchContextualKeyword('from')) {\r\n\t\t\t\t\t\t\t\tvar message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;\r\n\t\t\t\t\t\t\t\tthis.throwError(message, this.lookahead.value);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\tvar src = this.parseModuleSpecifier();\r\n\t\t\t\t\t\t\tthis.consumeSemicolon();\r\n\t\t\t\t\t\t\texportDeclaration = this.finalize(node, new Node.ExportAllDeclaration(src));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (this.lookahead.type === 4 /* Keyword */) {\r\n\t\t\t\t\t\t\t// export var f = 1;\r\n\t\t\t\t\t\t\tvar declaration = void 0;\r\n\t\t\t\t\t\t\tswitch (this.lookahead.value) {\r\n\t\t\t\t\t\t\t\tcase 'let':\r\n\t\t\t\t\t\t\t\tcase 'const':\r\n\t\t\t\t\t\t\t\t\tdeclaration = this.parseLexicalDeclaration({ inFor: false });\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase 'var':\r\n\t\t\t\t\t\t\t\tcase 'class':\r\n\t\t\t\t\t\t\t\tcase 'function':\r\n\t\t\t\t\t\t\t\t\tdeclaration = this.parseStatementListItem();\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\tthis.throwUnexpectedToken(this.lookahead);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\texportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(declaration, [], null));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (this.matchAsyncFunction()) {\r\n\t\t\t\t\t\t\tvar declaration = this.parseFunctionDeclaration();\r\n\t\t\t\t\t\t\texportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(declaration, [], null));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tvar specifiers = [];\r\n\t\t\t\t\t\t\tvar source = null;\r\n\t\t\t\t\t\t\tvar isExportFromIdentifier = false;\r\n\t\t\t\t\t\t\tthis.expect('{');\r\n\t\t\t\t\t\t\twhile (!this.match('}')) {\r\n\t\t\t\t\t\t\t\tisExportFromIdentifier = isExportFromIdentifier || this.matchKeyword('default');\r\n\t\t\t\t\t\t\t\tspecifiers.push(this.parseExportSpecifier());\r\n\t\t\t\t\t\t\t\tif (!this.match('}')) {\r\n\t\t\t\t\t\t\t\t\tthis.expect(',');\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.expect('}');\r\n\t\t\t\t\t\t\tif (this.matchContextualKeyword('from')) {\r\n\t\t\t\t\t\t\t\t// export {default} from 'foo';\r\n\t\t\t\t\t\t\t\t// export {foo} from 'foo';\r\n\t\t\t\t\t\t\t\tthis.nextToken();\r\n\t\t\t\t\t\t\t\tsource = this.parseModuleSpecifier();\r\n\t\t\t\t\t\t\t\tthis.consumeSemicolon();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (isExportFromIdentifier) {\r\n\t\t\t\t\t\t\t\t// export {default}; // missing fromClause\r\n\t\t\t\t\t\t\t\tvar message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;\r\n\t\t\t\t\t\t\t\tthis.throwError(message, this.lookahead.value);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t// export {foo};\r\n\t\t\t\t\t\t\t\tthis.consumeSemicolon();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\texportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(null, specifiers, source));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn exportDeclaration;\r\n\t\t\t\t\t};\r\n\t\t\t\t\treturn Parser;\r\n\t\t\t\t}());\r\n\t\t\t\texports.Parser = Parser;\r\n\r\n\r\n\t\t\t\t/***/\r\n},\r\n\t\t/* 9 */\r\n\t\t/***/ function (module, exports) {\r\n\r\n\t\t\t\t\"use strict\";\r\n\t\t\t\t// Ensure the condition is true, otherwise throw an error.\r\n\t\t\t\t// This is only to have a better contract semantic, i.e. another safety net\r\n\t\t\t\t// to catch a logic error. The condition shall be fulfilled in normal case.\r\n\t\t\t\t// Do NOT use this to enforce a certain condition on any user input.\r\n\t\t\t\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t\t\t\tfunction assert(condition, message) {\r\n\t\t\t\t\t/* istanbul ignore if */\r\n\t\t\t\t\tif (!condition) {\r\n\t\t\t\t\t\tthrow new Error('ASSERT: ' + message);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\texports.assert = assert;\r\n\r\n\r\n\t\t\t\t/***/\r\n},\r\n\t\t/* 10 */\r\n\t\t/***/ function (module, exports) {\r\n\r\n\t\t\t\t\"use strict\";\r\n\t\t\t\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t\t\t\tvar ErrorHandler = /** @class */ (function () {\r\n\t\t\t\t\tfunction ErrorHandler() {\r\n\t\t\t\t\t\tthis.errors = [];\r\n\t\t\t\t\t\tthis.tolerant = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tErrorHandler.prototype.recordError = function (error) {\r\n\t\t\t\t\t\tthis.errors.push(error);\r\n\t\t\t\t\t};\r\n\t\t\t\t\tErrorHandler.prototype.tolerate = function (error) {\r\n\t\t\t\t\t\tif (this.tolerant) {\r\n\t\t\t\t\t\t\tthis.recordError(error);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthrow error;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t\tErrorHandler.prototype.constructError = function (msg, column) {\r\n\t\t\t\t\t\tvar error = new Error(msg);\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tthrow error;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcatch (base) {\r\n\t\t\t\t\t\t\t/* istanbul ignore else */\r\n\t\t\t\t\t\t\tif (Object.create && Object.defineProperty) {\r\n\t\t\t\t\t\t\t\terror = Object.create(base);\r\n\t\t\t\t\t\t\t\tObject.defineProperty(error, 'column', { value: column });\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/* istanbul ignore next */\r\n\t\t\t\t\t\treturn error;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tErrorHandler.prototype.createError = function (index, line, col, description) {\r\n\t\t\t\t\t\tvar msg = 'Line ' + line + ': ' + description;\r\n\t\t\t\t\t\tvar error = this.constructError(msg, col);\r\n\t\t\t\t\t\terror.index = index;\r\n\t\t\t\t\t\terror.lineNumber = line;\r\n\t\t\t\t\t\terror.description = description;\r\n\t\t\t\t\t\treturn error;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tErrorHandler.prototype.throwError = function (index, line, col, description) {\r\n\t\t\t\t\t\tthrow this.createError(index, line, col, description);\r\n\t\t\t\t\t};\r\n\t\t\t\t\tErrorHandler.prototype.tolerateError = function (index, line, col, description) {\r\n\t\t\t\t\t\tvar error = this.createError(index, line, col, description);\r\n\t\t\t\t\t\tif (this.tolerant) {\r\n\t\t\t\t\t\t\tthis.recordError(error);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthrow error;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t\treturn ErrorHandler;\r\n\t\t\t\t}());\r\n\t\t\t\texports.ErrorHandler = ErrorHandler;\r\n\r\n\r\n\t\t\t\t/***/\r\n},\r\n\t\t/* 11 */\r\n\t\t/***/ function (module, exports) {\r\n\r\n\t\t\t\t\"use strict\";\r\n\t\t\t\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t\t\t\t// Error messages should be identical to V8.\r\n\t\t\t\texports.Messages = {\r\n\t\t\t\t\tBadImportCallArity: 'Unexpected token',\r\n\t\t\t\t\tBadGetterArity: 'Getter must not have any formal parameters',\r\n\t\t\t\t\tBadSetterArity: 'Setter must have exactly one formal parameter',\r\n\t\t\t\t\tBadSetterRestParameter: 'Setter function argument must not be a rest parameter',\r\n\t\t\t\t\tConstructorIsAsync: 'Class constructor may not be an async method',\r\n\t\t\t\t\tConstructorSpecialMethod: 'Class constructor may not be an accessor',\r\n\t\t\t\t\tDeclarationMissingInitializer: 'Missing initializer in %0 declaration',\r\n\t\t\t\t\tDefaultRestParameter: 'Unexpected token =',\r\n\t\t\t\t\tDefaultRestProperty: 'Unexpected token =',\r\n\t\t\t\t\tDuplicateBinding: 'Duplicate binding %0',\r\n\t\t\t\t\tDuplicateConstructor: 'A class may only have one constructor',\r\n\t\t\t\t\tDuplicateProtoProperty: 'Duplicate __proto__ fields are not allowed in object literals',\r\n\t\t\t\t\tForInOfLoopInitializer: '%0 loop variable declaration may not have an initializer',\r\n\t\t\t\t\tGeneratorInLegacyContext: 'Generator declarations are not allowed in legacy contexts',\r\n\t\t\t\t\tIllegalBreak: 'Illegal break statement',\r\n\t\t\t\t\tIllegalContinue: 'Illegal continue statement',\r\n\t\t\t\t\tIllegalExportDeclaration: 'Unexpected token',\r\n\t\t\t\t\tIllegalImportDeclaration: 'Unexpected token',\r\n\t\t\t\t\tIllegalLanguageModeDirective: 'Illegal \\'use strict\\' directive in function with non-simple parameter list',\r\n\t\t\t\t\tIllegalReturn: 'Illegal return statement',\r\n\t\t\t\t\tInvalidEscapedReservedWord: 'Keyword must not contain escaped characters',\r\n\t\t\t\t\tInvalidHexEscapeSequence: 'Invalid hexadecimal escape sequence',\r\n\t\t\t\t\tInvalidLHSInAssignment: 'Invalid left-hand side in assignment',\r\n\t\t\t\t\tInvalidLHSInForIn: 'Invalid left-hand side in for-in',\r\n\t\t\t\t\tInvalidLHSInForLoop: 'Invalid left-hand side in for-loop',\r\n\t\t\t\t\tInvalidModuleSpecifier: 'Unexpected token',\r\n\t\t\t\t\tInvalidRegExp: 'Invalid regular expression',\r\n\t\t\t\t\tLetInLexicalBinding: 'let is disallowed as a lexically bound name',\r\n\t\t\t\t\tMissingFromClause: 'Unexpected token',\r\n\t\t\t\t\tMultipleDefaultsInSwitch: 'More than one default clause in switch statement',\r\n\t\t\t\t\tNewlineAfterThrow: 'Illegal newline after throw',\r\n\t\t\t\t\tNoAsAfterImportNamespace: 'Unexpected token',\r\n\t\t\t\t\tNoCatchOrFinally: 'Missing catch or finally after try',\r\n\t\t\t\t\tParameterAfterRestParameter: 'Rest parameter must be last formal parameter',\r\n\t\t\t\t\tPropertyAfterRestProperty: 'Unexpected token',\r\n\t\t\t\t\tRedeclaration: '%0 \\'%1\\' has already been declared',\r\n\t\t\t\t\tStaticPrototype: 'Classes may not have static property named prototype',\r\n\t\t\t\t\tStrictCatchVariable: 'Catch variable may not be eval or arguments in strict mode',\r\n\t\t\t\t\tStrictDelete: 'Delete of an unqualified identifier in strict mode.',\r\n\t\t\t\t\tStrictFunction: 'In strict mode code, functions can only be declared at top level or inside a block',\r\n\t\t\t\t\tStrictFunctionName: 'Function name may not be eval or arguments in strict mode',\r\n\t\t\t\t\tStrictLHSAssignment: 'Assignment to eval or arguments is not allowed in strict mode',\r\n\t\t\t\t\tStrictLHSPostfix: 'Postfix increment/decrement may not have eval or arguments operand in strict mode',\r\n\t\t\t\t\tStrictLHSPrefix: 'Prefix increment/decrement may not have eval or arguments operand in strict mode',\r\n\t\t\t\t\tStrictModeWith: 'Strict mode code may not include a with statement',\r\n\t\t\t\t\tStrictOctalLiteral: 'Octal literals are not allowed in strict mode.',\r\n\t\t\t\t\tStrictParamDupe: 'Strict mode function may not have duplicate parameter names',\r\n\t\t\t\t\tStrictParamName: 'Parameter name eval or arguments is not allowed in strict mode',\r\n\t\t\t\t\tStrictReservedWord: 'Use of future reserved word in strict mode',\r\n\t\t\t\t\tStrictVarName: 'Variable name may not be eval or arguments in strict mode',\r\n\t\t\t\t\tTemplateOctalLiteral: 'Octal literals are not allowed in template strings.',\r\n\t\t\t\t\tUnexpectedEOS: 'Unexpected end of input',\r\n\t\t\t\t\tUnexpectedIdentifier: 'Unexpected identifier',\r\n\t\t\t\t\tUnexpectedNumber: 'Unexpected number',\r\n\t\t\t\t\tUnexpectedReserved: 'Unexpected reserved word',\r\n\t\t\t\t\tUnexpectedString: 'Unexpected string',\r\n\t\t\t\t\tUnexpectedTemplate: 'Unexpected quasi %0',\r\n\t\t\t\t\tUnexpectedToken: 'Unexpected token %0',\r\n\t\t\t\t\tUnexpectedTokenIllegal: 'Unexpected token ILLEGAL',\r\n\t\t\t\t\tUnknownLabel: 'Undefined label \\'%0\\'',\r\n\t\t\t\t\tUnterminatedRegExp: 'Invalid regular expression: missing /'\r\n\t\t\t\t};\r\n\r\n\r\n\t\t\t\t/***/\r\n},\r\n\t\t/* 12 */\r\n\t\t/***/ function (module, exports, __webpack_require__) {\r\n\r\n\t\t\t\t\"use strict\";\r\n\t\t\t\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t\t\t\tvar assert_1 = __webpack_require__(9);\r\n\t\t\t\tvar character_1 = __webpack_require__(4);\r\n\t\t\t\tvar messages_1 = __webpack_require__(11);\r\n\t\t\t\tfunction hexValue(ch) {\r\n\t\t\t\t\treturn '0123456789abcdef'.indexOf(ch.toLowerCase());\r\n\t\t\t\t}\r\n\t\t\t\tfunction octalValue(ch) {\r\n\t\t\t\t\treturn '01234567'.indexOf(ch);\r\n\t\t\t\t}\r\n\t\t\t\tvar Scanner = /** @class */ (function () {\r\n\t\t\t\t\tfunction Scanner(code, handler) {\r\n\t\t\t\t\t\tthis.source = code;\r\n\t\t\t\t\t\tthis.errorHandler = handler;\r\n\t\t\t\t\t\tthis.trackComment = false;\r\n\t\t\t\t\t\tthis.isModule = false;\r\n\t\t\t\t\t\tthis.length = code.length;\r\n\t\t\t\t\t\tthis.index = 0;\r\n\t\t\t\t\t\tthis.lineNumber = (code.length > 0) ? 1 : 0;\r\n\t\t\t\t\t\tthis.lineStart = 0;\r\n\t\t\t\t\t\tthis.curlyStack = [];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tScanner.prototype.saveState = function () {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tindex: this.index,\r\n\t\t\t\t\t\t\tlineNumber: this.lineNumber,\r\n\t\t\t\t\t\t\tlineStart: this.lineStart,\r\n\t\t\t\t\t\t\tcurlyStack: this.curlyStack.slice()\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t};\r\n\t\t\t\t\tScanner.prototype.restoreState = function (state) {\r\n\t\t\t\t\t\tthis.index = state.index;\r\n\t\t\t\t\t\tthis.lineNumber = state.lineNumber;\r\n\t\t\t\t\t\tthis.lineStart = state.lineStart;\r\n\t\t\t\t\t\tthis.curlyStack = state.curlyStack;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tScanner.prototype.eof = function () {\r\n\t\t\t\t\t\treturn this.index >= this.length;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tScanner.prototype.throwUnexpectedToken = function (message) {\r\n\t\t\t\t\t\tif (message === void 0) { message = messages_1.Messages.UnexpectedTokenIllegal; }\r\n\t\t\t\t\t\treturn this.errorHandler.throwError(this.index, this.lineNumber, this.index - this.lineStart + 1, message);\r\n\t\t\t\t\t};\r\n\t\t\t\t\tScanner.prototype.tolerateUnexpectedToken = function (message) {\r\n\t\t\t\t\t\tif (message === void 0) { message = messages_1.Messages.UnexpectedTokenIllegal; }\r\n\t\t\t\t\t\tthis.errorHandler.tolerateError(this.index, this.lineNumber, this.index - this.lineStart + 1, message);\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-comments\r\n\t\t\t\t\tScanner.prototype.skipSingleLineComment = function (offset) {\r\n\t\t\t\t\t\tvar comments = [];\r\n\t\t\t\t\t\tvar start, loc;\r\n\t\t\t\t\t\tif (this.trackComment) {\r\n\t\t\t\t\t\t\tcomments = [];\r\n\t\t\t\t\t\t\tstart = this.index - offset;\r\n\t\t\t\t\t\t\tloc = {\r\n\t\t\t\t\t\t\t\tstart: {\r\n\t\t\t\t\t\t\t\t\tline: this.lineNumber,\r\n\t\t\t\t\t\t\t\t\tcolumn: this.index - this.lineStart - offset\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tend: {}\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\twhile (!this.eof()) {\r\n\t\t\t\t\t\t\tvar ch = this.source.charCodeAt(this.index);\r\n\t\t\t\t\t\t\t++this.index;\r\n\t\t\t\t\t\t\tif (character_1.Character.isLineTerminator(ch)) {\r\n\t\t\t\t\t\t\t\tif (this.trackComment) {\r\n\t\t\t\t\t\t\t\t\tloc.end = {\r\n\t\t\t\t\t\t\t\t\t\tline: this.lineNumber,\r\n\t\t\t\t\t\t\t\t\t\tcolumn: this.index - this.lineStart - 1\r\n\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\tvar entry = {\r\n\t\t\t\t\t\t\t\t\t\tmultiLine: false,\r\n\t\t\t\t\t\t\t\t\t\tslice: [start + offset, this.index - 1],\r\n\t\t\t\t\t\t\t\t\t\trange: [start, this.index - 1],\r\n\t\t\t\t\t\t\t\t\t\tloc: loc\r\n\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\tcomments.push(entry);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (ch === 13 && this.source.charCodeAt(this.index) === 10) {\r\n\t\t\t\t\t\t\t\t\t++this.index;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t++this.lineNumber;\r\n\t\t\t\t\t\t\t\tthis.lineStart = this.index;\r\n\t\t\t\t\t\t\t\treturn comments;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (this.trackComment) {\r\n\t\t\t\t\t\t\tloc.end = {\r\n\t\t\t\t\t\t\t\tline: this.lineNumber,\r\n\t\t\t\t\t\t\t\tcolumn: this.index - this.lineStart\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tvar entry = {\r\n\t\t\t\t\t\t\t\tmultiLine: false,\r\n\t\t\t\t\t\t\t\tslice: [start + offset, this.index],\r\n\t\t\t\t\t\t\t\trange: [start, this.index],\r\n\t\t\t\t\t\t\t\tloc: loc\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tcomments.push(entry);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn comments;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tScanner.prototype.skipMultiLineComment = function () {\r\n\t\t\t\t\t\tvar comments = [];\r\n\t\t\t\t\t\tvar start, loc;\r\n\t\t\t\t\t\tif (this.trackComment) {\r\n\t\t\t\t\t\t\tcomments = [];\r\n\t\t\t\t\t\t\tstart = this.index - 2;\r\n\t\t\t\t\t\t\tloc = {\r\n\t\t\t\t\t\t\t\tstart: {\r\n\t\t\t\t\t\t\t\t\tline: this.lineNumber,\r\n\t\t\t\t\t\t\t\t\tcolumn: this.index - this.lineStart - 2\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tend: {}\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\twhile (!this.eof()) {\r\n\t\t\t\t\t\t\tvar ch = this.source.charCodeAt(this.index);\r\n\t\t\t\t\t\t\tif (character_1.Character.isLineTerminator(ch)) {\r\n\t\t\t\t\t\t\t\tif (ch === 0x0D && this.source.charCodeAt(this.index + 1) === 0x0A) {\r\n\t\t\t\t\t\t\t\t\t++this.index;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t++this.lineNumber;\r\n\t\t\t\t\t\t\t\t++this.index;\r\n\t\t\t\t\t\t\t\tthis.lineStart = this.index;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (ch === 0x2A) {\r\n\t\t\t\t\t\t\t\t// Block comment ends with '*/'.\r\n\t\t\t\t\t\t\t\tif (this.source.charCodeAt(this.index + 1) === 0x2F) {\r\n\t\t\t\t\t\t\t\t\tthis.index += 2;\r\n\t\t\t\t\t\t\t\t\tif (this.trackComment) {\r\n\t\t\t\t\t\t\t\t\t\tloc.end = {\r\n\t\t\t\t\t\t\t\t\t\t\tline: this.lineNumber,\r\n\t\t\t\t\t\t\t\t\t\t\tcolumn: this.index - this.lineStart\r\n\t\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\t\tvar entry = {\r\n\t\t\t\t\t\t\t\t\t\t\tmultiLine: true,\r\n\t\t\t\t\t\t\t\t\t\t\tslice: [start + 2, this.index - 2],\r\n\t\t\t\t\t\t\t\t\t\t\trange: [start, this.index],\r\n\t\t\t\t\t\t\t\t\t\t\tloc: loc\r\n\t\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\t\tcomments.push(entry);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\treturn comments;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t++this.index;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t++this.index;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// Ran off the end of the file - the whole thing is a comment\r\n\t\t\t\t\t\tif (this.trackComment) {\r\n\t\t\t\t\t\t\tloc.end = {\r\n\t\t\t\t\t\t\t\tline: this.lineNumber,\r\n\t\t\t\t\t\t\t\tcolumn: this.index - this.lineStart\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tvar entry = {\r\n\t\t\t\t\t\t\t\tmultiLine: true,\r\n\t\t\t\t\t\t\t\tslice: [start + 2, this.index],\r\n\t\t\t\t\t\t\t\trange: [start, this.index],\r\n\t\t\t\t\t\t\t\tloc: loc\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tcomments.push(entry);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.tolerateUnexpectedToken();\r\n\t\t\t\t\t\treturn comments;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tScanner.prototype.scanComments = function () {\r\n\t\t\t\t\t\tvar comments;\r\n\t\t\t\t\t\tif (this.trackComment) {\r\n\t\t\t\t\t\t\tcomments = [];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar start = (this.index === 0);\r\n\t\t\t\t\t\twhile (!this.eof()) {\r\n\t\t\t\t\t\t\tvar ch = this.source.charCodeAt(this.index);\r\n\t\t\t\t\t\t\tif (character_1.Character.isWhiteSpace(ch)) {\r\n\t\t\t\t\t\t\t\t++this.index;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (character_1.Character.isLineTerminator(ch)) {\r\n\t\t\t\t\t\t\t\t++this.index;\r\n\t\t\t\t\t\t\t\tif (ch === 0x0D && this.source.charCodeAt(this.index) === 0x0A) {\r\n\t\t\t\t\t\t\t\t\t++this.index;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t++this.lineNumber;\r\n\t\t\t\t\t\t\t\tthis.lineStart = this.index;\r\n\t\t\t\t\t\t\t\tstart = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (ch === 0x2F) { // U+002F is '/'\r\n\t\t\t\t\t\t\t\tch = this.source.charCodeAt(this.index + 1);\r\n\t\t\t\t\t\t\t\tif (ch === 0x2F) {\r\n\t\t\t\t\t\t\t\t\tthis.index += 2;\r\n\t\t\t\t\t\t\t\t\tvar comment = this.skipSingleLineComment(2);\r\n\t\t\t\t\t\t\t\t\tif (this.trackComment) {\r\n\t\t\t\t\t\t\t\t\t\tcomments = comments.concat(comment);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tstart = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse if (ch === 0x2A) { // U+002A is '*'\r\n\t\t\t\t\t\t\t\t\tthis.index += 2;\r\n\t\t\t\t\t\t\t\t\tvar comment = this.skipMultiLineComment();\r\n\t\t\t\t\t\t\t\t\tif (this.trackComment) {\r\n\t\t\t\t\t\t\t\t\t\tcomments = comments.concat(comment);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (start && ch === 0x2D) { // U+002D is '-'\r\n\t\t\t\t\t\t\t\t// U+003E is '>'\r\n\t\t\t\t\t\t\t\tif ((this.source.charCodeAt(this.index + 1) === 0x2D) && (this.source.charCodeAt(this.index + 2) === 0x3E)) {\r\n\t\t\t\t\t\t\t\t\t// '-->' is a single-line comment\r\n\t\t\t\t\t\t\t\t\tthis.index += 3;\r\n\t\t\t\t\t\t\t\t\tvar comment = this.skipSingleLineComment(3);\r\n\t\t\t\t\t\t\t\t\tif (this.trackComment) {\r\n\t\t\t\t\t\t\t\t\t\tcomments = comments.concat(comment);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (ch === 0x3C && !this.isModule) { // U+003C is '<'\r\n\t\t\t\t\t\t\t\tif (this.source.slice(this.index + 1, this.index + 4) === '!--') {\r\n\t\t\t\t\t\t\t\t\tthis.index += 4; // `<!--`\r\n\t\t\t\t\t\t\t\t\tvar comment = this.skipSingleLineComment(4);\r\n\t\t\t\t\t\t\t\t\tif (this.trackComment) {\r\n\t\t\t\t\t\t\t\t\t\tcomments = comments.concat(comment);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn comments;\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-future-reserved-words\r\n\t\t\t\t\tScanner.prototype.isFutureReservedWord = function (id) {\r\n\t\t\t\t\t\tswitch (id) {\r\n\t\t\t\t\t\t\tcase 'enum':\r\n\t\t\t\t\t\t\tcase 'export':\r\n\t\t\t\t\t\t\tcase 'import':\r\n\t\t\t\t\t\t\tcase 'super':\r\n\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t\tScanner.prototype.isStrictModeReservedWord = function (id) {\r\n\t\t\t\t\t\tswitch (id) {\r\n\t\t\t\t\t\t\tcase 'implements':\r\n\t\t\t\t\t\t\tcase 'interface':\r\n\t\t\t\t\t\t\tcase 'package':\r\n\t\t\t\t\t\t\tcase 'private':\r\n\t\t\t\t\t\t\tcase 'protected':\r\n\t\t\t\t\t\t\tcase 'public':\r\n\t\t\t\t\t\t\tcase 'static':\r\n\t\t\t\t\t\t\tcase 'yield':\r\n\t\t\t\t\t\t\tcase 'let':\r\n\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t\tScanner.prototype.isRestrictedWord = function (id) {\r\n\t\t\t\t\t\treturn id === 'eval' || id === 'arguments';\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-keywords\r\n\t\t\t\t\tScanner.prototype.isKeyword = function (id) {\r\n\t\t\t\t\t\tswitch (id.length) {\r\n\t\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\t\treturn (id === 'if') || (id === 'in') || (id === 'do');\r\n\t\t\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t\t\treturn (id === 'var') || (id === 'for') || (id === 'new') ||\r\n\t\t\t\t\t\t\t\t\t(id === 'try') || (id === 'let');\r\n\t\t\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t\t\treturn (id === 'this') || (id === 'else') || (id === 'case') ||\r\n\t\t\t\t\t\t\t\t\t(id === 'void') || (id === 'with') || (id === 'enum');\r\n\t\t\t\t\t\t\tcase 5:\r\n\t\t\t\t\t\t\t\treturn (id === 'while') || (id === 'break') || (id === 'catch') ||\r\n\t\t\t\t\t\t\t\t\t(id === 'throw') || (id === 'const') || (id === 'yield') ||\r\n\t\t\t\t\t\t\t\t\t(id === 'class') || (id === 'super');\r\n\t\t\t\t\t\t\tcase 6:\r\n\t\t\t\t\t\t\t\treturn (id === 'return') || (id === 'typeof') || (id === 'delete') ||\r\n\t\t\t\t\t\t\t\t\t(id === 'switch') || (id === 'export') || (id === 'import');\r\n\t\t\t\t\t\t\tcase 7:\r\n\t\t\t\t\t\t\t\treturn (id === 'default') || (id === 'finally') || (id === 'extends');\r\n\t\t\t\t\t\t\tcase 8:\r\n\t\t\t\t\t\t\t\treturn (id === 'function') || (id === 'continue') || (id === 'debugger');\r\n\t\t\t\t\t\t\tcase 10:\r\n\t\t\t\t\t\t\t\treturn (id === 'instanceof');\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t\tScanner.prototype.codePointAt = function (i) {\r\n\t\t\t\t\t\tvar cp = this.source.charCodeAt(i);\r\n\t\t\t\t\t\tif (cp >= 0xD800 && cp <= 0xDBFF) {\r\n\t\t\t\t\t\t\tvar second = this.source.charCodeAt(i + 1);\r\n\t\t\t\t\t\t\tif (second >= 0xDC00 && second <= 0xDFFF) {\r\n\t\t\t\t\t\t\t\tvar first = cp;\r\n\t\t\t\t\t\t\t\tcp = (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn cp;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tScanner.prototype.scanHexEscape = function (prefix) {\r\n\t\t\t\t\t\tvar len = (prefix === 'u') ? 4 : 2;\r\n\t\t\t\t\t\tvar code = 0;\r\n\t\t\t\t\t\tfor (var i = 0; i < len; ++i) {\r\n\t\t\t\t\t\t\tif (!this.eof() && character_1.Character.isHexDigit(this.source.charCodeAt(this.index))) {\r\n\t\t\t\t\t\t\t\tcode = code * 16 + hexValue(this.source[this.index++]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn String.fromCharCode(code);\r\n\t\t\t\t\t};\r\n\t\t\t\t\tScanner.prototype.scanUnicodeCodePointEscape = function () {\r\n\t\t\t\t\t\tvar ch = this.source[this.index];\r\n\t\t\t\t\t\tvar code = 0;\r\n\t\t\t\t\t\t// At least, one hex digit is required.\r\n\t\t\t\t\t\tif (ch === '}') {\r\n\t\t\t\t\t\t\tthis.throwUnexpectedToken();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\twhile (!this.eof()) {\r\n\t\t\t\t\t\t\tch = this.source[this.index++];\r\n\t\t\t\t\t\t\tif (!character_1.Character.isHexDigit(ch.charCodeAt(0))) {\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcode = code * 16 + hexValue(ch);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (code > 0x10FFFF || ch !== '}') {\r\n\t\t\t\t\t\t\tthis.throwUnexpectedToken();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn character_1.Character.fromCodePoint(code);\r\n\t\t\t\t\t};\r\n\t\t\t\t\tScanner.prototype.getIdentifier = function () {\r\n\t\t\t\t\t\tvar start = this.index++;\r\n\t\t\t\t\t\twhile (!this.eof()) {\r\n\t\t\t\t\t\t\tvar ch = this.source.charCodeAt(this.index);\r\n\t\t\t\t\t\t\tif (ch === 0x5C) {\r\n\t\t\t\t\t\t\t\t// Blackslash (U+005C) marks Unicode escape sequence.\r\n\t\t\t\t\t\t\t\tthis.index = start;\r\n\t\t\t\t\t\t\t\treturn this.getComplexIdentifier();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (ch >= 0xD800 && ch < 0xDFFF) {\r\n\t\t\t\t\t\t\t\t// Need to handle surrogate pairs.\r\n\t\t\t\t\t\t\t\tthis.index = start;\r\n\t\t\t\t\t\t\t\treturn this.getComplexIdentifier();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (character_1.Character.isIdentifierPart(ch)) {\r\n\t\t\t\t\t\t\t\t++this.index;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn this.source.slice(start, this.index);\r\n\t\t\t\t\t};\r\n\t\t\t\t\tScanner.prototype.getComplexIdentifier = function () {\r\n\t\t\t\t\t\tvar cp = this.codePointAt(this.index);\r\n\t\t\t\t\t\tvar id = character_1.Character.fromCodePoint(cp);\r\n\t\t\t\t\t\tthis.index += id.length;\r\n\t\t\t\t\t\t// '\\u' (U+005C, U+0075) denotes an escaped character.\r\n\t\t\t\t\t\tvar ch;\r\n\t\t\t\t\t\tif (cp === 0x5C) {\r\n\t\t\t\t\t\t\tif (this.source.charCodeAt(this.index) !== 0x75) {\r\n\t\t\t\t\t\t\t\tthis.throwUnexpectedToken();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t++this.index;\r\n\t\t\t\t\t\t\tif (this.source[this.index] === '{') {\r\n\t\t\t\t\t\t\t\t++this.index;\r\n\t\t\t\t\t\t\t\tch = this.scanUnicodeCodePointEscape();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tch = this.scanHexEscape('u');\r\n\t\t\t\t\t\t\t\tif (ch === null || ch === '\\\\' || !character_1.Character.isIdentifierStart(ch.charCodeAt(0))) {\r\n\t\t\t\t\t\t\t\t\tthis.throwUnexpectedToken();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tid = ch;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\twhile (!this.eof()) {\r\n\t\t\t\t\t\t\tcp = this.codePointAt(this.index);\r\n\t\t\t\t\t\t\tif (!character_1.Character.isIdentifierPart(cp)) {\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tch = character_1.Character.fromCodePoint(cp);\r\n\t\t\t\t\t\t\tid += ch;\r\n\t\t\t\t\t\t\tthis.index += ch.length;\r\n\t\t\t\t\t\t\t// '\\u' (U+005C, U+0075) denotes an escaped character.\r\n\t\t\t\t\t\t\tif (cp === 0x5C) {\r\n\t\t\t\t\t\t\t\tid = id.substr(0, id.length - 1);\r\n\t\t\t\t\t\t\t\tif (this.source.charCodeAt(this.index) !== 0x75) {\r\n\t\t\t\t\t\t\t\t\tthis.throwUnexpectedToken();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t++this.index;\r\n\t\t\t\t\t\t\t\tif (this.source[this.index] === '{') {\r\n\t\t\t\t\t\t\t\t\t++this.index;\r\n\t\t\t\t\t\t\t\t\tch = this.scanUnicodeCodePointEscape();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tch = this.scanHexEscape('u');\r\n\t\t\t\t\t\t\t\t\tif (ch === null || ch === '\\\\' || !character_1.Character.isIdentifierPart(ch.charCodeAt(0))) {\r\n\t\t\t\t\t\t\t\t\t\tthis.throwUnexpectedToken();\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tid += ch;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn id;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tScanner.prototype.octalToDecimal = function (ch) {\r\n\t\t\t\t\t\t// \\0 is not octal escape sequence\r\n\t\t\t\t\t\tvar octal = (ch !== '0');\r\n\t\t\t\t\t\tvar code = octalValue(ch);\r\n\t\t\t\t\t\tif (!this.eof() && character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {\r\n\t\t\t\t\t\t\toctal = true;\r\n\t\t\t\t\t\t\tcode = code * 8 + octalValue(this.source[this.index++]);\r\n\t\t\t\t\t\t\t// 3 digits are only allowed when string starts\r\n\t\t\t\t\t\t\t// with 0, 1, 2, 3\r\n\t\t\t\t\t\t\tif ('0123'.indexOf(ch) >= 0 && !this.eof() && character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {\r\n\t\t\t\t\t\t\t\tcode = code * 8 + octalValue(this.source[this.index++]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tcode: code,\r\n\t\t\t\t\t\t\toctal: octal\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-names-and-keywords\r\n\t\t\t\t\tScanner.prototype.scanIdentifier = function () {\r\n\t\t\t\t\t\tvar type;\r\n\t\t\t\t\t\tvar start = this.index;\r\n\t\t\t\t\t\t// Backslash (U+005C) starts an escaped character.\r\n\t\t\t\t\t\tvar id = (this.source.charCodeAt(start) === 0x5C) ? this.getComplexIdentifier() : this.getIdentifier();\r\n\t\t\t\t\t\t// There is no keyword or literal with only one character.\r\n\t\t\t\t\t\t// Thus, it must be an identifier.\r\n\t\t\t\t\t\tif (id.length === 1) {\r\n\t\t\t\t\t\t\ttype = 3 /* Identifier */;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (this.isKeyword(id)) {\r\n\t\t\t\t\t\t\ttype = 4 /* Keyword */;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (id === 'null') {\r\n\t\t\t\t\t\t\ttype = 5 /* NullLiteral */;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (id === 'true' || id === 'false') {\r\n\t\t\t\t\t\t\ttype = 1 /* BooleanLiteral */;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\ttype = 3 /* Identifier */;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (type !== 3 /* Identifier */ && (start + id.length !== this.index)) {\r\n\t\t\t\t\t\t\tvar restore = this.index;\r\n\t\t\t\t\t\t\tthis.index = start;\r\n\t\t\t\t\t\t\tthis.tolerateUnexpectedToken(messages_1.Messages.InvalidEscapedReservedWord);\r\n\t\t\t\t\t\t\tthis.index = restore;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\ttype: type,\r\n\t\t\t\t\t\t\tvalue: id,\r\n\t\t\t\t\t\t\tlineNumber: this.lineNumber,\r\n\t\t\t\t\t\t\tlineStart: this.lineStart,\r\n\t\t\t\t\t\t\tstart: start,\r\n\t\t\t\t\t\t\tend: this.index\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-punctuators\r\n\t\t\t\t\tScanner.prototype.scanPunctuator = function () {\r\n\t\t\t\t\t\tvar start = this.index;\r\n\t\t\t\t\t\t// Check for most common single-character punctuators.\r\n\t\t\t\t\t\tvar str = this.source[this.index];\r\n\t\t\t\t\t\tswitch (str) {\r\n\t\t\t\t\t\t\tcase '(':\r\n\t\t\t\t\t\t\tcase '{':\r\n\t\t\t\t\t\t\t\tif (str === '{') {\r\n\t\t\t\t\t\t\t\t\tthis.curlyStack.push('{');\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t++this.index;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase '.':\r\n\t\t\t\t\t\t\t\t++this.index;\r\n\t\t\t\t\t\t\t\tif (this.source[this.index] === '.' && this.source[this.index + 1] === '.') {\r\n\t\t\t\t\t\t\t\t\t// Spread operator: ...\r\n\t\t\t\t\t\t\t\t\tthis.index += 2;\r\n\t\t\t\t\t\t\t\t\tstr = '...';\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase '}':\r\n\t\t\t\t\t\t\t\t++this.index;\r\n\t\t\t\t\t\t\t\tthis.curlyStack.pop();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase ')':\r\n\t\t\t\t\t\t\tcase ';':\r\n\t\t\t\t\t\t\tcase ',':\r\n\t\t\t\t\t\t\tcase '[':\r\n\t\t\t\t\t\t\tcase ']':\r\n\t\t\t\t\t\t\tcase ':':\r\n\t\t\t\t\t\t\tcase '?':\r\n\t\t\t\t\t\t\tcase '~':\r\n\t\t\t\t\t\t\t\t++this.index;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t// 4-character punctuator.\r\n\t\t\t\t\t\t\t\tstr = this.source.substr(this.index, 4);\r\n\t\t\t\t\t\t\t\tif (str === '>>>=') {\r\n\t\t\t\t\t\t\t\t\tthis.index += 4;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t// 3-character punctuators.\r\n\t\t\t\t\t\t\t\t\tstr = str.substr(0, 3);\r\n\t\t\t\t\t\t\t\t\tif (str === '===' || str === '!==' || str === '>>>' ||\r\n\t\t\t\t\t\t\t\t\t\tstr === '<<=' || str === '>>=' || str === '**=') {\r\n\t\t\t\t\t\t\t\t\t\tthis.index += 3;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t// 2-character punctuators.\r\n\t\t\t\t\t\t\t\t\t\tstr = str.substr(0, 2);\r\n\t\t\t\t\t\t\t\t\t\tif (str === '&&' || str === '||' || str === '==' || str === '!=' ||\r\n\t\t\t\t\t\t\t\t\t\t\tstr === '+=' || str === '-=' || str === '*=' || str === '/=' ||\r\n\t\t\t\t\t\t\t\t\t\t\tstr === '++' || str === '--' || str === '<<' || str === '>>' ||\r\n\t\t\t\t\t\t\t\t\t\t\tstr === '&=' || str === '|=' || str === '^=' || str === '%=' ||\r\n\t\t\t\t\t\t\t\t\t\t\tstr === '<=' || str === '>=' || str === '=>' || str === '**') {\r\n\t\t\t\t\t\t\t\t\t\t\tthis.index += 2;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t// 1-character punctuators.\r\n\t\t\t\t\t\t\t\t\t\t\tstr = this.source[this.index];\r\n\t\t\t\t\t\t\t\t\t\t\tif ('<>=!+-*%&|^/'.indexOf(str) >= 0) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t++this.index;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (this.index === start) {\r\n\t\t\t\t\t\t\tthis.throwUnexpectedToken();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\ttype: 7 /* Punctuator */,\r\n\t\t\t\t\t\t\tvalue: str,\r\n\t\t\t\t\t\t\tlineNumber: this.lineNumber,\r\n\t\t\t\t\t\t\tlineStart: this.lineStart,\r\n\t\t\t\t\t\t\tstart: start,\r\n\t\t\t\t\t\t\tend: this.index\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-literals-numeric-literals\r\n\t\t\t\t\tScanner.prototype.scanHexLiteral = function (start) {\r\n\t\t\t\t\t\tvar num = '';\r\n\t\t\t\t\t\twhile (!this.eof()) {\r\n\t\t\t\t\t\t\tif (!character_1.Character.isHexDigit(this.source.charCodeAt(this.index))) {\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tnum += this.source[this.index++];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (num.length === 0) {\r\n\t\t\t\t\t\t\tthis.throwUnexpectedToken();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index))) {\r\n\t\t\t\t\t\t\tthis.throwUnexpectedToken();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\ttype: 6 /* NumericLiteral */,\r\n\t\t\t\t\t\t\tvalue: parseInt('0x' + num, 16),\r\n\t\t\t\t\t\t\tlineNumber: this.lineNumber,\r\n\t\t\t\t\t\t\tlineStart: this.lineStart,\r\n\t\t\t\t\t\t\tstart: start,\r\n\t\t\t\t\t\t\tend: this.index\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t};\r\n\t\t\t\t\tScanner.prototype.scanBinaryLiteral = function (start) {\r\n\t\t\t\t\t\tvar num = '';\r\n\t\t\t\t\t\tvar ch;\r\n\t\t\t\t\t\twhile (!this.eof()) {\r\n\t\t\t\t\t\t\tch = this.source[this.index];\r\n\t\t\t\t\t\t\tif (ch !== '0' && ch !== '1') {\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tnum += this.source[this.index++];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (num.length === 0) {\r\n\t\t\t\t\t\t\t// only 0b or 0B\r\n\t\t\t\t\t\t\tthis.throwUnexpectedToken();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!this.eof()) {\r\n\t\t\t\t\t\t\tch = this.source.charCodeAt(this.index);\r\n\t\t\t\t\t\t\t/* istanbul ignore else */\r\n\t\t\t\t\t\t\tif (character_1.Character.isIdentifierStart(ch) || character_1.Character.isDecimalDigit(ch)) {\r\n\t\t\t\t\t\t\t\tthis.throwUnexpectedToken();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\ttype: 6 /* NumericLiteral */,\r\n\t\t\t\t\t\t\tvalue: parseInt(num, 2),\r\n\t\t\t\t\t\t\tlineNumber: this.lineNumber,\r\n\t\t\t\t\t\t\tlineStart: this.lineStart,\r\n\t\t\t\t\t\t\tstart: start,\r\n\t\t\t\t\t\t\tend: this.index\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t};\r\n\t\t\t\t\tScanner.prototype.scanOctalLiteral = function (prefix, start) {\r\n\t\t\t\t\t\tvar num = '';\r\n\t\t\t\t\t\tvar octal = false;\r\n\t\t\t\t\t\tif (character_1.Character.isOctalDigit(prefix.charCodeAt(0))) {\r\n\t\t\t\t\t\t\toctal = true;\r\n\t\t\t\t\t\t\tnum = '0' + this.source[this.index++];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t++this.index;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\twhile (!this.eof()) {\r\n\t\t\t\t\t\t\tif (!character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tnum += this.source[this.index++];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!octal && num.length === 0) {\r\n\t\t\t\t\t\t\t// only 0o or 0O\r\n\t\t\t\t\t\t\tthis.throwUnexpectedToken();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index)) || character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\r\n\t\t\t\t\t\t\tthis.throwUnexpectedToken();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\ttype: 6 /* NumericLiteral */,\r\n\t\t\t\t\t\t\tvalue: parseInt(num, 8),\r\n\t\t\t\t\t\t\toctal: octal,\r\n\t\t\t\t\t\t\tlineNumber: this.lineNumber,\r\n\t\t\t\t\t\t\tlineStart: this.lineStart,\r\n\t\t\t\t\t\t\tstart: start,\r\n\t\t\t\t\t\t\tend: this.index\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t};\r\n\t\t\t\t\tScanner.prototype.isImplicitOctalLiteral = function () {\r\n\t\t\t\t\t\t// Implicit octal, unless there is a non-octal digit.\r\n\t\t\t\t\t\t// (Annex B.1.1 on Numeric Literals)\r\n\t\t\t\t\t\tfor (var i = this.index + 1; i < this.length; ++i) {\r\n\t\t\t\t\t\t\tvar ch = this.source[i];\r\n\t\t\t\t\t\t\tif (ch === '8' || ch === '9') {\r\n\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (!character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\r\n\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tScanner.prototype.scanNumericLiteral = function () {\r\n\t\t\t\t\t\tvar start = this.index;\r\n\t\t\t\t\t\tvar ch = this.source[start];\r\n\t\t\t\t\t\tassert_1.assert(character_1.Character.isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'), 'Numeric literal must start with a decimal digit or a decimal point');\r\n\t\t\t\t\t\tvar num = '';\r\n\t\t\t\t\t\tif (ch !== '.') {\r\n\t\t\t\t\t\t\tnum = this.source[this.index++];\r\n\t\t\t\t\t\t\tch = this.source[this.index];\r\n\t\t\t\t\t\t\t// Hex number starts with '0x'.\r\n\t\t\t\t\t\t\t// Octal number starts with '0'.\r\n\t\t\t\t\t\t\t// Octal number in ES6 starts with '0o'.\r\n\t\t\t\t\t\t\t// Binary number in ES6 starts with '0b'.\r\n\t\t\t\t\t\t\tif (num === '0') {\r\n\t\t\t\t\t\t\t\tif (ch === 'x' || ch === 'X') {\r\n\t\t\t\t\t\t\t\t\t++this.index;\r\n\t\t\t\t\t\t\t\t\treturn this.scanHexLiteral(start);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (ch === 'b' || ch === 'B') {\r\n\t\t\t\t\t\t\t\t\t++this.index;\r\n\t\t\t\t\t\t\t\t\treturn this.scanBinaryLiteral(start);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (ch === 'o' || ch === 'O') {\r\n\t\t\t\t\t\t\t\t\treturn this.scanOctalLiteral(ch, start);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (ch && character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\r\n\t\t\t\t\t\t\t\t\tif (this.isImplicitOctalLiteral()) {\r\n\t\t\t\t\t\t\t\t\t\treturn this.scanOctalLiteral(ch, start);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\twhile (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\r\n\t\t\t\t\t\t\t\tnum += this.source[this.index++];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tch = this.source[this.index];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (ch === '.') {\r\n\t\t\t\t\t\t\tnum += this.source[this.index++];\r\n\t\t\t\t\t\t\twhile (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\r\n\t\t\t\t\t\t\t\tnum += this.source[this.index++];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tch = this.source[this.index];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (ch === 'e' || ch === 'E') {\r\n\t\t\t\t\t\t\tnum += this.source[this.index++];\r\n\t\t\t\t\t\t\tch = this.source[this.index];\r\n\t\t\t\t\t\t\tif (ch === '+' || ch === '-') {\r\n\t\t\t\t\t\t\t\tnum += this.source[this.index++];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\r\n\t\t\t\t\t\t\t\twhile (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\r\n\t\t\t\t\t\t\t\t\tnum += this.source[this.index++];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tthis.throwUnexpectedToken();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index))) {\r\n\t\t\t\t\t\t\tthis.throwUnexpectedToken();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\ttype: 6 /* NumericLiteral */,\r\n\t\t\t\t\t\t\tvalue: parseFloat(num),\r\n\t\t\t\t\t\t\tlineNumber: this.lineNumber,\r\n\t\t\t\t\t\t\tlineStart: this.lineStart,\r\n\t\t\t\t\t\t\tstart: start,\r\n\t\t\t\t\t\t\tend: this.index\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-literals-string-literals\r\n\t\t\t\t\tScanner.prototype.scanStringLiteral = function () {\r\n\t\t\t\t\t\tvar start = this.index;\r\n\t\t\t\t\t\tvar quote = this.source[start];\r\n\t\t\t\t\t\tassert_1.assert((quote === '\\'' || quote === '\"'), 'String literal must starts with a quote');\r\n\t\t\t\t\t\t++this.index;\r\n\t\t\t\t\t\tvar octal = false;\r\n\t\t\t\t\t\tvar str = '';\r\n\t\t\t\t\t\twhile (!this.eof()) {\r\n\t\t\t\t\t\t\tvar ch = this.source[this.index++];\r\n\t\t\t\t\t\t\tif (ch === quote) {\r\n\t\t\t\t\t\t\t\tquote = '';\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (ch === '\\\\') {\r\n\t\t\t\t\t\t\t\tch = this.source[this.index++];\r\n\t\t\t\t\t\t\t\tif (!ch || !character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\r\n\t\t\t\t\t\t\t\t\tswitch (ch) {\r\n\t\t\t\t\t\t\t\t\t\tcase 'u':\r\n\t\t\t\t\t\t\t\t\t\t\tif (this.source[this.index] === '{') {\r\n\t\t\t\t\t\t\t\t\t\t\t\t++this.index;\r\n\t\t\t\t\t\t\t\t\t\t\t\tstr += this.scanUnicodeCodePointEscape();\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\tvar unescapedChar = this.scanHexEscape(ch);\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (unescapedChar === null) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.throwUnexpectedToken();\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tstr += unescapedChar;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tcase 'x':\r\n\t\t\t\t\t\t\t\t\t\t\tvar unescaped = this.scanHexEscape(ch);\r\n\t\t\t\t\t\t\t\t\t\t\tif (unescaped === null) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.throwUnexpectedToken(messages_1.Messages.InvalidHexEscapeSequence);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tstr += unescaped;\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tcase 'n':\r\n\t\t\t\t\t\t\t\t\t\t\tstr += '\\n';\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tcase 'r':\r\n\t\t\t\t\t\t\t\t\t\t\tstr += '\\r';\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tcase 't':\r\n\t\t\t\t\t\t\t\t\t\t\tstr += '\\t';\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tcase 'b':\r\n\t\t\t\t\t\t\t\t\t\t\tstr += '\\b';\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tcase 'f':\r\n\t\t\t\t\t\t\t\t\t\t\tstr += '\\f';\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tcase 'v':\r\n\t\t\t\t\t\t\t\t\t\t\tstr += '\\x0B';\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tcase '8':\r\n\t\t\t\t\t\t\t\t\t\tcase '9':\r\n\t\t\t\t\t\t\t\t\t\t\tstr += ch;\r\n\t\t\t\t\t\t\t\t\t\t\tthis.tolerateUnexpectedToken();\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\t\tif (ch && character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tvar octToDec = this.octalToDecimal(ch);\r\n\t\t\t\t\t\t\t\t\t\t\t\toctal = octToDec.octal || octal;\r\n\t\t\t\t\t\t\t\t\t\t\t\tstr += String.fromCharCode(octToDec.code);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\tstr += ch;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t++this.lineNumber;\r\n\t\t\t\t\t\t\t\t\tif (ch === '\\r' && this.source[this.index] === '\\n') {\r\n\t\t\t\t\t\t\t\t\t\t++this.index;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tthis.lineStart = this.index;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tstr += ch;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (quote !== '') {\r\n\t\t\t\t\t\t\tthis.index = start;\r\n\t\t\t\t\t\t\tthis.throwUnexpectedToken();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\ttype: 8 /* StringLiteral */,\r\n\t\t\t\t\t\t\tvalue: str,\r\n\t\t\t\t\t\t\toctal: octal,\r\n\t\t\t\t\t\t\tlineNumber: this.lineNumber,\r\n\t\t\t\t\t\t\tlineStart: this.lineStart,\r\n\t\t\t\t\t\t\tstart: start,\r\n\t\t\t\t\t\t\tend: this.index\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-template-literal-lexical-components\r\n\t\t\t\t\tScanner.prototype.scanTemplate = function () {\r\n\t\t\t\t\t\tvar cooked = '';\r\n\t\t\t\t\t\tvar terminated = false;\r\n\t\t\t\t\t\tvar start = this.index;\r\n\t\t\t\t\t\tvar head = (this.source[start] === '`');\r\n\t\t\t\t\t\tvar tail = false;\r\n\t\t\t\t\t\tvar rawOffset = 2;\r\n\t\t\t\t\t\t++this.index;\r\n\t\t\t\t\t\twhile (!this.eof()) {\r\n\t\t\t\t\t\t\tvar ch = this.source[this.index++];\r\n\t\t\t\t\t\t\tif (ch === '`') {\r\n\t\t\t\t\t\t\t\trawOffset = 1;\r\n\t\t\t\t\t\t\t\ttail = true;\r\n\t\t\t\t\t\t\t\tterminated = true;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (ch === '$') {\r\n\t\t\t\t\t\t\t\tif (this.source[this.index] === '{') {\r\n\t\t\t\t\t\t\t\t\tthis.curlyStack.push('${');\r\n\t\t\t\t\t\t\t\t\t++this.index;\r\n\t\t\t\t\t\t\t\t\tterminated = true;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tcooked += ch;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (ch === '\\\\') {\r\n\t\t\t\t\t\t\t\tch = this.source[this.index++];\r\n\t\t\t\t\t\t\t\tif (!character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\r\n\t\t\t\t\t\t\t\t\tswitch (ch) {\r\n\t\t\t\t\t\t\t\t\t\tcase 'n':\r\n\t\t\t\t\t\t\t\t\t\t\tcooked += '\\n';\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tcase 'r':\r\n\t\t\t\t\t\t\t\t\t\t\tcooked += '\\r';\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tcase 't':\r\n\t\t\t\t\t\t\t\t\t\t\tcooked += '\\t';\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tcase 'u':\r\n\t\t\t\t\t\t\t\t\t\t\tif (this.source[this.index] === '{') {\r\n\t\t\t\t\t\t\t\t\t\t\t\t++this.index;\r\n\t\t\t\t\t\t\t\t\t\t\t\tcooked += this.scanUnicodeCodePointEscape();\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\tvar restore = this.index;\r\n\t\t\t\t\t\t\t\t\t\t\t\tvar unescapedChar = this.scanHexEscape(ch);\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (unescapedChar !== null) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcooked += unescapedChar;\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.index = restore;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcooked += ch;\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tcase 'x':\r\n\t\t\t\t\t\t\t\t\t\t\tvar unescaped = this.scanHexEscape(ch);\r\n\t\t\t\t\t\t\t\t\t\t\tif (unescaped === null) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.throwUnexpectedToken(messages_1.Messages.InvalidHexEscapeSequence);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tcooked += unescaped;\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tcase 'b':\r\n\t\t\t\t\t\t\t\t\t\t\tcooked += '\\b';\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tcase 'f':\r\n\t\t\t\t\t\t\t\t\t\t\tcooked += '\\f';\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tcase 'v':\r\n\t\t\t\t\t\t\t\t\t\t\tcooked += '\\v';\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\t\tif (ch === '0') {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// Illegal: \\01 \\02 and so on\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.throwUnexpectedToken(messages_1.Messages.TemplateOctalLiteral);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcooked += '\\0';\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\telse if (character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t// Illegal: \\1 \\2\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.throwUnexpectedToken(messages_1.Messages.TemplateOctalLiteral);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\tcooked += ch;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t++this.lineNumber;\r\n\t\t\t\t\t\t\t\t\tif (ch === '\\r' && this.source[this.index] === '\\n') {\r\n\t\t\t\t\t\t\t\t\t\t++this.index;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tthis.lineStart = this.index;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\r\n\t\t\t\t\t\t\t\t++this.lineNumber;\r\n\t\t\t\t\t\t\t\tif (ch === '\\r' && this.source[this.index] === '\\n') {\r\n\t\t\t\t\t\t\t\t\t++this.index;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tthis.lineStart = this.index;\r\n\t\t\t\t\t\t\t\tcooked += '\\n';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tcooked += ch;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!terminated) {\r\n\t\t\t\t\t\t\tthis.throwUnexpectedToken();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!head) {\r\n\t\t\t\t\t\t\tthis.curlyStack.pop();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\ttype: 10 /* Template */,\r\n\t\t\t\t\t\t\tvalue: this.source.slice(start + 1, this.index - rawOffset),\r\n\t\t\t\t\t\t\tcooked: cooked,\r\n\t\t\t\t\t\t\thead: head,\r\n\t\t\t\t\t\t\ttail: tail,\r\n\t\t\t\t\t\t\tlineNumber: this.lineNumber,\r\n\t\t\t\t\t\t\tlineStart: this.lineStart,\r\n\t\t\t\t\t\t\tstart: start,\r\n\t\t\t\t\t\t\tend: this.index\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-literals-regular-expression-literals\r\n\t\t\t\t\tScanner.prototype.testRegExp = function (pattern, flags) {\r\n\t\t\t\t\t\tvar _this = this;\r\n\t\t\t\t\t\t// The BMP character to use as a replacement for astral symbols when\r\n\t\t\t\t\t\t// translating an ES6 \"u\"-flagged pattern to an ES5-compatible\r\n\t\t\t\t\t\t// approximation.\r\n\t\t\t\t\t\t// Note: replacing with '\\uFFFF' enables false positives in unlikely\r\n\t\t\t\t\t\t// scenarios. For example, `[\\u{1044f}-\\u{10440}]` is an invalid\r\n\t\t\t\t\t\t// pattern that would not be detected by this substitution.\r\n\t\t\t\t\t\tvar astralSubstitute = '\\uFFFF';\r\n\t\t\t\t\t\tvar tmp = pattern;\r\n\t\t\t\t\t\tif (flags.indexOf('u') >= 0) {\r\n\t\t\t\t\t\t\ttmp = tmp\r\n\t\t\t\t\t\t\t\t// Replace every Unicode escape sequence with the equivalent\r\n\t\t\t\t\t\t\t\t// BMP character or a constant ASCII code point in the case of\r\n\t\t\t\t\t\t\t\t// astral symbols. (See the above note on `astralSubstitute`\r\n\t\t\t\t\t\t\t\t// for more information.)\r\n\t\t\t\t\t\t\t\t.replace(/\\\\u\\{([0-9a-fA-F]+)\\}|\\\\u([a-fA-F0-9]{4})/g, function ($0, $1, $2) {\r\n\t\t\t\t\t\t\t\t\tvar codePoint = parseInt($1 || $2, 16);\r\n\t\t\t\t\t\t\t\t\tif (codePoint > 0x10FFFF) {\r\n\t\t\t\t\t\t\t\t\t\t_this.throwUnexpectedToken(messages_1.Messages.InvalidRegExp);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif (codePoint <= 0xFFFF) {\r\n\t\t\t\t\t\t\t\t\t\treturn String.fromCharCode(codePoint);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\treturn astralSubstitute;\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t// Replace each paired surrogate with a single ASCII symbol to\r\n\t\t\t\t\t\t\t\t// avoid throwing on regular expressions that are only valid in\r\n\t\t\t\t\t\t\t\t// combination with the \"u\" flag.\r\n\t\t\t\t\t\t\t\t.replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, astralSubstitute);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// First, detect invalid regular expressions.\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tRegExp(tmp);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcatch (e) {\r\n\t\t\t\t\t\t\tthis.throwUnexpectedToken(messages_1.Messages.InvalidRegExp);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// Return a regular expression object for this pattern-flag pair, or\r\n\t\t\t\t\t\t// `null` in case the current environment doesn't support the flags it\r\n\t\t\t\t\t\t// uses.\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\treturn new RegExp(pattern, flags);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcatch (exception) {\r\n\t\t\t\t\t\t\t/* istanbul ignore next */\r\n\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t\tScanner.prototype.scanRegExpBody = function () {\r\n\t\t\t\t\t\tvar ch = this.source[this.index];\r\n\t\t\t\t\t\tassert_1.assert(ch === '/', 'Regular expression literal must start with a slash');\r\n\t\t\t\t\t\tvar str = this.source[this.index++];\r\n\t\t\t\t\t\tvar classMarker = false;\r\n\t\t\t\t\t\tvar terminated = false;\r\n\t\t\t\t\t\twhile (!this.eof()) {\r\n\t\t\t\t\t\t\tch = this.source[this.index++];\r\n\t\t\t\t\t\t\tstr += ch;\r\n\t\t\t\t\t\t\tif (ch === '\\\\') {\r\n\t\t\t\t\t\t\t\tch = this.source[this.index++];\r\n\t\t\t\t\t\t\t\t// https://tc39.github.io/ecma262/#sec-literals-regular-expression-literals\r\n\t\t\t\t\t\t\t\tif (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\r\n\t\t\t\t\t\t\t\t\tthis.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tstr += ch;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\r\n\t\t\t\t\t\t\t\tthis.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (classMarker) {\r\n\t\t\t\t\t\t\t\tif (ch === ']') {\r\n\t\t\t\t\t\t\t\t\tclassMarker = false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tif (ch === '/') {\r\n\t\t\t\t\t\t\t\t\tterminated = true;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse if (ch === '[') {\r\n\t\t\t\t\t\t\t\t\tclassMarker = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!terminated) {\r\n\t\t\t\t\t\t\tthis.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// Exclude leading and trailing slash.\r\n\t\t\t\t\t\treturn str.substr(1, str.length - 2);\r\n\t\t\t\t\t};\r\n\t\t\t\t\tScanner.prototype.scanRegExpFlags = function () {\r\n\t\t\t\t\t\tvar str = '';\r\n\t\t\t\t\t\tvar flags = '';\r\n\t\t\t\t\t\twhile (!this.eof()) {\r\n\t\t\t\t\t\t\tvar ch = this.source[this.index];\r\n\t\t\t\t\t\t\tif (!character_1.Character.isIdentifierPart(ch.charCodeAt(0))) {\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t++this.index;\r\n\t\t\t\t\t\t\tif (ch === '\\\\' && !this.eof()) {\r\n\t\t\t\t\t\t\t\tch = this.source[this.index];\r\n\t\t\t\t\t\t\t\tif (ch === 'u') {\r\n\t\t\t\t\t\t\t\t\t++this.index;\r\n\t\t\t\t\t\t\t\t\tvar restore = this.index;\r\n\t\t\t\t\t\t\t\t\tvar char = this.scanHexEscape('u');\r\n\t\t\t\t\t\t\t\t\tif (char !== null) {\r\n\t\t\t\t\t\t\t\t\t\tflags += char;\r\n\t\t\t\t\t\t\t\t\t\tfor (str += '\\\\u'; restore < this.index; ++restore) {\r\n\t\t\t\t\t\t\t\t\t\t\tstr += this.source[restore];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tthis.index = restore;\r\n\t\t\t\t\t\t\t\t\t\tflags += 'u';\r\n\t\t\t\t\t\t\t\t\t\tstr += '\\\\u';\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tthis.tolerateUnexpectedToken();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tstr += '\\\\';\r\n\t\t\t\t\t\t\t\t\tthis.tolerateUnexpectedToken();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tflags += ch;\r\n\t\t\t\t\t\t\t\tstr += ch;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn flags;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tScanner.prototype.scanRegExp = function () {\r\n\t\t\t\t\t\tvar start = this.index;\r\n\t\t\t\t\t\tvar pattern = this.scanRegExpBody();\r\n\t\t\t\t\t\tvar flags = this.scanRegExpFlags();\r\n\t\t\t\t\t\tvar value = this.testRegExp(pattern, flags);\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\ttype: 9 /* RegularExpression */,\r\n\t\t\t\t\t\t\tvalue: '',\r\n\t\t\t\t\t\t\tpattern: pattern,\r\n\t\t\t\t\t\t\tflags: flags,\r\n\t\t\t\t\t\t\tregex: value,\r\n\t\t\t\t\t\t\tlineNumber: this.lineNumber,\r\n\t\t\t\t\t\t\tlineStart: this.lineStart,\r\n\t\t\t\t\t\t\tstart: start,\r\n\t\t\t\t\t\t\tend: this.index\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t};\r\n\t\t\t\t\tScanner.prototype.lex = function () {\r\n\t\t\t\t\t\tif (this.eof()) {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\ttype: 2 /* EOF */,\r\n\t\t\t\t\t\t\t\tvalue: '',\r\n\t\t\t\t\t\t\t\tlineNumber: this.lineNumber,\r\n\t\t\t\t\t\t\t\tlineStart: this.lineStart,\r\n\t\t\t\t\t\t\t\tstart: this.index,\r\n\t\t\t\t\t\t\t\tend: this.index\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar cp = this.source.charCodeAt(this.index);\r\n\t\t\t\t\t\tif (character_1.Character.isIdentifierStart(cp)) {\r\n\t\t\t\t\t\t\treturn this.scanIdentifier();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// Very common: ( and ) and ;\r\n\t\t\t\t\t\tif (cp === 0x28 || cp === 0x29 || cp === 0x3B) {\r\n\t\t\t\t\t\t\treturn this.scanPunctuator();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// String literal starts with single quote (U+0027) or double quote (U+0022).\r\n\t\t\t\t\t\tif (cp === 0x27 || cp === 0x22) {\r\n\t\t\t\t\t\t\treturn this.scanStringLiteral();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// Dot (.) U+002E can also start a floating-point number, hence the need\r\n\t\t\t\t\t\t// to check the next character.\r\n\t\t\t\t\t\tif (cp === 0x2E) {\r\n\t\t\t\t\t\t\tif (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index + 1))) {\r\n\t\t\t\t\t\t\t\treturn this.scanNumericLiteral();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn this.scanPunctuator();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (character_1.Character.isDecimalDigit(cp)) {\r\n\t\t\t\t\t\t\treturn this.scanNumericLiteral();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// Template literals start with ` (U+0060) for template head\r\n\t\t\t\t\t\t// or } (U+007D) for template middle or template tail.\r\n\t\t\t\t\t\tif (cp === 0x60 || (cp === 0x7D && this.curlyStack[this.curlyStack.length - 1] === '${')) {\r\n\t\t\t\t\t\t\treturn this.scanTemplate();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// Possible identifier start in a surrogate pair.\r\n\t\t\t\t\t\tif (cp >= 0xD800 && cp < 0xDFFF) {\r\n\t\t\t\t\t\t\tif (character_1.Character.isIdentifierStart(this.codePointAt(this.index))) {\r\n\t\t\t\t\t\t\t\treturn this.scanIdentifier();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn this.scanPunctuator();\r\n\t\t\t\t\t};\r\n\t\t\t\t\treturn Scanner;\r\n\t\t\t\t}());\r\n\t\t\t\texports.Scanner = Scanner;\r\n\r\n\r\n\t\t\t\t/***/\r\n},\r\n\t\t/* 13 */\r\n\t\t/***/ function (module, exports) {\r\n\r\n\t\t\t\t\"use strict\";\r\n\t\t\t\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t\t\t\texports.TokenName = {};\r\n\t\t\t\texports.TokenName[1 /* BooleanLiteral */] = 'Boolean';\r\n\t\t\t\texports.TokenName[2 /* EOF */] = '<end>';\r\n\t\t\t\texports.TokenName[3 /* Identifier */] = 'Identifier';\r\n\t\t\t\texports.TokenName[4 /* Keyword */] = 'Keyword';\r\n\t\t\t\texports.TokenName[5 /* NullLiteral */] = 'Null';\r\n\t\t\t\texports.TokenName[6 /* NumericLiteral */] = 'Numeric';\r\n\t\t\t\texports.TokenName[7 /* Punctuator */] = 'Punctuator';\r\n\t\t\t\texports.TokenName[8 /* StringLiteral */] = 'String';\r\n\t\t\t\texports.TokenName[9 /* RegularExpression */] = 'RegularExpression';\r\n\t\t\t\texports.TokenName[10 /* Template */] = 'Template';\r\n\r\n\r\n\t\t\t\t/***/\r\n},\r\n\t\t/* 14 */\r\n\t\t/***/ function (module, exports) {\r\n\r\n\t\t\t\t\"use strict\";\r\n\t\t\t\t// Generated by generate-xhtml-entities.js. DO NOT MODIFY!\r\n\t\t\t\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t\t\t\texports.XHTMLEntities = {\r\n\t\t\t\t\tquot: '\\u0022',\r\n\t\t\t\t\tamp: '\\u0026',\r\n\t\t\t\t\tapos: '\\u0027',\r\n\t\t\t\t\tgt: '\\u003E',\r\n\t\t\t\t\tnbsp: '\\u00A0',\r\n\t\t\t\t\tiexcl: '\\u00A1',\r\n\t\t\t\t\tcent: '\\u00A2',\r\n\t\t\t\t\tpound: '\\u00A3',\r\n\t\t\t\t\tcurren: '\\u00A4',\r\n\t\t\t\t\tyen: '\\u00A5',\r\n\t\t\t\t\tbrvbar: '\\u00A6',\r\n\t\t\t\t\tsect: '\\u00A7',\r\n\t\t\t\t\tuml: '\\u00A8',\r\n\t\t\t\t\tcopy: '\\u00A9',\r\n\t\t\t\t\tordf: '\\u00AA',\r\n\t\t\t\t\tlaquo: '\\u00AB',\r\n\t\t\t\t\tnot: '\\u00AC',\r\n\t\t\t\t\tshy: '\\u00AD',\r\n\t\t\t\t\treg: '\\u00AE',\r\n\t\t\t\t\tmacr: '\\u00AF',\r\n\t\t\t\t\tdeg: '\\u00B0',\r\n\t\t\t\t\tplusmn: '\\u00B1',\r\n\t\t\t\t\tsup2: '\\u00B2',\r\n\t\t\t\t\tsup3: '\\u00B3',\r\n\t\t\t\t\tacute: '\\u00B4',\r\n\t\t\t\t\tmicro: '\\u00B5',\r\n\t\t\t\t\tpara: '\\u00B6',\r\n\t\t\t\t\tmiddot: '\\u00B7',\r\n\t\t\t\t\tcedil: '\\u00B8',\r\n\t\t\t\t\tsup1: '\\u00B9',\r\n\t\t\t\t\tordm: '\\u00BA',\r\n\t\t\t\t\traquo: '\\u00BB',\r\n\t\t\t\t\tfrac14: '\\u00BC',\r\n\t\t\t\t\tfrac12: '\\u00BD',\r\n\t\t\t\t\tfrac34: '\\u00BE',\r\n\t\t\t\t\tiquest: '\\u00BF',\r\n\t\t\t\t\tAgrave: '\\u00C0',\r\n\t\t\t\t\tAacute: '\\u00C1',\r\n\t\t\t\t\tAcirc: '\\u00C2',\r\n\t\t\t\t\tAtilde: '\\u00C3',\r\n\t\t\t\t\tAuml: '\\u00C4',\r\n\t\t\t\t\tAring: '\\u00C5',\r\n\t\t\t\t\tAElig: '\\u00C6',\r\n\t\t\t\t\tCcedil: '\\u00C7',\r\n\t\t\t\t\tEgrave: '\\u00C8',\r\n\t\t\t\t\tEacute: '\\u00C9',\r\n\t\t\t\t\tEcirc: '\\u00CA',\r\n\t\t\t\t\tEuml: '\\u00CB',\r\n\t\t\t\t\tIgrave: '\\u00CC',\r\n\t\t\t\t\tIacute: '\\u00CD',\r\n\t\t\t\t\tIcirc: '\\u00CE',\r\n\t\t\t\t\tIuml: '\\u00CF',\r\n\t\t\t\t\tETH: '\\u00D0',\r\n\t\t\t\t\tNtilde: '\\u00D1',\r\n\t\t\t\t\tOgrave: '\\u00D2',\r\n\t\t\t\t\tOacute: '\\u00D3',\r\n\t\t\t\t\tOcirc: '\\u00D4',\r\n\t\t\t\t\tOtilde: '\\u00D5',\r\n\t\t\t\t\tOuml: '\\u00D6',\r\n\t\t\t\t\ttimes: '\\u00D7',\r\n\t\t\t\t\tOslash: '\\u00D8',\r\n\t\t\t\t\tUgrave: '\\u00D9',\r\n\t\t\t\t\tUacute: '\\u00DA',\r\n\t\t\t\t\tUcirc: '\\u00DB',\r\n\t\t\t\t\tUuml: '\\u00DC',\r\n\t\t\t\t\tYacute: '\\u00DD',\r\n\t\t\t\t\tTHORN: '\\u00DE',\r\n\t\t\t\t\tszlig: '\\u00DF',\r\n\t\t\t\t\tagrave: '\\u00E0',\r\n\t\t\t\t\taacute: '\\u00E1',\r\n\t\t\t\t\tacirc: '\\u00E2',\r\n\t\t\t\t\tatilde: '\\u00E3',\r\n\t\t\t\t\tauml: '\\u00E4',\r\n\t\t\t\t\taring: '\\u00E5',\r\n\t\t\t\t\taelig: '\\u00E6',\r\n\t\t\t\t\tccedil: '\\u00E7',\r\n\t\t\t\t\tegrave: '\\u00E8',\r\n\t\t\t\t\teacute: '\\u00E9',\r\n\t\t\t\t\tecirc: '\\u00EA',\r\n\t\t\t\t\teuml: '\\u00EB',\r\n\t\t\t\t\tigrave: '\\u00EC',\r\n\t\t\t\t\tiacute: '\\u00ED',\r\n\t\t\t\t\ticirc: '\\u00EE',\r\n\t\t\t\t\tiuml: '\\u00EF',\r\n\t\t\t\t\teth: '\\u00F0',\r\n\t\t\t\t\tntilde: '\\u00F1',\r\n\t\t\t\t\tograve: '\\u00F2',\r\n\t\t\t\t\toacute: '\\u00F3',\r\n\t\t\t\t\tocirc: '\\u00F4',\r\n\t\t\t\t\totilde: '\\u00F5',\r\n\t\t\t\t\touml: '\\u00F6',\r\n\t\t\t\t\tdivide: '\\u00F7',\r\n\t\t\t\t\toslash: '\\u00F8',\r\n\t\t\t\t\tugrave: '\\u00F9',\r\n\t\t\t\t\tuacute: '\\u00FA',\r\n\t\t\t\t\tucirc: '\\u00FB',\r\n\t\t\t\t\tuuml: '\\u00FC',\r\n\t\t\t\t\tyacute: '\\u00FD',\r\n\t\t\t\t\tthorn: '\\u00FE',\r\n\t\t\t\t\tyuml: '\\u00FF',\r\n\t\t\t\t\tOElig: '\\u0152',\r\n\t\t\t\t\toelig: '\\u0153',\r\n\t\t\t\t\tScaron: '\\u0160',\r\n\t\t\t\t\tscaron: '\\u0161',\r\n\t\t\t\t\tYuml: '\\u0178',\r\n\t\t\t\t\tfnof: '\\u0192',\r\n\t\t\t\t\tcirc: '\\u02C6',\r\n\t\t\t\t\ttilde: '\\u02DC',\r\n\t\t\t\t\tAlpha: '\\u0391',\r\n\t\t\t\t\tBeta: '\\u0392',\r\n\t\t\t\t\tGamma: '\\u0393',\r\n\t\t\t\t\tDelta: '\\u0394',\r\n\t\t\t\t\tEpsilon: '\\u0395',\r\n\t\t\t\t\tZeta: '\\u0396',\r\n\t\t\t\t\tEta: '\\u0397',\r\n\t\t\t\t\tTheta: '\\u0398',\r\n\t\t\t\t\tIota: '\\u0399',\r\n\t\t\t\t\tKappa: '\\u039A',\r\n\t\t\t\t\tLambda: '\\u039B',\r\n\t\t\t\t\tMu: '\\u039C',\r\n\t\t\t\t\tNu: '\\u039D',\r\n\t\t\t\t\tXi: '\\u039E',\r\n\t\t\t\t\tOmicron: '\\u039F',\r\n\t\t\t\t\tPi: '\\u03A0',\r\n\t\t\t\t\tRho: '\\u03A1',\r\n\t\t\t\t\tSigma: '\\u03A3',\r\n\t\t\t\t\tTau: '\\u03A4',\r\n\t\t\t\t\tUpsilon: '\\u03A5',\r\n\t\t\t\t\tPhi: '\\u03A6',\r\n\t\t\t\t\tChi: '\\u03A7',\r\n\t\t\t\t\tPsi: '\\u03A8',\r\n\t\t\t\t\tOmega: '\\u03A9',\r\n\t\t\t\t\talpha: '\\u03B1',\r\n\t\t\t\t\tbeta: '\\u03B2',\r\n\t\t\t\t\tgamma: '\\u03B3',\r\n\t\t\t\t\tdelta: '\\u03B4',\r\n\t\t\t\t\tepsilon: '\\u03B5',\r\n\t\t\t\t\tzeta: '\\u03B6',\r\n\t\t\t\t\teta: '\\u03B7',\r\n\t\t\t\t\ttheta: '\\u03B8',\r\n\t\t\t\t\tiota: '\\u03B9',\r\n\t\t\t\t\tkappa: '\\u03BA',\r\n\t\t\t\t\tlambda: '\\u03BB',\r\n\t\t\t\t\tmu: '\\u03BC',\r\n\t\t\t\t\tnu: '\\u03BD',\r\n\t\t\t\t\txi: '\\u03BE',\r\n\t\t\t\t\tomicron: '\\u03BF',\r\n\t\t\t\t\tpi: '\\u03C0',\r\n\t\t\t\t\trho: '\\u03C1',\r\n\t\t\t\t\tsigmaf: '\\u03C2',\r\n\t\t\t\t\tsigma: '\\u03C3',\r\n\t\t\t\t\ttau: '\\u03C4',\r\n\t\t\t\t\tupsilon: '\\u03C5',\r\n\t\t\t\t\tphi: '\\u03C6',\r\n\t\t\t\t\tchi: '\\u03C7',\r\n\t\t\t\t\tpsi: '\\u03C8',\r\n\t\t\t\t\tomega: '\\u03C9',\r\n\t\t\t\t\tthetasym: '\\u03D1',\r\n\t\t\t\t\tupsih: '\\u03D2',\r\n\t\t\t\t\tpiv: '\\u03D6',\r\n\t\t\t\t\tensp: '\\u2002',\r\n\t\t\t\t\temsp: '\\u2003',\r\n\t\t\t\t\tthinsp: '\\u2009',\r\n\t\t\t\t\tzwnj: '\\u200C',\r\n\t\t\t\t\tzwj: '\\u200D',\r\n\t\t\t\t\tlrm: '\\u200E',\r\n\t\t\t\t\trlm: '\\u200F',\r\n\t\t\t\t\tndash: '\\u2013',\r\n\t\t\t\t\tmdash: '\\u2014',\r\n\t\t\t\t\tlsquo: '\\u2018',\r\n\t\t\t\t\trsquo: '\\u2019',\r\n\t\t\t\t\tsbquo: '\\u201A',\r\n\t\t\t\t\tldquo: '\\u201C',\r\n\t\t\t\t\trdquo: '\\u201D',\r\n\t\t\t\t\tbdquo: '\\u201E',\r\n\t\t\t\t\tdagger: '\\u2020',\r\n\t\t\t\t\tDagger: '\\u2021',\r\n\t\t\t\t\tbull: '\\u2022',\r\n\t\t\t\t\thellip: '\\u2026',\r\n\t\t\t\t\tpermil: '\\u2030',\r\n\t\t\t\t\tprime: '\\u2032',\r\n\t\t\t\t\tPrime: '\\u2033',\r\n\t\t\t\t\tlsaquo: '\\u2039',\r\n\t\t\t\t\trsaquo: '\\u203A',\r\n\t\t\t\t\toline: '\\u203E',\r\n\t\t\t\t\tfrasl: '\\u2044',\r\n\t\t\t\t\teuro: '\\u20AC',\r\n\t\t\t\t\timage: '\\u2111',\r\n\t\t\t\t\tweierp: '\\u2118',\r\n\t\t\t\t\treal: '\\u211C',\r\n\t\t\t\t\ttrade: '\\u2122',\r\n\t\t\t\t\talefsym: '\\u2135',\r\n\t\t\t\t\tlarr: '\\u2190',\r\n\t\t\t\t\tuarr: '\\u2191',\r\n\t\t\t\t\trarr: '\\u2192',\r\n\t\t\t\t\tdarr: '\\u2193',\r\n\t\t\t\t\tharr: '\\u2194',\r\n\t\t\t\t\tcrarr: '\\u21B5',\r\n\t\t\t\t\tlArr: '\\u21D0',\r\n\t\t\t\t\tuArr: '\\u21D1',\r\n\t\t\t\t\trArr: '\\u21D2',\r\n\t\t\t\t\tdArr: '\\u21D3',\r\n\t\t\t\t\thArr: '\\u21D4',\r\n\t\t\t\t\tforall: '\\u2200',\r\n\t\t\t\t\tpart: '\\u2202',\r\n\t\t\t\t\texist: '\\u2203',\r\n\t\t\t\t\tempty: '\\u2205',\r\n\t\t\t\t\tnabla: '\\u2207',\r\n\t\t\t\t\tisin: '\\u2208',\r\n\t\t\t\t\tnotin: '\\u2209',\r\n\t\t\t\t\tni: '\\u220B',\r\n\t\t\t\t\tprod: '\\u220F',\r\n\t\t\t\t\tsum: '\\u2211',\r\n\t\t\t\t\tminus: '\\u2212',\r\n\t\t\t\t\tlowast: '\\u2217',\r\n\t\t\t\t\tradic: '\\u221A',\r\n\t\t\t\t\tprop: '\\u221D',\r\n\t\t\t\t\tinfin: '\\u221E',\r\n\t\t\t\t\tang: '\\u2220',\r\n\t\t\t\t\tand: '\\u2227',\r\n\t\t\t\t\tor: '\\u2228',\r\n\t\t\t\t\tcap: '\\u2229',\r\n\t\t\t\t\tcup: '\\u222A',\r\n\t\t\t\t\tint: '\\u222B',\r\n\t\t\t\t\tthere4: '\\u2234',\r\n\t\t\t\t\tsim: '\\u223C',\r\n\t\t\t\t\tcong: '\\u2245',\r\n\t\t\t\t\tasymp: '\\u2248',\r\n\t\t\t\t\tne: '\\u2260',\r\n\t\t\t\t\tequiv: '\\u2261',\r\n\t\t\t\t\tle: '\\u2264',\r\n\t\t\t\t\tge: '\\u2265',\r\n\t\t\t\t\tsub: '\\u2282',\r\n\t\t\t\t\tsup: '\\u2283',\r\n\t\t\t\t\tnsub: '\\u2284',\r\n\t\t\t\t\tsube: '\\u2286',\r\n\t\t\t\t\tsupe: '\\u2287',\r\n\t\t\t\t\toplus: '\\u2295',\r\n\t\t\t\t\totimes: '\\u2297',\r\n\t\t\t\t\tperp: '\\u22A5',\r\n\t\t\t\t\tsdot: '\\u22C5',\r\n\t\t\t\t\tlceil: '\\u2308',\r\n\t\t\t\t\trceil: '\\u2309',\r\n\t\t\t\t\tlfloor: '\\u230A',\r\n\t\t\t\t\trfloor: '\\u230B',\r\n\t\t\t\t\tloz: '\\u25CA',\r\n\t\t\t\t\tspades: '\\u2660',\r\n\t\t\t\t\tclubs: '\\u2663',\r\n\t\t\t\t\thearts: '\\u2665',\r\n\t\t\t\t\tdiams: '\\u2666',\r\n\t\t\t\t\tlang: '\\u27E8',\r\n\t\t\t\t\trang: '\\u27E9'\r\n\t\t\t\t};\r\n\r\n\r\n\t\t\t\t/***/\r\n},\r\n\t\t/* 15 */\r\n\t\t/***/ function (module, exports, __webpack_require__) {\r\n\r\n\t\t\t\t\"use strict\";\r\n\t\t\t\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t\t\t\tvar error_handler_1 = __webpack_require__(10);\r\n\t\t\t\tvar scanner_1 = __webpack_require__(12);\r\n\t\t\t\tvar token_1 = __webpack_require__(13);\r\n\t\t\t\tvar Reader = /** @class */ (function () {\r\n\t\t\t\t\tfunction Reader() {\r\n\t\t\t\t\t\tthis.values = [];\r\n\t\t\t\t\t\tthis.curly = this.paren = -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// A function following one of those tokens is an expression.\r\n\t\t\t\t\tReader.prototype.beforeFunctionExpression = function (t) {\r\n\t\t\t\t\t\treturn ['(', '{', '[', 'in', 'typeof', 'instanceof', 'new',\r\n\t\t\t\t\t\t\t'return', 'case', 'delete', 'throw', 'void',\r\n\t\t\t\t\t\t\t// assignment operators\r\n\t\t\t\t\t\t\t'=', '+=', '-=', '*=', '**=', '/=', '%=', '<<=', '>>=', '>>>=',\r\n\t\t\t\t\t\t\t'&=', '|=', '^=', ',',\r\n\t\t\t\t\t\t\t// binary/unary operators\r\n\t\t\t\t\t\t\t'+', '-', '*', '**', '/', '%', '++', '--', '<<', '>>', '>>>', '&',\r\n\t\t\t\t\t\t\t'|', '^', '!', '~', '&&', '||', '?', ':', '===', '==', '>=',\r\n\t\t\t\t\t\t\t'<=', '<', '>', '!=', '!=='].indexOf(t) >= 0;\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// Determine if forward slash (/) is an operator or part of a regular expression\r\n\t\t\t\t\t// https://github.com/mozilla/sweet.js/wiki/design\r\n\t\t\t\t\tReader.prototype.isRegexStart = function () {\r\n\t\t\t\t\t\tvar previous = this.values[this.values.length - 1];\r\n\t\t\t\t\t\tvar regex = (previous !== null);\r\n\t\t\t\t\t\tswitch (previous) {\r\n\t\t\t\t\t\t\tcase 'this':\r\n\t\t\t\t\t\t\tcase ']':\r\n\t\t\t\t\t\t\t\tregex = false;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase ')':\r\n\t\t\t\t\t\t\t\tvar keyword = this.values[this.paren - 1];\r\n\t\t\t\t\t\t\t\tregex = (keyword === 'if' || keyword === 'while' || keyword === 'for' || keyword === 'with');\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase '}':\r\n\t\t\t\t\t\t\t\t// Dividing a function by anything makes little sense,\r\n\t\t\t\t\t\t\t\t// but we have to check for that.\r\n\t\t\t\t\t\t\t\tregex = true;\r\n\t\t\t\t\t\t\t\tif (this.values[this.curly - 3] === 'function') {\r\n\t\t\t\t\t\t\t\t\t// Anonymous function, e.g. function(){} /42\r\n\t\t\t\t\t\t\t\t\tvar check = this.values[this.curly - 4];\r\n\t\t\t\t\t\t\t\t\tregex = check ? !this.beforeFunctionExpression(check) : false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse if (this.values[this.curly - 4] === 'function') {\r\n\t\t\t\t\t\t\t\t\t// Named function, e.g. function f(){} /42/\r\n\t\t\t\t\t\t\t\t\tvar check = this.values[this.curly - 5];\r\n\t\t\t\t\t\t\t\t\tregex = check ? !this.beforeFunctionExpression(check) : true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn regex;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tReader.prototype.push = function (token) {\r\n\t\t\t\t\t\tif (token.type === 7 /* Punctuator */ || token.type === 4 /* Keyword */) {\r\n\t\t\t\t\t\t\tif (token.value === '{') {\r\n\t\t\t\t\t\t\t\tthis.curly = this.values.length;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (token.value === '(') {\r\n\t\t\t\t\t\t\t\tthis.paren = this.values.length;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.values.push(token.value);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.values.push(null);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t\treturn Reader;\r\n\t\t\t\t}());\r\n\t\t\t\tvar Tokenizer = /** @class */ (function () {\r\n\t\t\t\t\tfunction Tokenizer(code, config) {\r\n\t\t\t\t\t\tthis.errorHandler = new error_handler_1.ErrorHandler();\r\n\t\t\t\t\t\tthis.errorHandler.tolerant = config ? (typeof config.tolerant === 'boolean' && config.tolerant) : false;\r\n\t\t\t\t\t\tthis.scanner = new scanner_1.Scanner(code, this.errorHandler);\r\n\t\t\t\t\t\tthis.scanner.trackComment = config ? (typeof config.comment === 'boolean' && config.comment) : false;\r\n\t\t\t\t\t\tthis.trackRange = config ? (typeof config.range === 'boolean' && config.range) : false;\r\n\t\t\t\t\t\tthis.trackLoc = config ? (typeof config.loc === 'boolean' && config.loc) : false;\r\n\t\t\t\t\t\tthis.buffer = [];\r\n\t\t\t\t\t\tthis.reader = new Reader();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tTokenizer.prototype.errors = function () {\r\n\t\t\t\t\t\treturn this.errorHandler.errors;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tTokenizer.prototype.getNextToken = function () {\r\n\t\t\t\t\t\tif (this.buffer.length === 0) {\r\n\t\t\t\t\t\t\tvar comments = this.scanner.scanComments();\r\n\t\t\t\t\t\t\tif (this.scanner.trackComment) {\r\n\t\t\t\t\t\t\t\tfor (var i = 0; i < comments.length; ++i) {\r\n\t\t\t\t\t\t\t\t\tvar e = comments[i];\r\n\t\t\t\t\t\t\t\t\tvar value = this.scanner.source.slice(e.slice[0], e.slice[1]);\r\n\t\t\t\t\t\t\t\t\tvar comment = {\r\n\t\t\t\t\t\t\t\t\t\ttype: e.multiLine ? 'BlockComment' : 'LineComment',\r\n\t\t\t\t\t\t\t\t\t\tvalue: value\r\n\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\tif (this.trackRange) {\r\n\t\t\t\t\t\t\t\t\t\tcomment.range = e.range;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif (this.trackLoc) {\r\n\t\t\t\t\t\t\t\t\t\tcomment.loc = e.loc;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tthis.buffer.push(comment);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (!this.scanner.eof()) {\r\n\t\t\t\t\t\t\t\tvar loc = void 0;\r\n\t\t\t\t\t\t\t\tif (this.trackLoc) {\r\n\t\t\t\t\t\t\t\t\tloc = {\r\n\t\t\t\t\t\t\t\t\t\tstart: {\r\n\t\t\t\t\t\t\t\t\t\t\tline: this.scanner.lineNumber,\r\n\t\t\t\t\t\t\t\t\t\t\tcolumn: this.scanner.index - this.scanner.lineStart\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\tend: {}\r\n\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tvar maybeRegex = (this.scanner.source[this.scanner.index] === '/') && this.reader.isRegexStart();\r\n\t\t\t\t\t\t\t\tvar token = void 0;\r\n\t\t\t\t\t\t\t\tif (maybeRegex) {\r\n\t\t\t\t\t\t\t\t\tvar state = this.scanner.saveState();\r\n\t\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\t\ttoken = this.scanner.scanRegExp();\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tcatch (e) {\r\n\t\t\t\t\t\t\t\t\t\tthis.scanner.restoreState(state);\r\n\t\t\t\t\t\t\t\t\t\ttoken = this.scanner.lex();\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\ttoken = this.scanner.lex();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tthis.reader.push(token);\r\n\t\t\t\t\t\t\t\tvar entry = {\r\n\t\t\t\t\t\t\t\t\ttype: token_1.TokenName[token.type],\r\n\t\t\t\t\t\t\t\t\tvalue: this.scanner.source.slice(token.start, token.end)\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\tif (this.trackRange) {\r\n\t\t\t\t\t\t\t\t\tentry.range = [token.start, token.end];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (this.trackLoc) {\r\n\t\t\t\t\t\t\t\t\tloc.end = {\r\n\t\t\t\t\t\t\t\t\t\tline: this.scanner.lineNumber,\r\n\t\t\t\t\t\t\t\t\t\tcolumn: this.scanner.index - this.scanner.lineStart\r\n\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\tentry.loc = loc;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (token.type === 9 /* RegularExpression */) {\r\n\t\t\t\t\t\t\t\t\tvar pattern = token.pattern;\r\n\t\t\t\t\t\t\t\t\tvar flags = token.flags;\r\n\t\t\t\t\t\t\t\t\tentry.regex = { pattern: pattern, flags: flags };\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tthis.buffer.push(entry);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn this.buffer.shift();\r\n\t\t\t\t\t};\r\n\t\t\t\t\treturn Tokenizer;\r\n\t\t\t\t}());\r\n\t\t\t\texports.Tokenizer = Tokenizer;\r\n\r\n\r\n\t\t\t\t/***/\r\n}\r\n\t\t/******/])\r\n\t});\r\n\t;\r\n\r\n}).toString()","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n"],"sourceRoot":""}